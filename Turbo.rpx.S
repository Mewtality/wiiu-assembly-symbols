/*
* Project: Turbo.rpx.S
* Author: Mewtality
* Date: Wednesday, March 8, 2023
* Contact: 
* 	- YouTube: https://www.youtube.com/c/Mewtality
* 	- Discord: Mewtality#8315
* Learn more at:
* 	- https://docs.google.com/spreadsheets/d/1jgs7ydwMLdT4s6buHDP-hqLijH21uy_PhZoUbRnPV6k/edit?usp=share_link
*/
	.equiv _text, 0x0E180000
	.equiv _rodata, 0x10502200
	.equiv _data, 0x106827E0
	.equiv _bss, 0x106AC700
	.equiv _module_id, 0x106AC400

	# functions
	.equiv "object::AIAutoSteer::reset()", _text + 0xE58
	.equiv "object::AIAutoSteer::getTargetPos_()", _text + 0xF50
	.equiv "object::AIAutoSteer::isBadTargetPos_()", _text + 0x103C
	.equiv "object::AIAutoSteer::hasItem_()", _text + 0x116C
	.equiv "object::AIAutoSteer::calcSlipStream_()", _text + 0x13CC
	.equiv "object::AIAutoSteer::calcDriveInfo_Killer_()", _text + 0x28C4
	.equiv "object::AIAutoSteer::isExistTargetBoxCol_()", _text + 0x3794
	.equiv "object::AIAutoSteer::calcAvoidDir_()", _text + 0x3834
	.equiv "object::AIAutoSteer::isEnableChangePoint_()", _text + 0x3F44
	.equiv "object::AIAutoSteer::changePoint_()", _text + 0x3F60
	.equiv "object::AIAutoSteer::stateAvoid()", _text + 0x3F98
	.equiv "void_sead::Matrix34CalcCommon::setBase()", _text + 0x61EC
	.equiv "void_sead::Matrix34CalcCommon::setDirections()", _text + 0x6210
	.equiv "void_sead::Matrix34CalcCommon::getCol()", _text + 0x627C
	.equiv "FUN_0E1862E0:FID_conflict:void_gsys::OfxRig::update()", _text + 0x62E0
	.equiv "FUN_0E186420:FID_conflict:void_gsys::OfxRig::update()", _text + 0x6420
	.equiv "FUN_0E18652C:object::MuPathAccessorBase::getPoint()", _text + 0x652C
	.equiv "object::DriveInfo::setTarget_Override()", _text + 0x684C
	.equiv "object::AIControlBase::AIControlBase()", _text + 0x69A4
	.equiv "object::AIControlBase::setPathHandlerInitArg_()", _text + 0x6EE0
	.equiv "object::AIControlBase::enterBeforeStructure()", _text + 0x6F00
	.equiv "object::AIControlBase::reset()", _text + 0x7144
	.equiv "object::AIControlBase::updateDriveInfo_OnlyPathPoint()", _text + 0x7378
	.equiv "object::AIControlBase::isStateStuck()", _text + 0x7410
	.equiv "object::AIControlBase::isFrequencyWallCol()", _text + 0x7454
	.equiv "object::AIControlBase::isAgainstWall()", _text + 0x7474
	.equiv "FUN_0E1889BC:bool_is_derived()", _text + 0x89BC
	.equiv "object::AIDirector::getRandU32()", _text + 0x9114
	.equiv "object::AIDirector::setTeam_()", _text + 0x914C
	.equiv "object::AIDirector::getHighestPointOf_()", _text + 0x946C
	.equiv "object::AIDirector::getRandomPlayerAI()", _text + 0x9838
	.equiv "object::AIDirector::getRandF32()", _text + 0x98C4
	.equiv "enl::<unnamed>::getLocalUniqueID_()", _text + 0x9928
	.equiv "FUN_0E189958:FID_conflict:`global_constructor_keyed_to'_14_AIDirector_cpp_8225c8dd", _text + 0x9958
	.equiv "void_enl::IDManager::prepare()", _text + 0xA6DC
	.equiv "void_enl::IDManager::clearPlayerIDTable()", _text + 0xABC8
	.equiv "void_enl::IDManager::init()", _text + 0xACE0
	.equiv "const_enl::IDManager::getIDInfoByUniqueID()", _text + 0xAEAC
	.equiv "signed_char_enl::IDManager::getAIDByUniqueID()", _text + 0xAF60
	.equiv "const_enl::IDManager::getIDInfoByAID()", _text + 0xB104
	.equiv "bool_enl::IDManager::isAIDValid()", _text + 0xB188
	.equiv "signed_char_enl::IDManager::getPlayerIDByAID()", _text + 0xB530
	.equiv "enl::IDManager::getIDInfoByUniqueID()", _text + 0xB5B4
	.equiv "enl::IDManager::getIDInfoByAID()", _text + 0xB668
	.equiv "int_enl::IDManager::getIDIndexByUniqueID()", _text + 0xB6EC
	.equiv "bool_enl::IDManager::isLocalPlayerByAID()", _text + 0xB764
	.equiv "bool_enl::IDManager::isConnected()", _text + 0xB7E4
	.equiv "bool_enl::IDManager::isConnectedByAID()", _text + 0xB8B4
	.equiv "sead::ObjArray_*enl::IDManager::prepareGroupByUniqueID_()", _text + 0xB910
	.equiv "int_enl::IDManager::sortByTimeCallback_()", _text + 0xBA58
	.equiv "void_enl::IDManager::sortByTime_()", _text + 0xBB94
	.equiv "void_enl::IDManager::updateIDTable()", _text + 0xBC08
	.equiv "initID_", _text + 0xC2A8
	.equiv "unsigned_char_enl::IDManager::getFreeBufferID_()", _text + 0xC638
	.equiv "void_enl::IDManager::swapIDInfo()", _text + 0xC6E8
	.equiv "unsigned_char_enl::IDManager::getFreeIDIndex_()", _text + 0xC880
	.equiv "enl::UniqueID_enl::IDManager::registIDInfo()", _text + 0xC944
	.equiv "void_enl::IDManager::registIDInfoAsConnected()", _text + 0xCBEC
	.equiv "bool_enl::IDManager::isPlayerAllArrival_()", _text + 0xCE8C
	.equiv "bool_enl::IDManager::isPlayerByIndex()", _text + 0xD218
	.equiv "void_enl::IDManager::unregistHideIDInfo()", _text + 0xD338
	.equiv "bool_enl::IDManager::isState_()", _text + 0xD3AC
	.equiv "enl::UniqueID_enl::PeerManagerCommon::findAliveUniqueIDByStationID_()", _text + 0xD424
	.equiv "void_enl::PeerManagerCommon::updatePeerInfo_()", _text + 0xD558
	.equiv "registPeerInfoInner", _text + 0xD5EC
	.equiv "calcPeerConnect_", _text + 0xD7A4
	.equiv "calcPeerDisconnect_", _text + 0xD964
	.equiv "calcPeerLocalSync_", _text + 0xD9E0
	.equiv "void_enl::PeerManagerCommon::calc()", _text + 0xDAA0
	.equiv "void_enl::PeerManagerCommon::init()", _text + 0xDE7C
	.equiv "signed_char_enl::PeerManagerCommon::getNextAID()", _text + 0xDFE0
	.equiv "void_enl::PeerManagerCommon::clearRegistTask()", _text + 0xE3A0
	.equiv "FUN_0E18E47C:registPeerInfo", _text + 0xE47C
	.equiv "initPeerConnect_", _text + 0xE934
	.equiv "initPeerDisconnect_", _text + 0xF034
	.equiv "initPeerLocalSync_", _text + 0xF50C
	.equiv "initPeerForceConnect_", _text + 0xF704
	.equiv "initPeerForceDisconnect_", _text + 0xF8C0
	.equiv "void_enl::PeerManagerCommon::updateUniqueIDAll_()", _text + 0xFA7C
	.equiv "object::AIDriftDrive::calcCurveParam_()", _text + 0x10A4C
	.equiv "object::AIDriftDrive::reset()", _text + 0x10C40
	.equiv "object::AIDriftDrive::calcNormal_Key_StickY_()", _text + 0x10F98
	.equiv "object::AIDriftDrive::isJumpActionEnablePose_()", _text + 0x11430
	.equiv "object::AIDriftDrive::calcNormal_Key_()", _text + 0x116C0
	.equiv "object::AIDriftDrive::calcNormal_Rot_DriveVec_()", _text + 0x11FFC
	.equiv "object::AIDriftDrive::calcNormal_Rot_()", _text + 0x12144
	.equiv "object::AIDriftDrive::calcNormal_()", _text + 0x121C8
	.equiv "object::AIDriftDrive::isAfterDriftCancel_()", _text + 0x121FC
	.equiv "object::AIDriftDrive::isEnableNormalToDrift_()", _text + 0x12228
	.equiv "object::AIDriftDrive::getMiddleDir_()", _text + 0x12354
	.equiv "object::AIDriftDrive::isDriftEnablePose_()", _text + 0x126A4
	.equiv "object::AIDriftDrive::calcNormalToDrift_()", _text + 0x12A74
	.equiv "object::AIDriftDrive::calcDrift_()", _text + 0x13C84
	.equiv "object::AIDriftDrive::calcDriftSteer_()", _text + 0x1492C
	.equiv "float_object::MuPathAccessorBase::getDistance()", _text + 0x1539C
	.equiv "object::GetAIManager()", _text + 0x15538
	.equiv "object::IsValidAIPath()", _text + 0x15548
	.equiv "object::IsValidAIPathAndLapPath()", _text + 0x15578
	.equiv "object::GetAIPathAccessor_ByItemPath_Reverse()", _text + 0x155E0
	.equiv "object::IsValidReverse()", _text + 0x155F8
	.equiv "object::FindNearestAIPtHndlFromKart()", _text + 0x15648
	.equiv "object::GetFrameAfterStart()", _text + 0x15718
	.equiv "object::IsItemBox()", _text + 0x1573C
	.equiv "object::IsCoin()", _text + 0x1575C
	.equiv "object::IsNeglectKart()", _text + 0x1577C
	.equiv "object::AIItemBase::reset()", _text + 0x160D4
	.equiv "object::AIItemBase::isSniperItem()", _text + 0x163A8
	.equiv "object::AIItemBase::hasSniperItem()", _text + 0x16424
	.equiv "object::AIItemBase::hasKouraR()", _text + 0x166B8
	.equiv "object::AIItemBase::hasFlower()", _text + 0x16730
	.equiv "object::AIItemBase::isSnipeArea()", _text + 0x16758
	.equiv "object::AIItemBase::findNearTarget()", _text + 0x169C0
	.equiv "object::AIItemBase::findNearTarget_ByRadius()", _text + 0x16B64
	.equiv "object::AIItemBattle::useItemCommon_calcSnipe()", _text + 0x17C04
	.equiv "object::AIItemRace::AIItemRace()", _text + 0x18020
	.equiv "object::AIItemRace::getLapRatio_()", _text + 0x184D4
	.equiv "object::AIItemRace::getDisToShortCut_()", _text + 0x185F8
	.equiv "object::AIParam::copyFormationInfo_()", _text + 0x19590
	.equiv "FUN_0E19DAEC:nn::nex::SystemComponentGroup::TestState()", _text + 0x1DAEC
	.equiv "object::AIPathHandler::goNextPath_()", _text + 0x1E67C
	.equiv "object::AIPathHandler::goNextPath_Reset_()", _text + 0x1E7CC
	.equiv "object::AIPathHandler::init()", _text + 0x1E848
	.equiv "object::AIPathHandler::isReach_BySphere_()", _text + 0x1EC38
	.equiv "object::AIPathHandler::isThroughPath_()", _text + 0x1ECC0
	.equiv "object::AIPathHandler::isReach_ByPlane_()", _text + 0x1ED60
	.equiv "object::AIPathHandler::isReach_ByPlane_WithSphere_()", _text + 0x1F06C
	.equiv "object::AIPathHandler::calcChangePoint_Normal_()", _text + 0x1F258
	.equiv "object::AIPathHandler::isOnShorCutPath()", _text + 0x1F4A4
	.equiv "object::AIPathHandler::isCorrectTargetPath_()", _text + 0x1F4D4
	.equiv "object::AIPathHandler::calcSearchPath_()", _text + 0x1F628
	.equiv "object::AIPathHandler::findNearestItemPtHndl_()", _text + 0x1FAC4
	.equiv "object::AIPathHandler::calcChangePoint_AboutCenter_()", _text + 0x1FC18
	.equiv "object::AIPathHandler::calcChangePoint_()", _text + 0x1FD28
	.equiv "object::AIPathHandler::hasValidPath_()", _text + 0x1FE7C
	.equiv "object::AIPathHandler::changePoint()", _text + 0x20184
	.equiv "object::AIPathHandler::startKiller()", _text + 0x201EC
	.equiv "object::AIPathHandler::endKiller()", _text + 0x2048C
	.equiv "object::AIPathHandler::onCutOffFromJugem()", _text + 0x20550
	.equiv "FUN_0E1A0D7C:object::MuPathAccessorBase::getPoint()", _text + 0x20D7C
	.equiv "object::AIPathManager::AIPathManager()", _text + 0x20ED8
	.equiv "object::AIPathManager::createAccessor_()", _text + 0x21170
	.equiv "object::AIPathManager::createAccessorAndPointArray_()", _text + 0x2129C
	.equiv "object::AIPathManager::optimizedPath_()", _text + 0x21C48
	.equiv "object::AIPathManager::calcSector_ShortCutStart_()", _text + 0x223FC
	.equiv "object::AIPathManager::isReverse_()", _text + 0x22820
	.equiv "object::AIPathManager::getOptimizedPathIDFromRankImpl_()", _text + 0x228F4
	.equiv "object::AIPathManager::getEnemyPathAccessorFromRank()", _text + 0x2290C
	.equiv "object::AIPathManager::getShorCutSectorHndlArray()", _text + 0x22A20
	.equiv "object::AIPathManager::getShorCutLapRatioArray()", _text + 0x22A70
	.equiv "void_object::MuPathAccessorBase::setPointId()", _text + 0x22DE8
	.equiv "FUN_0E1A2E78:void_object::MuPathAccessorBase::calc_AllPoint_()", _text + 0x22E78
	.equiv "FUN_0E1A3324:void_object::MuPathAccessorBase::calc_Sector_AirNrm_()", _text + 0x23324
	.equiv "FUN_0E1A3BB4:float_object::MuPathAccessorBase::calcPointCosineAndAxis_()", _text + 0x23BB4
	.equiv "FUN_0E1A3F68:void_object::MuPathAccessorBase::calc_Length_Dir_DotNormal_Branch_()", _text + 0x23F68
	.equiv "FUN_0E1A5904:void_object::MuPathAccessorBase::calc_Cosine_()", _text + 0x25904
	.equiv "FUN_0E1A5E8C:FID_conflict:void_object::MuPathAccessorBase::calcStartPoint_()", _text + 0x25E8C
	.equiv "FUN_0E1A5F78:void_object::MuPathAccessorBase::setup()", _text + 0x25F78
	.equiv "object::AIPathPoint::setStartEnemyPointHandle()", _text + 0x260EC
	.equiv "object::PointParam::reset()", _text + 0x26100
	.equiv "object::PointParam::PointParam()", _text + 0x26128
	.equiv "object::PointParam::setParam()", _text + 0x26194
	.equiv "object::PointParam::isSpecificBranch()", _text + 0x26360
	.equiv "object::PointParam::isClose_BattleFlag()", _text + 0x26398
	.equiv "object::AIPathPoint::selectBranch_Shorcut_()", _text + 0x263D4
	.equiv "object::AIPathPoint::selectBranch_Safety_()", _text + 0x26698
	.equiv "object::AIPathPoint::selectBranch_Straight_()", _text + 0x268A0
	.equiv "object::AIPathPoint::selectBranch_Killer_()", _text + 0x26A68
	.equiv "object::AIPathPoint::selectNextPointHandleIndex_()", _text + 0x26B94
	.equiv "object::AIPathPoint::selectNextPointHandle_()", _text + 0x26D5C
	.equiv "object::AIPathPoint::setEnemyPointArray_Reset_()", _text + 0x26F54
	.equiv "object::AIPathPoint::setEnemyPointArray_Normal_()", _text + 0x27088
	.equiv "object::AIPathPoint::isCurveAdjust()", _text + 0x27150
	.equiv "object::AIPathPoint::calcOffsetTarget()", _text + 0x271DC
	.equiv "object::AIPathPoint::goNextPoint()", _text + 0x279E0
	.equiv "object::AIPathPoint::init()", _text + 0x27B34
	.equiv "object::AIPathPoint::isPathDirFlag_NextOrNext2()", _text + 0x27BC8
	.equiv "object::AIPathPoint::isPathDirArea()", _text + 0x27C8C
	.equiv "object::AIPathPoint::isCannon()", _text + 0x28018
	.equiv "object::AIProbabilityRace::AIProbabilityRace()", _text + 0x2828C
	.equiv "object::AIRankGroupBase::initTargetRank_ByRandom()", _text + 0x289AC
	.equiv "object::AIRankGroupBase::initTargetRank_ByIndex()", _text + 0x28AB8
	.equiv "object::AIRank::AIRank()", _text + 0x29600
	.equiv "object::AIRank::setLapDis_FromTopCPU()", _text + 0x29808
	.equiv "object::AIRank::init()", _text + 0x299C8
	.equiv "object::AIRank::calcTargetRank()", _text + 0x29A48
	.equiv "object::AIRankManager::isFirstRace_()", _text + 0x2A100
	.equiv "object::AIRankManager::getNotDecidedAIRank_ByGrid_()", _text + 0x2A1AC
	.equiv "object::AIRankManager::getNotDecidedAIRank_ByPoint_()", _text + 0x2A2EC
	.equiv "object::AIRankManager::countGroupMember_()", _text + 0x2A404
	.equiv "object::AIRankManager::getNotDecidedAIRank_ByRandom_()", _text + 0x2A458
	.equiv "object::AIRankManager::addMember_()", _text + 0x2A53C
	.equiv "object::AIRankManager::decideGroupMember_TeamMode_()", _text + 0x2A548
	.equiv "object::AIRankManager::decideAllGroup_TeamMode_()", _text + 0x2A63C
	.equiv "object::AIRankManager::decideGroupMember_()", _text + 0x2ADA0
	.equiv "object::AIRankManager::decideAllGroup_()", _text + 0x2AE68
	.equiv "object::AIRankManager::updateRankSetCPU_()", _text + 0x2B170
	.equiv "object::AIRankManager::updateRankSetPlayer_()", _text + 0x2B21C
	.equiv "object::AIRankManager::isInvalidCatchDown()", _text + 0x2B37C
	.equiv "object::AIRankManager::calcLapDis_FromTopCPU_()", _text + 0x2B510
	.equiv "object::AIRankManager::decide2GroupMember_ByRank_()", _text + 0x2B968
	.equiv "object::AIRivalTableLoader::load()", _text + 0x2BEC0
	.equiv "object::AIRivalTableLoader::getRivalArray()", _text + 0x2C438
	.equiv "object::AISearch::AISearch()", _text + 0x2C6D8
	.equiv "object::AISearch::setValidFlagBoxCol()", _text + 0x2C898
	.equiv "object::AISearch::init()", _text + 0x2C960
	.equiv "object::AISearch::getMtx_MapObj_()", _text + 0x2CCA0
	.equiv "object::AISearch::isNeglectMapObj_()", _text + 0x2CEA8
	.equiv "object::AISearch::isOutSide_()", _text + 0x2D1EC
	.equiv "object::AISearch::isMapObjectToAvoid_()", _text + 0x2D490
	.equiv "object::AISearch::isNeglectItem_()", _text + 0x2D808
	.equiv "object::AISearch::isItemObjectToAvoid_()", _text + 0x2D968
	.equiv "object::AISearch::isNeglectKart_()", _text + 0x2DAA4
	.equiv "object::AISearch::isObjectToAvoid_()", _text + 0x2DE60
	.equiv "object::AISearch::calcTargetObj_()", _text + 0x2DEF8
	.equiv "object::AISearch::calcTargetKart_()", _text + 0x2DFAC
	.equiv "object::AISearch::calcSerchResult_()", _text + 0x2E050
	.equiv "object::AISearch::searchImpl_()", _text + 0x2E0E4
	.equiv "object::AISearch::update()", _text + 0x2E3CC
	.equiv "FID_conflict:object::AISearch::isAvoidByProbavility()", _text + 0x2E480
	.equiv "object::AISearch::isAvoidByProbavility_SelectPath()", _text + 0x2E4E8
	.equiv "object::AISpeedBase::AISpeedBase()", _text + 0x2EB98
	.equiv "object::AISpeedBase::calcSpeedMaxRateImpl_()", _text + 0x2EEDC
	.equiv "object::AIStrategy::reset()", _text + 0x2FFE0
	.equiv "object::AIStrategy::awake()", _text + 0x30024
	.equiv "object::AIStrategy::sleep()", _text + 0x300B0
	.equiv "object::AIStuck::reset()", _text + 0x30F04
	.equiv "object::AIStuck::initParam_()", _text + 0x30F18
	.equiv "object::AIStuck::isCheck_SameArea_()", _text + 0x30FE8
	.equiv "object::AIStuck::isCntStop_()", _text + 0x3105C
	.equiv "object::AIStuck::isBack_()", _text + 0x310C0
	.equiv "object::AIStuck::isEndBackTrig_()", _text + 0x310F8
	.equiv "object::AIStuck::check_SameArea_()", _text + 0x31120
	.equiv "object::AIUnit::AIUnit()", _text + 0x31798
	.equiv "object::AIUnit::isRandomTargetPathRank_AfterStart_()", _text + 0x31B58
	.equiv "object::AIUnit::getTargetRank_()", _text + 0x31BAC
	.equiv "object::AIUnit::getTargetRank_ByPathChange_()", _text + 0x31D14
	.equiv "object::AIUnit::getTargetPathRank()", _text + 0x31D60
	.equiv "object::AIUnit::calcAIPathChange_()", _text + 0x31D9C
	.equiv "object::AIUnit::getRank_Sys()", _text + 0x320BC
	.equiv "object::AIUnit::reset()", _text + 0x32318
	.equiv "object::AIUnit::calcPosition()", _text + 0x32358
	.equiv "object::AIUnit::awake()", _text + 0x32424
	.equiv "object::AIUnit::sleep_()", _text + 0x3248C
	.equiv "object::AIUnit::onCutOffFromJugem()", _text + 0x32558
	.equiv "object::AIUnit::hitWithKart()", _text + 0x32640
	.equiv "object::AIUnit::isInvalidRot_AfterStart_()", _text + 0x326C4
	.equiv "object::AIUnit::setStickVolX_()", _text + 0x32728
	.equiv "object::AIUnit::setStickVolY_()", _text + 0x327B8
	.equiv "object::AIUnit::setRotateRadAI()", _text + 0x327CC
	.equiv "object::AIUnit::setSpeedMaxRate()", _text + 0x32D64
	.equiv "object::AIUnit::getPlayerStick()", _text + 0x32E2C
	.equiv "object::AIUnit::getAISearch()", _text + 0x32E54
	.equiv "object::AIUnit::isSameTeam()", _text + 0x32E68
	.equiv "object::AIUnit::getMiddleDir()", _text + 0x32EA0
	.equiv "object::AIUnit::isHover_ByPath()", _text + 0x33304
	.equiv "object::AIUnit::isArea_KillerHover()", _text + 0x333AC
	.equiv "object::AIUnit::isReverse()", _text + 0x33440
	.equiv "object::AIUnit::isAfterTargetChange_BrakeTurn()", _text + 0x3352C
	.equiv "audio::Aud2DSoundPlayer::Aud2DSoundPlayer()", _text + 0x33C58
	.equiv "audio::Aud2DSoundPlayer::setup()", _text + 0x33D64
	.equiv "audio::Aud2DSoundPlayer::isAttachedSoundById()", _text + 0x33F30
	.equiv "audio::Aud2DSoundPlayer::setOutputLine_()", _text + 0x34028
	.equiv "audio::Aud2DSoundPlayer::startSound_()", _text + 0x340EC
	.equiv "audio::Aud2DSoundPlayer::startSound()", _text + 0x342A4
	.equiv "audio::Aud2DSoundPlayer::getPlayingFrameCountMin()", _text + 0x342F4
	.equiv "FUN_0E1B43EC:audio::Aud2DSoundPlayer::stopSound()", _text + 0x343EC
	.equiv "audio::Aud2DSoundPlayer::isStartPossibleUiSe()", _text + 0x344F8
	.equiv "FUN_0E1B468C:audio::Aud2DSoundPlayer::startSoundCheckPrio()", _text + 0x3468C
	.equiv "FUN_0E1B471C:audio::Aud2DSoundPlayer::startSoundCheckPrio()", _text + 0x3471C
	.equiv "audio::Aud2DSoundPlayer::holdSound_()", _text + 0x34784
	.equiv "audio::Aud2DSoundPlayer::holdSound()", _text + 0x3487C
	.equiv "FUN_0E1B48CC:audio::Aud2DSoundPlayer::stopSound()", _text + 0x348CC
	.equiv "audio::AudListenerParam::clearLpf()", _text + 0x34A9C
	.equiv "FUN_0E1B4ACC:audio::AudListenerParam::initCommon_()", _text + 0x34ACC
	.equiv "FID_conflict:audio::AudListenerParam::getPlayerPanOffset()", _text + 0x34C24
	.equiv "audio::AudListenerParam::getPlayerPanOffset()", _text + 0x34D20
	.equiv "audio::AudListenerParam::initialize()", _text + 0x34E1C
	.equiv "FUN_0E1B50E8:audio::AudListenerParam::initCommon_()", _text + 0x350E8
	.equiv "audio::AudListenerParam::getRearVolumeRatio()", _text + 0x3510C
	.equiv "audio::AudListenerParam::update()", _text + 0x35130
	.equiv "audio::AudListenerParam::setUseLpf()", _text + 0x35178
	.equiv "audio::AudCalc3DParam::AudCalc3DParam()", _text + 0x3518C
	.equiv "audio::AudCalc3DParam::setMaxVolumeDistPtr()", _text + 0x3521C
	.equiv "audio::AudCalc3DParam::setUnitDistPtr()", _text + 0x35260
	.equiv "audio::AudCalc3DParam::setInteriorSizePtr()", _text + 0x352A4
	.equiv "audio::AudCalc3DParam::updateParam()", _text + 0x352F4
	.equiv "audio::AudCalc3DParam::copy()", _text + 0x35360
	.equiv "audio::Aud3DSoundMgr::settingManagerDefault_()", _text + 0x353A4
	.equiv "audio::Aud3DSoundMgr::settingListenerDefault_()", _text + 0x35404
	.equiv "audio::Aud3DSoundMgr::Aud3DSoundMgr()", _text + 0x3558C
	.equiv "audio::Aud3DSoundMgr::removeAdditionalListeners_()", _text + 0x35900
	.equiv "audio::Aud3DSoundMgr::getListenerByWindowID()", _text + 0x35984
	.equiv "audio::Aud3DSoundMgr::resetCamera()", _text + 0x359A8
	.equiv "audio::Aud3DSoundMgr::setupSingleListener()", _text + 0x35A7C
	.equiv "audio::Aud3DSoundMgr::settingAdditionalListeners_()", _text + 0x35B10
	.equiv "audio::Aud3DSoundMgr::setupMultiListener()", _text + 0x35BF8
	.equiv "audio::Aud3DSoundMgr::getCullingSafeDistVolRatio()", _text + 0x35CC4
	.equiv "audio::Aud3DSoundMgr::calcListener()", _text + 0x35DA4
	.equiv "audio::Aud3DSoundMgr::getListenerVolume()", _text + 0x36968
	.equiv "audio::Aud3DSoundMgr::getWindowIdByKartId()", _text + 0x36978
	.equiv "audio::Aud3DSoundMgr::getPlayerSePanOffsetByKartId()", _text + 0x36A84
	.equiv "audio::Aud3DSoundMgr::setCourseInDemoListenerDistPtr()", _text + 0x36B24
	.equiv "audio::Aud3DSoundMgr::calcVolumeAndPriority()", _text + 0x36B3C
	.equiv "audio::Aud3DSoundMgr::calcPan()", _text + 0x36DB4
	.equiv "audio::Aud3DSoundMgr::calcPitch()", _text + 0x374D0
	.equiv "audio::Aud3DSoundMgr::calcBiquadFilterValue()", _text + 0x375C4
	.equiv "audio::Aud3DSoundMgr::setMaskingVolume()", _text + 0x37610
	.equiv "audio::Aud3DEngine::setupStartParam()", _text + 0x376CC
	.equiv "audio::Aud3DEngine::updateAmbientParamWindowFix()", _text + 0x37814
	.equiv "audio::Aud3DEngine::UpdateAmbientParam()", _text + 0x37BB8
	.equiv "`global_constructor_keyed_to'_17_Aud3DSoundMgr_cpp_8225c8dd", _text + 0x38C4C
	.equiv "audio::AudAudioComponents::AudAudioComponents()", _text + 0x39268
	.equiv "audio::AudAudioPlayer::AudAudioPlayer()", _text + 0x39940
	.equiv "audio::AudAudioPlayer::setupPlayerCategoryVolume_()", _text + 0x39E04
	.equiv "audio::AudAudioPlayer::isPauseSePlayer_()", _text + 0x3A574
	.equiv "audio::AudAudioPlayer::pauseOnPlayer_()", _text + 0x3A584
	.equiv "audio::AudAudioPlayer::pauseOnSe()", _text + 0x3A5C0
	.equiv "audio::AudAudioPlayer::pauseOnBgm()", _text + 0x3A648
	.equiv "audio::AudAudioPlayer::setSeVolumeInPause()", _text + 0x3A728
	.equiv "audio::AudAudioPlayer::setBgmVolumeInPause()", _text + 0x3A7D0
	.equiv "FID_conflict:audio::AudAudioPlayer::resetVolumeInPause()", _text + 0x3A7F0
	.equiv "audio::AudAudioPlayer::setPageVolume()", _text + 0x3A89C
	.equiv "audio::AudAudioPlayer::resetPageVolume()", _text + 0x3A944
	.equiv "audio::AudAudioPlayer::setSeVolumeInDemo()", _text + 0x3A9F0
	.equiv "audio::AudAudioPlayer::muteOffVolume()", _text + 0x3AAFC
	.equiv "audio::AudAudioPlayer::setPlayerOuterVolume()", _text + 0x3AC20
	.equiv "audio::AudAudioPlayer::setPlayerPlayableSoundCountDefault()", _text + 0x3AC90
	.equiv "audio::AudAudioPlayer::setPlayerPlayableSoundCount()", _text + 0x3AD00
	.equiv "audio::AudAudioPlayer::setMaxVoicesByBgmChannelNum()", _text + 0x3AE3C
	.equiv "audio::AudAudioResourceLoader::AudAudioResourceLoader()", _text + 0x3B0E4
	.equiv "audio::AudAudioResourceLoader::getSoundDataMgr_()", _text + 0x3B1AC
	.equiv "audio::AudAudioResourceLoader::loadData()", _text + 0x3B1D0
	.equiv "audio::AudAudioResourceLoader::loadResources()", _text + 0x3B210
	.equiv "audio::AudAudioSystem::AudAudioSystem()", _text + 0x3B50C
	.equiv "audio::AudBgm::AudBgm()", _text + 0x3BB2C
	.equiv "audio::AudBgm::setTremDepth()", _text + 0x3BD74
	.equiv "audio::AudBgm::startBgm()", _text + 0x3BE34
	.equiv "audio::AudBgm::prepareBgm()", _text + 0x3C1E0
	.equiv "audio::AudBgm::setVolume()", _text + 0x3C4EC
	.equiv "audio::AudBgm::setStrmTrackVolume()", _text + 0x3C56C
	.equiv "audio::AudBgm::calc()", _text + 0x3C608
	.equiv "audio::AudBgm::getCurVolume()", _text + 0x3C6E0
	.equiv "audio::AudBgmPlayer::start()", _text + 0x3DF0C
	.equiv "audio::AudBgmPlayer::getBgmTitleSampleNum()", _text + 0x3E2F0
	.equiv "audio::AudBgmPlayer::stopBgmTitle()", _text + 0x3E370
	.equiv "audio::AudBgmPlayer::setVolumeBgmTitle()", _text + 0x3E5E8
	.equiv "audio::AudBgmPlayer::setVolume()", _text + 0x3E670
	.equiv "FUN_0E1BE778:audio::AudBgmPlayer::addBgmRequest()", _text + 0x3E778
	.equiv "FUN_0E1BE860:audio::AudBgmPlayer::addBgmRequest()", _text + 0x3E860
	.equiv "audio::AudBgmRace::requestChangeRaceBgm_()", _text + 0x3EDC4
	.equiv "audio::AudBgmRace::changeRaceBgmTrackFlg_()", _text + 0x3EDE4
	.equiv "audio::AudBgmRace::calcChangeByGndMtr_()", _text + 0x3F2D4
	.equiv "audio::AudBgmRace::prepareNormalLapBgm()", _text + 0x3F794
	.equiv "audio::AudBgmRace::setBeatMod()", _text + 0x3FA40
	.equiv "audio::AudBgmRace::resetMod()", _text + 0x3FA58
	.equiv "audio::AudBgmRace::startNormalLapBgm()", _text + 0x3FA94
	.equiv "audio::AudBgmRace::changeRaceBgmLabel_()", _text + 0x3FBB0
	.equiv "audio::AudBgmRace::calcChangeRaceBgm_()", _text + 0x3FD70
	.equiv "audio::AudBgmRace::prepareFinalLapBgm()", _text + 0x40FB8
	.equiv "audio::AudBgmRace::setTrgRaceBgm_()", _text + 0x41298
	.equiv "audio::AudBgmRhythmTrg::getStrmBgmBpm_()", _text + 0x41A4C
	.equiv "audio::AudBgmRhythmTrg::getStrmSampleNumPerBpm2_()", _text + 0x41AAC
	.equiv "audio::AudBgmRhythmTrg::getStrmFrameNumPerBpm2_()", _text + 0x41AC4
	.equiv "audio::AudBgmRhythmTrg::initBgmStrmTrgStartInfo_()", _text + 0x41ADC
	.equiv "audio::AudBgmRhythmTrg::resetTrgFrameCounter_()", _text + 0x41E34
	.equiv "audio::AudBgmRhythmTrg::initialize()", _text + 0x41FD8
	.equiv "audio::AudBgmRhythmTrg::setBgmHandle()", _text + 0x4251C
	.equiv "audio::AudBgmRhythmTrg::calcNoBgm_()", _text + 0x42550
	.equiv "audio::AudBgmRhythmTrg::calcCourseBgm_()", _text + 0x425E0
	.equiv "audio::AudBgmRhythmTrg::calcTrgFrameCounter_()", _text + 0x42998
	.equiv "audio::AudBgmRhythmTrg::calc()", _text + 0x42A5C
	.equiv "audio::AudBgmRhythmTrg::getRhythmTrg()", _text + 0x42B78
	.equiv "audio::AudSubEngine::getBehavior()", _text + 0x43584
	.equiv "audio::AudSubEngine::AudSubEngine()", _text + 0x437B8
	.equiv "FUN_0E1C3A94:sys::GetTypedEngine()", _text + 0x43A94
	.equiv "audio::AudEngine::getEngine()", _text + 0x43B54
	.equiv "audio::AudEngine::AudEngine()", _text + 0x43B8C
	.equiv "audio::AudEngine::setupAudioSetting_()", _text + 0x43EE4
	.equiv "audio::AudEngine::createAudTask_()", _text + 0x43FBC
	.equiv "audio::AudEngine::updateView()", _text + 0x44BAC
	.equiv "audio::AudEngine::getBgmPlayer()", _text + 0x44CB4
	.equiv "audio::AudEngine::get2DSoundPlayer()", _text + 0x44CBC
	.equiv "audio::AudEngine::getRandomIdSet()", _text + 0x44CC4
	.equiv "audio::AudEngine::isIgnorePage_()", _text + 0x44CDC
	.equiv "audio::AudEngine::setDrcFullScreanMode()", _text + 0x44D28
	.equiv "audio::AudEngine::setAudSceneID()", _text + 0x44DA4
	.equiv "audio::AudEngine::setAudReplayType()", _text + 0x4501C
	.equiv "audio::AudEngine::setPause()", _text + 0x45054
	.equiv "audio::AudEngine::leaveHomeButton()", _text + 0x452B8
	.equiv "FUN_0E1C6800:dash::create_actor_alone()", _text + 0x46800
	.equiv "FUN_0E1C6830:dash::create_actor_alone()", _text + 0x46830
	.equiv "FUN_0E1C6834:dash::create_actor_alone()", _text + 0x46834
	.equiv "FUN_0E1C6864:dash::create_actor_alone()", _text + 0x46864
	.equiv "FUN_0E1C6868:dash::create_actor_alone()", _text + 0x46868
	.equiv "FUN_0E1C6898:dash::create_actor_alone()", _text + 0x46898
	.equiv "FUN_0E1C68F0:sead::TreeMapNode_*sead::TreeMapImpl::find()", _text + 0x468F0
	.equiv "FUN_0E1C6A14:sys::GetTypedEngine()", _text + 0x46A14
	.equiv "audio::ForEachSoundFuncBase::ForEachSoundFuncBase()", _text + 0x46ACC
	.equiv "audio::ForEachSoundFuncBase::isValid()", _text + 0x46B10
	.equiv "audio::CheckIsAttachedSound::CheckIsAttachedSound()", _text + 0x46B5C
	.equiv "audio::CheckIsAttachedSound::operator_()", _text + 0x46BD8
	.equiv "audio::StopSound::StopSound()", _text + 0x46C20
	.equiv "audio::StopSound::operator_()", _text + 0x46C94
	.equiv "audio::FadeInSound::FadeInSound()", _text + 0x46CDC
	.equiv "audio::FadeInSound::operator_()", _text + 0x46D40
	.equiv "audio::GetPlayFrameCountMin::GetPlayFrameCountMin()", _text + 0x46D88
	.equiv "audio::GetPlayFrameCountMin::operator_()", _text + 0x46E14
	.equiv "audio::SetDrcOutputVolume::SetDrcOutputVolume()", _text + 0x46E88
	.equiv "audio::SetDrcOutputVolume::operator_()", _text + 0x46F0C
	.equiv "audio::AudFxObject::AudFxObject()", _text + 0x46FD8
	.equiv "audio::AudFxObject::setup()", _text + 0x47108
	.equiv "audio::AudFxSocket::AudFxSocket()", _text + 0x4752C
	.equiv "audio::AudFxSocket::calc()", _text + 0x47B90
	.equiv "audio::AudFxSocket::suspend_()", _text + 0x47E0C
	.equiv "audio::AudFxSocket::suspendFx()", _text + 0x47E38
	.equiv "audio::AudFxSocket::copyRevStdSeadParam_()", _text + 0x47F04
	.equiv "audio::AudFxSocket::restart_()", _text + 0x47F50
	.equiv "audio::AudFxSocket::restartFxBusA()", _text + 0x47F68
	.equiv "audio::AudFxSocket::copyDelaySeadParam_()", _text + 0x47FBC
	.equiv "audio::AudFxSocket::restartFxBusB()", _text + 0x47FE0
	.equiv "audio::AudFxSocket::resume_()", _text + 0x48034
	.equiv "audio::AudFxSocket::changeFxSetting_()", _text + 0x4804C
	.equiv "audio::AudFxSocket::resumeFx()", _text + 0x481F0
	.equiv "audio::AudFxSocket::changeFxSetting()", _text + 0x48288
	.equiv "audio::AudInnerUtil::getPlayer()", _text + 0x48500
	.equiv "audio::AudInnerUtil::getSoundArchive()", _text + 0x48524
	.equiv "audio::AudInnerUtil::getItemId()", _text + 0x4854C
	.equiv "audio::AudInnerUtil::getItemLabel()", _text + 0x48588
	.equiv "audio::AudInnerUtil::checkSoundType()", _text + 0x485CC
	.equiv "audio::AudInnerUtil::getPlayerIdByItemId()", _text + 0x48600
	.equiv "audio::AudInnerUtil::getPlayerPriority()", _text + 0x48650
	.equiv "audio::AudInnerUtil::getIdxLessThan()", _text + 0x4868C
	.equiv "<unnamed>::get2DSoundPlayer_()", _text + 0x48774
	.equiv "FUN_0E1C8798:audio::utl::startSound2D()", _text + 0x48798
	.equiv "FUN_0E1C87D4:audio::utl::startSound2DCheckPrio()", _text + 0x487D4
	.equiv "FUN_0E1C8810:audio::utl::setPan2D()", _text + 0x48810
	.equiv "FUN_0E1C886C:audio::utl::startSound2D()", _text + 0x4886C
	.equiv "audio::utl::getPan2D()", _text + 0x488DC
	.equiv "FUN_0E1C8918:audio::utl::setPan2D()", _text + 0x48918
	.equiv "FUN_0E1C8954:audio::utl::startSound2D()", _text + 0x48954
	.equiv "FID_conflict:audio::utl::holdSound2D()", _text + 0x489DC
	.equiv "FUN_0E1C8A64:audio::utl::startSound2DCheckPrio()", _text + 0x48A64
	.equiv "FUN_0E1C8AEC:audio::utl::holdSound2D()", _text + 0x48AEC
	.equiv "FUN_0E1C8B28:audio::utl::holdSound2D()", _text + 0x48B28
	.equiv "audio::utl::stopSound2D()", _text + 0x48BB0
	.equiv "audio::utl::recReceUiSe()", _text + 0x48BF4
	.equiv "audio::utl::holdItemRoulette()", _text + 0x48F38
	.equiv "audio::utl::getRhythmTrg()", _text + 0x48FCC
	.equiv "audio::utl::getBgmTempoRatio()", _text + 0x49044
	.equiv "audio::utl::getBgmSingleBeatFrm()", _text + 0x4908C
	.equiv "audio::utl::linearTransClamp()", _text + 0x4919C
	.equiv "audio::utl::muteOnForMiiverse()", _text + 0x491EC
	.equiv "audio::utl::muteOffForMiiverse()", _text + 0x49230
	.equiv "audio::AudLfoBase::AudLfoBase()", _text + 0x493A4
	.equiv "audio::AudLfoBase::calc()", _text + 0x49410
	.equiv "audio::AudLfoBase::start()", _text + 0x49618
	.equiv "audio::AudLfoBase::setSpeed()", _text + 0x49640
	.equiv "audio::AudMapAreaMgr::AudMapAreaMgr()", _text + 0x49834
	.equiv "audio::AudMapAreaMgr::EnvSe::resetPlayParam()", _text + 0x4A34C
	.equiv "audio::AudMapAreaMgr::setupEnvSePan()", _text + 0x4A3F0
	.equiv "audio::AudMapAreaMgr::EnvSe::setParam()", _text + 0x4A6C0
	.equiv "audio::AudMapAreaMgr::setUnderwaterLpf()", _text + 0x4A74C
	.equiv "audio::AudMapAreaMgr::calcUnderwater()", _text + 0x4A898
	.equiv "audio::AudMapAreaMgr::calcAreaUnderWater()", _text + 0x4ACD8
	.equiv "audio::AudMapAreaMgr::calcPath()", _text + 0x4AE30
	.equiv "audio::AudMapAreaMgr::EnvSe::calcFader()", _text + 0x4BE70
	.equiv "audio::AudMapAreaMgr::setEnvSePlayParam()", _text + 0x4BEB8
	.equiv "audio::AudMapAreaMgr::EnvSe::resetParam()", _text + 0x4C038
	.equiv "audio::AudMapAreaMgr::holdEnvSe()", _text + 0x4C06C
	.equiv "audio::AudMapAreaMgr::calcFxSend()", _text + 0x4C8FC
	.equiv "audio::AudMapAreaMgr::startEnvSeTrg()", _text + 0x4CA04
	.equiv "audio::AudMapAreaMgr::calcLapRegionTrg()", _text + 0x4CB44
	.equiv "audio::AudMapAreaMgr::calcBgm()", _text + 0x4D358
	.equiv "audio::AudMapAreaMgr::createSoundLink()", _text + 0x4D678
	.equiv "audio::AudMapAreaMgr::EnvSe::resetFader()", _text + 0x4D824
	.equiv "audio::AudMapAreaMgr::createEnvSe()", _text + 0x4DA58
	.equiv "audio::AudMapAreaMgr::setupMapArea()", _text + 0x4DC08
	.equiv "audio::AudMapAreaMgr::setupLapRegion()", _text + 0x4DE90
	.equiv "audio::AudMapAreaMgr::setupDefaultSe()", _text + 0x4E228
	.equiv "audio::AudMapAreaMgr::clearUnderwaterFilter()", _text + 0x4E2CC
	.equiv "audio::AudMapAreaMgr::setupUnderWater()", _text + 0x4E330
	.equiv "audio::AudMapAreaMgr::getResSound()", _text + 0x4E52C
	.equiv "audio::AudMapAreaMgr::getEnvSeMainSoundIdBySLink()", _text + 0x4E554
	.equiv "audio::AudMapAreaMgr::setEnvSeMainSound()", _text + 0x4E5E0
	.equiv "audio::AudMapAreaMgr::tryBirthBackLocator()", _text + 0x4E6A4
	.equiv "audio::AudMapAreaMgr::eraseEnvSeLocator()", _text + 0x4E838
	.equiv "audio::AudMapAreaMgr::allocEnvSeSLinkLocator()", _text + 0x4E93C
	.equiv "audio::AudMapAreaMgr::initEnvSePlayParam()", _text + 0x4EBE8
	.equiv "audio::AudMapAreaMgr::eraseEnvSe()", _text + 0x4EC4C
	.equiv "audio::AudMapAreaMgr::setupEnvSe()", _text + 0x4ED38
	.equiv "audio::AudMapAreaMgr::attachRecorder()", _text + 0x4F030
	.equiv "audio::AudMapAreaMgr::resetBgmState()", _text + 0x4F04C
	.equiv "audio::AudMapAreaMgr::playThunderSe()", _text + 0x4F124
	.equiv "audio::AudMapAreaMgr::getDemoSeSoundID()", _text + 0x4F140
	.equiv "audio::AudMapAreaMgr::startCourseInDemoCutSe()", _text + 0x4F3E0
	.equiv "audio::AudMapAreaMgr::startCourseInDemoAllCutSe()", _text + 0x4F8C4
	.equiv "audio::AudMapAreaMgr::setCourseInDemoAllCutSeVolume()", _text + 0x4F8DC
	.equiv "audio::AudMapAreaMgr::stopCourseInDemoCutSe()", _text + 0x4F97C
	.equiv "audio::AudMapAreaMgr::changeCourseInDemoCamera()", _text + 0x4FA00
	.equiv "audio::AudMapAreaMgr::endCourseInDemo()", _text + 0x4FD0C
	.equiv "FUN_0E1D051C:void_object::MuAccessorBase::construct()", _text + 0x5051C
	.equiv "audio::AudMapObjSeStarterDirector::getStarter()", _text + 0x50B90
	.equiv "audio::AudMapObjSeStarter::initLocator()", _text + 0x51128
	.equiv "audio::AudMapObjSeStarter::init()", _text + 0x517E4
	.equiv "audio::AudMapPathData::clear()", _text + 0x52194
	.equiv "audio::AudMapPathData::initUndecidedParam()", _text + 0x521CC
	.equiv "audio::AudMapPathData::AudMapPathData()", _text + 0x52228
	.equiv "audio::AudMapPathData::initData()", _text + 0x526BC
	.equiv "audio::AudMapPathData::update()", _text + 0x529D8
	.equiv "audio::AudProxySoundArchiveList::removeArc()", _text + 0x53698
	.equiv "audio::AudProxySoundResUser::removeArc()", _text + 0x5371C
	.equiv "audio::AudProxySoundMgr::eraseFromResUserList()", _text + 0x53750
	.equiv "audio::AudProxySoundResUser::~AudProxySoundResUser()", _text + 0x537B8
	.equiv "FUN_0E1D38B8:audio::AudProxySoundMgr::isProxySound()", _text + 0x538B8
	.equiv "audio::AudProxySoundResource::getId()", _text + 0x5391C
	.equiv "audio::IAudProxySoundResSearcher::getItemId()", _text + 0x5392C
	.equiv "FUN_0E1D39A8:audio::AudProxySoundMgr::isProxySound()", _text + 0x539A8
	.equiv "audio::IAudProxySoundResSearcher::getItemLabel()", _text + 0x539D4
	.equiv "audio::AudProxySoundResource::isReleasePriorityFixed()", _text + 0x53A48
	.equiv "audio::AudProxySoundResource::getStreamTrackNum()", _text + 0x53A60
	.equiv "audio::AudProxySoundResource::getStreamTrackVolume()", _text + 0x53A70
	.equiv "audio::AudProxySoundResource::isFrontBypassStrm()", _text + 0x53A80
	.equiv "audio::AudProxySoundResource::AudProxySoundResource()", _text + 0x53A94
	.equiv "audio::AudProxySoundResource::getProxyLabel()", _text + 0x54744
	.equiv "audio::AudProxySoundResource::isFrontBypass()", _text + 0x5478C
	.equiv "audio::AudProxySoundResource::getSoundTypeNw()", _text + 0x547A4
	.equiv "audio::AudProxySoundResource::getUserParam()", _text + 0x547CC
	.equiv "audio::AudProxySoundResource::read3DInfo()", _text + 0x547E0
	.equiv "audio::AudProxySoundResource::getStartInfo()", _text + 0x54814
	.equiv "audio::AudProxySoundResource::setInfoToHandle()", _text + 0x549A0
	.equiv "audio::AudProxySoundArchive::AudProxySoundArchive()", _text + 0x54AB8
	.equiv "audio::IAudProxySoundResSearcher::getPlayerId()", _text + 0x55610
	.equiv "audio::IAudProxySoundResSearcher::getSoundTypeNw()", _text + 0x55680
	.equiv "audio::IAudProxySoundResSearcher::readSoundUserParam()", _text + 0x556F0
	.equiv "FUN_0E1D57C8:audio::IAudProxySoundResSearcher::read3DInfo()", _text + 0x557C8
	.equiv "FUN_0E1D58A0:audio::IAudProxySoundResSearcher::read3DInfo()", _text + 0x558A0
	.equiv "audio::AudProxySoundArchiveList::AudProxySoundArchiveList()", _text + 0x55958
	.equiv "audio::AudProxySoundArchiveList::appendArc()", _text + 0x55A1C
	.equiv "audio::AudProxySoundArchiveList::searchArcByName()", _text + 0x55AA4
	.equiv "audio::AudProxySoundArchiveList::searchArcByString()", _text + 0x55BB0
	.equiv "audio::AudProxySoundMgr::pushBackTorResUserList()", _text + 0x55E80
	.equiv "audio::AudProxySoundResUser::appendArcByName()", _text + 0x55EEC
	.equiv "FUN_0E1D5F68:audio::AudProxySoundResUser::AudProxySoundResUser()", _text + 0x55F68
	.equiv "audio::AudProxySoundResUser::appendArc()", _text + 0x560DC
	.equiv "FUN_0E1D60F0:audio::AudProxySoundResUser::AudProxySoundResUser()", _text + 0x560F0
	.equiv "audio::AudProxySoundResUser::appendArcByString()", _text + 0x56268
	.equiv "audio::AudProxySoundMultiResSearcher::AudProxySoundMultiResSearcher()", _text + 0x56304
	.equiv "audio::AudProxySoundMgr::getUser()", _text + 0x56404
	.equiv "audio::AudProxySoundMgr::clearHeap()", _text + 0x56510
	.equiv "audio::AudProxySoundMgr::createUser()", _text + 0x56560
	.equiv "FUN_0E1D66A8:audio::AudProxySoundMultiResSearcher::appendResUser()", _text + 0x566A8
	.equiv "audio::AudProxySoundMgr::isArchiveLoaded()", _text + 0x56778
	.equiv "FUN_0E1D6834:audio::AudProxySoundMultiResSearcher::appendResUser()", _text + 0x56834
	.equiv "audio::AudProxySoundMgr::AudProxySoundMgr()", _text + 0x56A00
	.equiv "audio::AudProxySoundMgr::createInstance()", _text + 0x56B30
	.equiv "audio::AudProxySoundMgr::appendNewArc()", _text + 0x56BD0
	.equiv "audio::AudProxySoundMgr::getPlayerPriority()", _text + 0x56DC4
	.equiv "audio::AudProxySoundStarter::AudProxySoundStarter()", _text + 0x56EE4
	.equiv "audio::AudProxySoundStarter::postStart_()", _text + 0x56F3C
	.equiv "audio::AudProxySoundStarter::startProxySound()", _text + 0x56FAC
	.equiv "audio::AudProxySoundStarter::holdProxySound()", _text + 0x5708C
	.equiv "audio::AudProxySoundStarter::prepareProxySound()", _text + 0x57210
	.equiv "audio::AudRandomIdSet::AudRandomIdSet()", _text + 0x57568
	.equiv "audio::AudRandomIdSet::initialize()", _text + 0x575D0
	.equiv "audio::PcmResampler::PcmResampler()", _text + 0x578CC
	.equiv "audio::PcmResampler::initialize()", _text + 0x57978
	.equiv "audio::PcmResampler::reStart()", _text + 0x579B0
	.equiv "audio::setDelayData()", _text + 0x579CC
	.equiv "audio::mac()", _text + 0x57A70
	.equiv "audio::PcmResampler::resample()", _text + 0x57AD8
	.equiv "audio::AudSceneAward::AudSceneAward()", _text + 0x57D10
	.equiv "audio::AudSceneBase::~AudSceneBase()", _text + 0x58298
	.equiv "audio::AudSceneBase::AudSceneBase()", _text + 0x584F0
	.equiv "audio::AudSceneMenu::AudSceneMenu()", _text + 0x59520
	.equiv "audio::AudSceneRace::~AudSceneRace()", _text + 0x59C74
	.equiv "audio::AudSceneRace::setPlayerVolumeInWiningRun()", _text + 0x5AA5C
	.equiv "audio::AudSceneRace::setPlayerVolumeInReplay()", _text + 0x5AAC0
	.equiv "audio::AudSceneRace::enterBeforeStructure()", _text + 0x5B574
	.equiv "audio::AudSceneRace::changeRaceStateSound()", _text + 0x5C140
	.equiv "audio::AudSceneRace::resetPlayerVolumeInReplay()", _text + 0x5D224
	.equiv "audio::AudSceneRace::resetSoundPlayParam()", _text + 0x5D2A8
	.equiv "audio::AudSceneRace::muteEnvSeBeforeCountDown_()", _text + 0x5D424
	.equiv "audio::AudSceneRace::changeRaceStateSe_()", _text + 0x5D4C8
	.equiv "audio::AudSceneRace::changeRaceStateSeReplay_()", _text + 0x5DB00
	.equiv "FUN_0E1DE1E8:FID_conflict:audio::AudSceneRace::resetMuteAllObj()", _text + 0x5E1E8
	.equiv "audio::AudSceneRace::stopAllSe()", _text + 0x5E370
	.equiv "audio::AudSceneRace::pauseOnSoundObj()", _text + 0x5E874
	.equiv "audio::AudSceneRace::pauseOffSoundObj()", _text + 0x5E93C
	.equiv "FUN_0E1DEA04:FID_conflict:audio::AudSceneRace::resetMuteAllObj()", _text + 0x5EA04
	.equiv "audio::AudSceneRace::createRecorder()", _text + 0x5ED18
	.equiv "FUN_0E1DF808:bool_is_derived()", _text + 0x5F808
	.equiv "audio::AudSoundHandleSet::AudSoundHandleSet()", _text + 0x5FAAC
	.equiv "audio::AudSoundHandleSet::getHandleByHandleId()", _text + 0x5FBA8
	.equiv "audio::AudSoundHandleSet::isAttachedSoundById()", _text + 0x5FC8C
	.equiv "audio::AudSoundHandleSet::setDisposableHandleId()", _text + 0x5FD58
	.equiv "audio::AudSoundHandleSet::stopSoundByHandleId()", _text + 0x5FDA0
	.equiv "audio::AudSoundHandleSet::stopAllWithoutId()", _text + 0x5FDC0
	.equiv "audio::AudSoundLinkSystem::AudSoundLinkSystem()", _text + 0x6046C
	.equiv "audio::AudSoundLinkSystem::createResourceAccessor()", _text + 0x60544
	.equiv "audio::AudSoundLinkUserUI::createSoundLinkInstance()", _text + 0x60A00
	.equiv "audio::AudSoundLinkUserBase::attachRecorder()", _text + 0x60B7C
	.equiv "audio::AudSoundLinkUserBase::setSLinkName()", _text + 0x60BB4
	.equiv "audio::AudSoundLinkUserBase::searchSound()", _text + 0x60FB8
	.equiv "audio::AudSoundLinkUserBase::play()", _text + 0x60FC8
	.equiv "audio::AudSoundLinkUserBase::hold()", _text + 0x61028
	.equiv "audio::AudSoundLinkUserBase::isValidEventName()", _text + 0x61088
	.equiv "audio::AudSoundLinkUserBase::playSoundSLinkDirect()", _text + 0x61110
	.equiv "audio::AudSoundLinkUserBase::playSoundSLinkDirectReplay()", _text + 0x61564
	.equiv "audio::AudSoundLinkUserWithElink::AudSoundLinkUserWithElink()", _text + 0x61680
	.equiv "audio::AudSoundLinkUserWithElink::createSoundLink()", _text + 0x616F0
	.equiv "audio::AudSoundLinkUserWithElink::destorySoundLink()", _text + 0x61D50
	.equiv "audio::AudSoundLinkUserStandalone::AudSoundLinkUserStandalone()", _text + 0x61E4C
	.equiv "audio::AudSoundLinkUserStandalone::createSoundLink()", _text + 0x61ECC
	.equiv "audio::AudSoundLinkUserStandalone::forceSetupSoundID()", _text + 0x62494
	.equiv "audio::AudSoundLinkUserUI::create()", _text + 0x624CC
	.equiv "audio::AudSoundLinkUserUIDirector::AudSoundLinkUserUIDirector()", _text + 0x6264C
	.equiv "FUN_0E1E2F44:dash::create_actor_alone()", _text + 0x62F44
	.equiv "audio::AudSoundObjBase::~AudSoundObjBase()", _text + 0x62F80
	.equiv "audio::AudSoundObjBase::SetupSound()", _text + 0x630F4
	.equiv "audio::AudSoundObjBase::_startSound()", _text + 0x632B8
	.equiv "audio::AudSoundObjBase::isAttachedSound()", _text + 0x6340C
	.equiv "audio::AudSoundObjBase::stop()", _text + 0x63504
	.equiv "audio::AudSoundObjBase::_start()", _text + 0x6360C
	.equiv "audio::AudSoundObjBase::_holdSound()", _text + 0x6376C
	.equiv "audio::AudSoundObjBase::_getHandleForHold()", _text + 0x638B0
	.equiv "audio::AudSoundObjBase::_hold()", _text + 0x638D8
	.equiv "audio::AudSoundObjBase::AudSoundObjBase()", _text + 0x63A08
	.equiv "audio::AudSoundObjBase::attachRecorder()", _text + 0x63CC8
	.equiv "audio::AudSoundObjBase::_startPrioBefore()", _text + 0x63CDC
	.equiv "audio::AudSoundObjBase::_startPrioAfter()", _text + 0x63DD0
	.equiv "audio::AudSoundObjBase::isUseLapDistSoundMaskCourse()", _text + 0x64270
	.equiv "audio::AudSoundObjBase::fadeIn()", _text + 0x64388
	.equiv "audio::AudSoundObjBase::_addSoundRequest()", _text + 0x646CC
	.equiv "audio::AudSoundObjBase::getListenerRelPos()", _text + 0x649AC
	.equiv "audio::AudSoundObjBase::_calcListenerDist()", _text + 0x649FC
	.equiv "audio::AudSoundObjBase::getListenerDist()", _text + 0x64C38
	.equiv "audio::AudSoundObjBase::getListenerDistSq()", _text + 0x64C90
	.equiv "audio::AudSoundObjBase::getListenerRelVelocity()", _text + 0x64CE0
	.equiv "audio::AudSoundObjBase::getListenerDistSqMin()", _text + 0x64D24
	.equiv "audio::AudSoundObjBase::getCullingSafeDistSq()", _text + 0x64D60
	.equiv "audio::AudSoundObjBase::_setCullingSafeDistVolRatio()", _text + 0x64DDC
	.equiv "audio::AudSoundObjBase::_calcListenerDistSq()", _text + 0x64EB4
	.equiv "audio::AudSoundObjBase::_calcListenerRelPos()", _text + 0x653C4
	.equiv "audio::AudSoundObjCullingDirector::appendToActiveList()", _text + 0x65854
	.equiv "audio::AudSoundObjCullingDirector::~AudSoundObjCullingDirector()", _text + 0x65974
	.equiv "audio::AudSoundObjCulling::AudSoundObjCulling()", _text + 0x65CCC
	.equiv "audio::AudSoundObjDirector::~AudSoundObjDirector()", _text + 0x66670
	.equiv "audio::AudSoundObjKart::SetupSound()", _text + 0x670D8
	.equiv "audio::AudSoundObjKart::initCullinVolRatioSpecial()", _text + 0x6773C
	.equiv "audio::AudSoundObjKart::getVoiceInitial()", _text + 0x67780
	.equiv "audio::AudSoundObjKart::initVoiceInitial()", _text + 0x67EC4
	.equiv "audio::AudSoundObjKart::getSLinkLocatorFirstId()", _text + 0x67F68
	.equiv "audio::AudSoundObjKart::initSoundLink_()", _text + 0x67FB8
	.equiv "audio::AudSoundObjKartDirector::getKartByID()", _text + 0x69254
	.equiv "audio::AudSoundObjKartDirector::_calcWindowID()", _text + 0x69EF0
	.equiv "audio::AudSoundObjKart::getCullingCheckDistSq()", _text + 0x6A060
	.equiv "audio::AudSoundObjKartDirector::updateCullingSafeKartLast()", _text + 0x6A144
	.equiv "audio::AudSoundObjKartDirector::checkCullingSafeKartLast()", _text + 0x6A1BC
	.equiv "audio::AudSoundObjKartDirector::_calcSoundCullingBefore()", _text + 0x6A2B0
	.equiv "audio::AudSoundObjKart::setOvertakeVoiceValidTimer()", _text + 0x6A724
	.equiv "audio::AudSoundObjKart::cancelRequestOvertakeVoice()", _text + 0x6A744
	.equiv "audio::AudSoundObjKartDirector::updateRank()", _text + 0x6A754
	.equiv "audio::AudSoundObjKartDirector::_calcRank()", _text + 0x6A7D4
	.equiv "audio::AudSoundObjKart::_setSoundCulling()", _text + 0x6AD48
	.equiv "audio::AudSoundObjKartDirector::_calcSoundCullingAfter()", _text + 0x6AD68
	.equiv "audio::AudSoundObjKartDirector::getKartByPlayerID()", _text + 0x6B028
	.equiv "audio::AudSoundObjKartDirector::getCameraTargetKart()", _text + 0x6B09C
	.equiv "audio::AudSoundObjKartDirector::getCameraTargetKartTopLap()", _text + 0x6B0C0
	.equiv "audio::AudSoundObjKartDirector::stopAllSLinkEvent()", _text + 0x6B1FC
	.equiv "audio::AudSoundObjKart::appendResUserToSearcher()", _text + 0x6B24C
	.equiv "audio::AudSoundObjKartDirector::appendResUserToSearcher()", _text + 0x6B2B4
	.equiv "audio::AudSoundObjKartDirector::getSLinkLocator()", _text + 0x6B318
	.equiv "audio::AudSoundObjKart::startSound2D_()", _text + 0x6BB64
	.equiv "audio::AudSoundObjKart::searchSound()", _text + 0x6BC34
	.equiv "audio::AudSoundObjKart::playSoundSLinkDirect()", _text + 0x6BC4C
	.equiv "audio::AudSoundObjKart::playSoundSLinkCmn()", _text + 0x6BC80
	.equiv "audio::AudSoundObjKart::recSoundSLinkDirect()", _text + 0x6BCE0
	.equiv "audio::AudSoundObjKart::setTrgKartSeFlag()", _text + 0x6BD78
	.equiv "audio::AudSoundObjKart::isTrgKartSeFlag()", _text + 0x6BE58
	.equiv "audio::AudSoundObjKart::calcIntervalCounterSet_()", _text + 0x6BEA4
	.equiv "audio::AudSoundObjKart::stopDriverVoice()", _text + 0x6C028
	.equiv "audio::AudSoundObjKart::requestDriverVoice()", _text + 0x6C2A4
	.equiv "audio::AudSoundObjKart::getIdAvoidLast2_()", _text + 0x6C4F4
	.equiv "audio::AudSoundObjKart::playDriverVoiceRecordable()", _text + 0x6C678
	.equiv "audio::AudSoundObjKart::playDriverVoice()", _text + 0x6CB5C
	.equiv "audio::AudSoundObjKart::playOvertakeVoice()", _text + 0x6CCB0
	.equiv "audio::AudSoundObjKart::calcOvertakeVoice()", _text + 0x6CD14
	.equiv "audio::AudSoundObjKart::isPlayerHorn2D_()", _text + 0x6D70C
	.equiv "audio::AudSoundObjKart::setPlayerHornIntroSePan_()", _text + 0x6D778
	.equiv "audio::AudSoundObjKart::setPlayerHornOutputLine_()", _text + 0x6D7E8
	.equiv "audio::AudSoundObjKart::playPlayerHornOFFIntroSe_()", _text + 0x6D974
	.equiv "audio::AudSoundObjKart::calcHornSe_()", _text + 0x6DA84
	.equiv "audio::AudSoundObjKart::selectDashSe_()", _text + 0x6E050
	.equiv "audio::AudSoundObjKart::playDiveSE_()", _text + 0x6E530
	.equiv "audio::AudSoundObjKart::getRaceTypeVol()", _text + 0x7153C
	.equiv "audio::AudSoundObjKart::requestOvertakeVoice()", _text + 0x71590
	.equiv "audio::AudSoundObjKart::_startCallback()", _text + 0x71698
	.equiv "audio::AudSoundObjPoint::AudSoundObjPoint()", _text + 0x729C4
	.equiv "audio::AudSoundObjPosFix::AudSoundObjPosFix()", _text + 0x73410
	.equiv "audio::AudSoundObjPosFix::createSLinkUserInstance()", _text + 0x734C4
	.equiv "audio::AudSoundObjPosFix::playSound()", _text + 0x735C8
	.equiv "audio::AudSoundObjSLink::~AudSoundObjSLink()", _text + 0x73C58
	.equiv "audio::AudSoundObjSLink::stopAllSLinkEvent()", _text + 0x74150
	.equiv "audio::AudSoundObjSLinkDirector::stopAllSLinkEvent()", _text + 0x74160
	.equiv "audio::AudSoundObjSLink::AudSoundObjSLink()", _text + 0x741E0
	.equiv "audio::AudSoundObjSLink::_setupDistVolRatio()", _text + 0x743D0
	.equiv "audio::AudSoundObjSLink::initTrainHoldSe_()", _text + 0x74580
	.equiv "audio::AudSoundObjSLink::enter()", _text + 0x74608
	.equiv "audio::AudSoundObjSLink::createSoundObjPosFix()", _text + 0x749B4
	.equiv "audio::AudSoundObjSLink::requestHoldTrain()", _text + 0x74E14
	.equiv "audio::AudSoundObjSLink::setItemObjPtr()", _text + 0x74E84
	.equiv "FUN_0E1F5500:dash::create_actor_alone()", _text + 0x75500
	.equiv "audio::EngineSe::setVolume()", _text + 0x75798
	.equiv "audio::EngineSe::setSpdRatio()", _text + 0x757C8
	.equiv "audio::EngineSe::getSumAddVolume()", _text + 0x7593C
	.equiv "audio::EngineSe::getSumAddPitch()", _text + 0x75978
	.equiv "audio::AudVehicleSe::initEngineSePitch_()", _text + 0x75C24
	.equiv "FUN_0E1F5CA4:audio::AudVehicleSe::initEngineSE_()", _text + 0x75CA4
	.equiv "FUN_0E1F5D20:audio::AudVehicleSe::initEngineSE_()", _text + 0x75D20
	.equiv "audio::AudVehicleSe::makeSeGroundAttribute_()", _text + 0x75D60
	.equiv "audio::AudVehicleSe::isDriftKeep_()", _text + 0x76618
	.equiv "audio::AudVehicleSe::isIgnitionTargetVehicle_()", _text + 0x76BF4
	.equiv "audio::AudVehicleSe::collidedWall_()", _text + 0x76C58
	.equiv "audio::AudVehicleSe::selectBackEngineSe_()", _text + 0x76D28
	.equiv "audio::AudVehicleSe::calcEngineSeNormal2_()", _text + 0x76D60
	.equiv "audio::AudVehicleSe::sortEngineState_()", _text + 0x76F3C
	.equiv "audio::AudVehicleSe::fadeInEngineAfterDash_()", _text + 0x77274
	.equiv "audio::AudVehicleSe::setKartSpeedRatio_()", _text + 0x77358
	.equiv "audio::AudVehicleSe::checkGroundAttr_()", _text + 0x77468
	.equiv "audio::AudVehicleSe::isBike_()", _text + 0x77938
	.equiv "audio::AudVehicleSe::calcAirValue_()", _text + 0x77BC8
	.equiv "audio::AudVehicleSe::changeEngineSoundAir_()", _text + 0x77D3C
	.equiv "audio::AudVehicleSe::calcDriftSteer_()", _text + 0x78570
	.equiv "audio::AudVehicleSe::setPositionAfterDash_()", _text + 0x79644
	.equiv "audio::AudVehicleSe::calcEngineSeDashEnd_()", _text + 0x79688
	.equiv "audio::AudVehicleSe::delayEngineStart_()", _text + 0x79768
	.equiv "audio::AudVehicleSe::changeStateEffect_()", _text + 0x797B0
	.equiv "audio::AudVehicleSe::calcInWaterFilter_()", _text + 0x79894
	.equiv "audio::AudVehicleSe::calcEngineSeDash_()", _text + 0x798EC
	.equiv "audio::AudVehicleSe::isGliderTransform()", _text + 0x7A618
	.equiv "audio::AudVehicleSe::changeEngineSound_()", _text + 0x7A6C0
	.equiv "audio::AudVehicleSe::playEngine2Sound_()", _text + 0x7AB04
	.equiv "audio::AudVehicleSe::calcBoardSE_()", _text + 0x7B12C
	.equiv "audio::AudVehicleSe::replaceHoverLabel_()", _text + 0x7B84C
	.equiv "audio::AudVehicleSe::calcTechnoRoadSE_()", _text + 0x7B86C
	.equiv "audio::AudVehicleSe::calcRunSE_()", _text + 0x7BD9C
	.equiv "audio::AudVehicleSe::decideGliderVolumePitch_()", _text + 0x7C544
	.equiv "audio::AudVehicleSe::calcGliderWingFlutterSE_()", _text + 0x7CB90
	.equiv "audio::AudVehicleSe::calcScrewSE_()", _text + 0x7CE00
	.equiv "`global_constructor_keyed_to'_16_AudVehicleSe_cpp_6c9a4956", _text + 0x7D280
	.equiv "audio::AudVehicleSeLabelSelector::initialize()", _text + 0x7E188
	.equiv "audio::AudVehicleSeLabelSelector::calc_gnd()", _text + 0x7E61C
	.equiv "camera::CameraDirector::CameraDirector()", _text + 0x7E7E8
	.equiv "camera::CameraDirector::detach()", _text + 0x7E9DC
	.equiv "camera::CameraDirector::setKartCameraParam()", _text + 0x7EA94
	.equiv "camera::CameraDirector::getTargetKartIdx()", _text + 0x7EAD4
	.equiv "camera::CameraDirector::attach_()", _text + 0x7EB90
	.equiv "camera::CameraDirector::update()", _text + 0x7ED58
	.equiv "camera::CameraDirector::getCameraMtx()", _text + 0x7EED4
	.equiv "camera::CameraDirector::getSectorHndl()", _text + 0x7F158
	.equiv "camera::CameraDirector::calcBeforeStructure()", _text + 0x7F624
	.equiv "camera::CameraDirector::calcListener_CourseInDemo_()", _text + 0x7FC28
	.equiv "FUN_0E201918:dash::create_actor_alone()", _text + 0x81918
	.equiv "FUN_0E201948:dash::create_actor_alone()", _text + 0x81948
	.equiv "camera::LookAtParam::LookAtParam()", _text + 0x819A0
	.equiv "FUN_0E201B14:collision::BoxCol::move()", _text + 0x81B14
	.equiv "FUN_0E20256C:collision::BoxCol::move()", _text + 0x8256C
	.equiv "collision::BoxCol::BoxCol()", _text + 0x82F5C
	.equiv "collision::BoxCol::create()", _text + 0x82FCC
	.equiv "collision::BoxCol::createTempSource()", _text + 0x83024
	.equiv "collision::BoxCol::add()", _text + 0x83124
	.equiv "collision::BoxCol::del()", _text + 0x834F8
	.equiv "collision::BoxCol::prepare()", _text + 0x83728
	.equiv "FUN_0E203A20:collision::add()", _text + 0x83A20
	.equiv "FUN_0E203A44:collision::add()", _text + 0x83A44
	.equiv "FUN_0E203A68:collision::add()", _text + 0x83A68
	.equiv "FUN_0E203AB4:collision::add()", _text + 0x83AB4
	.equiv "FUN_0E203AEC:collision::add()", _text + 0x83AEC
	.equiv "collision::BoxColManager::initHitBoxCol()", _text + 0x83C1C
	.equiv "collision::BoxColManager::BoxColManager()", _text + 0x83C50
	.equiv "collision::BoxColManager::checkSorted()", _text + 0x83F7C
	.equiv "collision::BoxColManager::check()", _text + 0x84230
	.equiv "collision::BoxColManager::safeCheck()", _text + 0x8426C
	.equiv "collision::BoxColManager::popHitBoxCol()", _text + 0x842E4
	.equiv "collision::GetSFX_Resource()", _text + 0x8446C
	.equiv "FUN_0E2047DC:FID_conflict:collision::GetTrail_Type()", _text + 0x847DC
	.equiv "FUN_0E204B4C:FID_conflict:collision::GetTrail_Type()", _text + 0x84B4C
	.equiv "collision::Block::initImpl_()", _text + 0x84F28
	.equiv "collision::Block::Block()", _text + 0x84F8C
	.equiv "collision::Block::regist()", _text + 0x850D4
	.equiv "collision::Block::getTargetAttrAllImpl()", _text + 0x851C4
	.equiv "collision::Block::convSphereToLocal()", _text + 0x852A8
	.equiv "collision::Block::mergeHitInfoToWorld()", _text + 0x85854
	.equiv "collision::Block::rotateMinMax()", _text + 0x86578
	.equiv "collision::BlockKCol::BlockKCol()", _text + 0x870CC
	.equiv "collision::BlockKCol::setNextBlockCache()", _text + 0x87C04
	.equiv "collision::BlockKCol::destroyDataShare()", _text + 0x87CB0
	.equiv "collision::BlockKCol::prepareDataShare()", _text + 0x87CF0
	.equiv "collision::GndColIF::GndColIF()", _text + 0x881E4
	.equiv "collision::GndColIF::~GndColIF()", _text + 0x88284
	.equiv "collision::GndColIF_EX::GndColIF_EX()", _text + 0x882D8
	.equiv "collision::NarrowIF::NarrowIF()", _text + 0x88394
	.equiv "collision::KColData::searchMultiBlockRecursiveAll()", _text + 0x8872C
	.equiv "collision::KColData::searchMultiBlockRecursive()", _text + 0x888DC
	.equiv "collision::KColData::searchMultiBlock()", _text + 0x88CE8
	.equiv "collision::KColData::searchAllBlock()", _text + 0x89054
	.equiv "collision::KColData::initAABB()", _text + 0x890A0
	.equiv "collision::KColData::KColData()", _text + 0x89A18
	.equiv "collision::KColData::extractBlockData()", _text + 0x89B48
	.equiv "collision::KColDataManager::load()", _text + 0x89E8C
	.equiv "collision::KColDataManager::getKColData_ByPos()", _text + 0x8A1E8
	.equiv "collision::KColDataManager::narrowPolygon()", _text + 0x8A31C
	.equiv "collision::KColDataManager::checkSphere_InitNormal()", _text + 0x8B310
	.equiv "collision::KColDataManager::checkSphere_InitNarrow()", _text + 0x8B5EC
	.equiv "collision::KColDataManager::checkSphere_Next()", _text + 0x8B9E8
	.equiv "collision::KColDataManager::KColDataManager()", _text + 0x8CDF0
	.equiv "collision::KCollisionVer1Data::setData()", _text + 0x8DA88
	.equiv "collision::GndColManager::checkSphere()", _text + 0x8DB8C
	.equiv "collision::GndColManager::narrowScope()", _text + 0x8DE5C
	.equiv "collision::GndColManager::isExistGndMaterial()", _text + 0x8DF84
	.equiv "collision::GndColManager::regist()", _text + 0x8E01C
	.equiv "collision::GndColManager::GndColManager()", _text + 0x8E2AC
	.equiv "collision::PolygonMesh::PolygonMesh()", _text + 0x8E6A8
	.equiv "collision::PolygonMesh::getNextHangPtr()", _text + 0x8E6F8
	.equiv "collision::PolygonMesh::hangVtx()", _text + 0x8E720
	.equiv "collision::PolygonMesh::parseModel()", _text + 0x8E780
	.equiv "collision::PolygonMesh::sortVertex()", _text + 0x8EC98
	.equiv "collision::PolygonMesh::revisePolyHang_VtxID()", _text + 0x8ED14
	.equiv "FUN_0E20ED70:collision::PolygonMesh::concatPolyHang()", _text + 0x8ED70
	.equiv "FUN_0E20EDB4:collision::PolygonMesh::concatPolyHang()", _text + 0x8EDB4
	.equiv "FUN_0E20F010:collision::PolygonMesh::jointPolygon()", _text + 0x8F010
	.equiv "FUN_0E20F050:collision::PolygonMesh::jointPolygon()", _text + 0x8F050
	.equiv "collision::PolygonMesh::createMesh()", _text + 0x8F2EC
	.equiv "collision::PolygonMesh::create()", _text + 0x8F320
	.equiv "collision::PolygonMesh::clear()", _text + 0x8F360
	.equiv "FUN_0E20F600:void_sead::Buffer::heapSort()", _text + 0x8F600
	.equiv "collision::PrimCol::checkCollision()", _text + 0x8F920
	.equiv "FUN_0E20F9C0:collision::PrimCol::PrimCol()", _text + 0x8F9C0
	.equiv "FUN_0E20FAD8:collision::PrimCol::PrimCol()", _text + 0x8FAD8
	.equiv "collision::PrimCol::~PrimCol()", _text + 0x8FBF4
	.equiv "collision::CheckSphereBox()", _text + 0x8FE20
	.equiv "collision::CheckSphereCylinder()", _text + 0x905F4
	.equiv "collision::DistSqPointToLine()", _text + 0x90BF4
	.equiv "collision::DistSqPointToSegment()", _text + 0x90E30
	.equiv "collision::CheckSphereCapsule()", _text + 0x9104C
	.equiv "FUN_0E2114C8:collision::CheckSphereLine()", _text + 0x914C8
	.equiv "FUN_0E211824:collision::CheckSphereLine()", _text + 0x91824
	.equiv "collision::CheckSpherePlane()", _text + 0x918D0
	.equiv "collision::CheckBoxPoint()", _text + 0x91F20
	.equiv "collision::CheckBoxBox()", _text + 0x92684
	.equiv "collision::CheckBoxCylinder()", _text + 0x9281C
	.equiv "<unnamed>::privateCalcBoxLineA()", _text + 0x929B4
	.equiv "<unnamed>::privateCalcBoxLineB()", _text + 0x92A44
	.equiv "FUN_0E212C44:collision::CheckBoxLine()", _text + 0x92C44
	.equiv "FUN_0E213088:collision::CheckBoxLine()", _text + 0x93088
	.equiv "collision::CheckBoxPlane()", _text + 0x93134
	.equiv "collision::CheckCylinderPoint()", _text + 0x93740
	.equiv "collision::CheckCylinderCylinder()", _text + 0x93B20
	.equiv "collision::CheckCylinderPlane()", _text + 0x93CB8
	.equiv "collision::DistSqSegmentToSegment()", _text + 0x942F4
	.equiv "collision::CheckCapsuleCapsule()", _text + 0x94638
	.equiv "collision::CheckCapsulePlane()", _text + 0x94BE8
	.equiv "FUN_0E215000:collision::CheckPlaneLine()", _text + 0x95000
	.equiv "FUN_0E21516C:collision::CheckPlaneLine()", _text + 0x9516C
	.equiv "FUN_0E215D60:FID_conflict:collision::PrimColManager::PrimColManager()", _text + 0x95D60
	.equiv "collision::ShapeColConvex::ShapeColConvex()", _text + 0x97A18
	.equiv "collision::ShapeColConvex::degenerate()", _text + 0x97B60
	.equiv "collision::ShapeColConvex::compute_points()", _text + 0x97BD0
	.equiv "collision::ShapeColConvex::setHitInfoImpl()", _text + 0x97D3C
	.equiv "collision::ShapeColConvex::compute_det()", _text + 0x97E2C
	.equiv "FUN_0E218234:FID_conflict:collision::ShapeColConvex::testValid()", _text + 0x98234
	.equiv "collision::ShapeColConvex::compute_vector()", _text + 0x982B4
	.equiv "FUN_0E218390:FID_conflict:collision::ShapeColConvex::testValid()", _text + 0x98390
	.equiv "collision::ShapeColConvex::testClosest()", _text + 0x98410
	.equiv "collision::ShapeColConvex::proper()", _text + 0x98544
	.equiv "collision::ShapeColConvex::backup_closest()", _text + 0x98594
	.equiv "collision::ShapeColConvex::testIntersection()", _text + 0x98658
	.equiv "FUN_0E219DF0:FID_conflict:collision::PrimColManager::PrimColManager()", _text + 0x99DF0
	.equiv "collision::ShapeColPolytope::ShapeColPolytope()", _text + 0x9A0EC
	.equiv "collision::ShapeColPolytope::updatePoints()", _text + 0x9A1E4
	.equiv "collision::ShapeColPolytope::calcLocalVertexMinMax()", _text + 0x9A2F4
	.equiv "object::DemoCamera::reset()", _text + 0x9AEF0
	.equiv "object::DemoCamera::calcLookAt()", _text + 0x9AFBC
	.equiv "object::DemoCamera::calcTargetFollow()", _text + 0x9B1A0
	.equiv "object::DemoCamera::calcPlayFollow()", _text + 0x9C3C8
	.equiv "object::DemoCamera::lerp3()", _text + 0x9E224
	.equiv "FUN_0E21E258:object::DemoCamera::calcDegZ()", _text + 0x9E258
	.equiv "FUN_0E21E9DC:object::DemoCamera::calcDegZ()", _text + 0x9E9DC
	.equiv "object::DemoCamera::resetVisibleTarget()", _text + 0x9E9F0
	.equiv "object::DemoCamera::calcVisibleTarget()", _text + 0x9EA1C
	.equiv "object::DemoCamera::TargetFollowParam::TargetFollowParam()", _text + 0x9EDD0
	.equiv "void_sead::QuatCalcCommon::slerpToIdx()", _text + 0x9F0A0
	.equiv "void_sead::Matrix33CalcCommon::transposeTo()", _text + 0x9F584
	.equiv "void_sead::Matrix33CalcCommon::makeRIdx()", _text + 0x9F5D0
	.equiv "void_sead::QuatCalcCommon::setAxisRotationIdx()", _text + 0x9F700
	.equiv "void_sead::Matrix33CalcCommon::makeQ()", _text + 0x9F78C
	.equiv "void_sead::Matrix33CalcCommon::setAxisRotationIdx()", _text + 0x9F828
	.equiv "object::DemoCameraAreaDetector::DemoCameraAreaDetector()", _text + 0x9F864
	.equiv "object::DemoCameraAreaDetector::calcAreaIdx()", _text + 0x9F8CC
	.equiv "object::DemoCameraAreaDetector::calc()", _text + 0x9FC4C
	.equiv "object::DemoCameraAreaDetector::onWarp()", _text + 0x9FC60
	.equiv "object::DemoCameraController::DemoCameraController()", _text + 0x9FDD0
	.equiv "object::DemoCameraController::resetObjCollision()", _text + 0xA05E0
	.equiv "object::DemoCameraController::detach()", _text + 0xA0654
	.equiv "object::DemoCameraController::checkDistToWall()", _text + 0xA06EC
	.equiv "object::DemoCameraController::rotateX()", _text + 0xA0A8C
	.equiv "object::DemoCameraController::checkDegX()", _text + 0xA0CA4
	.equiv "object::DemoCameraController::calcAngle()", _text + 0xA1644
	.equiv "object::DemoCameraController::calcCollision()", _text + 0xA19B0
	.equiv "object::DemoCameraController::onWarpCamera()", _text + 0xA1FA4
	.equiv "object::DemoCameraController::updateTopKart()", _text + 0xA2068
	.equiv "object::DemoCameraController::isReplay()", _text + 0xA2268
	.equiv "object::DemoCameraController::changeState()", _text + 0xA2290
	.equiv "object::DemoCameraController::selectReplayCameraData()", _text + 0xA2510
	.equiv "object::DemoCameraController::calcObjCollision()", _text + 0xA2BD8
	.equiv "object::DemoCameraController::attach()", _text + 0xA2EB0
	.equiv "object::DemoCameraController::getSectorHndl()", _text + 0xA3C28
	.equiv "void_sead::Matrix33CalcCommon::inverse()", _text + 0xA4F10
	.equiv "void_sead::Matrix33CalcCommon::slerpToIdx()", _text + 0xA50E8
	.equiv "void_sead::Matrix34CalcCommon::makeRIdx()", _text + 0xA5968
	.equiv "void_sead::Matrix34CalcCommon::getBase()", _text + 0xA5AAC
	.equiv "object::DemoCameraAreaData::DemoCameraAreaData()", _text + 0xA5AD8
	.equiv "object::DemoCameraDirector::updateTargetKartIdx()", _text + 0xA5D14
	.equiv "object::DemoCameraDirector::setEnableShiftCamera()", _text + 0xA5D94
	.equiv "object::DemoCameraDirector::startReplay()", _text + 0xA5DB4
	.equiv "object::DemoCameraDirector::startCourseIntro()", _text + 0xA5EF8
	.equiv "object::DemoCameraDirector::startStartCamera()", _text + 0xA5F84
	.equiv "object::DemoCameraDirector::isStartCamera()", _text + 0xA5FD8
	.equiv "object::DemoCameraDirector::updateShiftCamera()", _text + 0xA6004
	.equiv "object::DemoCameraDirector::startGoalCamera()", _text + 0xA6120
	.equiv "object::DemoCameraDirector::onWindowStateUpdated()", _text + 0xA61C4
	.equiv "object::DemoCameraDirector::setTargetKartIdx()", _text + 0xA64E4
	.equiv "object::DemoCameraDirector::getTargetKartIdx()", _text + 0xA65A0
	.equiv "object::DemoCameraDirector::setLookAtTopKart()", _text + 0xA65C4
	.equiv "object::DemoCameraDirector::getTarget()", _text + 0xA665C
	.equiv "object::DemoCameraDirector::DemoCameraDirector()", _text + 0xA6680
	.equiv "object::DemoCameraDirector::getFollowCameraData()", _text + 0xA68E4
	.equiv "object::DemoCameraDirector::getCameraPlayRate()", _text + 0xA6908
	.equiv "object::DemoCameraDirector::getSectorHndl()", _text + 0xA695C
	.equiv "object::DemoCameraDirector::getDemoCameraTargetPosOfKart()", _text + 0xA69B4
	.equiv "object::DemoCameraDirector::onWarpCamera()", _text + 0xA6A14
	.equiv "object::<unnamed>::compare_path_()", _text + 0xA6A54
	.equiv "object::DemoCameraDirector::createCameraPathData()", _text + 0xA6A68
	.equiv "object::DemoCameraDirector::createCameraAtPathData()", _text + 0xA6B9C
	.equiv "object::DemoCameraDirector::createDummyRail_()", _text + 0xA6CD0
	.equiv "object::DemoCameraDirector::prepare()", _text + 0xA6DBC
	.equiv "object::DemoCameraTarget::Context::reset()", _text + 0xA81F0
	.equiv "object::DemoCameraTarget::reset()", _text + 0xA82C8
	.equiv "object::DemoCameraTarget::DemoCameraTarget()", _text + 0xA8434
	.equiv "object::DemoCameraTarget::getKartPosAtt()", _text + 0xA86F4
	.equiv "object::DemoCameraTarget::getTargetPosAtt()", _text + 0xA8810
	.equiv "object::DemoCameraTarget::getTargetHeight()", _text + 0xA8B2C
	.equiv "object::DemoCameraTarget::getOffsetRatio()", _text + 0xA8BAC
	.equiv "object::DemoCameraTarget::getDriverSizeRatio()", _text + 0xA8C2C
	.equiv "object::DemoCameraTarget::isUpdateOut()", _text + 0xA8CE8
	.equiv "object::DemoCameraTarget::update()", _text + 0xA8D90
	.equiv "object::DemoCameraTarget::getBaseKartIdx()", _text + 0xAABD4
	.equiv "object::DemoCourseIntroCamera::isEnd()", _text + 0xAB0EC
	.equiv "object::DemoCourseIntroCamera::changeData()", _text + 0xAB110
	.equiv "void_sead::QuatCalcCommon::setRPY()", _text + 0xABE3C
	.equiv "object::DemoCrashCamera::calcCameraPos()", _text + 0xAC1D8
	.equiv "object::DemoCrashCamera::fCalc()", _text + 0xAC608
	.equiv "void_sead::QuatCalcCommon::setRPYIdx()", _text + 0xAD2C0
	.equiv "object::DemoDOF::reset()", _text + 0xAD4B8
	.equiv "object::DemoDOF::calcMode()", _text + 0xAD5C0
	.equiv "object::DemoDOF::calc()", _text + 0xAD60C
	.equiv "object::DemoDOF::changeMode()", _text + 0xAD690
	.equiv "object::DemoDOF::updateTargetDist()", _text + 0xAD830
	.equiv "object::DemoDOF::setParam()", _text + 0xADAA4
	.equiv "object::DemoDOF::calcPhysics()", _text + 0xADB80
	.equiv "object::DemoFixedCamera::checkDistToWall()", _text + 0xAE5D8
	.equiv "object::DemoFixedCamera::updatePos()", _text + 0xAE934
	.equiv "object::DemoGoalCamera::calcParam()", _text + 0xAF6C4
	.equiv "object::DemoGoalCamera::fCalc()", _text + 0xB0104
	.equiv "object::DemoHandShake::Generator::Generator()", _text + 0xB0CBC
	.equiv "object::DemoHandShake::DemoHandShake()", _text + 0xB0D98
	.equiv "object::DemoHandShake::Generator::reset()", _text + 0xB0E58
	.equiv "object::DemoHandShake::Generator::setParam()", _text + 0xB0E9C
	.equiv "object::DemoHandShake::reset()", _text + 0xB0ED8
	.equiv "object::DemoHandShake::getHandShakeRatioFovy()", _text + 0xB1068
	.equiv "object::DemoHandShake::getHandShakeRatioMove()", _text + 0xB10B4
	.equiv "object::DemoHandShake::Generator::calc()", _text + 0xB10D4
	.equiv "object::DemoHandShake::Generator::getNoise()", _text + 0xB11AC
	.equiv "object::DemoHandShake::startRumble()", _text + 0xB1204
	.equiv "object::DemoHandShake::calcRumble()", _text + 0xB1230
	.equiv "object::DemoHandShake::calc()", _text + 0xB1374
	.equiv "object::DemoOnBoardCamera::fCalc()", _text + 0xB1F24
	.equiv "object::DemoCameraRail::DemoCameraRail()", _text + 0xB2A08
	.equiv "object::DemoCameraRail::change()", _text + 0xB2A68
	.equiv "object::DemoCameraRail::update()", _text + 0xB2B0C
	.equiv "object::DemoCameraRail::updateFixFrame()", _text + 0xB2C00
	.equiv "object::DemoReplayCamera::initFovy()", _text + 0xB3108
	.equiv "object::DemoReplayCamera::initPath()", _text + 0xB311C
	.equiv "object::DemoReplayCamera::initRotY()", _text + 0xB3174
	.equiv "object::DemoReplayCamera::changeData()", _text + 0xB3188
	.equiv "object::DemoReplayCamera::calcUp()", _text + 0xB378C
	.equiv "object::DemoReplayCamera::calcFollow()", _text + 0xB3860
	.equiv "object::DemoReplayCamera::calcPath()", _text + 0xB397C
	.equiv "object::DemoReplayCamera::calcRotY()", _text + 0xB3BE8
	.equiv "object::DemoReplayCamera::stateFollow()", _text + 0xB3C44
	.equiv "object::DemoReplayCamera::stateFollowPath()", _text + 0xB431C
	.equiv "sead::MathCalcCommon::roundAngle()", _text + 0xB4A08
	.equiv "void_sead::QuatCalcCommon::mul()", _text + 0xB4AA0
	.equiv "object::DemoStartCamera::isEnd()", _text + 0xB4B7C
	.equiv "object::DemoStartCamera::calcParam()", _text + 0xB4BB8
	.equiv "object::DemoStartCamera::fCalc()", _text + 0xB56E0
	.equiv "object::DemoStartPointCamera::checkDistToWall()", _text + 0xB6838
	.equiv "object::DemoStartPointCamera::calcInitTargetPos()", _text + 0xB73A0
	.equiv "FUN_0E238484:object::PointId_object::MuPathAccessorBase::findNearestPtHndl_ByAllSearch()", _text + 0xB8484
	.equiv "object::DemoUtl::FlickerNoise::updateParam()", _text + 0xB8CC8
	.equiv "object::DemoUtl::FlickerNoise::reset()", _text + 0xB8EBC
	.equiv "object::DemoUtl::FlickerNoise::FlickerNoise()", _text + 0xB8FBC
	.equiv "object::DemoUtl::FlickerNoise::update()", _text + 0xB9020
	.equiv "object::DriverBike::DriverBike()", _text + 0xB922C
	.equiv "object::DriverBike::initAnim()", _text + 0xB93C8
	.equiv "object::DriverBike::getHandAnimRatio()", _text + 0xB9938
	.equiv "object::DriverBike::lerpHandMtx()", _text + 0xBA128
	.equiv "object::DriverBike::calcBoneHand()", _text + 0xBA370
	.equiv "object::DriverBike::moveBoneFoot()", _text + 0xBB230
	.equiv "object::DriverBike::calcBoneLeg()", _text + 0xBB460
	.equiv "void_sead::Matrix34CalcCommon::setCol()", _text + 0xBCA2C
	.equiv "void_sead::Matrix34CalcCommon::makeQ()", _text + 0xBCA50
	.equiv "bool_sead::Matrix34CalcCommon::makeVectorRotation()", _text + 0xBCB00
	.equiv "object::DriverKart::setFaceMatAnimGoal()", _text + 0xBCC50
	.equiv "object::DriverKart::setFaceMatAnim()", _text + 0xBCC94
	.equiv "object::DriverKart::moveEye()", _text + 0xBCCFC
	.equiv "object::DriverKart::setFaceAnimFrame()", _text + 0xBD02C
	.equiv "object::DriverKart::setFaceAnim()", _text + 0xBD19C
	.equiv "object::DriverKart::setDriveFaceAnim()", _text + 0xBD340
	.equiv "object::DriverKart::startDriveAnim()", _text + 0xBD390
	.equiv "object::DriverKart::endGoalAnim()", _text + 0xBD9BC
	.equiv "object::DriverKart::startGoalAnim()", _text + 0xBDA14
	.equiv "object::DriverKart::turnHeadToKeepItem()", _text + 0xBE41C
	.equiv "object::DriverKart::calcItemKeep()", _text + 0xBE520
	.equiv "object::DriverKart::resetMoveLean()", _text + 0xBFCA4
	.equiv "object::DriverKart::createRecorder()", _text + 0xC27DC
	.equiv "object::DriverKart::changeCalcLod()", _text + 0xC38FC
	.equiv "object::DriverKart::changeThrowBackLimitFlag()", _text + 0xC3AB8
	.equiv "object::DriverKart::cancelSpAnim()", _text + 0xC3B34
	.equiv "object::DriverKart::endSpAnim()", _text + 0xC3BFC
	.equiv "object::DriverKart::updateEyeMenuRandomWait()", _text + 0xC3C4C
	.equiv "object::DriverKart::calcEyeMenu()", _text + 0xC3CA8
	.equiv "object::DriverKart::calcEyeEquip()", _text + 0xC3DF4
	.equiv "object::DriverKart::calcEyeBlueKoura()", _text + 0xC3E2C
	.equiv "object::DriverKart::calcEyeDashDrift()", _text + 0xC43AC
	.equiv "object::DriverKart::calcEyeDirtDown()", _text + 0xC493C
	.equiv "object::DriverKart::calcEyeLookCamera()", _text + 0xC4E84
	.equiv "object::DriverKart::calcEyeTexSRT()", _text + 0xC553C
	.equiv "object::DriverKart::calcMove()", _text + 0xC5E00
	.equiv "object::DriverKart::resetHornMotion()", _text + 0xC5E10
	.equiv "object::DriverKart::reactHorn()", _text + 0xC5E38
	.equiv "object::DriverKart::calcHornMotion()", _text + 0xC5FB8
	.equiv "object::DriverKart::startShock()", _text + 0xC6598
	.equiv "object::DriverKart::turnHead()", _text + 0xC65D8
	.equiv "object::DriverKart::calcReactHorn()", _text + 0xC6694
	.equiv "object::DriverKart::calcTurnHeadThrow()", _text + 0xC7D14
	.equiv "object::DriverKart::calcTurnHeadDrift()", _text + 0xC8140
	.equiv "object::DriverKart::calcTurnHeadBrakeTurn()", _text + 0xC8328
	.equiv "object::DriverKart::calcTurnHeadJugem()", _text + 0xC8664
	.equiv "object::DriverKart::releaseDirveAnim()", _text + 0xC8E48
	.equiv "object::DriverKart::calcDriveAnim()", _text + 0xC8FD0
	.equiv "object::DriverKart::clearActionAnim()", _text + 0xC9C30
	.equiv "object::DriverKart::setFaceMatAnimAction()", _text + 0xC9C90
	.equiv "object::DriverKart::calcSkeletalAnim()", _text + 0xCA17C
	.equiv "object::DriverKart::calcMaterialAnim()", _text + 0xCAAB0
	.equiv "object::DriverKart::calcShock()", _text + 0xCAD40
	.equiv "object::DriverKart::changeSpAnim()", _text + 0xCB088
	.equiv "object::DriverKart::calcSpAnim()", _text + 0xCB134
	.equiv "object::DriverKart::calcDraw()", _text + 0xCC48C
	.equiv "object::DriverKart::updateModelParam()", _text + 0xCC4A0
	.equiv "object::DriverKart::startThrowAnim()", _text + 0xCC758
	.equiv "object::DriverKart::startDamageAnim()", _text + 0xCC8E4
	.equiv "object::DriverKart::endDamageAnim()", _text + 0xCC928
	.equiv "object::DriverKart::startMenuDecideVoice()", _text + 0xCC99C
	.equiv "object::DriverKart::setStarMatParam()", _text + 0xCCC50
	.equiv "object::DriverKart::getItemKeepMtxAndScale()", _text + 0xCCE04
	.equiv "object::DriverKart::turnHeadToObj()", _text + 0xCD420
	.equiv "object::DriverKart::resetAfterWarp()", _text + 0xCD454
	.equiv "object::DriverKart::extractWaitMotion()", _text + 0xCD4B8
	.equiv "object::DriverKart::initAnim()", _text + 0xCE0D8
	.equiv "object::DriverKart::moveBone()", _text + 0xCE2A8
	.equiv "object::DriverKart::calcBoneSpine()", _text + 0xCE380
	.equiv "object::DriverKart::rotateLocalBone()", _text + 0xCFE58
	.equiv "object::DriverKart::calcBoneScarf()", _text + 0xDAB00
	.equiv "object::DriverKart::clampHandAnimRatio()", _text + 0xDB080
	.equiv "object::DriverKart::transBone()", _text + 0xDB0D4
	.equiv "object::DriverKart::calcBoneHand()", _text + 0xDB1B4
	.equiv "object::DriverKart::calcBoneArm()", _text + 0xDB7B4
	.equiv "void_sead::Matrix34CalcCommon::slerpToIdx()", _text + 0xDEDBC
	.equiv "void_sead::Matrix34CalcCommon::multScaleLocal()", _text + 0xDF63C
	.equiv "void_EffectLinkUserBase::createProperty3()", _text + 0xDF6E8
	.equiv "void_sead::Matrix34CalcCommon::makeR()", _text + 0xDF7E0
	.equiv "gsys::ParticleCB::modelPlacementCalcCallback()", _text + 0xE0108
	.equiv "void_sead::Matrix34CalcCommon::makeRT()", _text + 0xE05A4
	.equiv "gsys::EffectRadialBlurMgr::setRadialBlur()", _text + 0xE0704
	.equiv "gsys::ParticleCB::radialBlurPlacementCalcCallback()", _text + 0xE0974
	.equiv "Sys::ParticleCS::shaderBindCallbackBasic()", _text + 0xE0E8C
	.equiv "Sys::ParticleCS::shaderBindCallbackTurboBasic()", _text + 0xE1970
	.equiv "void_sead::Matrix34CalcCommon::makeSRT()", _text + 0xE2BC0
	.equiv "EffectLinkUserBase::killAllEffect()", _text + 0xE2E38
	.equiv "EffectLinkSlotInfoBase::changeActionSL()", _text + 0xE2FF0
	.equiv "EffectLinkSlotInfoAutoAnim::EffectLinkSlotInfoAutoAnim()", _text + 0xE3058
	.equiv "EffectLinkSlotInfoSkeltal::calc()", _text + 0xE3344
	.equiv "EffectLinkSlotInfoSkeltal::createRecorder()", _text + 0xE34EC
	.equiv "EffectLinkSlotInfoSkeltal::getActionTimer()", _text + 0xE358C
	.equiv "FUN_0E264090:EffectLinkUserBase::isExistAction()", _text + 0xE4090
	.equiv "EffectLinkUserBase::createEffectLink()", _text + 0xE4188
	.equiv "EffectLinkUserBase::createRecorder()", _text + 0xE45D0
	.equiv "EffectLinkUserBase::createRecorderPropertyU8()", _text + 0xE4640
	.equiv "FUN_0E264704:FID_conflict:EffectLinkUserBase::createPropertyTable1()", _text + 0xE4704
	.equiv "FUN_0E264754:FID_conflict:EffectLinkUserBase::createPropertyTable1()", _text + 0xE4754
	.equiv "EffectLinkUserBase::createPropertyTable3()", _text + 0xE47A4
	.equiv "FUN_0E2648C4:EffectLinkUserBase::isExistAction()", _text + 0xE48C4
	.equiv "EffectLinkUserBase::emitEffect()", _text + 0xE4BB4
	.equiv "EffectLinkUserBase::updateProperty()", _text + 0xE4C54
	.equiv "EffectLinkUserBase::calcEffectLink()", _text + 0xE4CAC
	.equiv "ManualEffectHandle::isAlive()", _text + 0xE4FF8
	.equiv "ManualEffectHandle::search()", _text + 0xE50D8
	.equiv "ManualEffectHandle::setLocater()", _text + 0xE50F0
	.equiv "ManualEffectHandle::emit()", _text + 0xE5118
	.equiv "ManualEffectHandle::emitOverWrite()", _text + 0xE5258
	.equiv "FUN_0E265414:ManualEffectHandle::emitOneShot()", _text + 0xE5414
	.equiv "FUN_0E265564:ManualEffectHandle::emitOneShot()", _text + 0xE5564
	.equiv "FUN_0E265638:ManualEffectHandle::emitOneShot()", _text + 0xE5638
	.equiv "FUN_0E2656D4:ManualEffectHandle::_emitOneShot()", _text + 0xE56D4
	.equiv "FUN_0E265838:ManualEffectHandle::_emitOneShot()", _text + 0xE5838
	.equiv "FUN_0E265918:ManualEffectHandle::_emitOneShot()", _text + 0xE5918
	.equiv "ManualEffectHandle::getEmitterController()", _text + 0xE59D8
	.equiv "render::EffectManager::EffectManager()", _text + 0xE7398
	.equiv "render::EffectManager::loadCommonResource_()", _text + 0xE7430
	.equiv "render::EffectManager::loadCourseResource_()", _text + 0xE78D8
	.equiv "render::EffectManager::startAllEffectSlow()", _text + 0xE7B40
	.equiv "render::EffectSystem::EffectSystem()", _text + 0xE8324
	.equiv "render::EffectSystem::createInstance()", _text + 0xE84B8
	.equiv "object::KartEffect::createKartTireEffect()", _text + 0xE8684
	.equiv "object::KartEffect::convetTireInfoToIdx()", _text + 0xE8708
	.equiv "object::AreaEffect::killAreaEffect()", _text + 0xE8728
	.equiv "object::AreaEffect::killAllManualEmitEffect()", _text + 0xE87E0
	.equiv "object::AreaEffect::emitAreaEffect()", _text + 0xE8858
	.equiv "object::AreaEffect::fadeAreaEffect()", _text + 0xE88DC
	.equiv "FUN_0E2689B8:object::AreaEffect::calcAreaCamEffect()", _text + 0xE89B8
	.equiv "FUN_0E268F10:object::AreaEffect::calcAreaCamEffect()", _text + 0xE8F10
	.equiv "object::AreaEffect::checkWater()", _text + 0xE8F14
	.equiv "object::GameEffectDirector::getKartChassisEffect()", _text + 0xE9054
	.equiv "object::GameEffectDirector::isAliveKinokoBlur()", _text + 0xE9090
	.equiv "object::AreaEffect::createScreenWater()", _text + 0xE917C
	.equiv "object::GameEffectDirector::killBlurEffect()", _text + 0xE91B4
	.equiv "object::AreaEffect::calc()", _text + 0xE9678
	.equiv "FUN_0E269704:object::AreaEffect::calcMoveAreaEffect()", _text + 0xE9704
	.equiv "FUN_0E2698E8:object::AreaEffect::calcMoveAreaEffect()", _text + 0xE98E8
	.equiv "object::AreaEffect::createAreaEffectMulti()", _text + 0xE98EC
	.equiv "object::AreaEffect::calcAreaEnvEffect()", _text + 0xEA3C4
	.equiv "object::AreaEffect::setCameraMatrix()", _text + 0xEA5B0
	.equiv "object::AreaEffect::calcScreenCold()", _text + 0xEA884
	.equiv "object::AreaEffect::calcScreenWater()", _text + 0xEA8CC
	.equiv "object::GameEffectDirector::GameEffectDirector()", _text + 0xEA9A8
	.equiv "object::GameEffectDirector::updateView()", _text + 0xEADB4
	.equiv "object::GameEffectDirector::calcEffectMakerOutput()", _text + 0xEAEC0
	.equiv "object::GameEffectDirector::setKartEffectVisibleDirect()", _text + 0xEAFC0
	.equiv "object::GameEffectDirector::clipAllTire()", _text + 0xEB020
	.equiv "object::GameEffectDirector::calcKartEffectGroup()", _text + 0xEB0A4
	.equiv "object::GameEffectDirector::updateScreenEffectVisible()", _text + 0xEBB64
	.equiv "object::GameEffectDirector::calcAreaEffect()", _text + 0xEBD64
	.equiv "object::GameEffectDirector::createKartTireEffect()", _text + 0xEBF50
	.equiv "object::GameEffectDirector::getKartTireEffect()", _text + 0xEBFC0
	.equiv "object::GameEffectDirector::resetAllTire()", _text + 0xEC000
	.equiv "object::GameEffectDirector::getEffectDetailLv()", _text + 0xEC1AC
	.equiv "object::GameEffectDirector::createGessoTrig()", _text + 0xEC480
	.equiv "object::GameEffectDirector::fadeGessoTrig()", _text + 0xEC4B8
	.equiv "object::GameEffectDirector::createCoinGet()", _text + 0xEC538
	.equiv "object::GameEffectDirector::createWaterSplashInEffect()", _text + 0xEC608
	.equiv "object::GameEffectDirector::createHitKart()", _text + 0xEC670
	.equiv "object::GameEffectDirector::createWallHit()", _text + 0xEC788
	.equiv "object::GameEffectDirector::createSpinTrig()", _text + 0xEC8D0
	.equiv "object::GameEffectDirector::createJugemRescue()", _text + 0xECA48
	.equiv "object::GameEffectDirector::createStartDashMissTrig()", _text + 0xECA80
	.equiv "object::GameEffectDirector::createJumpActionEffect()", _text + 0xECAD4
	.equiv "object::GameEffectDirector::isInWater()", _text + 0xECB80
	.equiv "object::GameEffectDirector::getWaterDepth()", _text + 0xECB90
	.equiv "object::GameEffectDirector::isColdEffect()", _text + 0xECBA0
	.equiv "object::GameEffectDirector::changeCamera()", _text + 0xECBB0
	.equiv "object::FieldDirector::convertTrailInfo_()", _text + 0xEDD24
	.equiv "object::FieldDirector::prepareFinal()", _text + 0xEE2E8
	.equiv "object::FieldDirector::getRhythmType_()", _text + 0xEE418
	.equiv "object::FieldDirector::setupRhythmMaterialAnimation_()", _text + 0xEE43C
	.equiv "object::FieldDirector::hasRandomAnimationSuffix_()", _text + 0xEE734
	.equiv "object::FieldDirector::setupCommonMaterialAnimation_()", _text + 0xEE8E8
	.equiv "object::FieldDirector::setupScreen_()", _text + 0xEEF44
	.equiv "object::FieldDirector::initFieldModelName_()", _text + 0xEEFE0
	.equiv "FUN_0E272760:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0xF2760
	.equiv "FUN_0E2728A0:FID_conflict:void_EffectLinkUserBase::createELinkSlotSimple()", _text + 0xF28A0
	.equiv "FUN_0E2729E0:object::Recorder_*object::CreateRecorderF32NoCompFamily()", _text + 0xF29E0
	.equiv "FUN_0E272B60:FID_conflict:object::Recorder_*object::CreateRecorderF32CompFamily()", _text + 0xF2B60
	.equiv "FUN_0E272D90:FID_conflict:object::Recorder_*object::CreateRecorderF32CompFamily()", _text + 0xF2D90
	.equiv "FUN_0E272FC0:FID_conflict:object::Recorder_*object::CreateRecorderF32CompFamily()", _text + 0xF2FC0
	.equiv "FUN_0E2731F0:FID_conflict:object::Recorder_*object::CreateRecorderF32CompFamily()", _text + 0xF31F0
	.equiv "FUN_0E273420:object::Recorder_*object::CreateRecorderF32Family()", _text + 0xF3420
	.equiv "FUN_0E273780:object::Recorder_*object::CreateRecorderF32Family()", _text + 0xF3780
	.equiv "FUN_0E273784:void_object::MuPathAccessorBase::calc_AllPoint_()", _text + 0xF3784
	.equiv "FUN_0E273C24:void_object::MuPathAccessorBase::calc_Sector_AirNrm_()", _text + 0xF3C24
	.equiv "FUN_0E27449C:float_object::MuPathAccessorBase::calcPointCosineAndAxis_()", _text + 0xF449C
	.equiv "FUN_0E274850:void_object::MuPathAccessorBase::calc_Length_Dir_DotNormal_Branch_()", _text + 0xF4850
	.equiv "FUN_0E2761CC:void_object::MuPathAccessorBase::calc_Cosine_()", _text + 0xF61CC
	.equiv "FUN_0E27674C:FID_conflict:void_object::MuPathAccessorBase::calcStartPoint_()", _text + 0xF674C
	.equiv "FUN_0E276838:void_object::MuPathAccessorBase::setup()", _text + 0xF6838
	.equiv "FID_conflict:void_object::MuAccessorBase::construct()", _text + 0xF68CC
	.equiv "object::FieldGndCol::FieldGndCol()", _text + 0xF6C98
	.equiv "object::Jugem::setViewIndex()", _text + 0xF8240
	.equiv "object::JugemRod::reset()", _text + 0xF8380
	.equiv "object::JugemRod::setLimit()", _text + 0xF85EC
	.equiv "object::Jugem::enter()", _text + 0xF86A4
	.equiv "object::Jugem::getKartCamPos()", _text + 0xF8DC8
	.equiv "object::Jugem::getKartCamUp()", _text + 0xF8DF8
	.equiv "object::Jugem::getKartCamAt()", _text + 0xF8E28
	.equiv "object::JugemRod::JugemRod()", _text + 0xF967C
	.equiv "object::JugemRod::calc()", _text + 0xF974C
	.equiv "object::JugemString::reset()", _text + 0xF9F54
	.equiv "object::Jugem::setupSwitch_()", _text + 0xFA094
	.equiv "object::Jugem::startCountdown()", _text + 0xFA998
	.equiv "object::Jugem::setJugemScale()", _text + 0xFAA84
	.equiv "object::Jugem::clearJugemCoin_()", _text + 0xFAAAC
	.equiv "object::Jugem::stateInitIdle()", _text + 0xFAB2C
	.equiv "object::Jugem::stateExitIdle()", _text + 0xFAC5C
	.equiv "object::Jugem::startLift()", _text + 0xFADA8
	.equiv "object::Jugem::endLift()", _text + 0xFAE30
	.equiv "object::Jugem::startBreaking()", _text + 0xFAE80
	.equiv "object::Jugem::getKartPos()", _text + 0xFAEB0
	.equiv "object::Jugem::getPrevBoardColPosL()", _text + 0xFAED8
	.equiv "object::Jugem::afterApplyAnimation()", _text + 0xFB09C
	.equiv "object::Jugem::calcRod_()", _text + 0xFBE64
	.equiv "object::Jugem::moveBone_()", _text + 0xFC8B0
	.equiv "object::Jugem::calcBoneHead_()", _text + 0xFC9C0
	.equiv "object::Jugem::afterModelUpdate()", _text + 0xFD0D8
	.equiv "object::Jugem::calcDir_()", _text + 0xFDEEC
	.equiv "object::Jugem::initStep_()", _text + 0xFE490
	.equiv "object::Jugem::calcSineCurve()", _text + 0xFE844
	.equiv "object::Jugem::calcSteps_()", _text + 0xFE8F4
	.equiv "object::Jugem::stateLift()", _text + 0xFF1D0
	.equiv "object::Jugem::stateInitWait()", _text + 0xFFB48
	.equiv "object::Jugem::stateInitForceOut()", _text + 0xFFDA0
	.equiv "FUN_0E2814A4:bool_EffectLinkUserBase::isExistAction()", _text + 0x1014A4
	.equiv "FUN_0E281618:void_EffectLinkUserBase::createProperty1()", _text + 0x101618
	.equiv "object::JugemDirector::JugemDirector()", _text + 0x101940
	.equiv "object::JugemDirector::getJugem()", _text + 0x101ABC
	.equiv "object::JugemDirector::startSignal()", _text + 0x101B10
	.equiv "object::JugemDirector::updateView()", _text + 0x101B68
	.equiv "object::JugemDirector::startCountdown()", _text + 0x101C88
	.equiv "object::JugemDirector::prepareBeforeStructure()", _text + 0x101D10
	.equiv "object::JugemMove::getKartCamPos()", _text + 0x1026E8
	.equiv "object::JugemMove::reset()", _text + 0x10270C
	.equiv "object::JugemMove::prepare()", _text + 0x1027D0
	.equiv "object::JugemMove::JugemMove()", _text + 0x10285C
	.equiv "object::JugemMove::getCameraMtx()", _text + 0x10297C
	.equiv "object::JugemMove::calcWave()", _text + 0x1029A0
	.equiv "object::JugemMove::getKartCamUp()", _text + 0x102A38
	.equiv "object::JugemMove::calcPosture()", _text + 0x102A5C
	.equiv "object::JugemMove::checkCollision_againstMapObj()", _text + 0x102B70
	.equiv "object::JugemMove::checkCollision_againstField()", _text + 0x102F44
	.equiv "object::JugemMove::checkCollision()", _text + 0x10309C
	.equiv "object::JugemMove::calc()", _text + 0x103338
	.equiv "object::JugemMove::checkGndCol()", _text + 0x103B70
	.equiv "object::JugemMove::setPosFromTrans()", _text + 0x104038
	.equiv "FUN_0E2842E4:object::JugemMove::setTargetPosFromTrans()", _text + 0x1042E4
	.equiv "object::JugemMove::getKartCamAt()", _text + 0x104300
	.equiv "object::JugemMove::setTargetDir()", _text + 0x104324
	.equiv "object::JugemMove::isLost()", _text + 0x1046FC
	.equiv "object::MuAreaCalcBase::MuAreaCalcBase()", _text + 0x1049EC
	.equiv "object::MuAreaCalcBox::MuAreaCalcBox()", _text + 0x104B1C
	.equiv "object::MuAreaCalcBox::isInsideShape()", _text + 0x104BD8
	.equiv "object::MuAreaCalcCylinder::MuAreaCalcCylinder()", _text + 0x104CC8
	.equiv "object::MuArea::MuArea()", _text + 0x104E98
	.equiv "object::MuArea::createAreaCalc()", _text + 0x104F64
	.equiv "object::MuArea::loadByaml()", _text + 0x10503C
	.equiv "object::MuAreaAccessor::setup()", _text + 0x1051AC
	.equiv "object::MuClipArea::MuClipArea()", _text + 0x1053F4
	.equiv "object::MuClipAreaAccessor::setupClip()", _text + 0x1055D0
	.equiv "object::MuEffectArea::MuEffectArea()", _text + 0x105818
	.equiv "FUN_0E285A8C:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x105A8C
	.equiv "FUN_0E285AEC:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x105AEC
	.equiv "object::MuCameraBase::MuCameraBase()", _text + 0x105B4C
	.equiv "object::MuReplayCamera::MuReplayCamera()", _text + 0x105D10
	.equiv "object::MuIntroCamera::MuIntroCamera()", _text + 0x105EC0
	.equiv "object::MuCommonPath::MuCommonPath()", _text + 0x10630C
	.equiv "object::MuCommonPath::getRail()", _text + 0x10650C
	.equiv "void_sead::Matrix33CalcCommon::makeR()", _text + 0x106664
	.equiv "object::MuEnemyPathAccessor::MuEnemyPathAccessor()", _text + 0x106904
	.equiv "FUN_0E286AFC:void_object::MuAccessorBase::construct()", _text + 0x106AFC
	.equiv "object::MuGlidePoint::MuGlidePoint()", _text + 0x106CEC
	.equiv "object::MuGlidePath::MuGlidePath()", _text + 0x106EEC
	.equiv "object::MuGlidePath::init_CarrierCar()", _text + 0x107164
	.equiv "object::MuGlidePathAccessor::construct()", _text + 0x107270
	.equiv "object::MuGlidePathAccessor::getObj_CarrierCar()", _text + 0x107420
	.equiv "void_sead::Matrix33CalcCommon::getCol()", _text + 0x1075C4
	.equiv "FUN_0E28761C:FID_conflict:object::MuPullPath::MuPullPath()", _text + 0x10761C
	.equiv "object::MuGCameraPath::loadByaml()", _text + 0x107698
	.equiv "object::MuGCameraPath::findSector()", _text + 0x107830
	.equiv "object::MuGravityPath::MuGravityPath()", _text + 0x1078E0
	.equiv "object::MuGravityPath::loadByaml()", _text + 0x10796C
	.equiv "object::MuGravityPath::findSector()", _text + 0x107B30
	.equiv "object::MuGravityPathAccessor::setGCameraPath()", _text + 0x107BE0
	.equiv "object::MuGravityPathAccessor::findSector()", _text + 0x107C34
	.equiv "object::MuGravityPathAccessor::calcGravityDir()", _text + 0x107CDC
	.equiv "object::GetLapPathAccessor()", _text + 0x108140
	.equiv "object::FindSector()", _text + 0x108154
	.equiv "object::Sector_GetTotalDataNum()", _text + 0x1081B4
	.equiv "object::Sector_GetSector()", _text + 0x1081D8
	.equiv "object::Sector_GetNearPointArray()", _text + 0x10821C
	.equiv "object::GetMapObjResFiles()", _text + 0x108700
	.equiv "object::GetByamlRawData()", _text + 0x10884C
	.equiv "object::GetEnemyPathAccessor()", _text + 0x108860
	.equiv "object::Sector_IsValid()", _text + 0x108874
	.equiv "object::FindNearestEnemyPtHndlFromSector()", _text + 0x1088A4
	.equiv "object::FindNearestEnemyPtHndlFromKart()", _text + 0x1089E8
	.equiv "object::FindNearestEnemyPtHndl_ByAllSearch()", _text + 0x108A84
	.equiv "object::GetNearestPosOnAIPathByEnemyPtHndl()", _text + 0x108AE0
	.equiv "object::GetNearestPosOnAIPath()", _text + 0x108B68
	.equiv "object::GetEnemyPathAccessor_Reverse()", _text + 0x108C0C
	.equiv "object::GetItemPathAccessor()", _text + 0x108C1C
	.equiv "object::FindNearestItemPtHndlFromSector()", _text + 0x108C30
	.equiv "object::FindNearestItemPtHndlFromKart()", _text + 0x108D8C
	.equiv "object::FindNearestItemPtHndl_ByAllSearch()", _text + 0x108E28
	.equiv "object::GetNearestPosOnItemPath()", _text + 0x108E84
	.equiv "FUN_0E288F44:object::Copy_ForReversePath()", _text + 0x108F44
	.equiv "FUN_0E289054:object::Copy_ForReversePath()", _text + 0x109054
	.equiv "FUN_0E289164:object::Copy_ForReversePath()", _text + 0x109164
	.equiv "object::FindSectorAll()", _text + 0x109270
	.equiv "object::GetGravityPathAccessor()", _text + 0x1092A4
	.equiv "object::CalcGravityDir()", _text + 0x1092B8
	.equiv "object::GetAreaAccessor()", _text + 0x10935C
	.equiv "object::GetStartPointAccessor()", _text + 0x1093A4
	.equiv "object::GetMapObjAccessor()", _text + 0x1093B8
	.equiv "object::GetClipAreaAccessor()", _text + 0x1093CC
	.equiv "object::GetEffectAreaAccessor()", _text + 0x1093E0
	.equiv "object::GetReplayCameraAccessor()", _text + 0x1093F4
	.equiv "object::GetIntroCameraAccessor()", _text + 0x109408
	.equiv "object::GetCommonPathAccessor()", _text + 0x10941C
	.equiv "object::GetGlidePathAccessor()", _text + 0x109430
	.equiv "object::GetJugemPathAccessor()", _text + 0x109444
	.equiv "object::GetPullPathAccessor()", _text + 0x109458
	.equiv "object::Sector_GetStartSectorHndl()", _text + 0x10946C
	.equiv "object::Sector_GetObj()", _text + 0x1094A4
	.equiv "object::EnemyPath_GetObj()", _text + 0x1094D4
	.equiv "FUN_0E2896AC:object::PointId_object::MuPathAccessorBase::findNearestPtHndl()", _text + 0x1096AC
	.equiv "FUN_0E28A1C0:object::PointId_object::MuPathAccessorBase::findNearestPtHndl_ByAllSearch()", _text + 0x10A1C0
	.equiv "FUN_0E28A2AC:void_object::MuPathAccessorBase::getNearestPosOnPath()", _text + 0x10A2AC
	.equiv "FUN_0E28A6CC:object::PointId_object::MuPathAccessorBase::findNearestPtHndl()", _text + 0x10A6CC
	.equiv "FUN_0E28B1D8:void_object::MuPathAccessorBase::getNearestPosOnPath()", _text + 0x10B1D8
	.equiv "object::MuInfo::MuInfo()", _text + 0x10B5F8
	.equiv "object::MuInfo::load()", _text + 0x10B6A4
	.equiv "object::MuInfo::getMapObjIdList()", _text + 0x10C454
	.equiv "bool_al::tryGetByamlEnumByKey()", _text + 0x10C7A8
	.equiv "FUN_0E28C808:void_object::MuAccessorBase::construct()", _text + 0x10C808
	.equiv "object::MuItemPathAccessor::MuItemPathAccessor()", _text + 0x10D534
	.equiv "FUN_0E28D72C:void_object::MuAccessorBase::construct()", _text + 0x10D72C
	.equiv "object::MuKartPoint::MuKartPoint()", _text + 0x10D8DC
	.equiv "<unnamed>::compareCustomId()", _text + 0x10E040
	.equiv "object::MuStartPointAccessor::calcStartPoint_Battle()", _text + 0x10E0C0
	.equiv "object::MuStartPointAccessor::calcStartPoint_GP()", _text + 0x10E3C0
	.equiv "object::MuLapPath::MuLapPath()", _text + 0x10EF4C
	.equiv "object::MuLapPath::setupLink()", _text + 0x10F334
	.equiv "object::MuLapPath::calcDistance()", _text + 0x10F3DC
	.equiv "object::MuLapPath::clearFindFlag()", _text + 0x10F4DC
	.equiv "object::MuLapPath::clearCheckFlag()", _text + 0x10F520
	.equiv "object::MuLapPath::isSibling()", _text + 0x10F564
	.equiv "object::MuLapPath::setSectorHndl()", _text + 0x10F6C8
	.equiv "object::MuLapPath::setupBaseRatio()", _text + 0x10F710
	.equiv "object::MuLapPath::setEndDistance()", _text + 0x10F858
	.equiv "object::MuLapPath::setStartDistance()", _text + 0x10F86C
	.equiv "object::MuLapPath::setMinSectorNum()", _text + 0x10F984
	.equiv "object::MuLapPath::calcTotalLength()", _text + 0x10FA44
	.equiv "object::MuLapPath::getGravityPath()", _text + 0x10FAA0
	.equiv "object::MuLapPathAccessor::MuLapPathAccessor()", _text + 0x10FAF0
	.equiv "object::MuLapPathAccessor::setup_Link()", _text + 0x10FC10
	.equiv "object::MuLapPathAccessor::searchStartSector()", _text + 0x10FD70
	.equiv "object::MuLapPathAccessor::searchEndSector()", _text + 0x10FE78
	.equiv "object::MuLapPathAccessor::setup_CheckPoint()", _text + 0x10FF80
	.equiv "object::MuLapPathAccessor::setup_DistanceAndRatio()", _text + 0x110464
	.equiv "object::MuLapPathAccessor::setup()", _text + 0x11056C
	.equiv "object::MuLapPathAccessor::setupMuPoint()", _text + 0x110614
	.equiv "object::MuLapPathAccessor::clearFindFlag()", _text + 0x110968
	.equiv "object::MuLapPathAccessor::clearCheckFlag()", _text + 0x1109B8
	.equiv "object::MuLapPathAccessor::setCheckFlagAll()", _text + 0x110A08
	.equiv "object::MuLapPathAccessor::pushBackNextSector()", _text + 0x111208
	.equiv "object::MuLapPathAccessor::pushBackPrevSector()", _text + 0x111328
	.equiv "object::MuLapPathAccessor::calcDistanceBetween()", _text + 0x111448
	.equiv "object::MuLapPathAccessor::isSeperated()", _text + 0x111580
	.equiv "object::MuLapPathAccessor::countCheckFlag()", _text + 0x1118B0
	.equiv "object::MuLapPathAccessor::getMinSectorNum()", _text + 0x111938
	.equiv "object::MuLapPathAccessor::getRequiredCheckPoint()", _text + 0x111A7C
	.equiv "object::MuLapPathAccessor::findSector()", _text + 0x111B90
	.equiv "object::MuLapPathAccessor::findSectorAll()", _text + 0x111EC8
	.equiv "object::MuLapPathAccessor::getAllNearSector()", _text + 0x112130
	.equiv "object::MuLapPathAccessor::isNeighborSector()", _text + 0x1123AC
	.equiv "object::MuLapPathAccessor::isExistSector()", _text + 0x11257C
	.equiv "object::MuLapPathAccessor::getLapCheckRatio()", _text + 0x1125BC
	.equiv "FUN_0E292600:object::MuLapPathAccessor::calcRatio()", _text + 0x112600
	.equiv "FUN_0E292624:object::MuLapPathAccessor::calcRatio()", _text + 0x112624
	.equiv "FUN_0E29299C:void_object::MuAccessorBase::construct()", _text + 0x11299C
	.equiv "object::MuMapObj::MuMapObj()", _text + 0x112AE0
	.equiv "object::MuMapObjAccessor::setPath()", _text + 0x113328
	.equiv "object::MuMapObjAccessor::setArea()", _text + 0x1133A0
	.equiv "object::MuMapObjAccessor::setup()", _text + 0x1133F4
	.equiv "object::MuMapObjAccessor::search()", _text + 0x113444
	.equiv "object::MuMapObjAccessor::searchAll()", _text + 0x113498
	.equiv "object::MuMapObjAccessor::searchAllNum()", _text + 0x113574
	.equiv "object::MuMapObjAccessor::searchAllForManager()", _text + 0x1135C4
	.equiv "object::MuObjPoint::setNextIndex()", _text + 0x1138EC
	.equiv "object::MuObjPath::MuObjPath()", _text + 0x11394C
	.equiv "object::MuPointBase::tryGetByamlLinkPt_()", _text + 0x114244
	.equiv "object::MuPointBase::getCosine()", _text + 0x114404
	.equiv "FUN_0E29489C:FID_conflict:object::MuPullPath::MuPullPath()", _text + 0x11489C
	.equiv "object::MuPullPath::loadByaml()", _text + 0x114918
	.equiv "object::MuSoundPoint::MuSoundPoint()", _text + 0x114E7C
	.equiv "FUN_0E295328:dash::create_actor_alone()", _text + 0x115328
	.equiv "object::SReturnPoint::calcMtx()", _text + 0x1154E4
	.equiv "object::SectorBase::SectorBase()", _text + 0x115544
	.equiv "object::SectorBase::calcRatioInSector()", _text + 0x1157A4
	.equiv "object::SectorBase::calcRatioAndInsideCheck()", _text + 0x1158C8
	.equiv "object::Sector::setupLink()", _text + 0x116188
	.equiv "object::Sector::calcReturnMtx()", _text + 0x1164C4
	.equiv "object::Sector::isNextSector()", _text + 0x116630
	.equiv "object::Sector::isPrevSector()", _text + 0x1166A0
	.equiv "object::GravitySector::GravitySector()", _text + 0x116710
	.equiv "object::GCameraSector::GCameraSector()", _text + 0x116800
	.equiv "object::PullSector::setDirZ()", _text + 0x1169AC
	.equiv "object::FieldSubMeshCulling::disableStartClip()", _text + 0x116B60
	.equiv "FUN_0E296B84:object::FieldSubMeshCulling::checkInside()", _text + 0x116B84
	.equiv "object::FieldSubMeshCulling::create()", _text + 0x11701C
	.equiv "FUN_0E297520:object::FieldSubMeshCulling::checkInside()", _text + 0x117520
	.equiv "object::FieldSubMeshCulling::setVisibleObject()", _text + 0x117610
	.equiv "object::FieldSubMeshCulling::setEnable()", _text + 0x117684
	.equiv "object::FieldSubMeshCulling::reset()", _text + 0x117718
	.equiv "object::FieldSubMeshCulling::enter()", _text + 0x11775C
	.equiv "object::FieldSubMeshCulling::calc()", _text + 0x117994
	.equiv "object::FieldSubMeshCulling::beginStartClip()", _text + 0x117D04
	.equiv "object::ItemDirector::ItemDirector()", _text + 0x117ED0
	.equiv "object::ItemDirector::createModelParticle_()", _text + 0x118BAC
	.equiv "object::ItemDirector::prepareAfterStructure()", _text + 0x118E50
	.equiv "object::ItemDirector::isReplay()", _text + 0x119214
	.equiv "object::ItemDirector::isNetSend()", _text + 0x11924C
	.equiv "object::ItemDirector::getDirector_FromItemType()", _text + 0x119270
	.equiv "object::ItemDirector::getDirector_FromItemSlot()", _text + 0x11978C
	.equiv "object::ItemDirector::getEquipDirector_()", _text + 0x1197D8
	.equiv "object::ItemDirector::resetItemAppearCnt()", _text + 0x11980C
	.equiv "object::ItemDirector::useStockItem()", _text + 0x119824
	.equiv "object::ItemDirector::keepToActivateItem()", _text + 0x1198F4
	.equiv "object::ItemDirector::calcKeyInput_EachPlayer_()", _text + 0x119B00
	.equiv "object::ItemDirector::get_ReactItemType()", _text + 0x11A6E8
	.equiv "object::ItemDirector::getEachReaction_()", _text + 0x11A924
	.equiv "object::ItemDirector::playReactSE()", _text + 0x11AF1C
	.equiv "object::ItemDirector::doReaction_()", _text + 0x11B098
	.equiv "object::ItemDirector::solveCollision_()", _text + 0x11B870
	.equiv "object::ItemDirector::calcCollision_()", _text + 0x11BA8C
	.equiv "object::ItemDirector::calcBefore()", _text + 0x11C45C
	.equiv "object::ItemDirector::calc()", _text + 0x11C628
	.equiv "object::ItemDirector::getEntryNum_InType()", _text + 0x11C81C
	.equiv "object::ItemDirector::getEntryNumArray_InType()", _text + 0x11C85C
	.equiv "object::ItemDirector::getNumInStockArray_InType()", _text + 0x11C8D0
	.equiv "FUN_0E29CA64:FID_conflict:object::ItemDirector::getEquipNum_InType()", _text + 0x11CA64
	.equiv "FUN_0E29CAA4:FID_conflict:object::ItemDirector::getNumInEquipArray_InType()", _text + 0x11CAA4
	.equiv "object::ItemDirector::getKeepNum_InType()", _text + 0x11CB18
	.equiv "object::ItemDirector::getNumInKeepArray_InType()", _text + 0x11CB5C
	.equiv "FUN_0E29CBF0:FID_conflict:object::ItemDirector::getEquipNum_InType()", _text + 0x11CBF0
	.equiv "FUN_0E29CC30:FID_conflict:object::ItemDirector::getNumInEquipArray_InType()", _text + 0x11CC30
	.equiv "FUN_0E29CCA4:FID_conflict:object::ItemDirector::getEquipNum_InType()", _text + 0x11CCA4
	.equiv "FUN_0E29CCE4:FID_conflict:object::ItemDirector::getNumInEquipArray_InType()", _text + 0x11CCE4
	.equiv "object::ItemDirector::_isReserveEight()", _text + 0x11CD58
	.equiv "object::ItemDirector::calcInvalidFlag_()", _text + 0x11CE68
	.equiv "object::ItemDirector::net_GetNextSlot()", _text + 0x11D4AC
	.equiv "object::ItemDirector::slot_StartSlot()", _text + 0x11D550
	.equiv "object::ItemDirector::vanishEquip_Hang()", _text + 0x11D764
	.equiv "object::ItemDirector::vanishEquip_Multi()", _text + 0x11D798
	.equiv "object::ItemDirector::getKeepDirector_()", _text + 0x11D7D8
	.equiv "object::ItemDirector::vanishKeep()", _text + 0x11D820
	.equiv "object::ItemDirector::clearItemSlot()", _text + 0x11D868
	.equiv "object::ItemDirector::getDirector_FromDecidedSlotTable_()", _text + 0x11D920
	.equiv "object::ItemDirector::searchNextEmit()", _text + 0x11DB60
	.equiv "object::ItemDirector::initStandByItem()", _text + 0x11DBB4
	.equiv "object::ItemDirector::resetAllItemForRecord()", _text + 0x11DCDC
	.equiv "object::ItemDirector::push_ColAry_DelWait()", _text + 0x11E048
	.equiv "FID_conflict:object::ItemDirector::push_Ary_Use()", _text + 0x11E138
	.equiv "object::ItemDirector::startKeepItem()", _text + 0x11E164
	.equiv "object::ItemDirector::startEquipMulti()", _text + 0x11E1F8
	.equiv "object::ItemDirector::isLockKouraB()", _text + 0x11E2FC
	.equiv "object::ItemDirector::getPosKouraB()", _text + 0x11E324
	.equiv "object::ItemDirector::setHornEnable()", _text + 0x11E34C
	.equiv "object::ItemDirector::updateColMode()", _text + 0x11E3F8
	.equiv "object::ItemDirector::checkKartHitItem()", _text + 0x11E49C
	.equiv "object::ItemDirector::net_Slot_StartSlot()", _text + 0x11F678
	.equiv "object::ItemDirector::net_Slot_Reset()", _text + 0x11F724
	.equiv "object::ItemDirector::net_GetPinchSlot()", _text + 0x11F7D0
	.equiv "`global_constructor_keyed_to'_16_ItemDirector_cpp_8225c8dd", _text + 0x11F8F4
	.equiv "FUN_0E2A0480:bool_is_derived()", _text + 0x120480
	.equiv "FUN_0E2A0BEC:object::ItemObjBanana::_initMoveParam()", _text + 0x120BEC
	.equiv "FUN_0E2A0C30:object::ItemObjBanana::_initMoveParam()", _text + 0x120C30
	.equiv "object::ItemObjBanana::prepareInner()", _text + 0x120D78
	.equiv "object::ItemObjBanana::calc_HitGnd()", _text + 0x121490
	.equiv "object::ItemObjBanana::playDirectHitSE()", _text + 0x1216C4
	.equiv "object::ItemObjBanana::selfRoll()", _text + 0x1216E8
	.equiv "object::ItemObjBananaDirector::prepareBeforeStructure()", _text + 0x122954
	.equiv "object::ItemObjBase::react_Reflect()", _text + 0x1238DC
	.equiv "object::ItemObjBase::react_Break()", _text + 0x123970
	.equiv "object::ItemObjBase::react_Vanish()", _text + 0x123980
	.equiv "object::ItemObjBase::startStandBy()", _text + 0x1239E0
	.equiv "object::ItemObjBase::_initPlayerParam_InEntry()", _text + 0x1239F8
	.equiv "object::ItemObjBase::entry()", _text + 0x123A0C
	.equiv "FUN_0E2A3C54:object::ItemObjBase::_initEntryCycle()", _text + 0x123C54
	.equiv "FUN_0E2A3CC8:object::ItemObjBase::_initEntryCycle()", _text + 0x123CC8
	.equiv "object::ItemObjBase::calcHasCollision()", _text + 0x123CCC
	.equiv "FUN_0E2A3CEC:object::ItemObjBase::startKeepInner()", _text + 0x123CEC
	.equiv "object::ItemObjBase::startKeep()", _text + 0x123E6C
	.equiv "FUN_0E2A3EDC:object::ItemObjBase::startKeepInner()", _text + 0x123EDC
	.equiv "object::ItemObjBase::getPlayerKart()", _text + 0x123EE0
	.equiv "FUN_0E2A3EFC:object::ItemObjBase::initActivateBase()", _text + 0x123EFC
	.equiv "object::ItemObjBase::_net_EraseItemSync()", _text + 0x123F90
	.equiv "object::ItemObjBase::updateItemOwnerProxy_EquipItemExit()", _text + 0x124018
	.equiv "FUN_0E2A4084:object::ItemObjBase::_setVisibleImpl()", _text + 0x124084
	.equiv "FUN_0E2A4098:object::ItemObjBase::_setVisibleImpl()", _text + 0x124098
	.equiv "object::ItemObjBase::setColMode()", _text + 0x12409C
	.equiv "object::ItemObjBase::_initEndEnterAfterRecord()", _text + 0x1240C0
	.equiv "object::ItemObjBase::_exitBase()", _text + 0x124130
	.equiv "object::ItemObjBase::_exit()", _text + 0x124530
	.equiv "object::ItemObjBase::getKartPose()", _text + 0x124854
	.equiv "object::ItemObjBase::calcHangOffsetZAffectedCollision()", _text + 0x124C24
	.equiv "object::ItemObjBase::getHangOffset()", _text + 0x124C8C
	.equiv "object::ItemObjBase::calc_StateInitSelfMoveImpl()", _text + 0x124E04
	.equiv "FUN_0E2A5968:FID_conflict:object::ItemObjBase::_push_ColAry_Stand()", _text + 0x125968
	.equiv "FUN_0E2A5978:FID_conflict:object::ItemObjBase::_push_ColAry_Stand()", _text + 0x125978
	.equiv "FUN_0E2A5988:FID_conflict:object::ItemObjBase::_push_ColAry_Stand()", _text + 0x125988
	.equiv "object::ItemObjBase::_updateColModeInner()", _text + 0x125998
	.equiv "object::ItemObjBase::updateColMode()", _text + 0x125AE4
	.equiv "object::ItemObjBase::pushExplodeUIPtrArray()", _text + 0x125BEC
	.equiv "object::ItemObjBase::getSoundObj()", _text + 0x125D04
	.equiv "object::ItemObjBase::prepare()", _text + 0x125D20
	.equiv "object::ItemObjBase::_calcBaseBefore()", _text + 0x1261C0
	.equiv "object::ItemObjBase::_calcBaseAfter()", _text + 0x1262C4
	.equiv "object::ItemObjBase::updateKeepMtx()", _text + 0x126938
	.equiv "object::ItemObjBase::setModelDirectionKeep()", _text + 0x126A0C
	.equiv "object::ItemObjBase::isDraw()", _text + 0x126A88
	.equiv "object::ItemObjBase::_calcImpl()", _text + 0x126AF8
	.equiv "object::ItemObjBase::_net_RecoverDelay()", _text + 0x126CAC
	.equiv "object::ItemObjBase::isNotSearchKart()", _text + 0x126D9C
	.equiv "object::ItemObjBase::getKartModelPose()", _text + 0x126E28
	.equiv "object::ItemObjBase::getKartModelPosePure()", _text + 0x1272E8
	.equiv "object::ItemObjBase::getKartPoseForHang()", _text + 0x127748
	.equiv "object::ItemObjBase::_setState_SelfMoveImpl()", _text + 0x127F54
	.equiv "object::ItemObjBase::_setReleaseCnt()", _text + 0x1280B0
	.equiv "object::ItemObjBase::drop()", _text + 0x1281C4
	.equiv "object::ItemObjBase::setState_SelfMove()", _text + 0x128F9C
	.equiv "object::ItemObjBase::scalingAndVanishAfterGoal()", _text + 0x12903C
	.equiv "object::ItemObjBase::updateExtraForce()", _text + 0x1290EC
	.equiv "object::ItemObjBase::calc_stateSelfMoveImplNotShell()", _text + 0x129CC0
	.equiv "object::ItemObjBase::setVisibleMaster()", _text + 0x129E40
	.equiv "object::ItemObjBase::resetForRecord()", _text + 0x129FE0
	.equiv "object::ItemObjBase::isSameTeam()", _text + 0x12A064
	.equiv "object::ItemObjBase::getTopPlayerID()", _text + 0x12A1F0
	.equiv "object::ItemObjBase::getSelfMoveImplFrame()", _text + 0x12A3C0
	.equiv "object::ItemObjBase::updateAntiG()", _text + 0x12A594
	.equiv "object::ItemObjBase::affectGravity()", _text + 0x12A798
	.equiv "object::ItemObjBase::changeSkeltalAnmDefault()", _text + 0x12A8F4
	.equiv "object::ItemObjBase::setModelDirectionGravity()", _text + 0x12A934
	.equiv "object::ItemObjBase::setModelDirectionGnd()", _text + 0x12ACC0
	.equiv "object::ItemObjBase::calcThrowVelDir()", _text + 0x12C498
	.equiv "object::ItemObjBase::createDecalAO()", _text + 0x12C804
	.equiv "object::ItemObjBase::calcCollisionStateByHang()", _text + 0x12CB08
	.equiv "FUN_0E2AE5EC:object::ItemObjBase::initActivateBase()", _text + 0x12E5EC
	.equiv "object::ItemObjBase::isStandBy()", _text + 0x12EAE8
	.equiv "object::ItemObjBase::changeKeepToSelfMove()", _text + 0x12EAF8
	.equiv "object::ItemObjBase::changeKeepToEquip()", _text + 0x12EC04
	.equiv "object::ItemObjBase::isStandByKeepToHang()", _text + 0x12EC8C
	.equiv "object::ItemObjBase::net_SetState_SelfMove_Force()", _text + 0x12EE10
	.equiv "object::ItemObjBase::requestTrgKartSE()", _text + 0x12F1B0
	.equiv "`global_constructor_keyed_to'_15_ItemObjBase_cpp_8225c8dd", _text + 0x12F330
	.equiv "FUN_0E2B0660:bool_EffectLinkUserBase::isExistAction()", _text + 0x130660
	.equiv "FUN_0E2B07D4:void_EffectLinkUserBase::createProperty1()", _text + 0x1307D4
	.equiv "object::ItemObjBomhei::_initMoveParam()", _text + 0x130BF0
	.equiv "object::ItemObjBomhei::prepareInner()", _text + 0x13118C
	.equiv "object::ItemObjBomhei::enterEntryInner()", _text + 0x13178C
	.equiv "object::ItemObjBomhei::calc_HitGnd()", _text + 0x132348
	.equiv "object::ItemObjBomhei::_setVisibleBlust()", _text + 0x1327C4
	.equiv "object::ItemObjBomhei::_setState_LockOnImpl()", _text + 0x132A7C
	.equiv "object::ItemObjBomhei::stateSelfMove()", _text + 0x1330E4
	.equiv "object::ItemObjBomhei::stateInitBurst()", _text + 0x133DE8
	.equiv "object::ItemObjBomhei::_getBurstValidFrame_Col()", _text + 0x134010
	.equiv "object::ItemObjBomhei::net_SetState_LockOn()", _text + 0x134360
	.equiv "`global_constructor_keyed_to'_17_ItemObjBomhei_cpp_8225c8dd", _text + 0x1343EC
	.equiv "FUN_0E2B568C:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x13568C
	.equiv "FUN_0E2B5800:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x135800
	.equiv "object::ItemObjBoomerang::isLastRun()", _text + 0x136748
	.equiv "object::ItemObjBoomerang::startReverse()", _text + 0x1367E8
	.equiv "object::ItemObjBoomerang::setTargetDirToCatchPos()", _text + 0x136814
	.equiv "object::ItemObjBoomerang::_calcPos()", _text + 0x136A3C
	.equiv "object::ItemObjBoomerang::_calc_HitWallInner()", _text + 0x13724C
	.equiv "object::ItemObjBoomerang::_calc_HitGnd()", _text + 0x137724
	.equiv "object::ItemObjBoomerang::calcConnectPath()", _text + 0x13835C
	.equiv "object::ItemObjBoomerang::isCurvePath()", _text + 0x138C28
	.equiv "object::ItemObjBoomerang::checkNextPrevPath()", _text + 0x138C44
	.equiv "object::ItemObjBoomerang::calcLerpPath()", _text + 0x138F40
	.equiv "object::ItemObjBoomerang::calcPathInfo()", _text + 0x1395B4
	.equiv "object::ItemObjBoomerang::catchBoomerang()", _text + 0x139D68
	.equiv "object::ItemObjBoomerang::calcModelMatrixInner()", _text + 0x13ACE4
	.equiv "object::ItemObjBoomerang::searchEffectHandle()", _text + 0x13B390
	.equiv "`global_constructor_keyed_to'_20_ItemObjBoomerang_cpp_8225c8dd", _text + 0x13B5BC
	.equiv "object::ItemObjCoin::robbedCoin()", _text + 0x13CE34
	.equiv "object::ItemObjCoin::drop()", _text + 0x13CF0C
	.equiv "object::ItemObjCoin::calcYawRotation()", _text + 0x13D238
	.equiv "object::ItemObjDirectorBase::incrementEntryNum()", _text + 0x13ECD0
	.equiv "object::ItemObjDirectorBase::entry()", _text + 0x13F080
	.equiv "object::ItemObjDirectorBase::startKeep()", _text + 0x13F6B4
	.equiv "object::ItemObjDirectorBase::calcKeepItem()", _text + 0x13F7BC
	.equiv "object::ItemObjDirectorBase::_calcKeepToActivateItem()", _text + 0x13F8DC
	.equiv "object::ItemObjDirectorBase::getType()", _text + 0x13F918
	.equiv "object::ItemObjDirectorBase::keepToActivate()", _text + 0x13F964
	.equiv "object::ItemObjDirectorBase::getStateItemNum()", _text + 0x1401FC
	.equiv "object::ItemObjDirectorBase::getKeepNum()", _text + 0x140290
	.equiv "object::ItemObjDirectorBase::decrementEntryNum()", _text + 0x1402BC
	.equiv "object::ItemObjDirectorBase::isExistStateItem()", _text + 0x14030C
	.equiv "object::ItemObjDirectorBase::isEquip_Hang()", _text + 0x140394
	.equiv "object::ItemObjDirectorBase::_getID_WithMaxMultiID()", _text + 0x1403EC
	.equiv "object::ItemObjDirectorBase::_searchNextItem()", _text + 0x1404F8
	.equiv "object::ItemObjDirectorBase::useKinoko()", _text + 0x14063C
	.equiv "object::ItemObjDirectorBase::dropEquip_Hang()", _text + 0x14073C
	.equiv "object::ItemObjDirectorBase::dropEquip_Multi()", _text + 0x140814
	.equiv "object::ItemObjDirectorBase::vanishState()", _text + 0x1408EC
	.equiv "object::ItemObjDirectorBase::vanishStateAll()", _text + 0x14099C
	.equiv "object::ItemObjDirectorBase::vanishEquip_Hang()", _text + 0x140A48
	.equiv "object::ItemObjDirectorBase::_emitItemImpl()", _text + 0x140ACC
	.equiv "object::ItemObjDirectorBase::emitItem()", _text + 0x140BE4
	.equiv "object::ItemObjDirectorBase::net_GetSelfMoveItemObj()", _text + 0x140DE8
	.equiv "object::ItemObjDirectorBase::net_ReactDamage()", _text + 0x1411E8
	.equiv "object::ItemObjDirectorBase::net_SetEmitImpl()", _text + 0x1412BC
	.equiv "object::ItemObjDirectorBase::net_SetEmit()", _text + 0x1412F4
	.equiv "object::ItemObjEightDirector::getTypeFromRule()", _text + 0x1422C4
	.equiv "object::ItemObjEightDirector::entryItem()", _text + 0x142574
	.equiv "object::ItemObjEightDirector::entry()", _text + 0x1425F0
	.equiv "object::ItemObjEightDirector::_getForceAroundEquipItem()", _text + 0x1426AC
	.equiv "object::ItemObjEightDirector::_updateEquipArray()", _text + 0x1427A4
	.equiv "object::ItemObjEightDirector::setState_SelfMove()", _text + 0x142850
	.equiv "object::ItemObjEightDirector::dropEquip_Multi()", _text + 0x142D80
	.equiv "object::ItemObjEightDirector::vanishEquip_Multi()", _text + 0x142E44
	.equiv "object::ItemObjEightDirector::getEightEquipPtr()", _text + 0x142EF8
	.equiv "object::ItemObjEightDirector::getEightIdx()", _text + 0x142F50
	.equiv "object::ItemObjEightDirector::getNormalEntryEight()", _text + 0x142FD4
	.equiv "`global_constructor_keyed_to'_24_ItemObjEightDirector_cpp_8225c8dd", _text + 0x143020
	.equiv "object::ItemObjGesso::getRemainFrameUntilInk()", _text + 0x14571C
	.equiv "object::ItemObjGesso::getBodyPos()", _text + 0x145750
	.equiv "object::ItemObjGesso::isClearInk()", _text + 0x145E58
	.equiv "object::ItemObjGesso::isBattle()", _text + 0x146000
	.equiv "object::ItemObjGesso::stateInitUse()", _text + 0x14601C
	.equiv "object::ItemObjGesso::_setCameraBasedPos()", _text + 0x1462B4
	.equiv "object::ItemObjGesso::_startInkEffect()", _text + 0x14692C
	.equiv "object::ItemObjGesso::_startGessoInk()", _text + 0x146B68
	.equiv "object::ItemObjGesso::stateAttacked()", _text + 0x146BB8
	.equiv "`global_constructor_keyed_to'_16_ItemObjGesso_cpp_8225c8dd", _text + 0x147130
	.equiv "object::ItemObjGessoDirector::entry_OtherGesso()", _text + 0x147D04
	.equiv "object::ItemObjKiller::prepareInner()", _text + 0x148378
	.equiv "object::ItemObjKinokoP::prepareInner()", _text + 0x14A198
	.equiv "object::ItemObjKinokoP::startUseEffect()", _text + 0x14A408
	.equiv "object::ItemObjKouraB::prepareInner()", _text + 0x14B8D8
	.equiv "object::ItemObjKouraB::_calcOverState()", _text + 0x14BD6C
	.equiv "object::ItemObjKouraB::calcInner()", _text + 0x14C8F4
	.equiv "object::ItemObjKouraB::hasCollision_WithLockOnPlayer()", _text + 0x14CED8
	.equiv "object::ItemObjKouraB::startBurst()", _text + 0x14CEEC
	.equiv "object::ItemObjKouraB::isBurst()", _text + 0x14D0E8
	.equiv "object::ItemObjKouraB::isBurst_Spin()", _text + 0x14D164
	.equiv "object::ItemObjKouraB::isThroughTarget()", _text + 0x14D200
	.equiv "object::ItemObjKouraB::_setState_LockOnImpl()", _text + 0x14D3A8
	.equiv "object::ItemObjKouraB::searchKart()", _text + 0x14D4A8
	.equiv "object::ItemObjKouraB::_setVisibleBlust()", _text + 0x14D718
	.equiv "object::ItemObjKouraB::_isRisingAfterCircle()", _text + 0x14D780
	.equiv "object::ItemObjKouraB::pitchingBeforeDown()", _text + 0x14D79C
	.equiv "object::ItemObjKouraB::stateInitComeBackDown()", _text + 0x14E3B4
	.equiv "object::ItemObjKouraB::stateComeBackDown()", _text + 0x14EB40
	.equiv "object::ItemObjKouraB::stateCircle()", _text + 0x14F194
	.equiv "`global_constructor_keyed_to'_17_ItemObjKouraB_cpp_8225c8dd", _text + 0x1503D8
	.equiv "FUN_0E2D1858:bool_EffectLinkUserBase::isExistAction()", _text + 0x151858
	.equiv "FUN_0E2D19CC:void_EffectLinkUserBase::createProperty1()", _text + 0x1519CC
	.equiv "object::ItemObjKouraBDirector::isKouraChase()", _text + 0x151EE4
	.equiv "object::ItemObjKouraG::prepareInner()", _text + 0x1525BC
	.equiv "object::ItemObjKouraG::stateInitSelfMoveImpl()", _text + 0x1528D8
	.equiv "object::ItemObjKouraG::initMaterialAnime()", _text + 0x1531FC
	.equiv "object::ItemObjKouraG::searchEffectHandle()", _text + 0x1532A4
	.equiv "object::ItemObjKouraG::isExistValleyNear()", _text + 0x153F24
	.equiv "object::ItemObjKouraG::_calcScaleAndSelfRot()", _text + 0x1545DC
	.equiv "object::ItemObjKouraR::searchEffectHandle()", _text + 0x1571D8
	.equiv "object::ItemObjKouraR::isBattleMove()", _text + 0x1572F4
	.equiv "object::ItemObjKouraR::_calcPathFromTarget()", _text + 0x15768C
	.equiv "object::ItemObjKouraR::_findEnemyPath()", _text + 0x157980
	.equiv "object::ItemObjKouraR::_calcNextPtInner()", _text + 0x157A68
	.equiv "object::ItemObjKouraR::_calcSquareDistCutGVector()", _text + 0x157D84
	.equiv "object::ItemObjKouraR::_calcNextPathInfo()", _text + 0x157E54
	.equiv "object::ItemObjKouraR::getGVector()", _text + 0x158DE4
	.equiv "object::ItemObjKouraR::_calcLerpVelDir()", _text + 0x158EAC
	.equiv "object::ItemObjKouraR::_calcTargetForecastPos()", _text + 0x159AAC
	.equiv "object::ItemObjKouraR::calcLockOff()", _text + 0x159BE4
	.equiv "object::ItemObjKouraR::stateLockOn()", _text + 0x159DCC
	.equiv "object::ItemObjKouraR::calcDisToTarget()", _text + 0x15A718
	.equiv "object::ItemObjKouraR::_isLinkToTarget()", _text + 0x15AD58
	.equiv "object::ItemObjKouraR::_calcTargetIdx()", _text + 0x15B0F8
	.equiv "object::ItemObjKouraR::_calcBattleSearch()", _text + 0x15B760
	.equiv "FUN_0E2DBC1C:object::ItemObjKouraR::_setState_LockOnImpl()", _text + 0x15BC1C
	.equiv "FUN_0E2DBE78:object::ItemObjKouraR::_setState_LockOnImpl()", _text + 0x15BE78
	.equiv "object::ItemObjKouraR::net_SetState_Search()", _text + 0x15BE7C
	.equiv "object::ItemObjPackun::prepareInner()", _text + 0x15D1BC
	.equiv "object::ItemObjPackun::stateInitEquip_Hang", _text + 0x15D484
	.equiv "object::ItemObjPackunDirector::getEquipPackunOwner()", _text + 0x15DC84
	.equiv "object::ItemObjSHorn::prepareInner()", _text + 0x15E3B8
	.equiv "`global_constructor_keyed_to'_16_ItemObjSHorn_cpp_8225c8dd", _text + 0x15EEE8
	.equiv "object::ItemObjThunder::_startThunderEffect()", _text + 0x1619A8
	.equiv "object::ItemObjThunderDirector::entryAttacked()", _text + 0x1628C4
	.equiv "object::ItemObjThunderDirector::entry_OtherThunder()", _text + 0x162BCC
	.equiv "object::ItemOwnerProxy::isKeep()", _text + 0x1635FC
	.equiv "object::ItemOwnerProxy::isThrowing()", _text + 0x163620
	.equiv "object::ItemOwnerProxy::isInactivatedThrowCnt()", _text + 0x1636AC
	.equiv "object::ItemOwnerProxy::autoKeep()", _text + 0x163720
	.equiv "object::ItemOwnerProxy::setEquipInfo()", _text + 0x1637DC
	.equiv "object::ItemOwnerProxy::autoEquipMulti()", _text + 0x1637F4
	.equiv "object::ItemOwnerProxy::_vanishEquip_Hang()", _text + 0x163924
	.equiv "object::ItemOwnerProxy::_vanishEquip_Multi()", _text + 0x163970
	.equiv "object::ItemOwnerProxy::_vanishKeep()", _text + 0x1639C4
	.equiv "object::ItemOwnerProxy::_resetParam_Stock()", _text + 0x163A60
	.equiv "object::ItemOwnerProxy::_clearItemSlot()", _text + 0x163A88
	.equiv "object::ItemOwnerProxy::clearItem()", _text + 0x163AC4
	.equiv "object::ItemOwnerProxy::_checkVanishByZombieOrKartVanish()", _text + 0x163B00
	.equiv "object::ItemOwnerProxy::useStockItem()", _text + 0x163C70
	.equiv "object::ItemOwnerProxy::initFlowerCnt()", _text + 0x163E00
	.equiv "object::ItemOwnerProxy::initKinokoPCnt()", _text + 0x163E44
	.equiv "object::ItemOwnerProxy::useStockItem_Flower()", _text + 0x164340
	.equiv "object::ItemOwnerProxy::useStockItem_KinokoP()", _text + 0x1643B4
	.equiv "object::ItemOwnerProxy::isSpin_Slot()", _text + 0x164488
	.equiv "object::ItemOwnerProxy::_setStockItem()", _text + 0x1644A4
	.equiv "object::ItemOwnerProxy::setItemForce()", _text + 0x164514
	.equiv "object::ItemOwnerProxy::getAutoEndItemTime()", _text + 0x16458C
	.equiv "object::ItemOwnerProxy::getBoomerangShotCnt()", _text + 0x16460C
	.equiv "object::ItemOwnerProxy::isAfterRelease()", _text + 0x16463C
	.equiv "object::ItemOwnerProxy::getKeepItem()", _text + 0x1646BC
	.equiv "object::ItemOwnerProxy::calcRythmAnimeFrame()", _text + 0x164848
	.equiv "`global_constructor_keyed_to'_18_ItemOwnerProxy_cpp_8225c8dd", _text + 0x1648B4
	.equiv "object::ItemReactProxy::ItemReactProxy()", _text + 0x165570
	.equiv "object::ItemReactProxy::forecastPos()", _text + 0x165770
	.equiv "object::ItemReactProxy::getType()", _text + 0x1657D0
	.equiv "object::ItemReactProxy::getRTMatrix()", _text + 0x165818
	.equiv "object::ItemReactProxy::isEntry()", _text + 0x165858
	.equiv "object::ItemReactProxy::isEquip()", _text + 0x16586C
	.equiv "object::ItemReactProxy::isSelfMove()", _text + 0x165880
	.equiv "object::ItemReactProxy::isStand()", _text + 0x165898
	.equiv "object::ItemReactProxy::updateColShape()", _text + 0x165924
	.equiv "object::ItemReactProxy::addBoxCol()", _text + 0x165C90
	.equiv "object::ItemReactProxy::colOff()", _text + 0x165CFC
	.equiv "object::ItemReactProxy::colOn()", _text + 0x165D10
	.equiv "object::ItemSlot::isStopTrig()", _text + 0x1663AC
	.equiv "object::ItemSlot::isValidQuickStop()", _text + 0x166444
	.equiv "object::ItemSlot::isStock()", _text + 0x166488
	.equiv "object::ItemSlot::_calcNextID()", _text + 0x166510
	.equiv "object::ItemSlot::start()", _text + 0x166594
	.equiv "object::ItemSlot::setLastSpin()", _text + 0x1666DC
	.equiv "object::ItemSlot::setStop()", _text + 0x1666EC
	.equiv "object::ItemSlot::setNextID()", _text + 0x166710
	.equiv "object::ItemSlot::_setStopParam()", _text + 0x166724
	.equiv "object::ItemSlot::stateInitStop()", _text + 0x166744
	.equiv "object::ItemSlot::net_SetStop()", _text + 0x1667D0
	.equiv "object::ItemSlot::net_ResetItemSlot()", _text + 0x166874
	.equiv "object::ItemSlot::net_UpdateSlotAdmit()", _text + 0x1668B4
	.equiv "object::ItemSlot::useStockItem()", _text + 0x166B4C
	.equiv "object::ItemSlot::clear()", _text + 0x166B88
	.equiv "`global_constructor_keyed_to'_12_ItemSlot_cpp_8225c8dd", _text + 0x16703C
	.equiv "object::ItemSlotTable::ItemSlotTable()", _text + 0x16758C
	.equiv "object::ItemSlotTable::calcBattleRank()", _text + 0x1675D0
	.equiv "FUN_0E2E7744:object::ItemSlotTable::getRankDist()", _text + 0x167744
	.equiv "FUN_0E2E77C4:object::ItemSlotTable::getRankDist()", _text + 0x1677C4
	.equiv "object::ItemSlotTable::getItemRankDist()", _text + 0x167810
	.equiv "FUN_0E2E7958:FID_conflict:object::ItemSlotTable::getItemSlotTableDistParam()", _text + 0x167958
	.equiv "FUN_0E2E7A80:FID_conflict:object::ItemSlotTable::calcBattleItem()", _text + 0x167A80
	.equiv "FUN_0E2E7F4C:FID_conflict:object::ItemSlotTable::getItemSlotTableDistParam()", _text + 0x167F4C
	.equiv "FUN_0E2E8074:FID_conflict:object::ItemSlotTable::calcBattleItem()", _text + 0x168074
	.equiv "FID_conflict:object::ItemSlotTable::calcBattlePinchHitItem()", _text + 0x1681E0
	.equiv "object::ItemSlotTable::calcRandomItemImpl()", _text + 0x16839C
	.equiv "object::ItemSlotTable::calcRandomItem()", _text + 0x1689B4
	.equiv "object::ItemSlotTable::getSpecialSlotTableParam()", _text + 0x168AB0
	.equiv "object::ItemSlotTable::calcDecidedItem()", _text + 0x168BD8
	.equiv "object::ItemSlotTable::calcTableInvalidFlag()", _text + 0x168D94
	.equiv "object::GetNum_InItemType_Net()", _text + 0x169494
	.equiv "object::GetExtraItemNum()", _text + 0x169678
	.equiv "object::AsyncModel::AsyncModel()", _text + 0x169880
	.equiv "object::AsyncModel::destroyResource()", _text + 0x169A18
	.equiv "object::AsyncModel::requestDraw()", _text + 0x169A30
	.equiv "object::AsyncModel::setVisible()", _text + 0x169A88
	.equiv "object::AsyncModel::updateAnimationWorldMatrix()", _text + 0x169A98
	.equiv "object::Balloon::createELink()", _text + 0x169C14
	.equiv "object::Balloon::calcELink()", _text + 0x169CF8
	.equiv "object::Balloon::emitBreakEffect()", _text + 0x169D14
	.equiv "object::KartBalloonModel::calcDraw()", _text + 0x169F44
	.equiv "object::KartBalloonModel::setColor()", _text + 0x169F88
	.equiv "object::KartBalloon::KartBalloon()", _text + 0x16A034
	.equiv "object::KartBalloon::calcStringParam()", _text + 0x16A3B4
	.equiv "object::KartBalloon::normalizeYXZ()", _text + 0x16A768
	.equiv "object::KartBalloon::calcGoalPos()", _text + 0x16A8A0
	.equiv "object::KartBalloon::initPos()", _text + 0x16AA1C
	.equiv "object::KartBalloon::updateNum()", _text + 0x16AC40
	.equiv "object::KartBalloon::checkHitBalloon()", _text + 0x16AD90
	.equiv "object::KartBalloon::checkHitField()", _text + 0x16B188
	.equiv "object::KartBalloon::checkHitKart()", _text + 0x16B520
	.equiv "object::KartBalloon::calcBalloonMove()", _text + 0x16B8C4
	.equiv "object::KartBalloon::calcModel()", _text + 0x16D454
	.equiv "object::KartBalloon::calcApply()", _text + 0x16D654
	.equiv "object::KartBalloon::setVisibleView()", _text + 0x16D9C0
	.equiv "object::KartCamera::setParam()", _text + 0x16DFE4
	.equiv "object::KartCamera::KartCamera()", _text + 0x16E454
	.equiv "object::KartCamera::reset()", _text + 0x16ED30
	.equiv "object::KartCamera::getKartMtx()", _text + 0x16EE8C
	.equiv "object::KartCamera::calcDriftRot()", _text + 0x16EE9C
	.equiv "object::KartCamera::calcCollisionPosYaw()", _text + 0x16EFDC
	.equiv "object::KartCamera::calcCollisionPos()", _text + 0x16F0E4
	.equiv "object::KartCamera::checkOneSphere()", _text + 0x16F648
	.equiv "object::KartCamera::calcBlendLocalPos()", _text + 0x16F82C
	.equiv "object::KartCamera::calcLineCollisionPos()", _text + 0x16F940
	.equiv "object::KartCamera::calcCollision()", _text + 0x170330
	.equiv "object::KartCamera::calcPos()", _text + 0x170428
	.equiv "object::KartCamera::calcShake()", _text + 0x170B70
	.equiv "object::KartCamera::calcBackMirror()", _text + 0x170D94
	.equiv "object::KartCamera::setMatrix()", _text + 0x170FF0
	.equiv "object::KartCamera::calcCommon()", _text + 0x171350
	.equiv "object::KartCamera::calcUp()", _text + 0x1714EC
	.equiv "object::KartCamera::calcAt()", _text + 0x1718E4
	.equiv "object::KartCamera::calcFovy()", _text + 0x171D6C
	.equiv "object::KartCamera::calcNormalCamera()", _text + 0x172030
	.equiv "object::KartCamera::calcApply()", _text + 0x172110
	.equiv "object::KartChassis::replaceKartTexture()", _text + 0x17358C
	.equiv "object::KartChassis::replaceAllTexture()", _text + 0x173628
	.equiv "object::KartChassis::createAfter()", _text + 0x17419C
	.equiv "object::KartChassis::setWingMaterialParam()", _text + 0x1744B0
	.equiv "object::KartChassis::calcAntiGChangeAnim()", _text + 0x1746E0
	.equiv "object::KartChassis::calcEngineShake()", _text + 0x174E98
	.equiv "object::KartChassis::calcDraw()", _text + 0x176CB0
	.equiv "object::KartChassis::setVisible()", _text + 0x176CC0
	.equiv "object::KartChassis::setVisibleView()", _text + 0x176CD4
	.equiv "object::KartChassis::setScrewScaleRootZ()", _text + 0x176D3C
	.equiv "object::KartChassis::addLandSpringForce()", _text + 0x176D64
	.equiv "object::KartChassis::updateModelParam()", _text + 0x176DE4
	.equiv "object::KartChassis::forceWingOpen()", _text + 0x176EC0
	.equiv "object::KartChassis::getHandleInitMtx()", _text + 0x176F10
	.equiv "object::KartChassisAnim::KartChassisAnim()", _text + 0x1773A8
	.equiv "object::KartChassisAnim::setEmissionMatColor()", _text + 0x17802C
	.equiv "object::KartChassisAnim::cancelCurrentSpAnim()", _text + 0x178218
	.equiv "object::KartChassisAnim::setStarMatParam()", _text + 0x1782B0
	.equiv "object::KartChassisAnim::endSpAnim()", _text + 0x1784A0
	.equiv "object::KartChassisAnim::judgeMoveAnimM()", _text + 0x1788FC
	.equiv "object::KartChassisAnim::resetMoveAnim()", _text + 0x178AB8
	.equiv "object::KartChassisAnim::resetWingAnim()", _text + 0x178F48
	.equiv "object::KartChassisAnim::startSpAnim()", _text + 0x17902C
	.equiv "object::KartChassisAnim::switchVisibleKiller()", _text + 0x1790DC
	.equiv "object::KartChassisAnim::changeMoveAnim()", _text + 0x1797CC
	.equiv "object::KartChassisAnim::calcMoveAnim()", _text + 0x179ADC
	.equiv "object::KartChassisAnim::calcWingAnim()", _text + 0x179FAC
	.equiv "object::KartChassisAnim::startWet()", _text + 0x17A040
	.equiv "object::KartChassisAnim::calcSpAnim()", _text + 0x17A064
	.equiv "object::KartChassisAnim::updateEmissionRhythmScale()", _text + 0x17A598
	.equiv "object::KartChassisAnim::calcDraw()", _text + 0x17AB60
	.equiv "object::KartChassisAnim::onResetPosition()", _text + 0x17ABAC
	.equiv "object::KartChassisAnim::calcGessoIntensityScale()", _text + 0x17ABF8
	.equiv "object::KartManualHandle::emitKartEffect()", _text + 0x17B078
	.equiv "object::KartManualHandle::emitKartEffectOverWrite()", _text + 0x17B158
	.equiv "object::KartEffectBase::setViewIndex()", _text + 0x17B238
	.equiv "object::KartBodyEffect::setEffectInvalidFlag()", _text + 0x17C3BC
	.equiv "object::KartChassisEffect::KartChassisEffect()", _text + 0x17D868
	.equiv "object::KartChassisEffect::reset()", _text + 0x17D960
	.equiv "object::KartKillerEffect::fadeSmoke()", _text + 0x17D9F4
	.equiv "object::KartChassisEffect::calcApply()", _text + 0x17DA94
	.equiv "object::KartChassisEffect::setClip()", _text + 0x17DB30
	.equiv "object::KartChassisEffect::setClipAllUser()", _text + 0x17DB64
	.equiv "object::KartChassisEffect::setVisibleDirect()", _text + 0x17DE30
	.equiv "object::KartEffectBase::recordEvent()", _text + 0x17DFA4
	.equiv "object::KartEffectBase::cnvTotalEnum()", _text + 0x17DFCC
	.equiv "object::KartFloorEffect::calcSHorn()", _text + 0x17E57C
	.equiv "object::KartBodyEffect::calcExhaustMtx()", _text + 0x17F18C
	.equiv "object::KartBodyEffect::calcExhaustSmokeEffect()", _text + 0x17F2C0
	.equiv "object::KartBodyEffect::kartEmitOneShot()", _text + 0x18017C
	.equiv "object::KartBodyEffect::calcHitWallEffect()", _text + 0x18071C
	.equiv "object::KartBodyEffect::calcSpinEffect()", _text + 0x18088C
	.equiv "object::KartBodyEffect::calcSpecialSpinEffect()", _text + 0x180A9C
	.equiv "object::KartBodyEffect::calcCrushEffect()", _text + 0x180B70
	.equiv "object::KartBodyEffect::calcDriftLandingEffect()", _text + 0x180D9C
	.equiv "object::KartBodyEffect::createJugemRescue()", _text + 0x180FAC
	.equiv "object::KartBodyEffect::_calcThunderEffectScale()", _text + 0x182040
	.equiv "object::KartBodyEffect::calcThunderState()", _text + 0x182290
	.equiv "object::KartBodyEffect::calcJumpAction()", _text + 0x182AE4
	.equiv "object::KartBodyEffect::calcUseItemEffect()", _text + 0x182D48
	.equiv "object::KartBodyEffect::emitThunderEffectDirect()", _text + 0x183670
	.equiv "object::KartBodyEffect::fadeThunderEffectDirect()", _text + 0x1836C0
	.equiv "object::KartBodyEffect::isEmitHitWallEffect()", _text + 0x1837A8
	.equiv "object::KartBodyEffect::createHitWallEffect()", _text + 0x1838B4
	.equiv "object::KartBodyEffect::createHitWallObjEffect()", _text + 0x183B9C
	.equiv "object::KartBodyEffect::resetWallHitTimer()", _text + 0x183DB8
	.equiv "object::KartBodyEffect::createSpinEffectWaterL()", _text + 0x18406C
	.equiv "object::KartBodyEffect::createSpinEffectWaterR()", _text + 0x184108
	.equiv "object::KartBodyEffect::createCoinGetEffect()", _text + 0x184434
	.equiv "object::KartBodyEffect::createHitKartEffect()", _text + 0x1845DC
	.equiv "object::KartBodyEffect::createStartMissEffect()", _text + 0x184764
	.equiv "object::KartBodyEffect::_createJumpEffect()", _text + 0x184BF0
	.equiv "FUN_0E305590:FID_conflict:void_EffectLinkUserBase::createProperty2()", _text + 0x185590
	.equiv "FUN_0E305684:FID_conflict:void_EffectLinkUserBase::createProperty2()", _text + 0x185684
	.equiv "object::KartChassisPackun::isRecorderPlay()", _text + 0x185F14
	.equiv "object::KartChassisPackun::checkDriveFront()", _text + 0x185F3C
	.equiv "object::KartChassisPackun::searchTargetKart()", _text + 0x185FE4
	.equiv "object::KartChassisPackun::searchTargetItem()", _text + 0x18626C
	.equiv "object::KartChassisPackun::searchTargetMapObj()", _text + 0x1864D8
	.equiv "object::KartChassisPackun::searchTarget()", _text + 0x1866E4
	.equiv "object::KartChassisPackun::updateAttackOffset()", _text + 0x186774
	.equiv "object::KartChassisPackun::startAttack()", _text + 0x186CEC
	.equiv "object::KartChassisPackun::searchGesso()", _text + 0x186D64
	.equiv "object::KartChassisPackun::calcAttack()", _text + 0x186E40
	.equiv "object::KartChassisPackun::checkColWall()", _text + 0x1877A4
	.equiv "object::KartChassisPackun::onDisappear()", _text + 0x187AB4
	.equiv "object::KartChassisPackun::disappear()", _text + 0x187B20
	.equiv "object::KartChassisPackun::calcDamageAnim()", _text + 0x187B30
	.equiv "object::KartChassisPackun::onAppear()", _text + 0x188204
	.equiv "object::KartChassisPackun::updateAntiGTransform()", _text + 0x188284
	.equiv "object::KartChassisPackun::rotateBoneLocal()", _text + 0x1887E8
	.equiv "object::KartChassisPackun::transBone()", _text + 0x188E30
	.equiv "object::KartChassisPackun::stretchStemWorld()", _text + 0x188F00
	.equiv "object::KartChassisPackun::calcApply()", _text + 0x189B60
	.equiv "object::KartChassisPackun::calcDraw()", _text + 0x18A2A4
	.equiv "object::KartChassisPackun::endPackun()", _text + 0x18A4D4
	.equiv "object::KartChassisPackun::isEnableNetDisappear()", _text + 0x18A578
	.equiv "object::KartChassisPackun::setEmissionIntensity()", _text + 0x18A5A0
	.equiv "object::KartChassisPackun::startJumpAnim()", _text + 0x18A730
	.equiv "object::KartCollision::createBoxCol_()", _text + 0x18ACDC
	.equiv "object::KartCollision::createShapeCol_()", _text + 0x18AD70
	.equiv "object::KartCollision::createGndCol_()", _text + 0x18B2E0
	.equiv "object::KartCollision::calcShapeColLocalOffset_()", _text + 0x18B328
	.equiv "object::KartCollision::KartCollision()", _text + 0x18B9CC
	.equiv "object::KartCollision::resetSlipStreamParam_()", _text + 0x18BEF0
	.equiv "object::KartCollision::getWorldPosFromOffsetImpl_()", _text + 0x18BFD4
	.equiv "object::KartCollision::setMatrix()", _text + 0x18C074
	.equiv "object::KartCollision::calcMultiWallCol_()", _text + 0x18C0AC
	.equiv "object::KartCollision::updateGndCol_()", _text + 0x18C228
	.equiv "object::KartCollision::updateBoxCol_()", _text + 0x18C88C
	.equiv "object::KartCollision::getShapeCol_()", _text + 0x18CAB4
	.equiv "object::KartCollision::updateShapeCol_()", _text + 0x18CAE8
	.equiv "object::KartCollision::updateFlag_()", _text + 0x18D55C
	.equiv "object::KartCollision::calcPosition()", _text + 0x18D5B4
	.equiv "object::KartCollision::getPrimCol_()", _text + 0x18D69C
	.equiv "object::KartCollision::checkKart_()", _text + 0x18D6BC
	.equiv "object::KartCollision::calcReaction()", _text + 0x18DA6C
	.equiv "object::KartCollision::checkWallImpl_()", _text + 0x18DE08
	.equiv "object::KartDirector::KartDirector()", _text + 0x18F5A0
	.equiv "object::KartDirector::getCamera()", _text + 0x18F778
	.equiv "object::KartDirector::updateModelParam()", _text + 0x18F78C
	.equiv "object::KartDirector::searchNearWingPath()", _text + 0x18F8A4
	.equiv "object::KartDirector::changeToCpu()", _text + 0x18F95C
	.equiv "object::KartDirector::changeToNetSend()", _text + 0x18FA08
	.equiv "object::KartDirector::getKartUnit()", _text + 0x18FAC0
	.equiv "object::KartDirector::resetKart()", _text + 0x190DAC
	.equiv "object::KartDirector::resetKarts()", _text + 0x190FF0
	.equiv "object::KartDirector::setupMenuController()", _text + 0x19104C
	.equiv "object::KartDirector::calcAI()", _text + 0x1913D0
	.equiv "object::KartDirector::calcKarts()", _text + 0x1914D8
	.equiv "object::KartHeadLight::switchHeadLight()", _text + 0x1925FC
	.equiv "object::KartHeadLight::KartHeadLight()", _text + 0x192808
	.equiv "object::KartHeadLight::calcHandleLocalMatrix()", _text + 0x192CC0
	.equiv "object::KartHeadLight::updateHeadLight()", _text + 0x192DBC
	.equiv "object::KartHeadLight::setHeadLightParam()", _text + 0x1931D4
	.equiv "object::KartHeadLight::updateSpotLight()", _text + 0x1934D8
	.equiv "object::KartHeadLight::calcApply()", _text + 0x1936F0
	.equiv "object::KartHeadLight::setVisible()", _text + 0x1937AC
	.equiv "object::KartHeadLight::setVisibleView()", _text + 0x1937D0
	.equiv "object::KartHeadLight::updateModelParam()", _text + 0x193964
	.equiv "`global_constructor_keyed_to'_17_KartHeadLight_cpp_8225c8dd", _text + 0x193C34
	.equiv "object::KartInfoProxy::getKartUnit()", _text + 0x193F38
	.equiv "object::KartInfoProxy::KartInfoProxy()", _text + 0x193F48
	.equiv "object::KartInfoProxy::getBodyMtx()", _text + 0x1940F8
	.equiv "object::KartInfoProxy::getBodyMtxGroundOffset()", _text + 0x194108
	.equiv "object::KartInfoProxy::getModelMatrixPtr()", _text + 0x194118
	.equiv "object::KartInfoProxy::isFakeGoal()", _text + 0x1941E4
	.equiv "object::KartInfoProxy::isGoal()", _text + 0x1941F4
	.equiv "object::KartInfoProxy::getPos()", _text + 0x194218
	.equiv "object::KartInfoProxy::isAfterOnResetPosition()", _text + 0x19424C
	.equiv "object::KartInfoProxy::isBackMirror()", _text + 0x194264
	.equiv "object::KartInfoProxy::getOuterPosCollGround()", _text + 0x194274
	.equiv "object::KartInfoProxy::getDrawScrewRotate()", _text + 0x194294
	.equiv "object::KartInfoProxy::isAntiG()", _text + 0x194394
	.equiv "object::KartInfoProxy::getAntiGTireRotRate()", _text + 0x1943A4
	.equiv "object::KartInfoProxy::isKinokoDash()", _text + 0x1943C8
	.equiv "object::KartInfoProxy::isPanelDash()", _text + 0x194434
	.equiv "object::KartInfoProxy::isCoinDash()", _text + 0x194464
	.equiv "object::KartInfoProxy::getDashFrameLeft()", _text + 0x1944B0
	.equiv "object::KartInfoProxy::getDashLevelFrameLeft()", _text + 0x1944B8
	.equiv "object::KartInfoProxy::isAerial()", _text + 0x1944C0
	.equiv "object::KartInfoProxy::isJumpActionTimingAll()", _text + 0x1944E4
	.equiv "object::KartInfoProxy::isJumpActionDone()", _text + 0x194540
	.equiv "object::KartInfoProxy::isDuringJumpAction()", _text + 0x194550
	.equiv "object::KartInfoProxy::isWingOrReady()", _text + 0x19456C
	.equiv "object::KartInfoProxy::isWingPathCannon()", _text + 0x194584
	.equiv "object::KartInfoProxy::getWingScaleRate()", _text + 0x194594
	.equiv "object::KartInfoProxy::isScrew()", _text + 0x1945B0
	.equiv "object::KartInfoProxy::isWet()", _text + 0x1945C0
	.equiv "object::KartInfoProxy::isScrewOrFloating()", _text + 0x1945D0
	.equiv "object::KartInfoProxy::isAccident()", _text + 0x1945F0
	.equiv "object::KartInfoProxy::getAccidentTypeForNet()", _text + 0x194600
	.equiv "object::KartInfoProxy::isStar()", _text + 0x19461C
	.equiv "object::KartInfoProxy::isInStar()", _text + 0x194634
	.equiv "object::KartInfoProxy::isGesso()", _text + 0x194668
	.equiv "object::KartInfoProxy::isThunder()", _text + 0x194680
	.equiv "object::KartInfoProxy::isPress()", _text + 0x19469C
	.equiv "object::KartInfoProxy::isKiller()", _text + 0x1946B8
	.equiv "object::KartInfoProxy::isPackunItemActive()", _text + 0x1946C8
	.equiv "object::KartInfoProxy::isPackunModelActive()", _text + 0x1946E0
	.equiv "object::KartInfoProxy::onPackunHitKart()", _text + 0x1946F8
	.equiv "object::KartInfoProxy::isVanish()", _text + 0x194708
	.equiv "object::KartInfoProxy::isRetire()", _text + 0x194718
	.equiv "object::KartInfoProxy::isSlipStreamDash()", _text + 0x194744
	.equiv "object::KartInfoProxy::isJugemHang()", _text + 0x194784
	.equiv "object::KartInfoProxy::getJugemFrameToFinish()", _text + 0x19479C
	.equiv "object::KartInfoProxy::isOnGroundJA()", _text + 0x1947D4
	.equiv "object::KartInfoProxy::isOnGroundJB()", _text + 0x194800
	.equiv "object::KartInfoProxy::getVisibleDirect()", _text + 0x194844
	.equiv "object::KartInfoProxy::startDashKinoko()", _text + 0x194850
	.equiv "object::KartInfoProxy::startDashCoin()", _text + 0x194858
	.equiv "object::KartInfoProxy::getPackunAttackCount()", _text + 0x1948B8
	.equiv "object::KartInfoProxy::startGesso()", _text + 0x1948CC
	.equiv "object::KartInfoProxy::getColLength()", _text + 0x1948F8
	.equiv "FUN_0E314938:FID_conflict:object::KartInfoProxy::isBrakeOn()", _text + 0x194938
	.equiv "FUN_0E314948:FID_conflict:object::KartInfoProxy::isBrakeOn()", _text + 0x194948
	.equiv "FUN_0E314958:FID_conflict:object::KartInfoProxy::isBrakeOn()", _text + 0x194958
	.equiv "object::KartInfoProxy::isLandTrig()", _text + 0x194998
	.equiv "object::KartInfoProxy::update()", _text + 0x1949D8
	.equiv "object::KartInfoProxy::switchOpenWing()", _text + 0x1949F4
	.equiv "object::KartInfoProxy::getTireEffect()", _text + 0x194A00
	.equiv "object::KartInfoProxy::getChassisEffect()", _text + 0x194ADC
	.equiv "FUN_0E315238:object::KartJugemRecover::calcDestination_()", _text + 0x195238
	.equiv "object::KartJugemRecover::calcReturnOffset_()", _text + 0x195350
	.equiv "FUN_0E315474:object::KartJugemRecover::calcDestination_()", _text + 0x195474
	.equiv "object::KartJugemRecover::updateFinalMtx_()", _text + 0x1955D4
	.equiv "object::KartJugemRecover::calcNextTargetInner_()", _text + 0x195744
	.equiv "FUN_0E315AF4:object::KartJugemRecover::calcNextTarget_()", _text + 0x195AF4
	.equiv "FUN_0E315BD0:object::KartJugemRecover::calcNextTarget_()", _text + 0x195BD0
	.equiv "object::KartJugemRecover::startRecoverInner_()", _text + 0x195C48
	.equiv "object::KartJugemRecover::startRecover()", _text + 0x195D80
	.equiv "object::KartJugemRecover::calcCheckOnRoad()", _text + 0x195FA8
	.equiv "object::KartJugemRecover::calcRecover()", _text + 0x19615C
	.equiv "object::KartJugemRecover::getTargetVec()", _text + 0x196530
	.equiv "object::KartJugemRecover::finishRecover()", _text + 0x196564
	.equiv "object::KartJugemRecover::checkGndColRoute_()", _text + 0x196818
	.equiv "object::KartJugemRecover::endValley_()", _text + 0x196EF8
	.equiv "object::KartJugemRecover::stateReplay()", _text + 0x1971C0
	.equiv "object::KartJugemRecover::stateInitLerp()", _text + 0x19824C
	.equiv "object::KartJugemRecover::stateLerp()", _text + 0x198358
	.equiv "object::KartJugemRecover::stateFinish()", _text + 0x199430
	.equiv "object::KartMenuController::setPos()", _text + 0x19A98C
	.equiv "object::KartMenuController::startCameraMove()", _text + 0x19A9C4
	.equiv "object::KartMenuController::updateCameraParam()", _text + 0x19AA28
	.equiv "object::KartMenuController::applyCameraParam()", _text + 0x19AEA4
	.equiv "object::KartMenuController::reset()", _text + 0x19AFE0
	.equiv "object::KartMenuController::changeState()", _text + 0x19B09C
	.equiv "object::KartMenuController::resetAnim()", _text + 0x19B350
	.equiv "object::KartMenuController::updatePos()", _text + 0x19B398
	.equiv "object::KartMenuController::calc()", _text + 0x19B5A8
	.equiv "object::KartMenuController::getUnitHolder()", _text + 0x19B77C
	.equiv "object::KartMenuController::startCutIn()", _text + 0x19B7D8
	.equiv "object::KartMenuController::cancelCutIn()", _text + 0x19B820
	.equiv "object::KartMenuController::startPartsSelect()", _text + 0x19B84C
	.equiv "object::KartMenuController::cancelPartsSelect()", _text + 0x19B8A0
	.equiv "object::KartMenuController::decideInitCommon()", _text + 0x19B8CC
	.equiv "object::KartMenuController::startDecide()", _text + 0x19B928
	.equiv "object::KartMenuController::cancelDecide()", _text + 0x19BA24
	.equiv "object::KartMenuController::startCourseCutOut()", _text + 0x19BA90
	.equiv "object::KartMenuController::cancelCourseCutOut()", _text + 0x19BABC
	.equiv "object::KartMenuController::updateTurnTableViewBit()", _text + 0x19BCBC
	.equiv "object::KartMenuController::isStableModelRes()", _text + 0x19BE84
	.equiv "object::KartMenuController::isStableSoundRes()", _text + 0x19C2F0
	.equiv "object::KartMenuSetSmallFlag()", _text + 0x19D35C
	.equiv "object::KartMenuStartDriverSelect()", _text + 0x19D388
	.equiv "object::KartMenuIsEndStartDriverSelect()", _text + 0x19D400
	.equiv "FUN_0E31D47C:FID_conflict:object::KartMenuCancelPartsSelect()", _text + 0x19D47C
	.equiv "object::KartMenuIsEndCancelDriverSelect()", _text + 0x19D4E4
	.equiv "object::KartMenuStartPartsSelect()", _text + 0x19D558
	.equiv "FUN_0E31D5D8:FID_conflict:object::KartMenuCancelPartsSelect()", _text + 0x19D5D8
	.equiv "FUN_0E31D640:FID_conflict:object::KartMenuCancelPartsSelect()", _text + 0x19D640
	.equiv "FUN_0E31D724:FID_conflict:object::KartMenuCancelPartsSelect()", _text + 0x19D724
	.equiv "object::KartMenuStartDecide()", _text + 0x19D808
	.equiv "object::KartMenuCancelDecide()", _text + 0x19D834
	.equiv "FID_conflict:object::KartMenuStartablePartsSelect()", _text + 0x19D860
	.equiv "<unnamed>::isBigSize()", _text + 0x19DAE8
	.equiv "<unnamed>::calcSpringLengthNormal()", _text + 0x19E278
	.equiv "<unnamed>::calcSusDirRotLocal()", _text + 0x19E45C
	.equiv "<unnamed>::calcTireCamberRotMax()", _text + 0x19E4A0
	.equiv "<unnamed>::calcSpotLightOffset()", _text + 0x19E514
	.equiv "<unnamed>::calcSpotLightDirection()", _text + 0x19E5A4
	.equiv "<unnamed>::calcEmissionIntensityMax()", _text + 0x19E750
	.equiv "object::KartParameter::isBike()", _text + 0x19F06C
	.equiv "object::KartParameter::isBikeRideType()", _text + 0x19F0BC
	.equiv "object::KartParameter::isATVRideType()", _text + 0x19F0F0
	.equiv "object::KartParameter::hasGearbox()", _text + 0x19F168
	.equiv "object::KartParameter::getSpringRate()", _text + 0x19F1A0
	.equiv "object::KartParameter::getSpringLengthNormal()", _text + 0x19F1B0
	.equiv "object::KartParameter::getSpringLengthMax()", _text + 0x19F1C8
	.equiv "FUN_0E31F1E0:FID_conflict:object::KartParameter::getTireNumR()", _text + 0x19F1E0
	.equiv "FUN_0E31F1FC:FID_conflict:object::KartParameter::getTireNumR()", _text + 0x19F1FC
	.equiv "object::KartParameter::getSeatRotX()", _text + 0x19F2F8
	.equiv "object::KartParameter::getSusDirRot()", _text + 0x19F318
	.equiv "object::KartParameter::getSusDirLocal()", _text + 0x19F388
	.equiv "FUN_0E31F4A4:FID_conflict:object::KartParameter::getWheelAxleVecLocalR()", _text + 0x19F4A4
	.equiv "FUN_0E31F5B4:FID_conflict:object::KartParameter::getWheelAxleVecLocalR()", _text + 0x19F5B4
	.equiv "object::KartParameter::getArmRootLocalF()", _text + 0x19F6C4
	.equiv "object::KartParameter::getArmRootLocalR()", _text + 0x19F6FC
	.equiv "object::KartParameter::getHeadLightRot()", _text + 0x19FB00
	.equiv "object::KartParameter::getWingOffset()", _text + 0x19FB34
	.equiv "object::KartParameter::getGearboxScale()", _text + 0x19FC18
	.equiv "object::KartParameter::isNormalArmWhenAntiG()", _text + 0x19FDB4
	.equiv "object::KartRigidBody::KartRigidBody()", _text + 0x1A006C
	.equiv "object::KartRigidBody::convToWorldVec()", _text + 0x1A00D8
	.equiv "object::KartRigidBody::convToWorldPos()", _text + 0x1A0190
	.equiv "object::KartRigidBody::convToLocalVec()", _text + 0x1A025C
	.equiv "object::KartRigidBody::extendForceW()", _text + 0x1A0330
	.equiv "object::KartRigidBody::addForceW()", _text + 0x1A037C
	.equiv "object::KartScreenEffect::KartScreenEffect()", _text + 0x1A04E8
	.equiv "object::KartScreenEffect::create()", _text + 0x1A065C
	.equiv "object::KartScreenEffect::searchKartTargetingView()", _text + 0x1A08CC
	.equiv "object::KartScreenEffect::createScreenInk()", _text + 0x1A1814
	.equiv "object::KartScreenEffect::fadeScreenInk()", _text + 0x1A18F8
	.equiv "object::KartScreenEffect::killBlurEffect()", _text + 0x1A19E8
	.equiv "object::KartScreenEffect::setCameraMatrix()", _text + 0x1A1A20
	.equiv "object::KartScreenEffect::calcScreenBlur()", _text + 0x1A1F6C
	.equiv "object::KartScreenEffect::calcScreenMiniTurbo()", _text + 0x1A1FB4
	.equiv "object::KartScreenEffect::calcScreenRocketStart()", _text + 0x1A1FFC
	.equiv "object::KartScreenEffect::calcScreenInk()", _text + 0x1A2044
	.equiv "object::KartScreenEffect::calcScreenWater2()", _text + 0x1A2120
	.equiv "FUN_0E322168:object::KartScreenEffect::calcScreenDigital()", _text + 0x1A2168
	.equiv "FUN_0E3221B0:object::KartScreenEffect::calcScreenDigital()", _text + 0x1A21B0
	.equiv "object::KartSusKit::setEmissionMatColor()", _text + 0x1A2A68
	.equiv "object::KartSusKit::create()", _text + 0x1A2C20
	.equiv "object::KartSusKit::updateRevolutionMaxScale()", _text + 0x1A2E34
	.equiv "object::KartSusKit::updateModelParam()", _text + 0x1A2F0C
	.equiv "object::KartSusKit::calcArmViewVisibleAndResetCalcArm()", _text + 0x1A2FF8
	.equiv "object::KartSusKit::setDynamicScale()", _text + 0x1A4224
	.equiv "object::KartSusKit::calcPosition()", _text + 0x1A434C
	.equiv "object::KartSusKit::calcTirePosLocal()", _text + 0x1A441C
	.equiv "object::KartSusKit::setCamberMoreNegative()", _text + 0x1A451C
	.equiv "object::KartSusKit::calcMove()", _text + 0x1A45EC
	.equiv "object::KartSusKit::calcAntiGRates()", _text + 0x1A4C40
	.equiv "object::KartSusKit::setAntiGSusParameter()", _text + 0x1A4E6C
	.equiv "object::KartSusKit::calcTireDirtColor()", _text + 0x1A4F7C
	.equiv "object::KartSusKit::calcApply()", _text + 0x1A52E4
	.equiv "object::KartSusKit::setTireBoundRejectR()", _text + 0x1A5674
	.equiv "object::KartSusKit::flushTireMark()", _text + 0x1A56B4
	.equiv "object::KartSuspension::getBikeArmModelName()", _text + 0x1A5A24
	.equiv "object::KartSuspension::setArmAntiGVisible()", _text + 0x1A6E84
	.equiv "object::KartSuspension::getCurrentForceFromSpeed()", _text + 0x1A6F2C
	.equiv "object::KartSuspension::reset()", _text + 0x1A6F88
	.equiv "object::KartSuspension::updateModelParam()", _text + 0x1A7128
	.equiv "object::KartSuspension::getInvisibleThreshold()", _text + 0x1A71B8
	.equiv "object::KartSuspension::setCalcArm()", _text + 0x1A71F0
	.equiv "object::KartSuspension::calcPosition()", _text + 0x1A720C
	.equiv "object::KartSuspension::calcMove()", _text + 0x1A7268
	.equiv "object::KartSuspension::getTireArmOffsetScaled()", _text + 0x1A729C
	.equiv "object::KartSuspension::getArmBodyOffsetScaled()", _text + 0x1A730C
	.equiv "object::KartSuspension::calcArmMtxKart()", _text + 0x1A737C
	.equiv "object::KartSuspension::calcSusTypeKartA()", _text + 0x1A7A9C
	.equiv "object::KartSuspension::getSusBodyOffsetScaled()", _text + 0x1A95A0
	.equiv "object::KartSuspension::calcSusTypeBikeB()", _text + 0x1A95FC
	.equiv "object::KartSuspension::calcApply()", _text + 0x1AA338
	.equiv "object::KartSuspension::setDynamicScale()", _text + 0x1AA3F0
	.equiv "object::KartSuspension::addSpringCurrentLength()", _text + 0x1AA428
	.equiv "object::KartSuspension::getHardPointLocalScaled()", _text + 0x1AA4A4
	.equiv "object::KartSuspension::calcHardPointPos()", _text + 0x1AA550
	.equiv "object::KartSuspension::setEndPointAndSusDir()", _text + 0x1AA5F8
	.equiv "object::KartTire::getRotOffsetX()", _text + 0x1AB450
	.equiv "object::KartTire::setWheelAxleVecLocalAndRotOffset()", _text + 0x1AB498
	.equiv "object::KartTire::setCollRadius()", _text + 0x1AB508
	.equiv "object::KartTire::setBaseScale()", _text + 0x1AB540
	.equiv "object::KartTire::setDynamicScale()", _text + 0x1AB57C
	.equiv "object::KartTire::setEmissionMatColor()", _text + 0x1AB5D4
	.equiv "FUN_0E32B7D4:object::KartTire::calcGroundRate()", _text + 0x1AB7D4
	.equiv "object::KartTire::calcMove()", _text + 0x1AB838
	.equiv "object::KartTire::calcAntiGravityRate()", _text + 0x1AB8B8
	.equiv "object::KartTire::getWidthHalf()", _text + 0x1AB8F4
	.equiv "object::KartTire::calcDynamicCollRadius()", _text + 0x1AB90C
	.equiv "object::KartTire::rotateMtxLocalOffsetX()", _text + 0x1ABB50
	.equiv "object::KartTire::rotateMtxCamber()", _text + 0x1ABB78
	.equiv "object::KartTire::rotateMtxSteer()", _text + 0x1ABD90
	.equiv "object::KartTire::getWheelAxleVecLocal()", _text + 0x1ABEB0
	.equiv "object::KartTire::calcRevolutionDRot()", _text + 0x1ABF0C
	.equiv "FUN_0E32C0D8:object::KartTire::calcGroundRate()", _text + 0x1AC0D8
	.equiv "object::KartTire::calcRevolution()", _text + 0x1AC0DC
	.equiv "object::KartTire::calcTireMark()", _text + 0x1AC14C
	.equiv "object::KartTire::calcApply()", _text + 0x1AC5B4
	.equiv "object::KartTire::calcApplyAfter()", _text + 0x1AD948
	.equiv "object::KartTire::setMaterialParamColor()", _text + 0x1AE3D8
	.equiv "object::KartTire::flushTireMark()", _text + 0x1AE478
	.equiv "object::KartTireEffect::getDriftEffectParam()", _text + 0x1AE644
	.equiv "object::KartTireEffect::_setAllEffectInvalidFlag()", _text + 0x1AE794
	.equiv "object::KartTireEffect::setEffectInvalidFlag()", _text + 0x1AE7E0
	.equiv "object::KartTireEffect::calcAntiGLightMatrix()", _text + 0x1B05A0
	.equiv "object::KartTireEffect::calcAntiGEffect()", _text + 0x1B0764
	.equiv "object::KartTireEffect::calcAttrMatrix()", _text + 0x1B0C28
	.equiv "object::KartTireEffect::calcGroundAttrEffect()", _text + 0x1B0DF0
	.equiv "object::KartTireEffect::calcBubbleEffect()", _text + 0x1B113C
	.equiv "object::KartTireEffect::createWheelSpin()", _text + 0x1B135C
	.equiv "object::KartTireEffect::fadeWheelSpin()", _text + 0x1B162C
	.equiv "object::KartTireEffect::calcWheelSpinWindMatrix()", _text + 0x1B19FC
	.equiv "object::KartTireEffect::calcButtomMatrix()", _text + 0x1B1C38
	.equiv "object::KartTireEffect::calcWheelSpin()", _text + 0x1B1DF8
	.equiv "object::KartTireEffect::calcLevelUpDriftEffect()", _text + 0x1B20BC
	.equiv "object::KartTireEffect::fadeDriftEffectNormal()", _text + 0x1B280C
	.equiv "object::KartTireEffect::fadeDriftEffectLong()", _text + 0x1B2B8C
	.equiv "object::KartTireEffect::calcDriftEffect()", _text + 0x1B2C74
	.equiv "object::KartTireEffect::fadeAllDriftEffect()", _text + 0x1B3194
	.equiv "object::KartTireEffect::getDriftEffectOffset()", _text + 0x1B31D0
	.equiv "object::KartTireEffect::calcDriftMatrix()", _text + 0x1B3474
	.equiv "object::KartTireEffect::calcAuraMatrix()", _text + 0x1B3CB8
	.equiv "object::KartTireEffect::calcManualHandle()", _text + 0x1B4144
	.equiv "object::KartTireEffect::calcApplyTire()", _text + 0x1B5244
	.equiv "FUN_0E335630:nn::nex::SystemComponentGroup::TestState()", _text + 0x1B5630
	.equiv "FUN_0E335BD0:FID_conflict:void_EffectLinkUserBase::createProperty2()", _text + 0x1B5BD0
	.equiv "object::KartTireMark::KartTireMark()", _text + 0x1B5CC4
	.equiv "object::KartUnit::KartUnit()", _text + 0x1B6C18
	.equiv "object::KartUnit::isSkipCalcAI()", _text + 0x1B6E40
	.equiv "object::KartUnit::create()", _text + 0x1B6E74
	.equiv "object::KartUnit::updateModelParam()", _text + 0x1B7390
	.equiv "object::KartUnit::setVisibleNotFocusView()", _text + 0x1B75C4
	.equiv "object::KartUnit::setMatrix()", _text + 0x1B7924
	.equiv "object::KartUnit::calcVisible()", _text + 0x1B7C24
	.equiv "object::KartUnit::calcAllWithoutDraw()", _text + 0x1B7DD0
	.equiv "object::KartUnit::applyCameraParam()", _text + 0x1B7E68
	.equiv "object::KartUnitHolder::UnitInfo::clearHeap()", _text + 0x1B80D4
	.equiv "object::KartUnitHolder::UnitInfo::createHeap()", _text + 0x1B8180
	.equiv "object::KartUnitHolder::UnitInfo::createUnit()", _text + 0x1B841C
	.equiv "object::KartUnitHolder::UnitInfo::setDrawFlag()", _text + 0x1B869C
	.equiv "object::KartUnitHolder::UnitInfo::setViewVisible()", _text + 0x1B86A4
	.equiv "object::KartUnitHolder::UnitInfo::setViewVisibleBit()", _text + 0x1B8714
	.equiv "object::KartUnitHolder::UnitInfo::updateAnimationWorldMatrix()", _text + 0x1B88FC
	.equiv "object::KartUnitHolder::UnitInfo::visible()", _text + 0x1B894C
	.equiv "object::KartUnitHolder::UnitInfo::disposeUnit()", _text + 0x1B8AA8
	.equiv "object::KartUnitHolder::destroy1st()", _text + 0x1B8B80
	.equiv "object::KartUnitHolder::UnitInfo::destroyResource()", _text + 0x1B8BD8
	.equiv "object::KartUnitHolder::destroy2nd()", _text + 0x1B8C28
	.equiv "object::KartUnitHolder::UnitInfo::allDestroyRequestPassed()", _text + 0x1B8C80
	.equiv "object::KartUnitHolder::destroyWait()", _text + 0x1B8CB8
	.equiv "object::KartUnitHolder::calcMenu()", _text + 0x1B8D18
	.equiv "object::KartUnitHolder::waitMiiCreate()", _text + 0x1B90C0
	.equiv "object::KartUnitHolder::updateViewWindow()", _text + 0x1B933C
	.equiv "object::KartUnitHolder::updateViewWindowDefault()", _text + 0x1B9360
	.equiv "object::KartUnitHolder::forceInvisible()", _text + 0x1B93B8
	.equiv "object::KartUnitHolder::refreshMiiCreatingFlag()", _text + 0x1B93CC
	.equiv "object::KartUtil::lerpLimit()", _text + 0x1B98FC
	.equiv "object::KartUtil::lerpAdjust()", _text + 0x1B992C
	.equiv "object::KartUtil::lerpLimitAdjust()", _text + 0x1B994C
	.equiv "object::KartUtil::lerpLimitAngle()", _text + 0x1B9984
	.equiv "object::KartUtil::lerpLimitDistance()", _text + 0x1B9B48
	.equiv "object::KartUtil::lerpSlowClamp()", _text + 0x1B9C48
	.equiv "object::KartUtil::roundOffN()", _text + 0x1B9C8C
	.equiv "object::KartUtil::reverseAttWorldX()", _text + 0x1B9D60
	.equiv "object::KartUtil::verticalizeIfOpposite()", _text + 0x1B9D94
	.equiv "object::KartUtil::Spring::Spring()", _text + 0x1B9E28
	.equiv "object::KartUtil::Spring::reset()", _text + 0x1B9EA4
	.equiv "object::KartUtil::Spring::update()", _text + 0x1B9EBC
	.equiv "<unnamed>::convLevel()", _text + 0x1B9FF0
	.equiv "object::KartVehicle::setXluAlpha()", _text + 0x1BD220
	.equiv "object::KartVehicle::checkZeroMtx()", _text + 0x1BD8D4
	.equiv "object::KartVehicle::isInWing()", _text + 0x1BDAAC
	.equiv "object::KartVehicle::calcCamTargetOffsetX()", _text + 0x1BDADC
	.equiv "object::KartVehicle::setMatrix()", _text + 0x1BE2A4
	.equiv "object::KartVehicle::setMatrixAndVel()", _text + 0x1BE330
	.equiv "object::KartVehicle::setVisibleView()", _text + 0x1BE42C
	.equiv "object::KartVehicle::changeCpu()", _text + 0x1BE4E0
	.equiv "object::KartVehicle::endPressed()", _text + 0x1BE50C
	.equiv "object::KartVehicle::endThunder()", _text + 0x1BE560
	.equiv "object::KartVehicle::forceClearAccident()", _text + 0x1BE5C0
	.equiv "object::KartVehicle::clearJumpActionDone()", _text + 0x1BE618
	.equiv "object::KartVehicle::onCutOffFromJugem()", _text + 0x1BE90C
	.equiv "object::KartVehicle::isPlay()", _text + 0x1BE93C
	.equiv "object::KartVehicle::updateModelParam()", _text + 0x1BE964
	.equiv "object::KartVehicle::setCamStopChase()", _text + 0x1BEAF0
	.equiv "object::KartVehicle::calcJugemRecover()", _text + 0x1BEB00
	.equiv "object::KartVehicle::calcPrepare()", _text + 0x1BED08
	.equiv "object::KartVehicle::calcAntiGravity()", _text + 0x1BF294
	.equiv "object::KartVehicle::calcAerialAndGlide()", _text + 0x1BF474
	.equiv "object::KartVehicle::calcPosition()", _text + 0x1BF848
	.equiv "<unnamed>::calcStartDashLevel()", _text + 0x1BF940
	.equiv "object::KartVehicle::calcStateStar()", _text + 0x1BF9E0
	.equiv "object::KartVehicle::calcStateGesso()", _text + 0x1BFA4C
	.equiv "object::KartVehicle::calcStateKiller()", _text + 0x1BFA74
	.equiv "object::KartVehicle::calcStateThunder()", _text + 0x1BFAE0
	.equiv "object::KartVehicle::calcStatePressed()", _text + 0x1BFBC8
	.equiv "object::KartVehicle::calcStateSlipStream()", _text + 0x1BFCC4
	.equiv "object::KartVehicle::calcStateMuteki()", _text + 0x1BFE04
	.equiv "object::KartVehicle::calcEnableJumpAction()", _text + 0x1BFE30
	.equiv "object::KartVehicle::startZombie()", _text + 0x1BFE48
	.equiv "object::KartVehicle::calcStateRetireVanish()", _text + 0x1BFE94
	.equiv "object::KartVehicle::calcStateVanishFinish()", _text + 0x1BFFF8
	.equiv "object::KartVehicle::checkUnderWater()", _text + 0x1C00A4
	.equiv "object::KartVehicle::calcWetAndWater()", _text + 0x1C01CC
	.equiv "object::KartVehicle::calcItemPackun()", _text + 0x1C03F8
	.equiv "object::KartVehicle::calcState()", _text + 0x1C0450
	.equiv "object::KartVehicle::calcMove()", _text + 0x1C0B54
	.equiv "object::KartVehicle::calcApplyReplay()", _text + 0x1C0D9C
	.equiv "object::KartVehicle::calcXluAlpha()", _text + 0x1C0FC8
	.equiv "object::KartVehicle::calcApply()", _text + 0x1C12B8
	.equiv "object::KartVehicle::calcDraw()", _text + 0x1C1A1C
	.equiv "object::KartVehicle::isJugemRecovering()", _text + 0x1C1A88
	.equiv "object::KartVehicle::getDynamicRotOffsetZ()", _text + 0x1C1B0C
	.equiv "object::KartVehicle::isInWingOrReadyCannon()", _text + 0x1C1B40
	.equiv "object::KartVehicle::isInWheelSpin()", _text + 0x1C1B90
	.equiv "object::KartVehicle::isInAntiGComplete()", _text + 0x1C1BB8
	.equiv "object::KartVehicle::isJugemStuck()", _text + 0x1C1BDC
	.equiv "object::KartVehicle::startPressed()", _text + 0x1C1C0C
	.equiv "object::KartVehicle::checkPressed()", _text + 0x1C1C70
	.equiv "object::KartVehicle::onBattleCollide()", _text + 0x1C1D00
	.equiv "object::KartVehicle::calcPressedReject()", _text + 0x1C1E20
	.equiv "object::KartVehicle::collideReactKart()", _text + 0x1C1E38
	.equiv "object::KartVehicle::forceCloseWing()", _text + 0x1C2B5C
	.equiv "object::KartVehicle::recoverMatrixAndUpVecLocal()", _text + 0x1C2B6C
	.equiv "object::KartVehicle::isJugemFinalMtxFixed()", _text + 0x1C2BFC
	.equiv "object::KartVehicle::startDashPackun()", _text + 0x1C2C8C
	.equiv "object::KartVehicle::startKiller()", _text + 0x1C2CAC
	.equiv "object::KartVehicle::forceSetJumpActionDone()", _text + 0x1C2E14
	.equiv "FUN_0E342E4C:object::KartVehicle::startJumpAction()", _text + 0x1C2E4C
	.equiv "FUN_0E34332C:object::KartVehicle::startJumpAction()", _text + 0x1C332C
	.equiv "object::KartVehicle::forceGlide()", _text + 0x1C3330
	.equiv "object::KartVehicle::waterJump()", _text + 0x1C33F4
	.equiv "object::KartVehicle::endKiller()", _text + 0x1C361C
	.equiv "object::KartVehicle::onBattleCrash()", _text + 0x1C36BC
	.equiv "object::KartVehicleBody::calcPosition()", _text + 0x1C3D68
	.equiv "object::KartVehicleBody::calcMove()", _text + 0x1C3E1C
	.equiv "object::KartVehicleBody::calcApply()", _text + 0x1C3FB0
	.equiv "object::KartVehicleControl::KartVehicleControl()", _text + 0x1C4C4C
	.equiv "object::KartVehicleControl::getRaceController()", _text + 0x1C4D88
	.equiv "object::KartVehicleControl::setHornEnableToRaceController()", _text + 0x1C4DE0
	.equiv "object::KartVehicleControl::calcMoveKiller()", _text + 0x1C50C8
	.equiv "object::KartVehicleControl::calcMoveMasterGoal()", _text + 0x1C513C
	.equiv "object::KartVehicleCpu::KartVehicleCpu()", _text + 0x1C530C
	.equiv "object::KartVehicleCpu::calcPosition()", _text + 0x1C549C
	.equiv "object::KartVehicleDash::clear()", _text + 0x1C58E4
	.equiv "object::KartVehicleDash::start()", _text + 0x1C5948
	.equiv "object::KartVehicleDash::calcApply()", _text + 0x1C62E4
	.equiv "object::KartVehicleDash::isOnDrift1()", _text + 0x1C6308
	.equiv "object::KartVehicleDash::isOnDrift2()", _text + 0x1C6330
	.equiv "object::KartVehicleDash::isOnStartDash()", _text + 0x1C63A0
	.equiv "object::KartVehicleDash::isOnCollAntiG()", _text + 0x1C63C8
	.equiv "FUN_0E3463F0:object::KartVehicleDash::isIgnoreDirt()", _text + 0x1C63F0
	.equiv "object::KartVehicleDash::isIncludeStarRing()", _text + 0x1C6408
	.equiv "object::KartVehicleDash::getLevelFrameLeft()", _text + 0x1C6430
	.equiv "object::KartVehicleDrift::setHangOnParam()", _text + 0x1C65A8
	.equiv "object::KartVehicleDrift::setButton()", _text + 0x1C6954
	.equiv "object::KartVehicleDrift::calcPosition()", _text + 0x1C69B4
	.equiv "object::KartVehicleDrift::calcOllie()", _text + 0x1C69C8
	.equiv "object::KartVehicleDrift::getSwingJumpActionInput()", _text + 0x1C6C04
	.equiv "object::KartVehicleDrift::isDriftL()", _text + 0x1C6C54
	.equiv "object::KartVehicleDrift::isDriftR()", _text + 0x1C6C68
	.equiv "object::KartVehicleDrift::isDrift()", _text + 0x1C6C7C
	.equiv "object::KartVehicleDrift::decideJumpAction()", _text + 0x1C6CC4
	.equiv "object::KartVehicleDrift::doJumpAction()", _text + 0x1C6FF8
	.equiv "object::KartVehicleDrift::calcJumpAction()", _text + 0x1C7060
	.equiv "object::KartVehicleDrift::calcWheelSpin()", _text + 0x1C7100
	.equiv "object::KartVehicleDrift::SinDamp::damp()", _text + 0x1C765C
	.equiv "object::KartVehicleDrift::SinDamp::mulVal()", _text + 0x1C77B0
	.equiv "object::KartVehicleDrift::doOllieForce()", _text + 0x1C77D8
	.equiv "object::KartVehicleDrift::addDriftSign()", _text + 0x1C787C
	.equiv "object::KartVehicleDrift::initOllie()", _text + 0x1C78BC
	.equiv "object::KartVehicleDrift::initBrakeTurn()", _text + 0x1C7ABC
	.equiv "object::KartVehicleDrift::calcStateBrakeTurn()", _text + 0x1C7E6C
	.equiv "object::KartVehicleDrift::SinDamp::clampValAbs()", _text + 0x1C807C
	.equiv "object::KartVehicleDrift::initDrift()", _text + 0x1C80B8
	.equiv "object::KartVehicleDrift::isStartBrakeTurn()", _text + 0x1C88E4
	.equiv "object::KartVehicleDrift::convSteerToInOutRate()", _text + 0x1C8950
	.equiv "object::KartVehicleDrift::calcDAngle()", _text + 0x1C8E64
	.equiv "object::KartVehicleDrift::isAutoDriftL()", _text + 0x1C8EBC
	.equiv "object::KartVehicleDrift::isAutoDriftR()", _text + 0x1C8ED0
	.equiv "object::KartVehicleDrift::isAutoDrift()", _text + 0x1C8EE4
	.equiv "object::KartVehicleDrift::isDriftMiniTurbo2()", _text + 0x1C8F2C
	.equiv "object::KartVehicleDrift::calcMiniTurboCount()", _text + 0x1C8F80
	.equiv "object::KartVehicleDrift::isDriftJump()", _text + 0x1C9980
	.equiv "object::KartVehicleDrift::getDriftDir()", _text + 0x1C9994
	.equiv "object::KartVehicleDrift::getAngleSlideRatio()", _text + 0x1C9EC4
	.equiv "object::KartVehicleDrift::getCounterSteer()", _text + 0x1C9ED8
	.equiv "object::KartVehicleDrift::isDriftMiniTurbo1()", _text + 0x1C9F40
	.equiv "object::KartVehicleDrift::isDriftInVol()", _text + 0x1C9FE8
	.equiv "object::KartVehicleDrift::isDriftOutVol()", _text + 0x1CA028
	.equiv "object::KartVehicleDrift::isDriftJumpBeforeDriftFrame()", _text + 0x1CA068
	.equiv "object::KartVehicleDrift::isBrakeTurn()", _text + 0x1CA0B4
	.equiv "object::KartVehicleDrift::isSideBrakeOn()", _text + 0x1CA0C8
	.equiv "object::KartVehicleDrift::isBurnOut()", _text + 0x1CA0DC
	.equiv "object::KartVehicleDrift::getDriftRate0to1()", _text + 0x1CA12C
	.equiv "object::KartVehicleGlide::checkWallCollide()", _text + 0x1CA5F4
	.equiv "object::KartVehicleGlide::closeWing()", _text + 0x1CA6D4
	.equiv "object::KartVehicleGlide::openWing()", _text + 0x1CA780
	.equiv "object::KartVehicleGlide::checkWingCannonState()", _text + 0x1CA9D4
	.equiv "object::KartVehicleGlide::calcDrive()", _text + 0x1CB140
	.equiv "object::KartVehicleGlide::calcUpVector()", _text + 0x1CBC54
	.equiv "object::KartVehicleGlide::calcPathLineForce()", _text + 0x1CBCEC
	.equiv "object::KartVehicleGlide::calcOutOfBounds()", _text + 0x1CBED4
	.equiv "object::KartVehicleGlide::calcDriveSpeed()", _text + 0x1CC8C4
	.equiv "object::KartVehicleMove::setMaxSpeedParam()", _text + 0x1CDEFC
	.equiv "object::KartVehicleMove::setTurnParam()", _text + 0x1CE0B8
	.equiv "<unnamed>::calcAccelFromSpeedRate()", _text + 0x1CE2B4
	.equiv "<unnamed>::calcDriftDashAccelFromSpeedRate()", _text + 0x1CE310
	.equiv "object::KartVehicleMove::getCollGroundCenter()", _text + 0x1CE744
	.equiv "object::KartVehicleMove::setMatrix()", _text + 0x1CE7C8
	.equiv "object::KartVehicleMove::setSpeed()", _text + 0x1CECA0
	.equiv "object::KartVehicleMove::setMatrixAndVel()", _text + 0x1CECE4
	.equiv "object::KartVehicleMove::calcPrepare()", _text + 0x1CF3E8
	.equiv "object::KartVehicleMove::getGravity()", _text + 0x1D0584
	.equiv "<unnamed>::getSteerLerpRate()", _text + 0x1D05C4
	.equiv "object::KartVehicleMove::calcSteerVolForDrive()", _text + 0x1D05D8
	.equiv "object::KartVehicleMove::calcSteerVolForAppear()", _text + 0x1D09D4
	.equiv "object::KartVehicleMove::calcControl()", _text + 0x1D0E24
	.equiv "object::KartVehicleMove::calcReactReduceSpeed()", _text + 0x1D0EF4
	.equiv "object::KartVehicleMove::calcReactInertiaVec()", _text + 0x1D1210
	.equiv "object::KartVehicleMove::getInertiaResistNormal()", _text + 0x1D1264
	.equiv "object::KartVehicleMove::setInertiaResistLoseGrip()", _text + 0x1D12C0
	.equiv "object::KartVehicleMove::extendReactInertiaForce()", _text + 0x1D1334
	.equiv "object::KartVehicleMove::calcReactInertiaRot()", _text + 0x1D1614
	.equiv "object::KartVehicleMove::calcWallEffectAndRumble()", _text + 0x1D1F70
	.equiv "object::KartVehicleMove::calcCollisionWall()", _text + 0x1D1FE4
	.equiv "object::KartVehicleMove::applyRejectOnce()", _text + 0x1D2198
	.equiv "object::KartVehicleMove::updateJumpActionProperty()", _text + 0x1D21E4
	.equiv "object::KartVehicleMove::updateUpVecTarget()", _text + 0x1D221C
	.equiv "object::KartVehicleMove::calcBoundTrampoline()", _text + 0x1D2858
	.equiv "object::KartVehicleMove::getInertiaLocalVec()", _text + 0x1D3DB4
	.equiv "object::KartVehicleMove::calcCollisionGroundAssist()", _text + 0x1D4B58
	.equiv "FUN_0E354C1C:object::KartVehicleMove::calcOnGroundAndAirCount()", _text + 0x1D4C1C
	.equiv "object::KartVehicleMove::calcCollision()", _text + 0x1D52BC
	.equiv "object::KartVehicleMove::calcDrive()", _text + 0x1D541C
	.equiv "object::KartVehicleMove::calcWater()", _text + 0x1D596C
	.equiv "object::KartVehicleMove::calcUpVector()", _text + 0x1D62DC
	.equiv "object::KartVehicleMove::calcDriveVectorWater()", _text + 0x1D6754
	.equiv "object::KartVehicleMove::calcSideVector()", _text + 0x1D7968
	.equiv "object::KartVehicleMove::calcSpeed()", _text + 0x1D7A04
	.equiv "object::KartVehicleMove::calcMove()", _text + 0x1D8338
	.equiv "object::KartVehicleMove::calcBikeHangOnLean()", _text + 0x1D8464
	.equiv "object::KartVehicleMove::calcMoveResult()", _text + 0x1D87B8
	.equiv "object::KartVehicleMove::calcApply()", _text + 0x1D89BC
	.equiv "FUN_0E358E24:object::KartVehicleMove::calcOnGroundAndAirCount()", _text + 0x1D8E24
	.equiv "object::KartVehicleMove::forceOuterMulSpeed()", _text + 0x1D9230
	.equiv "object::KartVehicleMove::forceReflectInertia()", _text + 0x1D944C
	.equiv "object::KartVehicleMove::forceStop()", _text + 0x1D95AC
	.equiv "object::KartVehicleMove::isJumpActionTiming()", _text + 0x1D9624
	.equiv "object::KartVehicleMove::isJumpActionTimingSmall()", _text + 0x1D96E4
	.equiv "object::KartVehicleMove::getBoundMass()", _text + 0x1D9740
	.equiv "object::KartVehicleMove::turnDriverHeadToKart()", _text + 0x1D9800
	.equiv "object::KartVehicleMove::collideReactWallObject()", _text + 0x1DA144
	.equiv "object::KartVehicleMove::rejectSpinDash()", _text + 0x1DA53C
	.equiv "object::KartVehicleMove::turnDriverHeadToObject()", _text + 0x1DA7BC
	.equiv "object::KartVehicleMove::isOnLastDashPanel()", _text + 0x1DAA38
	.equiv "object::KartVehicleMove::onAccident()", _text + 0x1DAA4C
	.equiv "object::KartVehicleMove::getUpVecForCamera()", _text + 0x1DAA84
	.equiv "object::KartVehicleMove::getAttYVecForCamera()", _text + 0x1DAAF4
	.equiv "object::KartVehicleMove::forceSetMiniTurboCounter()", _text + 0x1DAB84
	.equiv "object::KartVehicleMove::forceDash()", _text + 0x1DABB4
	.equiv "object::KartVehicleNetData::readDriveData()", _text + 0x1DAE58
	.equiv "object::KartVehicleNet::KartVehicleNet()", _text + 0x1DB3E0
	.equiv "object::KartVehicleNet::setRecvData()", _text + 0x1DB7E0
	.equiv "object::KartVehicleNet::resetParamOnWarp()", _text + 0x1DBB94
	.equiv "object::KartVehicleNet::updateLapRank()", _text + 0x1DBC14
	.equiv "object::KartVehicleNet::warp()", _text + 0x1DBC68
	.equiv "object::KartVehicleNet::checkSectorWarp()", _text + 0x1DBD18
	.equiv "object::KartVehicleNet::checkWarp()", _text + 0x1DBF38
	.equiv "object::KartVehicleNet::checkIllegalMove()", _text + 0x1DC080
	.equiv "object::KartVehicleNet::finishJugem()", _text + 0x1DC4F8
	.equiv "object::KartVehicleNet::updatePathInfoFromSpecialObj()", _text + 0x1DC548
	.equiv "object::KartVehicleNet::updatePathInfo()", _text + 0x1DC6E0
	.equiv "object::KartVehicleNet::checkNarrowRoute()", _text + 0x1DD38C
	.equiv "object::KartVehicleNet::checkCliffSensor()", _text + 0x1DD8E0
	.equiv "object::KartVehicleNet::checkHarassment()", _text + 0x1DE014
	.equiv "object::KartVehicleNet::calcMove()", _text + 0x1DE1A4
	.equiv "object::KartVehicleReact::KartVehicleReact()", _text + 0x1E0BD0
	.equiv "FUN_0E360CD8:object::KartVehicleReact::reset()", _text + 0x1E0CD8
	.equiv "object::KartVehicleReact::initSpinCommon()", _text + 0x1E0D5C
	.equiv "object::KartVehicleReact::calcAccidentSpin1()", _text + 0x1E0F94
	.equiv "object::KartVehicleReact::calcAccidentSpin2()", _text + 0x1E10A0
	.equiv "object::KartVehicleReact::initCrashCommon()", _text + 0x1E11AC
	.equiv "object::KartVehicleReact::calcAccidentCrash()", _text + 0x1E18C8
	.equiv "object::KartVehicleReact::initHopCommon()", _text + 0x1E1F14
	.equiv "object::KartVehicleReact::calcAccidentHop()", _text + 0x1E1F54
	.equiv "object::KartVehicleReact::initFreezeCommon()", _text + 0x1E202C
	.equiv "object::KartVehicleReact::calcAccidentFreeze()", _text + 0x1E2078
	.equiv "object::KartVehicleReact::calcAccident()", _text + 0x1E2144
	.equiv "object::KartVehicleReact::calcReaction()", _text + 0x1E22E4
	.equiv "object::KartVehicleReact::getBoxCol()", _text + 0x1E233C
	.equiv "object::KartVehicleReact::reactWall()", _text + 0x1E2388
	.equiv "object::KartVehicleReact::requestObjHitReactSound()", _text + 0x1E2580
	.equiv "object::KartVehicleReact::reactBound()", _text + 0x1E25F4
	.equiv "object::KartVehicleReact::reactReject()", _text + 0x1E2654
	.equiv "object::KartVehicleReact::reactForce()", _text + 0x1E2730
	.equiv "<unnamed>::getAcdPriority()", _text + 0x1E2D84
	.equiv "object::KartVehicleReact::getCrashDirectionLevel()", _text + 0x1E2D98
	.equiv "object::KartVehicleReact::calcCrashLRVecW()", _text + 0x1E2F80
	.equiv "object::KartVehicleReact::reactAccidentCommon()", _text + 0x1E3110
	.equiv "<unnamed>::reactSpin2acd()", _text + 0x1E3540
	.equiv "FUN_0E3635BC:FID_conflict:object::KartVehicleReact::reactSpin1_MapObj()", _text + 0x1E35BC
	.equiv "FUN_0E363638:FID_conflict:object::KartVehicleReact::reactSpin1_MapObj()", _text + 0x1E3638
	.equiv "object::KartVehicleReact::reactCrashDir_MapObj()", _text + 0x1E36B4
	.equiv "object::KartVehicleReact::reactCrashDirBig_MapObj()", _text + 0x1E36FC
	.equiv "object::KartVehicleReact::reactCrashLR_MapObj()", _text + 0x1E3744
	.equiv "object::KartVehicleReact::reactCrashLRSmall_MapObj()", _text + 0x1E378C
	.equiv "object::KartVehicleReact::reactCrashSmall_MapObj()", _text + 0x1E37D4
	.equiv "FUN_0E36388C:FID_conflict:object::KartVehicleReact::reactSpin2()", _text + 0x1E388C
	.equiv "FUN_0E3638D8:FID_conflict:object::KartVehicleReact::reactSpin2()", _text + 0x1E38D8
	.equiv "object::KartVehicleReact::reactCrashFwd()", _text + 0x1E3924
	.equiv "object::KartVehicleReact::reactHop()", _text + 0x1E3970
	.equiv "object::KartVehicleReact::reactCrashLRSmall()", _text + 0x1E39BC
	.equiv "object::KartVehicleReact::reactCrashDir()", _text + 0x1E3A08
	.equiv "object::KartVehicleReact::reactCrashSmall()", _text + 0x1E3A54
	.equiv "FUN_0E363AA0:object::KartVehicleReact::reset()", _text + 0x1E3AA0
	.equiv "object::KartVehicleReact::isAccidentAirCrash()", _text + 0x1E3ABC
	.equiv "object::KartVehicleReact::getCrashDirectionPos()", _text + 0x1E3AD4
	.equiv "object::KartVehicleReact::reactAccidentNet()", _text + 0x1E3C60
	.equiv "object::KartVehicleTrick::KartVehicleTrick()", _text + 0x1E3E8C
	.equiv "object::KartVehicleTrick::calcPosition()", _text + 0x1E42AC
	.equiv "object::KartVehicleTrick::calcMove()", _text + 0x1E4330
	.equiv "object::KartVehicleTrick::calcApply()", _text + 0x1E51AC
	.equiv "object::KartVehicleTrick::startAnim()", _text + 0x1E5200
	.equiv "object::KartVehicleTrick::forceClearAnim()", _text + 0x1E5250
	.equiv "void_sead::Matrix33CalcCommon::transpose()", _text + 0x1E5D28
	.equiv "void_sead::Matrix33CalcCommon::makeRzxyIdx()", _text + 0x1E5D5C
	.equiv "object::KartWingPath::clear()", _text + 0x1E5E88
	.equiv "object::KartWingPath::KartWingPath()", _text + 0x1E5EE0
	.equiv "object::KartWingPath::applyParam()", _text + 0x1E61D4
	.equiv "object::KartWingPath::startCur()", _text + 0x1E6440
	.equiv "object::KartWingPath::startFwd()", _text + 0x1E663C
	.equiv "object::KartWingPath::calcCannonLeftFrame()", _text + 0x1E6780
	.equiv "object::KartWingPath::updateCur()", _text + 0x1E68B8
	.equiv "object::KartWingPath::updateFwd()", _text + 0x1E6BF4
	.equiv "object::KartWingPathData::getPointRadius()", _text + 0x1E7014
	.equiv "object::KartWingPathData::setup()", _text + 0x1E7050
	.equiv "object::KartWingPathData::KartWingPathData()", _text + 0x1E7484
	.equiv "object::KartWingPathData::setupPointData()", _text + 0x1E75E8
	.equiv "object::KartWingPathData::judgeStartPoint()", _text + 0x1E75F8
	.equiv "object::KartWingPathData::calcStartPoint()", _text + 0x1E76A8
	.equiv "object::KartWingPathData::getPoint()", _text + 0x1E77D8
	.equiv "object::KartWingPathData::getLength()", _text + 0x1E792C
	.equiv "object::KartWingPathData::isCannon()", _text + 0x1E7964
	.equiv "object::MapObjSmCharaBase::reserve()", _text + 0x1E7AF4
	.equiv "object::MapObjSmCharaBase::release()", _text + 0x1E7C24
	.equiv "object::MapObjSmCharaManager::calcBeforeStructure()", _text + 0x1E7F3C
	.equiv "object::MapObjSmCharaManager::createMapObj()", _text + 0x1E8508
	.equiv "object::MapObjSmCharaManager::createModel()", _text + 0x1E8AA8
	.equiv "object::MapObjSmCharaManager::exit()", _text + 0x1E8DFC
	.equiv "object::MapObjSmCharaManager::updateCamera()", _text + 0x1E9050
	.equiv "object::MapObjSmToadManager::afterCreateModel()", _text + 0x1E95F8
	.equiv "object::MapObjSmHeyhoManager::afterCreateModel()", _text + 0x1E9CB0
	.equiv "object::MapObjSmYoshiManager::afterCreateModel()", _text + 0x1EA364
	.equiv "object::IMapObjBounce::IMapObjBounce()", _text + 0x1EC06C
	.equiv "object::IMapObjBounce::bounce_start()", _text + 0x1EC148
	.equiv "object::IMapObjBounce::bounce_calc()", _text + 0x1EC22C
	.equiv "object::IMapObjRhythm::IMapObjRhythm()", _text + 0x1EC708
	.equiv "object::IMapObjRhythm::Rhythm_calcBefore()", _text + 0x1EC874
	.equiv "object::IMapObjSafeRevive::safeRevive_init()", _text + 0x1EC9E0
	.equiv "object::IMapObjSafeRevive::safeRevive_isRevivable()", _text + 0x1ECB98
	.equiv "object::MapObjBCCannon::resetObj()", _text + 0x1EDA50
	.equiv "FUN_0E36EA2C:bool_EffectLinkUserBase::isExistAction()", _text + 0x1EEA2C
	.equiv "FUN_0E36EBA0:void_EffectLinkUserBase::createProperty1()", _text + 0x1EEBA0
	.equiv "object::MapObjCarSurf::createCollision()", _text + 0x1EF560
	.equiv "object::MapObjCarSurf::setupPrimCol()", _text + 0x1EF7B8
	.equiv "`global_constructor_keyed_to'_17_MapObjCarSurf_cpp_41915f13", _text + 0x1EFBB4
	.equiv "FUN_0E373258:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x1F3258
	.equiv "FUN_0E3733CC:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x1F33CC
	.equiv "FUN_0E37642C:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x1F642C
	.equiv "FUN_0E3765A0:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x1F65A0
	.equiv "FUN_0E3773FC:FID_conflict:`global_constructor_keyed_to'_16_MapObjSlRope_cpp_391e37b5", _text + 0x1F73FC
	.equiv "FUN_0E37A44C:FID_conflict:`global_constructor_keyed_to'_16_MapObjSlRope_cpp_391e37b5", _text + 0x1FA44C
	.equiv "FUN_0E38329C:bool_EffectLinkUserBase::isExistAction()", _text + 0x20329C
	.equiv "FUN_0E383410:void_EffectLinkUserBase::createProperty1()", _text + 0x203410
	.equiv "FUN_0E384CE0:object::MapObjCmnPackun::enter()", _text + 0x204CE0
	.equiv "FUN_0E385090:object::MapObjCmnPackun::getWaitFrm()", _text + 0x205090
	.equiv "FUN_0E3861B4:object::MapObjCmnPackun::forecastItemPos_()", _text + 0x2061B4
	.equiv "FUN_0E386354:object::MapObjCmnPackun::calcAttackPos_()", _text + 0x206354
	.equiv "FUN_0E389BEC:bool_EffectLinkUserBase::isExistAction()", _text + 0x209BEC
	.equiv "FUN_0E389D60:void_EffectLinkUserBase::createProperty1()", _text + 0x209D60
	.equiv "FUN_0E3962A0:bool_EffectLinkUserBase::isExistAction()", _text + 0x2162A0
	.equiv "FUN_0E396414:void_EffectLinkUserBase::createProperty1()", _text + 0x216414
	.equiv "FUN_0E397AEC:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x217AEC
	.equiv "FUN_0E397C60:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x217C60
	.equiv "FUN_0E3993DC:object::MapObjPukupuku::MapObjPukupuku()", _text + 0x2193DC
	.equiv "FUN_0E39A75C:FID_conflict:void_object::MapObjGenerator::createChild()", _text + 0x21A75C
	.equiv "FUN_0E3A65F8:bool_EffectLinkUserBase::isExistAction()", _text + 0x2265F8
	.equiv "FUN_0E3A676C:void_EffectLinkUserBase::createProperty1()", _text + 0x22676C
	.equiv "FUN_0E3A6A94:void_sead::Matrix34CalcCommon::calcRPY()", _text + 0x226A94
	.equiv "bool_sead::Matrix33CalcCommon::makeVectorRotation()", _text + 0x226B94
	.equiv "FUN_0E3AAF68:bool_EffectLinkUserBase::isExistAction()", _text + 0x22AF68
	.equiv "FUN_0E3AB0DC:void_EffectLinkUserBase::createProperty1()", _text + 0x22B0DC
	.equiv "FUN_0E3AFF9C:object::Recorder_*object::CreateRecorderF32NoCompFamily()", _text + 0x22FF9C
	.equiv "FUN_0E3B0114:FID_conflict:object::Recorder_*object::CreateRecorderF32CompFamily()", _text + 0x230114
	.equiv "FUN_0E3B0344:FID_conflict:object::Recorder_*object::CreateRecorderF32CompFamily()", _text + 0x230344
	.equiv "FUN_0E3B0574:FID_conflict:object::Recorder_*object::CreateRecorderF32CompFamily()", _text + 0x230574
	.equiv "FUN_0E3B07A4:FID_conflict:object::Recorder_*object::CreateRecorderF32CompFamily()", _text + 0x2307A4
	.equiv "FUN_0E3B09D4:object::Recorder_*object::CreateRecorderF32Family()", _text + 0x2309D4
	.equiv "FUN_0E3B0DC8:object::Recorder_*object::CreateRecorderF32Family()", _text + 0x230DC8
	.equiv "FUN_0E3B0F10:object::MapObjFcClown::setVisibleImpl()", _text + 0x230F10
	.equiv "FUN_0E3B0F90:object::MapObjFcClown::enterObj()", _text + 0x230F90
	.equiv "FUN_0E3B10C0:object::MapObjFcClown::updateToads()", _text + 0x2310C0
	.equiv "FUN_0E3B12D4:object::MapObjFcClown::addToad()", _text + 0x2312D4
	.equiv "FUN_0E3B55C4:bool_EffectLinkUserBase::isExistAction()", _text + 0x2355C4
	.equiv "FUN_0E3B5738:void_EffectLinkUserBase::createProperty1()", _text + 0x235738
	.equiv "FUN_0E3B6B8C:object::MapObjRhythmBase::enterObj()", _text + 0x236B8C
	.equiv "FUN_0E3BBFA8:object::BlockChoropoo::setup()", _text + 0x23BFA8
	.equiv "FUN_0E3C2980:object::MapObjKoopaRoad::getRTMtxForChild()", _text + 0x242980
	.equiv "FUN_0E3C7994:object::MapObjN64RRoad::getRTMtxForChild()", _text + 0x247994
	.equiv "FUN_0E3D26A0:object::MapObjDossun::setupPrimCol()", _text + 0x2526A0
	.equiv "FUN_0E3D28FC:object::MapObjDossun::reactAgainstKart()", _text + 0x2528FC
	.equiv "FUN_0E3D4ACC:bool_EffectLinkUserBase::isExistAction()", _text + 0x254ACC
	.equiv "FUN_0E3D4C40:void_EffectLinkUserBase::createProperty1()", _text + 0x254C40
	.equiv "FUN_0E3DA934:bool_EffectLinkUserBase::isExistAction()", _text + 0x25A934
	.equiv "FUN_0E3DAAA8:void_EffectLinkUserBase::createProperty1()", _text + 0x25AAA8
	.equiv "FUN_0E3DFB94:object::MapObjManagerBase::bindModelWithAoObject()", _text + 0x25FB94
	.equiv "FUN_0E3E6608:FID_conflict:nw::ut::MessageQueue::MessageQueue()", _text + 0x266608
	.equiv "FUN_0E3E6634:object::JugemMove::setTargetPosFromTrans()", _text + 0x266634
	.equiv "FUN_0E3EBF8C:FID_conflict:`global_constructor_keyed_to'_16_MapObjSlRope_cpp_391e37b5", _text + 0x26BF8C
	.equiv "FUN_0E3F0564:FID_conflict:object::MapObjYacht::calcObj()", _text + 0x270564
	.equiv "FUN_0E3F1E40:FID_conflict:`global_constructor_keyed_to'_20_MapObjTechnoStep_cpp_8225c8dd", _text + 0x271E40
	.equiv "object::MapObjDonutsRoad::getRTMtxForChild()", _text + 0x27346C
	.equiv "object::MapObjDonutsRoad::calcOriginalMtxFromDist()", _text + 0x2738B8
	.equiv "object::MapObjDonutsRoad::calcMtxFromDist()", _text + 0x274264
	.equiv "object::MapObjDonutsRoad::calcIdx()", _text + 0x27465C
	.equiv "object::BlockDonutsRoad::rejectFloor()", _text + 0x274908
	.equiv "object::MapObjBDFlagSquare2Manager::afterCreateModel()", _text + 0x275674
	.equiv "object::MapObjJumpPukupuku::stateJump()", _text + 0x2774C8
	.equiv "object::MapObjJumpPukuGenerator::MapObjJumpPukuGenerator()", _text + 0x277A90
	.equiv "object::MapObjJumpPukuClipGenerator::resetObj()", _text + 0x277CB4
	.equiv "`global_constructor_keyed_to'_22_MapObjJumpPukupuku_cpp_8225c8dd", _text + 0x277D30
	.equiv "FUN_0E3F8AD8:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x278AD8
	.equiv "FUN_0E3F8C4C:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x278C4C
	.equiv "object::MapObjKoopaClaw::setupPrimCol()", _text + 0x27A648
	.equiv "object::MapObjKoopaClaw::stateInitDamage()", _text + 0x27B1E8
	.equiv "FUN_0E3FC298:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x27C298
	.equiv "FUN_0E3FC40C:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x27C40C
	.equiv "object::MapObjAccelRingBase::MapObjAccelRingBase()", _text + 0x27C73C
	.equiv "object::MapObjAccelRing::MapObjAccelRing()", _text + 0x27CBE8
	.equiv "object::MapObjN64RAccelRingBase::enterObj()", _text + 0x27D478
	.equiv "object::MapObjN64RAccelRing::MapObjN64RAccelRing()", _text + 0x27D4EC
	.equiv "`global_constructor_keyed_to'_19_MapObjAccelRing_cpp_8225c8dd", _text + 0x27DF0C
	.equiv "FUN_0E400470:FID_conflict:void_object::MapObjGenerator::createChild()", _text + 0x280470
	.equiv "FUN_0E400CBC:FID_conflict:void_object::MapObjGenerator::createChild()", _text + 0x280CBC
	.equiv "object::MapObjSmHelicopter::beforeModelUpdateWorldMatrix()", _text + 0x281510
	.equiv "FID_conflict:object::MapObjSmDash::MapObjSmDash()", _text + 0x2817D0
	.equiv "object::MapObjDkAirship::calcObj()", _text + 0x281998
	.equiv "object::MapObjSmHelicopter::enterObj()", _text + 0x281D88
	.equiv "FUN_0E40234C:FID_conflict:object::MapObjWPBoat::MapObjWPBoat()", _text + 0x28234C
	.equiv "object::MapObjClBattleShipS::calcObj()", _text + 0x282458
	.equiv "`global_constructor_keyed_to'_17_MapObjAirShip_cpp_8225c8dd", _text + 0x2826F4
	.equiv "FID_conflict:object::MapObjSmCharaBase::MapObjSmCharaBase()", _text + 0x28318C
	.equiv "`global_constructor_keyed_to'_17_MapObjAPGuide_cpp_651de35f", _text + 0x28334C
	.equiv "object::MapObjAPJetFlyGenerator::reactKart()", _text + 0x2844EC
	.equiv "FUN_0E406168:bool_EffectLinkUserBase::isExistAction()", _text + 0x286168
	.equiv "FUN_0E4062DC:void_EffectLinkUserBase::createProperty1()", _text + 0x2862DC
	.equiv "object::MapObjBCExplosion::enterObj()", _text + 0x28711C
	.equiv "FUN_0E407DCC:bool_EffectLinkUserBase::isExistAction()", _text + 0x287DCC
	.equiv "FUN_0E407F40:void_EffectLinkUserBase::createProperty1()", _text + 0x287F40
	.equiv "`global_constructor_keyed_to'_16_MapObjCannon_cpp_8225c8dd", _text + 0x288774
	.equiv "FUN_0E40A714:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x28A714
	.equiv "FUN_0E40A888:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x28A888
	.equiv "FUN_0E40ABB0:FID_conflict:void_object::MapObjGenerator::createChild()", _text + 0x28ABB0
	.equiv "object::MapObjBase::afterModelUpdateWorldMatrix()", _text + 0x28AC48
	.equiv "object::MapObjBase::MapObjBase()", _text + 0x28AC98
	.equiv "object::MapObjBase::calcCollision()", _text + 0x28B014
	.equiv "object::MapObjBase::enter()", _text + 0x28B090
	.equiv "object::MapObjBase::calcRecorder()", _text + 0x28B4D0
	.equiv "object::MapObjBase::loadCollision()", _text + 0x28B7A8
	.equiv "object::MapObjBase::createResourcePath()", _text + 0x28B870
	.equiv "object::MapObjBase::createCollision()", _text + 0x28B88C
	.equiv "object::MapObjBase::createRecorder()", _text + 0x28BA2C
	.equiv "object::MapObjBase::initCollision()", _text + 0x28BAC4
	.equiv "object::MapObjBase::setupPrimCol()", _text + 0x28BB94
	.equiv "object::MapObjBase::calcCollision_PrimCol()", _text + 0x28BE04
	.equiv "object::MapObjBase::reactAgainstItem()", _text + 0x28C40C
	.equiv "object::MapObjBase::getHitInfoFromKart()", _text + 0x28C4F4
	.equiv "object::MapObjBase::isValidHitInfo()", _text + 0x28C518
	.equiv "object::MapObjBase::hitKart()", _text + 0x28C5EC
	.equiv "object::MapObjBase::reactAgainstKart()", _text + 0x28C818
	.equiv "object::MapObjBase::reactKart()", _text + 0x28C8E0
	.equiv "object::MapObjBase::extractVanishDir_Kart()", _text + 0x28D55C
	.equiv "object::MapObjBase::createModel()", _text + 0x28D83C
	.equiv "object::MapObjBase::setVisible()", _text + 0x28D9C0
	.equiv "FUN_0E40DAB0:object::MapObjBase::setVisibleImpl()", _text + 0x28DAB0
	.equiv "object::MapObjBase::calcAfterForChild()", _text + 0x28DB9C
	.equiv "object::MapObjBase::setupLod()", _text + 0x28E0FC
	.equiv "object::MapObjBase::rotateLocalOffset()", _text + 0x28E2C0
	.equiv "object::MapObjBase::setDistance()", _text + 0x28E3F0
	.equiv "object::MapObjBase::colOn()", _text + 0x28E490
	.equiv "object::MapObjBase::colOff()", _text + 0x28E4B0
	.equiv "object::MapObjBase::clearUpdateFlag()", _text + 0x28E4D0
	.equiv "object::MapObjBase::getLocalRTMtxForChild()", _text + 0x28E5E4
	.equiv "object::MapObjManaged::MapObjManaged()", _text + 0x28E994
	.equiv "object::MapObjManaged::setVisibleImpl()", _text + 0x28EA3C
	.equiv "void_sead::Matrix33CalcCommon::makeS()", _text + 0x28FDF4
	.equiv "object::MapObjBirdGenerator::calcRatioPos()", _text + 0x291244
	.equiv "object::MapObjBird::stateInitFlyOut()", _text + 0x291378
	.equiv "object::MapObjBird::stateInitMove()", _text + 0x2917D4
	.equiv "object::MapObjBirdGenerator::enterObj()", _text + 0x291F74
	.equiv "object::MapObjBirdGenerator::setupPrimCol()", _text + 0x292454
	.equiv "object::MapObjBirdGenerator::checkRebirth()", _text + 0x292954
	.equiv "object::MapObjBirdGenerator::stateInitFlyIn()", _text + 0x292A58
	.equiv "FUN_0E413D38:bool_EffectLinkUserBase::isExistAction()", _text + 0x293D38
	.equiv "FUN_0E413EAC:void_EffectLinkUserBase::createProperty1()", _text + 0x293EAC
	.equiv "FUN_0E4144E0:FID_conflict:object::MapObjAPMoveCBox::calcRandomVelocity_()", _text + 0x2944E0
	.equiv "FUN_0E415ED4:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x295ED4
	.equiv "FUN_0E416048:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x296048
	.equiv "object::MapObjCakeBalloonManager::afterCreateModel()", _text + 0x296928
	.equiv "object::MapObjCakeBalloon::calcObj()", _text + 0x296BA4
	.equiv "object::MapObjCarrierCar::createCollision()", _text + 0x297514
	.equiv "object::MapObjCarrierCar::calcGlidePath_()", _text + 0x297EF8
	.equiv "`global_constructor_keyed_to'_20_MapObjCarrierCar_cpp_0ff0c842", _text + 0x29826C
	.equiv "object::MapObjChairlift::attachHeyho()", _text + 0x2990B0
	.equiv "object::MapObjChairliftManager::prepare()", _text + 0x2990C0
	.equiv "object::MapObjChairliftManager::resetMapObj()", _text + 0x299AE4
	.equiv "object::MapObjChairliftManager::createModel()", _text + 0x299EC0
	.equiv "`global_constructor_keyed_to'_19_MapObjChairlift_cpp_8225c8dd", _text + 0x29A1A8
	.equiv "FUN_0E41AD78:void_object::MapObjGenerator::createModel()", _text + 0x29AD78
	.equiv "object::BlockChoropoo::BlockChoropoo()", _text + 0x29B57C
	.equiv "object::MapObjChoropoo::prepareObj()", _text + 0x29B610
	.equiv "FUN_0E41B67C:object::BlockChoropoo::setup()", _text + 0x29B67C
	.equiv "object::MapObjChoropoo::enterObj()", _text + 0x29B7E8
	.equiv "object::MapObjChoropoo::Bank::reset()", _text + 0x29BA7C
	.equiv "object::MapObjChoropoo::resetObj()", _text + 0x29BB08
	.equiv "object::MapObjChoropoo::Bank::calcEffect()", _text + 0x29C618
	.equiv "object::MapObjChoropoo::calcRecorder()", _text + 0x29C8D4
	.equiv "object::MapObjChoropoo::Bank::emit()", _text + 0x29CEB4
	.equiv "object::MapObjChoropoo::stateExitJump()", _text + 0x29D9AC
	.equiv "FUN_0E41F5E4:bool_EffectLinkUserBase::isExistAction()", _text + 0x29F5E4
	.equiv "FUN_0E41F758:void_EffectLinkUserBase::createProperty1()", _text + 0x29F758
	.equiv "object::MapObjClockGearZ::MapObjClockGearZ()", _text + 0x29FA88
	.equiv "object::MapObjClockGearZ::calcVelGndLocal()", _text + 0x2A0364
	.equiv "FUN_0E4205F4:FID_conflict:object::MapObjClockGearY::calcConst()", _text + 0x2A05F4
	.equiv "object::MapObjClockGearY::createModel()", _text + 0x2A0C10
	.equiv "FUN_0E420DB8:FID_conflict:object::MapObjClockGearY::calcVelGndLocal()", _text + 0x2A0DB8
	.equiv "FUN_0E420FF0:FID_conflict:object::MapObjClockGearY::calcConst()", _text + 0x2A0FF0
	.equiv "object::MapObjClockGearY::setIsDanger()", _text + 0x2A11AC
	.equiv "object::MapObjClockGearPole::setupPrimCol()", _text + 0x2A1530
	.equiv "`global_constructor_keyed_to'_19_MapObjClockGear_cpp_8225c8dd", _text + 0x2A19E8
	.equiv "FUN_0E422C04:FID_conflict:object::MapObjClockGearY::calcVelGndLocal()", _text + 0x2A2C04
	.equiv "object::MapObjClThunder::updateMatrix()", _text + 0x2A4044
	.equiv "FUN_0E4254AC:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x2A54AC
	.equiv "FUN_0E425620:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x2A5620
	.equiv "object::MapObjCharacterNoSearch::MapObjCharacterNoSearch()", _text + 0x2A5950
	.equiv "object::MapObjCharManager::MapObjCharManager()", _text + 0x2A5B90
	.equiv "object::MapObjCharManager::prepare()", _text + 0x2A5C38
	.equiv "object::MapObjToad::setAnm()", _text + 0x2A60C0
	.equiv "object::MapObjThrowToad::startThrow()", _text + 0x2A6478
	.equiv "object::MapObjToadManager::MapObjToadManager()", _text + 0x2A64D8
	.equiv "FUN_0E426730:FID_conflict:object::MapObjSpaceToadManager::afterCreateModel()", _text + 0x2A6730
	.equiv "object::MapObjYoshiManager::afterCreateModel()", _text + 0x2A6B54
	.equiv "object::MapObjMonte::MapObjMonte()", _text + 0x2A6DB0
	.equiv "object::MapObjMonteManager::afterCreateModel()", _text + 0x2A6ED8
	.equiv "object::MapObjMareManager::afterCreateModel()", _text + 0x2A72D8
	.equiv "object::MapObjPatapataManager::afterCreateModel()", _text + 0x2A7A78
	.equiv "FUN_0E427E28:FID_conflict:object::MapObjSpaceToadManager::afterCreateModel()", _text + 0x2A7E28
	.equiv "FUN_0E428434:FID_conflict:object::MapObjSpaceToadManager::afterCreateModel()", _text + 0x2A8434
	.equiv "object::MapObjPitToadManager::afterCreateModel()", _text + 0x2A877C
	.equiv "object::MapObjPitToadWroManager::afterCreateModel()", _text + 0x2A8AC0
	.equiv "FUN_0E428E04:FID_conflict:object::MapObjNokonokoManager::afterCreateModel()", _text + 0x2A8E04
	.equiv "FUN_0E42914C:FID_conflict:object::MapObjNokonokoManager::afterCreateModel()", _text + 0x2A914C
	.equiv "`global_constructor_keyed_to'_22_MapObjCmnCharacter_cpp_8225c8dd", _text + 0x2A93A8
	.equiv "FUN_0E42C1A4:object::MapObjBase::setVisibleImpl()", _text + 0x2AC1A4
	.equiv "object::MapObjSingleCoffeeCup::setupRotationParam()", _text + 0x2AC7D4
	.equiv "object::MapObjCoffeeCup::createModel()", _text + 0x2ACFE0
	.equiv "object::MapObjCoffeeCup::calcAfterStructure()", _text + 0x2AD24C
	.equiv "object::MapObjCoffeeCup::getGenerateNum()", _text + 0x2AD778
	.equiv "object::MapObjCoffeeCupManager::prepare()", _text + 0x2AD7B8
	.equiv "object::MapObjCoffeeCupManager::afterCreateMareModel()", _text + 0x2ADA8C
	.equiv "FUN_0E42EE0C:void_object::MapObjGenerator::createModel()", _text + 0x2AEE0C
	.equiv "object::MapObjDropCoin::MapObjDropCoin()", _text + 0x2B0738
	.equiv "object::MapObjDropCoin::drop()", _text + 0x2B0834
	.equiv "object::MapObjDropCoin::reactDisappear()", _text + 0x2B0B64
	.equiv "object::MapObjDropCoin::addActiveFrm()", _text + 0x2B0B90
	.equiv "object::MapObjDropCoin::addVelocity()", _text + 0x2B0BC0
	.equiv "object::MapObjJugemCoin::emit()", _text + 0x2B1DEC
	.equiv "object::MapObjCoinManager::emitCoin()", _text + 0x2B24D0
	.equiv "object::MapObjCoinManager::emitJugemCoin()", _text + 0x2B2588
	.equiv "object::MapObjCoinManager::calcAfterStructure()", _text + 0x2B2650
	.equiv "object::MapObjCoinManager::prepare()", _text + 0x2B2808
	.equiv "`global_constructor_keyed_to'_14_MapObjCoin_cpp_8225c8dd", _text + 0x2B2E20
	.equiv "FUN_0E434824:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x2B4824
	.equiv "FUN_0E434998:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x2B4998
	.equiv "object::MapObjCow::enterObj()", _text + 0x2B52F0
	.equiv "object::MapObjCow::setReady()", _text + 0x2B5A98
	.equiv "object::MapObjCowGenerator::MapObjCowGenerator()", _text + 0x2B68F0
	.equiv "object::MapObjCowGenerator::getCurrRange_()", _text + 0x2B6AA4
	.equiv "FUN_0E436ADC:object::MapObjCowGenerator::getRandomDir_()", _text + 0x2B6ADC
	.equiv "object::MapObjCowGenerator::setReadyToChild_()", _text + 0x2B6CC4
	.equiv "object::MapObjCowGenerator::getFirstWaitFrm()", _text + 0x2B6D40
	.equiv "object::MapObjCowGenerator::resetAfterStructure()", _text + 0x2B6D64
	.equiv "object::MapObjCowGenerator::calcSeparate_()", _text + 0x2B71F0
	.equiv "object::MapObjCowGenerator::calcAlignment_()", _text + 0x2B730C
	.equiv "object::MapObjCowGenerator::calcCohesion_()", _text + 0x2B7478
	.equiv "object::MapObjCowGenerator::calcToParentDir_()", _text + 0x2B7580
	.equiv "object::MapObjCowGenerator::calcBound_()", _text + 0x2B759C
	.equiv "FUN_0E437714:object::MapObjCowGenerator::getRandomDir_()", _text + 0x2B7714
	.equiv "object::MapObjCowGenerator::setVelocityToAllCow_()", _text + 0x2B7718
	.equiv "object::MapObjCowGenerator::calcCowCollision_()", _text + 0x2B7F04
	.equiv "object::MapObjCowManager::afterCreateModel()", _text + 0x2B8144
	.equiv "object::MapObjCmnCow::stateInitWait()", _text + 0x2B8EF8
	.equiv "object::MapObjCmnCow::stateWait()", _text + 0x2B8FA8
	.equiv "object::MapObjCmnCow::stateEat()", _text + 0x2B93EC
	.equiv "`global_constructor_keyed_to'_13_MapObjCow_cpp_8225c8dd", _text + 0x2B96BC
	.equiv "FUN_0E43A898:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x2BA898
	.equiv "FUN_0E43A98C:bool_EffectLinkUserBase::isExistAction()", _text + 0x2BA98C
	.equiv "FUN_0E43AB00:void_EffectLinkUserBase::createProperty1()", _text + 0x2BAB00
	.equiv "FUN_0E43AE28:bool_EffectLinkUserBase::isExistAction()", _text + 0x2BAE28
	.equiv "FUN_0E43AF9C:void_EffectLinkUserBase::createProperty1()", _text + 0x2BAF9C
	.equiv "FUN_0E43D1A0:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x2BD1A0
	.equiv "FUN_0E43D314:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x2BD314
	.equiv "object::MapObjCrWanwanB::enterObj()", _text + 0x2BD9D0
	.equiv "FUN_0E43E268:FID_conflict:object::MapObjCrWanwanB::setupPrimCol()", _text + 0x2BE268
	.equiv "object::MapObjCrWanwanB::stateJump()", _text + 0x2BE7BC
	.equiv "object::MapObjDdQuicksand::calcVelGndLocal()", _text + 0x2BF220
	.equiv "object::MapObjDiDomino::prepareObj()", _text + 0x2BFEE8
	.equiv "object::MapObjDiDomino::enterObj()", _text + 0x2BFFAC
	.equiv "object::MapObjDiDomino::changePathSafetyState()", _text + 0x2C027C
	.equiv "object::MapObjDiDomino::resetObj()", _text + 0x2C0364
	.equiv "object::MapObjDiDomino::createCollision()", _text + 0x2C06A0
	.equiv "object::MapObjDiDomino::initCollision()", _text + 0x2C08C0
	.equiv "object::MapObjDiDomino::calcCollision_Block()", _text + 0x2C0A94
	.equiv "object::MapObjDiDomino::calcCollision_PrimCol()", _text + 0x2C0CB0
	.equiv "object::MapObjDiDomino::startCollapse()", _text + 0x2C0EA4
	.equiv "object::MapObjDiDomino::isWallState()", _text + 0x2C0EC0
	.equiv "object::MapObjDiDomino::isOuterLineUpdated()", _text + 0x2C0ED0
	.equiv "object::MapObjDiDomino::getOuterLine()", _text + 0x2C0EE4
	.equiv "object::MapObjDiDomino::getNextPlane()", _text + 0x2C10B8
	.equiv "object::MapObjDiDomino::followNextPlane()", _text + 0x2C1644
	.equiv "object::MapObjDiDomino::manageBlockRegistration()", _text + 0x2C1CF4
	.equiv "FUN_0E442E28:bool_EffectLinkUserBase::isExistAction()", _text + 0x2C2E28
	.equiv "FUN_0E442F9C:void_EffectLinkUserBase::createProperty1()", _text + 0x2C2F9C
	.equiv "object::MapObjDirector::MapObjDirector()", _text + 0x2C32C4
	.equiv "object::MapObjDirector::searchMgrCreateFunc()", _text + 0x2C3724
	.equiv "object::MapObjDirector::createManager_()", _text + 0x2C38AC
	.equiv "object::MapObjDirector::prepareBeforeStructure()", _text + 0x2C3D78
	.equiv "object::MapObjDirector::searchManager()", _text + 0x2C547C
	.equiv "object::MapObjDirector::prepareAfterStructure()", _text + 0x2C54D8
	.equiv "object::MapObjDirector::changeObjState()", _text + 0x2C56D4
	.equiv "object::MapObjDirector::calcBefore()", _text + 0x2C5934
	.equiv "object::MapObjDirector::calc()", _text + 0x2C5B1C
	.equiv "object::MapObjDirector::calcAfterStructure()", _text + 0x2C5D74
	.equiv "object::MapObjDirector::updateCamera()", _text + 0x2C5F30
	.equiv "object::MapObjDirector::reactThunder()", _text + 0x2C5FBC
	.equiv "object::MapObjDirector::checkItemHitObj()", _text + 0x2C60A8
	.equiv "object::MapObjDirector::checkKartHitObj()", _text + 0x2C6148
	.equiv "object::MapObjDirector::checkUnderWater()", _text + 0x2C61E0
	.equiv "object::MapObjDirector::isInsideGravityBox()", _text + 0x2C6314
	.equiv "object::MapObjDirector::searchMapObj()", _text + 0x2C6938
	.equiv "object::MapObjDirector::searchDrawManager()", _text + 0x2C6A00
	.equiv "object::MapObjDirector::getClipMapObjAll()", _text + 0x2C6A5C
	.equiv "object::MapObjDirector::searchMapObjCreateFunc()", _text + 0x2C6B64
	.equiv "object::MapObjDirector::isCreateLater()", _text + 0x2C6D1C
	.equiv "object::MapObjDiWheel::enterObj()", _text + 0x2C7F1C
	.equiv "object::MapObjDiWheel::isInWater()", _text + 0x2C850C
	.equiv "object::MapObjDiWheel::updateMoveEffectFlag()", _text + 0x2C8648
	.equiv "object::MapObjDiWheel::updatePath()", _text + 0x2C86F4
	.equiv "object::MapObjDiWheel::updateModelLocalMatrix()", _text + 0x2C88F4
	.equiv "object::MapObjDiWheel::calcLaunched()", _text + 0x2C8AA4
	.equiv "object::MapObjDiWheel::calcObj()", _text + 0x2C8D38
	.equiv "object::MapObjDiWheel::reactAgainstItem()", _text + 0x2CA02C
	.equiv "object::MapObjDiWheel::reactAgainstKart()", _text + 0x2CA2BC
	.equiv "object::MapObjDiWheelManager::updateDominoLine()", _text + 0x2CAB5C
	.equiv "object::MapObjDiWheelManager::calcAfterStructure()", _text + 0x2CABF8
	.equiv "FUN_0E44D838:bool_EffectLinkUserBase::isExistAction()", _text + 0x2CD838
	.equiv "FUN_0E44D9AC:void_EffectLinkUserBase::createProperty1()", _text + 0x2CD9AC
	.equiv "object::MapObjDkScreamPillar::enterObj()", _text + 0x2CE1AC
	.equiv "FUN_0E450208:bool_EffectLinkUserBase::isExistAction()", _text + 0x2D0208
	.equiv "FUN_0E45037C:void_EffectLinkUserBase::createProperty1()", _text + 0x2D037C
	.equiv "`global_constructor_keyed_to'_16_MapObjDokan1_cpp_a9f1a6ec", _text + 0x2D14B4
	.equiv "FUN_0E452304:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x2D2304
	.equiv "FUN_0E452478:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x2D2478
	.equiv "object::MapObjDossun::enterObj()", _text + 0x2D2BA4
	.equiv "FUN_0E453208:object::MapObjDossun::setupPrimCol()", _text + 0x2D3208
	.equiv "FUN_0E453464:object::MapObjDossun::reactAgainstKart()", _text + 0x2D3464
	.equiv "FUN_0E454970:bool_EffectLinkUserBase::isExistAction()", _text + 0x2D4970
	.equiv "FUN_0E454AE4:void_EffectLinkUserBase::createProperty1()", _text + 0x2D4AE4
	.equiv "object::MapObjDrumInside::startSlide_()", _text + 0x2D55A8
	.equiv "object::MapObjDrumInside::startCrash_()", _text + 0x2D5640
	.equiv "object::MapObjDrumInside::startVanishing_()", _text + 0x2D5938
	.equiv "object::MapObjDrumInside::react1Impl_Kart()", _text + 0x2D5FE4
	.equiv "object::MapObjDrumInside::breakSelf_()", _text + 0x2D63C8
	.equiv "FUN_0E457D74:bool_EffectLinkUserBase::isExistAction()", _text + 0x2D7D74
	.equiv "FUN_0E457EE8:void_EffectLinkUserBase::createProperty1()", _text + 0x2D7EE8
	.equiv "object::MapObjExDash::createRecorder()", _text + 0x2D8514
	.equiv "object::MapObjSmDash::createRecorder()", _text + 0x2D8790
	.equiv "object::MapObjExTram::checkUpdateState()", _text + 0x2D91CC
	.equiv "object::MapObjExTram::calcPath()", _text + 0x2D9320
	.equiv "FUN_0E45A900:bool_EffectLinkUserBase::isExistAction()", _text + 0x2DA900
	.equiv "FUN_0E45AA74:void_EffectLinkUserBase::createProperty1()", _text + 0x2DAA74
	.equiv "FUN_0E45AEE0:object::MapObjFcClown::setVisibleImpl()", _text + 0x2DAEE0
	.equiv "FUN_0E45AF60:object::MapObjFcClown::enterObj()", _text + 0x2DAF60
	.equiv "FUN_0E45B090:object::MapObjFcClown::updateToads()", _text + 0x2DB090
	.equiv "FUN_0E45B2A4:object::MapObjFcClown::addToad()", _text + 0x2DB2A4
	.equiv "object::MapObjFcClownManager::prepare()", _text + 0x2DB2D0
	.equiv "object::MapObjFcClownManager::createModel()", _text + 0x2DBAB4
	.equiv "object::MapObjWsFirering::setupOffset_()", _text + 0x2DCE54
	.equiv "object::MapObjWsFirering::enterObj()", _text + 0x2DD18C
	.equiv "object::MapObjWsFirering::calcObj()", _text + 0x2DD268
	.equiv "object::MapObjWsFirering::setupPrimCol()", _text + 0x2DD5A8
	.equiv "object::MapObjWsFirebar::setupOffset_()", _text + 0x2DD680
	.equiv "object::MapObjWsFirebar::enterObj()", _text + 0x2DD9F4
	.equiv "object::MapObjWsFirebar::calcObj()", _text + 0x2DDB60
	.equiv "`global_constructor_keyed_to'_18_MapObjFirering_cpp_7153dfde", _text + 0x2DDF98
	.equiv "object::MapObjFireSnake::kill_()", _text + 0x2DF6E8
	.equiv "object::MapObjFireSnake::stateTurn()", _text + 0x2DFAC0
	.equiv "FUN_0E461208:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x2E1208
	.equiv "FUN_0E46137C:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x2E137C
	.equiv "FUN_0E4616A4:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x2E16A4
	.equiv "FUN_0E461818:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x2E1818
	.equiv "object::MapObjFireworksFc::enterObj()", _text + 0x2E24E0
	.equiv "FUN_0E4629C8:FID_conflict:object::MapObjFireworksFc::getRandomPosL()", _text + 0x2E29C8
	.equiv "object::MapObjFireworksFc::emitRandom()", _text + 0x2E2B44
	.equiv "FUN_0E462FB0:FID_conflict:object::MapObjFireworksFc::getRandomPosL()", _text + 0x2E2FB0
	.equiv "FUN_0E463194:FID_conflict:object::MapObjFireworksFc::getRandomPosL()", _text + 0x2E3194
	.equiv "object::MapObjFireworksN64Rs::emitRandom()", _text + 0x2E3310
	.equiv "object::MapObjFireworksN64R::enterObj()", _text + 0x2E3858
	.equiv "object::MapObjFireworksN64R::emitRandom()", _text + 0x2E3A90
	.equiv "object::MapObjFlagStadiumManager::afterCreateModel()", _text + 0x2E4884
	.equiv "FUN_0E464A14:FID_conflict:object::MapObjDdQuicksand::MapObjDdQuicksand()", _text + 0x2E4A14
	.equiv "FUN_0E464BAC:FID_conflict:object::MapObjFlagStadiumWarioManager::afterCreateModel()", _text + 0x2E4BAC
	.equiv "FUN_0E464D38:FID_conflict:object::MapObjFlagStadiumWarioManager::afterCreateModel()", _text + 0x2E4D38
	.equiv "`global_constructor_keyed_to'_21_MapObjFlagStadium_cpp_1a29f801", _text + 0x2E4EC4
	.equiv "object::MapObjFrogoon::calcCurrentMtx_()", _text + 0x2E6B38
	.equiv "object::MapObjFrogoon::calcNextMtx_()", _text + 0x2E6C10
	.equiv "object::MapObjFrogoon::isNeedTurnJump_()", _text + 0x2E7358
	.equiv "object::MapObjFrogoon::stateInitJump()", _text + 0x2E746C
	.equiv "FUN_0E468810:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x2E8810
	.equiv "FUN_0E468984:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x2E8984
	.equiv "object::MapObjFuriko::enterObj()", _text + 0x2E8D54
	.equiv "object::MapObjFuriko::setupPrimCol()", _text + 0x2E8FF0
	.equiv "FUN_0E469278:FID_conflict:object::MapObjSpikeBall::reactAgainstKart()", _text + 0x2E9278
	.equiv "object::MapObjGuardrailRSpot::MapObjGuardrailRSpot()", _text + 0x2E9E6C
	.equiv "object::MapObjGuardrailRSpot::calcObj()", _text + 0x2E9F78
	.equiv "`global_constructor_keyed_to'_19_MapObjGuardrail_cpp_338a623a", _text + 0x2EA3E0
	.equiv "object::MapObjHelicopter::calcCheck_()", _text + 0x2EB25C
	.equiv "object::MapObjHelicopter::calcObj()", _text + 0x2EB420
	.equiv "object::MapObjHhStatue::getWaitFrm()", _text + 0x2ED080
	.equiv "object::MapObjHhStatue::enterObj()", _text + 0x2ED0A4
	.equiv "object::MapObjHhStatue::getFirstWaitFrm()", _text + 0x2ED320
	.equiv "object::MapObjHhStatue::setupPrimCol()", _text + 0x2ED858
	.equiv "object::MapObjHitProxyCreateArg::MapObjHitProxyCreateArg()", _text + 0x2EE700
	.equiv "object::MapObjHitProxy::MapObjHitProxy()", _text + 0x2EE780
	.equiv "object::MapObjHitProxy::beginCreate()", _text + 0x2EEA74
	.equiv "object::MapObjHitProxy::addCol()", _text + 0x2EEB9C
	.equiv "object::MapObjHitProxy::createDefault()", _text + 0x2EEBC8
	.equiv "object::MapObjHitProxy::createPolytope()", _text + 0x2EFBA8
	.equiv "object::MapObjHitProxy::check()", _text + 0x2EFE40
	.equiv "object::MapObjHitProxy::checkWithKart()", _text + 0x2F0A04
	.equiv "object::MapObjHitProxy::updatePoints()", _text + 0x2F0FDC
	.equiv "object::MapObjHitProxy::updateScale()", _text + 0x2F1280
	.equiv "object::MapObjHitProxy::setDefaultScale()", _text + 0x2F13B8
	.equiv "object::MapObjHitProxy::setDefaultBoxColRad()", _text + 0x2F1580
	.equiv "object::MapObjHitProxy::getMapObjId()", _text + 0x2F1648
	.equiv "object::MapObjHitProxy::isAIAvoid()", _text + 0x2F165C
	.equiv "object::MapObjHitProxy::isAIApproach()", _text + 0x2F1680
	.equiv "object::MapObjHitProxy::isAIAvoid_Kinoko()", _text + 0x2F1694
	.equiv "object::MapObjHitProxy::ColOffsetAtt::update()", _text + 0x2F1990
	.equiv "object::MapObjHhTable::setChair()", _text + 0x2F2964
	.equiv "object::MapObjHhTable::enterObj()", _text + 0x2F2B74
	.equiv "object::MapObjHorrorRoad::MapObjHorrorRoad()", _text + 0x2F2C3C
	.equiv "object::MapObjHorrorRoad::enterObj()", _text + 0x2F2DE4
	.equiv "object::MapObjHorrorRoad::calcTableMtx()", _text + 0x2F2F14
	.equiv "object::MapObjHorrorRoad::createModel()", _text + 0x2F36F8
	.equiv "object::MapObjHorrorRoad::getRTMtxForChild()", _text + 0x2F39C0
	.equiv "object::MapObjHorrorRoad::calcNormalFromPos()", _text + 0x2F3E1C
	.equiv "object::MapObjHorrorRoad::isJumpAction()", _text + 0x2F3FE8
	.equiv "object::MapObjHorrorRoad::createCore()", _text + 0x2F510C
	.equiv "FUN_0E477020:void_object::MapObjGenerator::createChild()", _text + 0x2F7020
	.equiv "object::MapObjItemBox::initAttTable()", _text + 0x2F7D90
	.equiv "object::MapObjItemBox::updateAttScale()", _text + 0x2F817C
	.equiv "object::MapObjItemBox::enterObj()", _text + 0x2F8A5C
	.equiv "object::MapObjItemBoxManager::breakItemBox()", _text + 0x2FA3B0
	.equiv "FUN_0E47BC28:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x2FBC28
	.equiv "FUN_0E47BD9C:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x2FBD9C
	.equiv "object::MapObjGondola::setupPrimCol()", _text + 0x2FC8FC
	.equiv "object::MapObjGondola::setVisibleImpl()", _text + 0x2FCD80
	.equiv "object::MapObjGondola::addMare()", _text + 0x2FCE38
	.equiv "object::MapObjGondola::stateSwing()", _text + 0x2FD084
	.equiv "object::MapObjKanransya::enterObj()", _text + 0x2FD55C
	.equiv "object::MapObjKanransya::calcGondola_()", _text + 0x2FD71C
	.equiv "object::MapObjKaraPillarManager::createMapObj()", _text + 0x2FE848
	.equiv "object::MapObjKaraPillarManager::prepareMapObj()", _text + 0x2FEA60
	.equiv "object::MapObjKaraPillar::enterObj()", _text + 0x2FF0E0
	.equiv "object::MapObjKaraPillar::stateInitFallRot()", _text + 0x2FFF0C
	.equiv "object::MapObjKaraPillar::stateFallInterp()", _text + 0x3001C8
	.equiv "FUN_0E482394:bool_EffectLinkUserBase::isExistAction()", _text + 0x302394
	.equiv "FUN_0E482508:void_EffectLinkUserBase::createProperty1()", _text + 0x302508
	.equiv "object::MapObjKaron::enterObj()", _text + 0x302F28
	.equiv "object::MapObjKaron::createModel()", _text + 0x30346C
	.equiv "object::MapObjKaron::SBodyPart::init()", _text + 0x303788
	.equiv "FUN_0E48573C:bool_EffectLinkUserBase::isExistAction()", _text + 0x30573C
	.equiv "FUN_0E4858B0:void_EffectLinkUserBase::createProperty1()", _text + 0x3058B0
	.equiv "object::MapObjKoopaRoad::MapObjKoopaRoad()", _text + 0x305DC8
	.equiv "object::MapObjKoopaRoad::getLocalRTMtxForChild()", _text + 0x306944
	.equiv "FUN_0E486C48:object::MapObjKoopaRoad::getRTMtxForChild()", _text + 0x306C48
	.equiv "object::MapObjKoopaRoad::calcMtxFromDist()", _text + 0x307750
	.equiv "object::MapObjKoopaRoad::isDashOn()", _text + 0x3079E8
	.equiv "object::MapObjKoopaRoad::isJumpAction()", _text + 0x307A6C
	.equiv "object::MapObjKoopaRoadL::initWave()", _text + 0x307BBC
	.equiv "object::MapObjKoopaRoadR::initWave()", _text + 0x3082DC
	.equiv "object::BlockKoopaRoad::rejectFloor()", _text + 0x308970
	.equiv "`global_constructor_keyed_to'_19_MapObjKoopaRoad_cpp_8225c8dd", _text + 0x3094DC
	.equiv "FID_conflict:object::MapObjKuribo::blink_()", _text + 0x30AFC8
	.equiv "object::MapObjKuribo::calcEyeState_()", _text + 0x30B058
	.equiv "object::MapObjKuribo::check_()", _text + 0x30B294
	.equiv "FUN_0E48CADC:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x30CADC
	.equiv "FUN_0E48CC50:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x30CC50
	.equiv "object::MapObjLaserBeam::setupPosInitialLaserHit()", _text + 0x30D780
	.equiv "object::MapObjLaserBeam::stateLaser()", _text + 0x30E0DC
	.equiv "FUN_0E48EF60:bool_EffectLinkUserBase::isExistAction()", _text + 0x30EF60
	.equiv "FUN_0E48F0D4:void_EffectLinkUserBase::createProperty1()", _text + 0x30F0D4
	.equiv "object::MapObjDrawManager::MapObjDrawManager()", _text + 0x30F3FC
	.equiv "object::MapObjDrawManager::createDrawArray()", _text + 0x30F450
	.equiv "object::MapObjDrawManager::calc()", _text + 0x30F4D0
	.equiv "object::MapObjManagerBase::MapObjManagerBase()", _text + 0x30F640
	.equiv "object::MapObjManagerBase::prepare()", _text + 0x30F70C
	.equiv "object::MapObjManagerBase::calcAfterOuter()", _text + 0x30F990
	.equiv "FUN_0E48F9A0:object::MapObjManagerBase::bindModelWithAoObject()", _text + 0x30F9A0
	.equiv "object::MapObjManagerBase::prepareMapObj()", _text + 0x30F9C8
	.equiv "object::MapObjManagerBase::enterMapObj()", _text + 0x30FAD8
	.equiv "object::MapObjManagerBase::resetMapObj()", _text + 0x30FB6C
	.equiv "object::MapObjManagerBase::createMapObj()", _text + 0x30FC24
	.equiv "object::MapObjManagerBase::registToDrawManager()", _text + 0x30FE5C
	.equiv "object::MapObjManagerBase::createModel()", _text + 0x30FFB0
	.equiv "object::MapObjMcGate::react1Impl_Kart()", _text + 0x31073C
	.equiv "object::BlockMoray::Section::calcElipseNrm()", _text + 0x3116E4
	.equiv "FUN_0E491868:object::BlockMoray::Section::set()", _text + 0x311868
	.equiv "object::BlockMoray::updateSize()", _text + 0x311CD4
	.equiv "object::MapObjMoray::calcCollision_Block()", _text + 0x311E40
	.equiv "object::MapObjMoray::calcZRatio()", _text + 0x312228
	.equiv "object::MapObjMoray::getRTMtxForChild()", _text + 0x312254
	.equiv "object::MapObjMoray::calcMtxFromDist()", _text + 0x312700
	.equiv "object::MapObjMoray::calcMtxFromIdx()", _text + 0x312A4C
	.equiv "object::BlockMoray::toSectionRatio()", _text + 0x312E64
	.equiv "object::BlockMoray::Section::checkFin()", _text + 0x312F50
	.equiv "object::BlockMoray::Section::checkElipse()", _text + 0x3132B8
	.equiv "object::BlockMoray::Section::check()", _text + 0x3134AC
	.equiv "object::BlockMoray::Section::Section()", _text + 0x31357C
	.equiv "FUN_0E493650:object::BlockMoray::Section::set()", _text + 0x313650
	.equiv "object::BlockMoray::rejectFloor_Moray()", _text + 0x3136A8
	.equiv "FUN_0E4958C4:FID_conflict:object::MapObjAPMoveCBox::calcRandomVelocity_()", _text + 0x3158C4
	.equiv "object::MapObjAPBelt::MapObjAPBelt()", _text + 0x315DA0
	.equiv "`global_constructor_keyed_to'_17_MapObjMoveBox_cpp_8225c8dd", _text + 0x3162F4
	.equiv "FUN_0E49704C:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x31704C
	.equiv "FUN_0E4971C0:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x3171C0
	.equiv "object::MapObjTransBoard::MapObjTransBoard()", _text + 0x3174F0
	.equiv "object::MapObjTransBoard::calcDown()", _text + 0x3178F4
	.equiv "object::MapObjTransBoard::calcUp()", _text + 0x317910
	.equiv "object::MapObjTransBoard::calcRad()", _text + 0x317934
	.equiv "object::MapObjTransBoard::updatePosture()", _text + 0x317A00
	.equiv "object::MapObjTransBoard::calcSound()", _text + 0x317ABC
	.equiv "object::MapObjTransBoard::calcAnim()", _text + 0x317BB0
	.equiv "object::MapObjTransBoard::calcObj()", _text + 0x317CF8
	.equiv "`global_constructor_keyed_to'_17_MapObjMpBoard_cpp_2f59c07a", _text + 0x3183D8
	.equiv "object::MapObjMrBase::MapObjMrBase()", _text + 0x318C6C
	.equiv "object::MapObjMrBase::calcMtxFromDist()", _text + 0x318ED4
	.equiv "object::MapObjMrBase::calcOriginalMtxFromDist()", _text + 0x319340
	.equiv "object::MapObjMrBase::prepareObj()", _text + 0x319D00
	.equiv "object::MapObjMrBase::enterObj()", _text + 0x319F80
	.equiv "object::MapObjN64RRoad::getLocalRTMtxForChild()", _text + 0x31C268
	.equiv "FUN_0E49C5A4:object::MapObjN64RRoad::getRTMtxForChild()", _text + 0x31C5A4
	.equiv "object::MapObjN64RRoad::SWave::SWave()", _text + 0x31CAA4
	.equiv "object::MapObjN64RRoad::createWaveIf()", _text + 0x31CC40
	.equiv "object::MapObjN64RRoad::calcWaveHeight()", _text + 0x31D7E8
	.equiv "object::MapObjN64RRoad::startWave()", _text + 0x31D990
	.equiv "object::BlockN64RRoad::rejectFloor()", _text + 0x31E0E8
	.equiv "object::MapObjNote::enterObj()", _text + 0x322B10
	.equiv "object::MapObjNote::reactAgainstKart()", _text + 0x3233BC
	.equiv "FUN_0E4A4C18:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x324C18
	.equiv "FUN_0E4A4D8C:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x324D8C
	.equiv "object::MapObjNrStart::beforeModelUpdateWorldMatrix()", _text + 0x3250B4
	.equiv "object::MapObjNrStart::enterObj()", _text + 0x325560
	.equiv "object::MapObjNrStart::calcObj()", _text + 0x325864
	.equiv "bool_sead::Matrix33CalcCommon::equalsEpsilon()", _text + 0x3276E8
	.equiv "object::MapObjNrTrain::calcNrmTan_forCargo()", _text + 0x3277F8
	.equiv "object::MapObjNrTrain::beforeModelUpdateWorldMatrix()", _text + 0x3279EC
	.equiv "object::MapObjNrTrain::afterModelUpdateWorldMatrix()", _text + 0x3283F4
	.equiv "object::MapObjNrTrain::createRecorder()", _text + 0x328E6C
	.equiv "object::MapObjNrTrain::prepareObj()", _text + 0x329038
	.equiv "object::MapObjNrTrain::enterObj()", _text + 0x32988C
	.equiv "object::MapObjNrTrain::initNrmTan()", _text + 0x329A00
	.equiv "object::MapObjNrTrain::initNrmDirX_forCargo()", _text + 0x329B30
	.equiv "object::MapObjNrTrain::resetObj()", _text + 0x329C84
	.equiv "object::MapObjNrTrain::calcNrmTan()", _text + 0x329F70
	.equiv "object::MapObjNrTrain::calcPath()", _text + 0x32A364
	.equiv "object::MapObjNrTrain::calcInitVel()", _text + 0x32A6E8
	.equiv "object::MapObjNrTrain::calcObj()", _text + 0x32A8F0
	.equiv "object::MapObjNrTrain::createCollision()", _text + 0x32B1F8
	.equiv "object::MapObjNrTrain::setupPrimCol()", _text + 0x32B3C4
	.equiv "object::MapObjNrTrain::calcCollision_PrimCol()", _text + 0x32B490
	.equiv "object::MapObjNrTrain::calcRecorder()", _text + 0x32B680
	.equiv "object::MapObjOcLifton::enterObj()", _text + 0x32DB9C
	.equiv "object::MapObjOcLifton::isInWater()", _text + 0x32E9AC
	.equiv "`global_constructor_keyed_to'_18_MapObjOcLifton_cpp_8225c8dd", _text + 0x32EFE8
	.equiv "FUN_0E4AFCA8:bool_EffectLinkUserBase::isExistAction()", _text + 0x32FCA8
	.equiv "FUN_0E4AFE1C:void_EffectLinkUserBase::createProperty1()", _text + 0x32FE1C
	.equiv "object::MapObjOcLightJellyfish::enterObj()", _text + 0x330250
	.equiv "object::MapObjOcManta::enterObj()", _text + 0x330CA0
	.equiv "object::MapObjOcManta::calcPath()", _text + 0x330EB8
	.equiv "void_object::MapObjGenerator::enter()", _text + 0x3321E8
	.equiv "object::MapObjCmnPackun::afterModelUpdateWorldMatrix()", _text + 0x332874
	.equiv "FUN_0E4B3FC4:object::MapObjCmnPackun::enter()", _text + 0x333FC4
	.equiv "object::MapObjCmnPackun::getActiveFrm()", _text + 0x334324
	.equiv "FUN_0E4B4374:object::MapObjCmnPackun::getWaitFrm()", _text + 0x334374
	.equiv "object::MapObjCmnPackun::enterObj()", _text + 0x3343C4
	.equiv "FUN_0E4B4CD4:object::MapObjCmnPackun::forecastItemPos_()", _text + 0x334CD4
	.equiv "FUN_0E4B4E74:object::MapObjCmnPackun::calcAttackPos_()", _text + 0x334E74
	.equiv "object::MapObjPackunTechno::MapObjPackunTechno()", _text + 0x337460
	.equiv "object::MapObjPackunTechno_NoAt::MapObjPackunTechno_NoAt()", _text + 0x33788C
	.equiv "object::MapObjPackunMusic::enter()", _text + 0x337D48
	.equiv "object::MapObjPackunCake::MapObjPackunCake()", _text + 0x338DC8
	.equiv "object::MapObjPackunSlider::MapObjPackunSlider()", _text + 0x338E84
	.equiv "object::MapObjPackunSlider::enterObj()", _text + 0x338F54
	.equiv "`global_constructor_keyed_to'_22_MapObjPackunFlower_cpp_8225c8dd", _text + 0x339B5C
	.equiv "FUN_0E4BB118:bool_EffectLinkUserBase::isExistAction()", _text + 0x33B118
	.equiv "FUN_0E4BB28C:void_EffectLinkUserBase::createProperty1()", _text + 0x33B28C
	.equiv "object::MapObjParameter::Parameter::loadByaml_Parameter()", _text + 0x33B64C
	.equiv "object::MapObjParameter::Parameter::loadByaml_GeoHit()", _text + 0x33BB50
	.equiv "FUN_0E4BBCC4:object::MapObjParameter::Parameter::Parameter()", _text + 0x33BCC4
	.equiv "object::MapObjParameter::initialize()", _text + 0x33BEDC
	.equiv "FUN_0E4BBFFC:object::MapObjParameter::Parameter::Parameter()", _text + 0x33BFFC
	.equiv "FID_conflict:object::MapObjParameter::getParam()", _text + 0x33C1FC
	.equiv "object::convToEGHTItem()", _text + 0x33C40C
	.equiv "object::MapObjParameter::Parameter::getObjReact_againstItem()", _text + 0x33C808
	.equiv "FUN_0E4BCAF8:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x33CAF8
	.equiv "FUN_0E4BCB58:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x33CB58
	.equiv "FUN_0E4BCBB8:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x33CBB8
	.equiv "FUN_0E4BCC18:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x33CC18
	.equiv "FUN_0E4BCC78:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x33CC78
	.equiv "FUN_0E4BCCD8:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x33CCD8
	.equiv "FUN_0E4BCD38:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x33CD38
	.equiv "FUN_0E4BCD98:FID_conflict:bool_al::tryGetByamlEnumByKey()", _text + 0x33CD98
	.equiv "object::MapObjPcBalloon::setInitPos()", _text + 0x33CEF4
	.equiv "object::MapObjPcBalloonGenerator::prepareObj()", _text + 0x33D7B8
	.equiv "object::MapObjPcBalloonGenerator::enterAfterStructure()", _text + 0x33D81C
	.equiv "object::MapObjPcBalloonManager::enter()", _text + 0x33DD70
	.equiv "object::MapObjPcBalloonManager::afterCreateModel()", _text + 0x33DFB8
	.equiv "FUN_0E4C0AC8:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x340AC8
	.equiv "FUN_0E4C0C3C:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x340C3C
	.equiv "FUN_0E4C0F6C:object::MapObjPukupuku::MapObjPukupuku()", _text + 0x340F6C
	.equiv "`global_constructor_keyed_to'_18_MapObjPukupuku_cpp_8225c8dd", _text + 0x3414BC
	.equiv "FUN_0E4C1E20:FID_conflict:void_object::MapObjGenerator::createChild()", _text + 0x341E20
	.equiv "FUN_0E4C2D54:FID_conflict:void_object::MapObjGenerator::createChild()", _text + 0x342D54
	.equiv "FUN_0E4C3CC8:FID_conflict:void_object::MapObjGenerator::createChild()", _text + 0x343CC8
	.equiv "object::MapObjPylonManager::calcAfterStructure()", _text + 0x344C44
	.equiv "object::MapObjPylon::breakSelf()", _text + 0x345230
	.equiv "object::MapObjPylon::startCrash()", _text + 0x345274
	.equiv "object::MapObjPylon::startSlide()", _text + 0x3454A0
	.equiv "FUN_0E4C5570:object::MapObjPylon::startHit()", _text + 0x345570
	.equiv "FUN_0E4C578C:object::MapObjPylon::startHit()", _text + 0x34578C
	.equiv "object::MapObjPylon::startVanishing()", _text + 0x345838
	.equiv "object::MapObjPylon::react1Impl_Kart()", _text + 0x3467EC
	.equiv "object::MapObjPylon::checkGndColEnd()", _text + 0x346A0C
	.equiv "object::MapObjPylon::calcGndColCenter()", _text + 0x346D18
	.equiv "object::MapObjPylon::setRightPosture()", _text + 0x346DA0
	.equiv "object::MapObjPylon::checkCollisionWall()", _text + 0x347660
	.equiv "object::MapObjPylon::updateGndColParam()", _text + 0x347A98
	.equiv "object::MapObjPylon::checkActiveRange()", _text + 0x347B6C
	.equiv "object::MapObjPylon::stateSlide()", _text + 0x3483B0
	.equiv "`global_constructor_keyed_to'_15_MapObjPylon_cpp_8225c8dd", _text + 0x349014
	.equiv "FUN_0E4CAB34:bool_EffectLinkUserBase::isExistAction()", _text + 0x34AB34
	.equiv "FUN_0E4CACA8:void_EffectLinkUserBase::createProperty1()", _text + 0x34ACA8
	.equiv "object::MapObjRacingPole::enterObj()", _text + 0x34B274
	.equiv "object::MapObjRacingPole::reactAgainstKart()", _text + 0x34B550
	.equiv "FUN_0E4CC314:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x34C314
	.equiv "FUN_0E4CC488:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x34C488
	.equiv "FUN_0E4CCEA4:FID_conflict:object::MapObjCrWanwanB::setupPrimCol()", _text + 0x34CEA4
	.equiv "object::MapObjRock1Generator::MapObjRock1Generator()", _text + 0x34D374
	.equiv "object::MapObjRhythmBase::MapObjRhythmBase()", _text + 0x34F108
	.equiv "FUN_0E4CF198:object::MapObjRhythmBase::enterObj()", _text + 0x34F198
	.equiv "object::MapObjTcDisplayManager::enterMapObj()", _text + 0x350268
	.equiv "object::MapObjTcHeyho::MapObjTcHeyho()", _text + 0x350734
	.equiv "object::MapObjTcHeyho::enterObj()", _text + 0x350818
	.equiv "FUN_0E4D0B78:FID_conflict:object::MapObjNokonokoManager::afterCreateModel()", _text + 0x350B78
	.equiv "FUN_0E4D0DD0:FID_conflict:object::MapObjNokonokoManager::afterCreateModel()", _text + 0x350DD0
	.equiv "object::MapObjShyguyWatchman::createRecorder()", _text + 0x351028
	.equiv "`global_constructor_keyed_to'_16_MapObjRhythm_cpp_f5c73664", _text + 0x351780
	.equiv "object::MapObjRRdash::startChangeLight()", _text + 0x354D3C
	.equiv "object::MapObjRRdashManager::startPanelChange()", _text + 0x354EB4
	.equiv "object::MapObjRRroadin::beforeModelUpdateWorldMatrix()", _text + 0x355B78
	.equiv "object::MapObjRRroadin::prepareObj()", _text + 0x3562C0
	.equiv "object::MapObjRRroadin::createRecorder()", _text + 0x356A78
	.equiv "object::MapObjRRroadin::createModel()", _text + 0x356BD8
	.equiv "object::MapObjRRroadin::setupSlopeRelated()", _text + 0x356F30
	.equiv "object::MapObjRRroadin::gatherPointLight()", _text + 0x3574EC
	.equiv "object::MapObjRRroadin::enterObj()", _text + 0x357618
	.equiv "object::MapObjRRroadin::resetObj()", _text + 0x357A0C
	.equiv "object::MapObjRRroadin::calcRotation()", _text + 0x357BF4
	.equiv "object::MapObjRRroadin::updateSlope()", _text + 0x358094
	.equiv "object::MapObjRRroadin::initCollision()", _text + 0x358E54
	.equiv "object::MapObjRRroadout::prepareObj()", _text + 0x3597DC
	.equiv "object::MapObjRRroadout::enterObj()", _text + 0x359B2C
	.equiv "object::MapObjRRroadinManager::calcAfterStructure()", _text + 0x359E14
	.equiv "object::MapObjSanboBody::initVanish()", _text + 0x35B84C
	.equiv "object::MapObjSanboBody::exitVanish()", _text + 0x35B8D0
	.equiv "object::MapObjSanboBody::setupEffect()", _text + 0x35BA9C
	.equiv "object::MapObjSanboBody::calcObj()", _text + 0x35BB20
	.equiv "object::MapObjSanbo::prepareObj()", _text + 0x35CD74
	.equiv "object::MapObjSanbo::getWaitCycle()", _text + 0x35CE44
	.equiv "object::MapObjSanbo::enterObj()", _text + 0x35CE94
	.equiv "object::MapObjSanbo::calcCollision_PrimCol()", _text + 0x35D8F4
	.equiv "object::MapObjSanbo::setupPrimCol()", _text + 0x35DBD4
	.equiv "object::MapObjSanbo::stateInitVanish()", _text + 0x35E9F8
	.equiv "FUN_0E4E01B8:bool_EffectLinkUserBase::isExistAction()", _text + 0x3601B8
	.equiv "FUN_0E4E032C:void_EffectLinkUserBase::createProperty1()", _text + 0x36032C
	.equiv "object::MapObjBDSandGeyser::setupPrimCol()", _text + 0x361700
	.equiv "object::MapObjBDSandGeyser::hitKart()", _text + 0x3618B4
	.equiv "object::MapObjBDSandShip::calcRecorder()", _text + 0x362DBC
	.equiv "object::MapObjBDSandShip::calcInitVel()", _text + 0x363298
	.equiv "object::MapObjSeagull::enterObj()", _text + 0x363FC0
	.equiv "object::MapObjSeagullGenerator::setRandomOffset()", _text + 0x364278
	.equiv "object::MapObjSeagullGenerator::calcRecorder()", _text + 0x3646E8
	.equiv "object::MapObjSeagullGenerator::calcGenerateNum()", _text + 0x3648D8
	.equiv "object::MapObjShortCutBox::enterObj()", _text + 0x3655B8
	.equiv "FUN_0E4E7EB0:bool_EffectLinkUserBase::isExistAction()", _text + 0x367EB0
	.equiv "FUN_0E4E8024:void_EffectLinkUserBase::createProperty1()", _text + 0x368024
	.equiv "FUN_0E4E94B0:FID_conflict:`global_constructor_keyed_to'_16_MapObjSlRope_cpp_391e37b5", _text + 0x3694B0
	.equiv "object::MapObjSnowBoardHeyhoGenerator::createModel()", _text + 0x36AE70
	.equiv "FUN_0E4ED11C:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x36D11C
	.equiv "FUN_0E4ED290:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x36D290
	.equiv "`global_constructor_keyed_to'_18_MapObjSnowRock_cpp_420a0264", _text + 0x36E4A0
	.equiv "FUN_0E4EEF14:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x36EF14
	.equiv "FUN_0E4EF088:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x36F088
	.equiv "object::MapObjSpikeBall::afterModelUpdateWorldMatrix()", _text + 0x36F3B0
	.equiv "object::MapObjSpikeBall::calcObj()", _text + 0x36FCC0
	.equiv "object::MapObjSpikeBall::setupPrimCol()", _text + 0x370164
	.equiv "FUN_0E4F05E8:FID_conflict:object::MapObjSpikeBall::reactAgainstKart()", _text + 0x3705E8
	.equiv "object::MapObjSpikeBall::createRecorder()", _text + 0x3706CC
	.equiv "object::MapObjSpinTurboBar::MapObjSpinTurboBar()", _text + 0x3726D0
	.equiv "object::MapObjSubmarine::addMare()", _text + 0x373C04
	.equiv "object::MapObjSubmarine::enterObj()", _text + 0x373C9C
	.equiv "object::MapObjSubmarine::setupPrimCol()", _text + 0x375310
	.equiv "object::MapObjSubmarine::stateInitIn()", _text + 0x375848
	.equiv "object::MapObjSubmarineManager::enter()", _text + 0x375AB0
	.equiv "FUN_0E4F6BD0:bool_EffectLinkUserBase::isExistAction()", _text + 0x376BD0
	.equiv "FUN_0E4F6D44:void_EffectLinkUserBase::createProperty1()", _text + 0x376D44
	.equiv "FUN_0E4F7074:FID_conflict:object::MapObjDdQuicksand::MapObjDdQuicksand()", _text + 0x377074
	.equiv "`global_constructor_keyed_to'_13_MapObjSun_cpp_c5ce9e74", _text + 0x37768C
	.equiv "object::MapObjSwanBoatManager::afterCreateModel()", _text + 0x378BBC
	.equiv "object::MapObjSwanBoat::calcObj()", _text + 0x3790E0
	.equiv "`global_constructor_keyed_to'_18_MapObjSwanBoat_cpp_c7414409", _text + 0x379594
	.equiv "object::MapObjTcSoundRoad::resetObj()", _text + 0x37A0A8
	.equiv "object::MapObjTcSoundRoad::calcObj()", _text + 0x37A10C
	.equiv "object::MapObjTechnoStep::MapObjTechnoStep()", _text + 0x37A72C
	.equiv "object::MapObjTechnoStep::reactAgainstKart_GndColBlock()", _text + 0x37AEB0
	.equiv "FUN_0E4FB0E8:FID_conflict:`global_constructor_keyed_to'_20_MapObjTechnoStep_cpp_8225c8dd", _text + 0x37B0E8
	.equiv "FUN_0E4FB69C:sead::TreeMapNode_*sead::TreeMapImpl::find()", _text + 0x37B69C
	.equiv "FUN_0E4FB6DC:sead::TreeMapNode_*sead::TreeMapImpl::insert()", _text + 0x37B6DC
	.equiv "object::MapObjTeresaGenerator::calcGenerateNum()", _text + 0x37C734
	.equiv "FUN_0E4FD35C:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x37D35C
	.equiv "FUN_0E4FD4D0:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x37D4D0
	.equiv "FUN_0E4FF498:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x37F498
	.equiv "FUN_0E4FF60C:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x37F60C
	.equiv "object::MapObjTire::setDistanceOffset()", _text + 0x37FF04
	.equiv "object::MapObjTire::reactAgainstItem()", _text + 0x3802B8
	.equiv "object::MapObjTire::drop()", _text + 0x380398
	.equiv "object::MapObjTireGenerator::drop()", _text + 0x380464
	.equiv "object::MapObjTire::startSlide_()", _text + 0x3804C4
	.equiv "object::MapObjTire::startCrash()", _text + 0x380AFC
	.equiv "object::MapObjTireGenerator::crash()", _text + 0x380D3C
	.equiv "object::MapObjTire::reactReject()", _text + 0x3815B8
	.equiv "object::MapObjTire::checkCollisionTire()", _text + 0x381970
	.equiv "object::MapObjTireGenerator::getRandomOffset()", _text + 0x381AE0
	.equiv "object::MapObjTireGenerator::MapObjTireGenerator()", _text + 0x3829C8
	.equiv "object::MapObjTireGenerator::calcGenerateNum()", _text + 0x382E08
	.equiv "object::MapObjTireManager::calcAfterStructure()", _text + 0x382E58
	.equiv "`global_constructor_keyed_to'_14_MapObjTire_cpp_8225c8dd", _text + 0x3831A4
	.equiv "FUN_0E50446C:bool_EffectLinkUserBase::isExistAction()", _text + 0x38446C
	.equiv "FUN_0E5045E0:void_EffectLinkUserBase::createProperty1()", _text + 0x3845E0
	.equiv "FUN_0E504908:void_object::MapObjGenerator::createChild()", _text + 0x384908
	.equiv "void_object::MapObjGenerator::setVisibleImpl()", _text + 0x384ED8
	.equiv "object::MapObjTollBar::enterObj()", _text + 0x3854A8
	.equiv "object::MapObjTollBar::calcObj()", _text + 0x385710
	.equiv "object::MapObjTollBar::calcRecorder()", _text + 0x38597C
	.equiv "object::MapObjTollBar::isNearBar()", _text + 0x385E98
	.equiv "object::MapObjWPTollBar::isNearBar()", _text + 0x3866E4
	.equiv "`global_constructor_keyed_to'_17_MapObjTollBar_cpp_08157655", _text + 0x386840
	.equiv "FUN_0E509040:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x389040
	.equiv "FUN_0E5091B4:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x3891B4
	.equiv "object::MapObjTKuribo::startVanish()", _text + 0x3898A0
	.equiv "object::MapObjTKuribo::startRebirth()", _text + 0x389948
	.equiv "object::MapObjTKuribo::stateRebirth()", _text + 0x38A94C
	.equiv "object::MapObjTowerKuribo::calcAfterStructure()", _text + 0x38AFEC
	.equiv "object::MapObjTowerKuribo::enterObj()", _text + 0x38B174
	.equiv "object::MapObjTowerKuribo::setupPrimCol()", _text + 0x38B8E0
	.equiv "object::MapObjTowerKuribo::calcGenerateNum()", _text + 0x38BA54
	.equiv "object::MapObjTowerKuribo::stateInitGVanish()", _text + 0x38C0E8
	.equiv "object::MapObjTowerKuribo::stateGRebirth()", _text + 0x38C340
	.equiv "FUN_0E50D36C:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x38D36C
	.equiv "FUN_0E50D4E0:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x38D4E0
	.equiv "object::MapObjTreeSphEx::MapObjTreeSphEx()", _text + 0x38DFD0
	.equiv "object::MapObjTreeSphEx::setupPrimCol()", _text + 0x38E238
	.equiv "object::MapObjTreeSnow_AddCol::setupPrimCol()", _text + 0x38E9D8
	.equiv "`global_constructor_keyed_to'_14_MapObjTree_cpp_8225c8dd", _text + 0x38ECFC
	.equiv "object::MapObjTrolley::addToad()", _text + 0x390130
	.equiv "object::MapObjTrolley::enterObj()", _text + 0x390238
	.equiv "object::MapObjTrolley::calcRecorder()", _text + 0x39049C
	.equiv "object::MapObjTrolley::setupPrimCol()", _text + 0x390BA4
	.equiv "object::MapObjTrolleyManager::enter()", _text + 0x39169C
	.equiv "object::MapObjTrolleyManager::afterCreateModel()", _text + 0x391928
	.equiv "object::BlockTrolley::rejectFloor()", _text + 0x391C3C
	.equiv "`global_constructor_keyed_to'_17_MapObjTrolley_cpp_8225c8dd", _text + 0x392B70
	.equiv "object::MapObjUltraArm::enterObj()", _text + 0x3939E0
	.equiv "object::MapObjUltraArm::getLocalRTMtxForChild()", _text + 0x393FF4
	.equiv "object::MapObjUltraArm::getRTMtxForChild()", _text + 0x39418C
	.equiv "object::MapObjVehicleBase::enterObj()", _text + 0x3951E8
	.equiv "object::MapObjTruckA::createModel()", _text + 0x396914
	.equiv "object::MapObjVehicleManager::afterCreateModel()", _text + 0x396F60
	.equiv "object::MapObjRelayCar::calcCheck()", _text + 0x397994
	.equiv "FUN_0E519AF4:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x399AF4
	.equiv "FUN_0E519C68:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x399C68
	.equiv "object::MapObjVolBomb::stateInitLaunch()", _text + 0x39A7C4
	.equiv "FUN_0E51B660:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x39B660
	.equiv "FUN_0E51B7D4:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x39B7D4
	.equiv "object::MapObjVolcanoPiece::setIsClosed()", _text + 0x39BD38
	.equiv "object::MapObjVolcanoPiece::calcObj()", _text + 0x39C028
	.equiv "object::MapObjVolFlame::calcObj()", _text + 0x39DE0C
	.equiv "object::MapObjVolMovRoad::MapObjVolMovRoad()", _text + 0x39E768
	.equiv "object::MapObjVolMovRoad::enterObj()", _text + 0x39E824
	.equiv "FUN_0E51EBC8:FID_conflict:`global_constructor_keyed_to'_16_MapObjSlRope_cpp_391e37b5", _text + 0x39EBC8
	.equiv "object::WaterBox::WaterBox()", _text + 0x39F198
	.equiv "object::MapObjWaterCurrentNoMdl::MapObjWaterCurrentNoMdl()", _text + 0x39F6A4
	.equiv "object::MapObjWaterCurrentNoMdl::enterObj()", _text + 0x39F734
	.equiv "object::MapObjWaterCurrentNoMdl::reactKart()", _text + 0x39F8D8
	.equiv "object::MapObjWaterCurrentNoMdl::reactAgainstItem()", _text + 0x39FA2C
	.equiv "object::MapObjWaterCurrent::enterObj()", _text + 0x3A0370
	.equiv "object::MapObjWaterCurrent::calcRecorder()", _text + 0x3A069C
	.equiv "object::WaveIf::WaveIf()", _text + 0x3A17EC
	.equiv "object::WaveIf::calcWave()", _text + 0x3A1914
	.equiv "object::WaveIf::calcPeak()", _text + 0x3A1D40
	.equiv "object::WaveIf::setWavePeriod()", _text + 0x3A1F48
	.equiv "object::MapObjWindMill::setupPrimCol()", _text + 0x3A22E0
	.equiv "object::MapObjWPBoatManager::afterCreateModel()", _text + 0x3A29D0
	.equiv "FUN_0E522D9C:FID_conflict:object::MapObjWPBoat::MapObjWPBoat()", _text + 0x3A2D9C
	.equiv "FUN_0E522EA8:FID_conflict:object::MapObjYacht::calcObj()", _text + 0x3A2EA8
	.equiv "`global_constructor_keyed_to'_16_MapObjWPBoat_cpp_7b357777", _text + 0x3A30D4
	.equiv "FUN_0E52411C:FID_conflict:object::MapObjWPBoat::MapObjWPBoat()", _text + 0x3A411C
	.equiv "FUN_0E524228:FID_conflict:object::MapObjYacht::calcObj()", _text + 0x3A4228
	.equiv "object::MapObjCityBoat::calcObj()", _text + 0x3A4620
	.equiv "`global_constructor_keyed_to'_15_MapObjYacht_cpp_8225c8dd", _text + 0x3A4B00
	.equiv "object::MapObjYoshiEgg::setupPrimCol()", _text + 0x3A63A4
	.equiv "`global_constructor_keyed_to'_18_MapObjYoshiEgg_cpp_9c33e212", _text + 0x3A66B8
	.equiv "FUN_0E527200:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x3A7200
	.equiv "FUN_0E527374:FID_conflict:void_EffectLinkUserBase::createProperty1()", _text + 0x3A7374
	.equiv "FUN_0E528624:bool_EffectLinkUserBase::isExistAction()", _text + 0x3A8624
	.equiv "FUN_0E528798:void_EffectLinkUserBase::createProperty1()", _text + 0x3A8798
	.equiv "mii::MiiDBMgr::getMiiInfo()", _text + 0x3A91B4
	.equiv "mii::MiiCreateArg::toGsysArg()", _text + 0x3A92D0
	.equiv "mii::MiiDirector::setupMiiCreateArg()", _text + 0x3A9620
	.equiv "mii::MiiDirector::calcTypeBufferSize()", _text + 0x3A9E50
	.equiv "mii::MiiDirector::getMiiUnitMgrHeapSize()", _text + 0x3A9FD4
	.equiv "mii::MiiDirector::destroyAndCreateMiiHeap()", _text + 0x3AA034
	.equiv "mii::MiiDirector::createMiiUnitMgr()", _text + 0x3AA1E0
	.equiv "mii::MiiDirector::canDestroyMiiUnitMgr()", _text + 0x3AA758
	.equiv "mii::MiiDirector::tryCreateMiiAsync_()", _text + 0x3AA7D4
	.equiv "mii::MiiDirector::calcInner()", _text + 0x3AA9AC
	.equiv "mii::MiiDirector::createMiiSyncIntoPrepare()", _text + 0x3AAB3C
	.equiv "mii::MiiDirector::searchMiiUnit()", _text + 0x3AAC88
	.equiv "mii::MiiDirector::destroyMiiSync()", _text + 0x3AAD28
	.equiv "FUN_0E52AE10:mii::MiiDirector::reqDestroyMiiAsync()", _text + 0x3AAE10
	.equiv "mii::MiiDirector::destroyMiiSyncIntoPrepare()", _text + 0x3AAE48
	.equiv "FUN_0E52AFA8:mii::MiiDirector::reqDestroyMiiAsync()", _text + 0x3AAFA8
	.equiv "mii::MiiDirector::getDriverSize()", _text + 0x3AAFDC
	.equiv "mii::MiiDirector::calcWorkBufferSize()", _text + 0x3AB068
	.equiv "mii::MiiDirector::initNet()", _text + 0x3AB178
	.equiv "mii::MiiDirector::prepareBeforeStructure()", _text + 0x3AB2A4
	.equiv "mii::MiiEngine::getEngine()", _text + 0x3ABBE8
	.equiv "mii::MiiEngine::MiiEngine()", _text + 0x3ABC20
	.equiv "mii::MiiUnit::createFFLResource_()", _text + 0x3AC994
	.equiv "mii::MiiUnit::MiiUnit()", _text + 0x3ACA0C
	.equiv "mii::MiiUnit::getFavoriteColor()", _text + 0x3ACC68
	.equiv "mii::MiiUnit::calcByDirector()", _text + 0x3ACDEC
	.equiv "mush::MushManager::load()", _text + 0x3AD19C
	.equiv "mush::MushResAudio::initDefault_()", _text + 0x3AD350
	.equiv "mush::MushResAudio::MushResAudio()", _text + 0x3AD688
	.equiv "mush::MushResController::initDefault_()", _text + 0x3ADD74
	.equiv "mush::MushResController::MushResController()", _text + 0x3ADDC0
	.equiv "mush::MushResCourse::initDefault_()", _text + 0x3ADF28
	.equiv "mush::MushResCourse::MushResCourse()", _text + 0x3ADFDC
	.equiv "FUN_0E52E1B8:mush::MushResOpenFlag::MushResOpenFlag()", _text + 0x3AE1B8
	.equiv "mush::MushResHighlight::initDefault_()", _text + 0x3AE368
	.equiv "mush::MushResHighlight::MushResHighlight()", _text + 0x3AE400
	.equiv "mush::MushResItem::initDefault_()", _text + 0x3AE524
	.equiv "mush::MushResItem::MushResItem()", _text + 0x3AE6A8
	.equiv "mush::MushResObj::initDefault_()", _text + 0x3AEA54
	.equiv "mush::MushResObj::MushResObj()", _text + 0x3AEBEC
	.equiv "mush::MushResOpenFlag::initDefault_()", _text + 0x3AEF94
	.equiv "FUN_0E52EFB4:mush::MushResOpenFlag::MushResOpenFlag()", _text + 0x3AEFB4
	.equiv "mush::MushResource::MushResource()", _text + 0x3AF164
	.equiv "mush::MushResource::check()", _text + 0x3AF210
	.equiv "mush::MushResource::mount()", _text + 0x3AF248
	.equiv "mush::MushResParts::initDefault_()", _text + 0x3AF3B0
	.equiv "mush::MushResParts::MushResParts()", _text + 0x3AFC00
	.equiv "FUN_0E53069C:object::JugemMove::setTargetPosFromTrans()", _text + 0x3B069C
	.equiv "FUN_0E5306BC:FID_conflict:al::ByamlHashIter::ByamlHashIter()", _text + 0x3B06BC
	.equiv "mush::MushResPerformance::initDefault_()", _text + 0x3B0700
	.equiv "mush::MushResPerformance::MushResPerformance()", _text + 0x3B08E0
	.equiv "net::CurlInitializer::curlAlloc()", _text + 0x3B0CA8
	.equiv "net::CurlInitializer::curlFree()", _text + 0x3B0D14
	.equiv "`global_constructor_keyed_to'_19_CurlInitializer_cpp_9fc2524c", _text + 0x3B1010
	.equiv "net::NetworkBattleEvent::init()", _text + 0x3B2E78
	.equiv "net::NetworkBattleEvent::enter()", _text + 0x3B2F94
	.equiv "net::NetworkBattleEvent::_pushEvent2Stock()", _text + 0x3B30E8
	.equiv "net::NetworkBattleEvent::_execStock()", _text + 0x3B3784
	.equiv "net::NetworkBattleEvent::_execStockByWatcher()", _text + 0x3B3844
	.equiv "net::NetworkBattleEvent::addSyncEvent()", _text + 0x3B3934
	.equiv "net::NetworkBattleEvent::_checkSync()", _text + 0x3B3B08
	.equiv "net::NetworkBattleEvent::addBreakEvent()", _text + 0x3B3F7C
	.equiv "net::NetworkBattleEvent::addIncHitEvent()", _text + 0x3B4080
	.equiv "net::NetworkBattleEvent::addRobbedEvent()", _text + 0x3B418C
	.equiv "net::NetworkBattleEvent::addFinishEvent()", _text + 0x3B4298
	.equiv "net::NetworkBattleEvent::addZombieEvent()", _text + 0x3B4450
	.equiv "FUN_0E5344F0:FID_conflict:net::NetworkItemEvent::dumpItemEvent()", _text + 0x3B44F0
	.equiv "net::PromoBossTask::PromoBossTask()", _text + 0x3B5430
	.equiv "net::HistoBossTask::HistoBossTask()", _text + 0x3B5684
	.equiv "net::NetworkBossDataManager::NetworkBossDataManager()", _text + 0x3B5914
	.equiv "net::NetworkBossManager::isBossAvailable()", _text + 0x3B6530
	.equiv "net::NetworkBossManager::addTask()", _text + 0x3B6578
	.equiv "net::NetworkBossManager::Data::initialize()", _text + 0x3B66A4
	.equiv "net::NetworkBossManager::BossTask::BossTask()", _text + 0x3B6754
	.equiv "net::NetworkBossManager::BossTask::setSchedule()", _text + 0x3B6834
	.equiv "net::NetworkBossManager::BossTask::updateLifeTime()", _text + 0x3B6898
	.equiv "net::NetworkBossManager::BossTask::setConfig()", _text + 0x3B68A8
	.equiv "net::NetworkBossManager::BossTask::updateData()", _text + 0x3B6A4C
	.equiv "util::MicControllerCafe::MicControllerCafe()", _text + 0x3B7018
	.equiv "util::MicControllerCafe::startCore()", _text + 0x3B7134
	.equiv "net::CompeResult_Search::addFindCompetition()", _text + 0x3B7BF4
	.equiv "net::CompeResult_Ready::addFavoriteCompetition()", _text + 0x3B7CAC
	.equiv "net::CompeResult_Ready::getFavoriteByID()", _text + 0x3B82F0
	.equiv "net::CompeResult_Ready::isOsusume()", _text + 0x3B8E50
	.equiv "net::CompeResult_Ready::clearPopularCompeList_()", _text + 0x3B8EA8
	.equiv "net::CompeResult_Ready::addPopularCompe_()", _text + 0x3B8EF8
	.equiv "net::CompeParam_Ready::getMySaveCompe()", _text + 0x3B9BDC
	.equiv "net::CompetitionInfo::CompetitionInfo()", _text + 0x3BA85C
	.equiv "net::fromSimpleSearchDay_()", _text + 0x3BAD38
	.equiv "net::CompetitionInfo::extractApplicationBuffer_()", _text + 0x3BADC4
	.equiv "net::fromDateTime_()", _text + 0x3BBAD0
	.equiv "net::CompetitionInfo::setCurrentTime()", _text + 0x3BBB74
	.equiv "FUN_0E53BBC4:<unnamed>::nextTime_()", _text + 0x3BBBC4
	.equiv "<unnamed>::convertWeek_()", _text + 0x3BBD04
	.equiv "<unnamed>::convertTime_()", _text + 0x3BBD30
	.equiv "FUN_0E53BDAC:<unnamed>::nextTime_()", _text + 0x3BBDAC
	.equiv "net::CompetitionInfo::calcPeriod_()", _text + 0x3BBE80
	.equiv "net::toSimpleSearchDay_()", _text + 0x3BC738
	.equiv "net::CompetitionInfo::isCurrentTimeSet_()", _text + 0x3BD6F0
	.equiv "net::CompetitionInfo::getFromSave()", _text + 0x3BDB1C
	.equiv "net::CompetitionInfo::isMyCompe()", _text + 0x3BE2EC
	.equiv "net::CompetitionInfo::setToSearchOsusume()", _text + 0x3BE7EC
	.equiv "net::CompetitionInfo::checkCompe()", _text + 0x3BE858
	.equiv "net::CompetitionInfo::checkCompeInfo()", _text + 0x3BED00
	.equiv "net::CompetitionInfo::isPopularCompe()", _text + 0x3BED14
	.equiv "net::CompetitionInfo::checkSame()", _text + 0x3BEDC4
	.equiv "net::ReplayCompetitionInfo::convertCode()", _text + 0x3BEE94
	.equiv "net::ReplayCompetitionInfo::setCode()", _text + 0x3BEF10
	.equiv "void_std::basic_string::_Tidy()", _text + 0x3BF424
	.equiv "std::basic_string_&std::basic_string::erase()", _text + 0x3BF4D4
	.equiv "void_std::basic_string::_Copy()", _text + 0x3BF638
	.equiv "bool_std::basic_string::_Grow()", _text + 0x3BF760
	.equiv "FUN_0E53F84C:std::basic_string_&std::basic_string::assign()", _text + 0x3BF84C
	.equiv "FUN_0E53F96C:std::basic_string_&std::basic_string::assign()", _text + 0x3BF96C
	.equiv "FUN_0E53FABC:void_std::vector::_Tidy()", _text + 0x3BFABC
	.equiv "FUN_0E53FB04:std::_Vector_iterator_std::vector::erase()", _text + 0x3BFB04
	.equiv "FUN_0E53FBB4:bool_std::vector::_Buy()", _text + 0x3BFBB4
	.equiv "FUN_0E53FC34:void_std::vector::_Insert()", _text + 0x3BFC34
	.equiv "FUN_0E5400E0:void_std::vector::_Assign()", _text + 0x3C00E0
	.equiv "FUN_0E540178:void_std::vector::_Insert_n()", _text + 0x3C0178
	.equiv "FUN_0E540708:std::_Vector_iterator_std::vector::erase()", _text + 0x3C0708
	.equiv "void_std::vector::resize()", _text + 0x3C07A8
	.equiv "net::NetworkCompetitionManager::init()", _text + 0x3C0854
	.equiv "net::NetworkCompetitionManager::processError_()", _text + 0x3C1B04
	.equiv "net::NetworkCompetitionManager::deleteInconsistentCompe()", _text + 0x3C24D4
	.equiv "net::NetworkCompetitionManager::uploadCompeOlive_()", _text + 0x3C2938
	.equiv "net::NetworkCompetitionManager::funcCreate()", _text + 0x3C2A1C
	.equiv "net::NetworkCompetitionManager::funcUpdate()", _text + 0x3C2E30
	.equiv "net::NetworkCompetitionManager::funcDelete()", _text + 0x3C308C
	.equiv "net::NetworkCompetitionManager::funcGet()", _text + 0x3C34BC
	.equiv "FUN_0E543B88:nn::nex::qResult::Equals()", _text + 0x3C3B88
	.equiv "FUN_0E543B8C:std::_List_val::_Alty::rebind::other::pointer_std::list::_Buynode()", _text + 0x3C3B8C
	.equiv "FUN_0E543BC8:void_std::vector::_Tidy()", _text + 0x3C3BC8
	.equiv "FUN_0E543C10:void_std::list::clear()", _text + 0x3C3C10
	.equiv "FUN_0E543CC8:void_std::vector::_Tidy()", _text + 0x3C3CC8
	.equiv "net::NetworkCompetitionData::MyRecord::searchIdx()", _text + 0x3C4304
	.equiv "net::NetworkCompetitionData::MyRecord::setRecord()", _text + 0x3C4330
	.equiv "net::NetworkCompetitionRankingUpData::init()", _text + 0x3C43F8
	.equiv "net::NetworkCompetitionRankingUpData::set()", _text + 0x3C4410
	.equiv "net::NetworkCompetitionDataManager::NetworkCompetitionDataManager()", _text + 0x3C443C
	.equiv "net::NetworkCompetitionDataManager::_findSaveData()", _text + 0x3C453C
	.equiv "net::NetworkCompetitionDataManager::setNeedCheckSetting()", _text + 0x3C45A8
	.equiv "net::NetworkCompetitionDataManager::load()", _text + 0x3C4620
	.equiv "net::NetworkCompetitionDataManager::useRaceCnt()", _text + 0x3C5098
	.equiv "net::NetworkCompetitionDataManager::invalidateFirstUploadFlg()", _text + 0x3C5120
	.equiv "net::NetworkCompetitionDataManager::setResult()", _text + 0x3C519C
	.equiv "net::NetworkCompetitionDataManager::getCompeInfo()", _text + 0x3C52CC
	.equiv "net::NetworkCompetitionDataManager::addRankingUp()", _text + 0x3C5490
	.equiv "net::NetworkCompetitionDataManager::getTeamID()", _text + 0x3C5668
	.equiv "net::NetworkCompetitionDataManager::isFirstUpload()", _text + 0x3C58A8
	.equiv "FUN_0E545C18:FID_conflict:`global_constructor_keyed_to'_29_SystemCommonModuleManager_cpp_8225c8dd", _text + 0x3C5C18
	.equiv "net::NetworkDataStoreManager::reqUpload_()", _text + 0x3C7CB4
	.equiv "net::NetworkDataStoreManager::makeRaceLogResult()", _text + 0x3C7F88
	.equiv "net::NetworkDataStoreManager::reqUploadRaceLog()", _text + 0x3C84D0
	.equiv "net::NetworkDataStoreManager::reqUploadHighlight1st()", _text + 0x3C87E4
	.equiv "net::NetworkDataStoreManager::reqUploadHighlight2nd()", _text + 0x3C887C
	.equiv "net::NetworkDataStoreManager::reqUploadGhost1st()", _text + 0x3C88D0
	.equiv "net::NetworkDataStoreManager::reqDownload_()", _text + 0x3C8A7C
	.equiv "FUN_0E548DAC:net::NetworkDataStoreManager::getFileServerInfo_()", _text + 0x3C8DAC
	.equiv "net::NetworkDataStoreManager::reqDownloadImage_()", _text + 0x3C8E2C
	.equiv "net::NetworkDataStoreManager::reqDownloadImage()", _text + 0x3C9104
	.equiv "net::NetworkDataStoreManager::reqDownloadList_()", _text + 0x3C9280
	.equiv "net::NetworkDataStoreManager::reqGetNewAndActiveList()", _text + 0x3C955C
	.equiv "net::NetworkDataStoreManager::reqUploadMeta_()", _text + 0x3C9AC4
	.equiv "net::NetworkDataStoreManager::reqUploadMeta()", _text + 0x3C9D98
	.equiv "net::NetworkDataStoreManager::reqUploadHighlightMeta()", _text + 0x3C9E98
	.equiv "net::NetworkDataStoreManager::reqUploadGhostMeta()", _text + 0x3C9F04
	.equiv "net::NetworkDataStoreManager::isThreadTaskWorking()", _text + 0x3C9F70
	.equiv "net::NetworkDataStoreManager::init()", _text + 0x3C9FE0
	.equiv "net::NetworkDataStoreManager::bind_()", _text + 0x3CA06C
	.equiv "net::NetworkDataStoreManager::isUploadRatingFile_()", _text + 0x3CA21C
	.equiv "net::NetworkDataStoreManager::updatePostParam_()", _text + 0x3CA248
	.equiv "net::NetworkDataStoreManager::unbind_()", _text + 0x3CA8E4
	.equiv "net::NetworkDataStoreManager::updateGetParam_()", _text + 0x3CAC60
	.equiv "net::NetworkDataStoreManager::download_()", _text + 0x3CAD68
	.equiv "FUN_0E54B0D0:net::NetworkDataStoreManager::getFileServerInfo_()", _text + 0x3CB0D0
	.equiv "net::NetworkDataStoreManager::updateNewAndActive_()", _text + 0x3CB828
	.equiv "net::NetworkDataStoreManager::updateSearchParam_()", _text + 0x3CBD8C
	.equiv "net::NetworkDataStoreManager::getOlivePostIDFromMeta_()", _text + 0x3CBEF8
	.equiv "net::NetworkDataStoreManager::searchAndUpdateData_()", _text + 0x3CC088
	.equiv "net::NetworkDataStoreManager::downloadList_()", _text + 0x3CC77C
	.equiv "net::NetworkDataStoreManager::updateMetaParam_()", _text + 0x3CCE38
	.equiv "FUN_0E54E004:FID_conflict:net::NetworkDataStoreManager::isTaskFinished_()", _text + 0x3CE004
	.equiv "net::NetworkDataStoreManager::check_()", _text + 0x3CE1BC
	.equiv "void_std::_Tree::_Erase()", _text + 0x3CED2C
	.equiv "void_std::_Tree::clear()", _text + 0x3CEDA0
	.equiv "T1::allocator_type::rebind::other::pointer_std::_Tree::_Min()", _text + 0x3CEDF4
	.equiv "T1::allocator_type::rebind::other::pointer_std::_Tree::_Max()", _text + 0x3CEE1C
	.equiv "void_std::_Tree::_Lrotate()", _text + 0x3CEE44
	.equiv "void_std::_Tree::_Rrotate()", _text + 0x3CEEBC
	.equiv "FUN_0E54EF34:std::_Tree::iterator_std::_Tree::erase()", _text + 0x3CEF34
	.equiv "FUN_0E54F430:std::_Tree::iterator_std::_Tree::erase()", _text + 0x3CF430
	.equiv "void_std::_Tree::_Tidy()", _text + 0x3CF544
	.equiv "FUN_0E54F59C:T1::allocator_type::rebind::other::pointer_std::_Tree::_Buynode()", _text + 0x3CF59C
	.equiv "std::_Tree::iterator_std::_Tree::_Insert()", _text + 0x3CF6A4
	.equiv "std::pair_std::_Tree::insert()", _text + 0x3CF990
	.equiv "FUN_0E54FB58:T1::allocator_type::rebind::other::pointer_std::_Tree::_Buynode()", _text + 0x3CFB58
	.equiv "void_std::_Tree::_Init()", _text + 0x3CFBB0
	.equiv "FUN_0E54FC08:bool_std::vector::_Buy()", _text + 0x3CFC08
	.equiv "FUN_0E54FD64:void_std::vector::_Tidy()", _text + 0x3CFD64
	.equiv "FUN_0E5508A4:bool_std::vector::_Buy()", _text + 0x3D08A4
	.equiv "FUN_0E550A00:bool_std::vector::_Buy()", _text + 0x3D0A00
	.equiv "FUN_0E550B5C:void_std::vector::_Construct_n()", _text + 0x3D0B5C
	.equiv "FUN_0E550BE0:std::vector_&std::vector::operator_=()", _text + 0x3D0BE0
	.equiv "FUN_0E550E90:void_std::vector::_Tidy()", _text + 0x3D0E90
	.equiv "FUN_0E550F20:bool_std::vector::_Buy()", _text + 0x3D0F20
	.equiv "FUN_0E55107C:void_std::vector::_Construct_n()", _text + 0x3D107C
	.equiv "FUN_0E5510F4:std::vector_&std::vector::operator_=()", _text + 0x3D10F4
	.equiv "FUN_0E551384:void_std::vector::_Insert_n()", _text + 0x3D1384
	.equiv "FUN_0E5517D8:std::_Vector_iterator_std::vector::insert()", _text + 0x3D17D8
	.equiv "FUN_0E551878:void_std::vector::push_back()", _text + 0x3D1878
	.equiv "FUN_0E551920:bool_std::vector::_Buy()", _text + 0x3D1920
	.equiv "FUN_0E551A7C:void_std::vector::_Construct_n()", _text + 0x3D1A7C
	.equiv "FUN_0E551BAC:void_std::vector::_Insert_n()", _text + 0x3D1BAC
	.equiv "FUN_0E5524A4:std::_Vector_iterator_std::vector::insert()", _text + 0x3D24A4
	.equiv "FUN_0E55256C:void_std::vector::push_back()", _text + 0x3D256C
	.equiv "FUN_0E5526EC:bool_std::vector::_Buy()", _text + 0x3D26EC
	.equiv "FUN_0E552848:void_std::vector::_Tidy()", _text + 0x3D2848
	.equiv "FUN_0E5528D8:void_std::vector::_Construct_n()", _text + 0x3D28D8
	.equiv "FUN_0E5529E8:bool_std::vector::_Buy()", _text + 0x3D29E8
	.equiv "FUN_0E552B44:void_std::vector::_Tidy()", _text + 0x3D2B44
	.equiv "FUN_0E552BD4:void_std::vector::_Construct_n()", _text + 0x3D2BD4
	.equiv "FUN_0E55301C:void_std::vector::_Tidy()", _text + 0x3D301C
	.equiv "FUN_0E553064:void_std::vector::_Insert_n()", _text + 0x3D3064
	.equiv "FUN_0E5534E8:std::_Vector_iterator_std::vector::insert()", _text + 0x3D34E8
	.equiv "FUN_0E553588:void_std::vector::push_back()", _text + 0x3D3588
	.equiv "FUN_0E55361C:bool_std::vector::_Buy()", _text + 0x3D361C
	.equiv "net::NetworkData_Menu::init()", _text + 0x3D3BA4
	.equiv "net::NetworkData_Menu::setVoteCourse()", _text + 0x3D3BF0
	.equiv "net::NetworkData_Menu::clearVoteCourse()", _text + 0x3D3C98
	.equiv "net::NetworkData_Menu::getVotedCourse()", _text + 0x3D3D04
	.equiv "net::NetworkData_Menu::compareUniqueID_()", _text + 0x3D3DE4
	.equiv "net::NetworkData_Menu::sortVotedCourse()", _text + 0x3D3E38
	.equiv "net::NetworkData_Menu::isCourseVoted()", _text + 0x3D3F2C
	.equiv "net::NetworkEngine::getEngine()", _text + 0x3D42F4
	.equiv "net::NetworkEngine::rootEngineEnter()", _text + 0x3D4D38
	.equiv "net::NetworkEngine::updateSendLogFlag_()", _text + 0x3D4EF8
	.equiv "net::NetworkEngine::updateExError_()", _text + 0x3D61D8
	.equiv "net::NetworkEngine::isThreadTaskWorking_()", _text + 0x3D621C
	.equiv "net::NetworkEngine::getNetworkErrorCode()", _text + 0x3D62C8
	.equiv "net::NetworkEngine::hasFinalizeError()", _text + 0x3D6330
	.equiv "net::NetworkEngine::hasDisconnectError()", _text + 0x3D63B4
	.equiv "net::NetworkEngine::createPlayerIDTable()", _text + 0x3D6434
	.equiv "net::NetworkEngine::willPlayerOnNextRace_()", _text + 0x3D6618
	.equiv "net::NetworkEngine::onRoleChanged_()", _text + 0x3D6684
	.equiv "net::NetworkEngine::updateMenuError_()", _text + 0x3D6B5C
	.equiv "net::NetworkEngine::syncEngineLevel_()", _text + 0x3D6D34
	.equiv "net::NetworkEngine::isAnyMatchConditionSet_()", _text + 0x3D7010
	.equiv "net::NetworkEngine::updateMenuSync_()", _text + 0x3D72B4
	.equiv "net::NetworkEngine::willRaceFinishSoon()", _text + 0x3D73E4
	.equiv "net::NetworkEngine::setRaceWillFinish()", _text + 0x3D7424
	.equiv "net::NetworkEngine::setRaceFinished()", _text + 0x3D746C
	.equiv "net::NetworkEngine::updateRaceProgress_()", _text + 0x3D74E0
	.equiv "net::NetworkEngine::updateRaceError_()", _text + 0x3D753C
	.equiv "net::NetworkEngine::checkRandomCourseNeedSync_()", _text + 0x3D75F4
	.equiv "net::NetworkEngine::syncRandomCourse_()", _text + 0x3D773C
	.equiv "net::NetworkEngine::syncFriendRace_()", _text + 0x3D7BAC
	.equiv "net::NetworkEngine::checkFriendMatchError_()", _text + 0x3D7D84
	.equiv "net::NetworkEngine::updateCommonSync_()", _text + 0x3D7DE4
	.equiv "net::NetworkEngine::setLocalPlayerNum()", _text + 0x3D8268
	.equiv "net::NetworkEngine::checkNetworkTaskDone_()", _text + 0x3D8338
	.equiv "net::NetworkEngine::reqLogin()", _text + 0x3D85C0
	.equiv "net::NetworkEngine::checkLoginTask_()", _text + 0x3D88FC
	.equiv "net::NetworkEngine::onLogin_()", _text + 0x3D89CC
	.equiv "net::NetworkEngine::checkLoginResult()", _text + 0x3D8A30
	.equiv "net::NetworkEngine::reqDisconnect()", _text + 0x3D9DF4
	.equiv "net::NetworkEngine::onDisconnect_()", _text + 0x3D9E18
	.equiv "net::NetworkEngine::checkDisconnectResult()", _text + 0x3D9E8C
	.equiv "net::NetworkEngine::resetError()", _text + 0x3D9FC4
	.equiv "net::NetworkEngine::onLogout_()", _text + 0x3DA01C
	.equiv "net::NetworkEngine::checkFinalizeResult()", _text + 0x3DA098
	.equiv "net::NetworkEngine::setRandomCourse()", _text + 0x3DA1E8
	.equiv "FUN_0E55A2BC:net::NetworkEngine::updateFriendMatchRace()", _text + 0x3DA2BC
	.equiv "FUN_0E55A338:net::NetworkEngine::updateFriendMatchRace()", _text + 0x3DA338
	.equiv "net::NetworkEngine::updateRaceResult()", _text + 0x3DA728
	.equiv "net::NetworkEngine::stopVoiceChat()", _text + 0x3DAF60
	.equiv "net::NetworkEngine::leaveHomeButton()", _text + 0x3DAFF8
	.equiv "net::NetworkEngine::isSpectatorSync()", _text + 0x3DB2FC
	.equiv "net::NetworkEngine::getRaceSyncCount()", _text + 0x3DB374
	.equiv "net::NetworkEngine::calcWatchTarget()", _text + 0x3DB584
	.equiv "net::NetworkEngine::isConnected_()", _text + 0x3DBFF0
	.equiv "net::NetworkEngine::checkNeedSendRaceLog_()", _text + 0x3DC484
	.equiv "net::NetworkEngine::mcCalc3()", _text + 0x3DC824
	.equiv "net::NetworkEngine::mcCalc4()", _text + 0x3DC968
	.equiv "net::NetworkEngine::updateOptionalInfoAfterRace()", _text + 0x3DCA40
	.equiv "net::NetworkEngine::startFrameSync()", _text + 0x3DCBE0
	.equiv "net::NetworkEngine::enlWork_()", _text + 0x3DD5A8
	.equiv "net::NetworkEngine::willBePlayer()", _text + 0x3DD6CC
	.equiv "FUN_0E55F3B8:std::_List_val::_Alty::rebind::other::pointer_std::list::_Buynode()", _text + 0x3DF3B8
	.equiv "FUN_0E55F520:void_std::list::clear()", _text + 0x3DF520
	.equiv "net::SetForeground()", _text + 0x3DF724
	.equiv "net::CheckDisconnectResult()", _text + 0x3DF778
	.equiv "net::CheckFinalizeResult()", _text + 0x3DF7AC
	.equiv "net::ResetError()", _text + 0x3DF7E0
	.equiv "net::IsRandomCourseSync()", _text + 0x3DF804
	.equiv "net::IsErrorOccured()", _text + 0x3DF828
	.equiv "net::SetLocalPlayerNum()", _text + 0x3DF948
	.equiv "net::UpdateFriendMatchRace()", _text + 0x3DF97C
	.equiv "net::CalcWatchTarget()", _text + 0x3DF9B0
	.equiv "net::getMasterPlayerManagerIndex()", _text + 0x3DF9D4
	.equiv "net::WaitCore2Event()", _text + 0x3DFA1C
	.equiv "net::NetworkFrameSynchronizer::getDrops_()", _text + 0x3E5E88
	.equiv "net::NetworkFrameSynchronizer::calcDrops_()", _text + 0x3E5E98
	.equiv "net::NetworkFrameSynchronizer::calc()", _text + 0x3E5ECC
	.equiv "net::NetworkFriendDataManager::NetworkFriendDataManager()", _text + 0x3E6524
	.equiv "net::NetworkFriendDataManager::isExistSave()", _text + 0x3E6578
	.equiv "net::NetworkFriendDataManager::loadFriendSaveData()", _text + 0x3E6930
	.equiv "net::NetworkFriendDataManager::addPoint()", _text + 0x3E69D4
	.equiv "net::NetworkFriendDataManager::inheritPoint()", _text + 0x3E6B08
	.equiv "net::FPMyInfo::updateInfo()", _text + 0x3E6FE4
	.equiv "net::FPFriendInfo::updateInfo()", _text + 0x3E7364
	.equiv "net::FPFriendInfo::updateInfoAll()", _text + 0x3E7460
	.equiv "net::NetworkFriendManager::isMyFriend()", _text + 0x3E7520
	.equiv "net::FriendNotification::setInfo()", _text + 0x3E7698
	.equiv "net::NetworkFriendManager::NetworkFriendManager()", _text + 0x3E76B0
	.equiv "net::NetworkFriendManager::getFriendInfoByPrincipalIDAll_()", _text + 0x3E79C0
	.equiv "net::NetworkFriendManager::isReqeustFrom_()", _text + 0x3E7A94
	.equiv "net::NetworkFriendManager::updateFriendInfo()", _text + 0x3E7B00
	.equiv "net::NetworkFriendManager::getFriendInfoByPrincipalID()", _text + 0x3E8794
	.equiv "net::NetworkFriendManager::resetUpdateGameMode()", _text + 0x3E8DB0
	.equiv "net::NetworkFriendManager::deleteNotification_()", _text + 0x3E8EB8
	.equiv "net::NetworkFriendManager::updateOptionalInfo()", _text + 0x3E8FA4
	.equiv "net::NetworkFriendManager::updateRelogin()", _text + 0x3E9258
	.equiv "net::NetworkFriendManager::loginOuter()", _text + 0x3E93C0
	.equiv "net::NetworkFriendManager::addFriendNotification_()", _text + 0x3E94C4
	.equiv "net::NetworkItemCheatLog::ItemCheatLog::init()", _text + 0x3EA280
	.equiv "net::NetworkItemEvent::enter()", _text + 0x3EB0D0
	.equiv "net::NetworkItemEvent::addCheatCheck_()", _text + 0x3EB1CC
	.equiv "net::NetworkItemEvent::moveToStock_()", _text + 0x3EB338
	.equiv "net::NetworkItemEvent::isSerialLastEventID_()", _text + 0x3EB4C4
	.equiv "net::NetworkItemEvent::pushStockFrmRunQue_()", _text + 0x3EB538
	.equiv "net::NetworkItemEvent::validateItemEvent_()", _text + 0x3EB5FC
	.equiv "net::NetworkItemEvent::getPriority_()", _text + 0x3EB654
	.equiv "net::NetworkItemEvent::removeCheatCheck_()", _text + 0x3EB8E0
	.equiv "net::NetworkItemEvent::updateStockEvent_()", _text + 0x3EB984
	.equiv "net::NetworkItemEvent::calcSerialCnt_()", _text + 0x3EBC28
	.equiv "net::NetworkItemEvent::setItemEventToLocal_()", _text + 0x3EBC98
	.equiv "net::NetworkItemEvent::validateSlotAddmitted_()", _text + 0x3EC368
	.equiv "net::NetworkItemEvent::addItemEvent()", _text + 0x3ECA24
	.equiv "FUN_0E56CAC8:FID_conflict:net::NetworkItemEvent::dumpItemEvent()", _text + 0x3ECAC8
	.equiv "net::NetworkItemManager::NetworkItemManager()", _text + 0x3ED810
	.equiv "net::NetworkItemManager::enter()", _text + 0x3ED91C
	.equiv "net::NetworkItemManager::setClearItem_()", _text + 0x3EDC28
	.equiv "net::NetworkItemManager::setKeepToActivate_()", _text + 0x3EDC90
	.equiv "net::NetworkItemManager::searchNetID()", _text + 0x3EDDD4
	.equiv "net::NetworkItemManager::searchItemSync()", _text + 0x3EDE84
	.equiv "net::NetworkItemManager::eraseItemSyncFromList()", _text + 0x3EDEBC
	.equiv "net::NetworkItemManager::setItemSync()", _text + 0x3EDFB0
	.equiv "net::NetworkItemManager::clearEquipKeepSlot_()", _text + 0x3EE0F0
	.equiv "net::NetworkItemManager::setEightUse_()", _text + 0x3EE500
	.equiv "net::NetworkItemManager::setEmit_()", _text + 0x3EE6BC
	.equiv "net::NetworkItemManager::searchItemObjBase()", _text + 0x3EE784
	.equiv "net::NetworkItemManager::setLockOn_()", _text + 0x3EE850
	.equiv "net::NetworkItemManager::setLockOff_()", _text + 0x3EE8DC
	.equiv "net::NetworkItemManager::do_VanishEquip_ColWithKart_()", _text + 0x3EED58
	.equiv "net::NetworkItemManager::vanishEight_()", _text + 0x3EEF28
	.equiv "net::NetworkItemManager::setHitEvent2RaceLog_()", _text + 0x3EF0A4
	.equiv "net::NetworkItemManager::do_VanishItem_()", _text + 0x3EF148
	.equiv "net::NetworkItemManager::vanishItem_()", _text + 0x3EF1BC
	.equiv "net::NetworkItemManager::do_ReactItem_()", _text + 0x3EF2D8
	.equiv "net::NetworkItemManager::do_VanishEquip_()", _text + 0x3EF30C
	.equiv "net::NetworkItemManager::setCatchBoomerang_()", _text + 0x3EF9AC
	.equiv "net::NetworkItemManager::setEightDrop_()", _text + 0x3EF9FC
	.equiv "net::NetworkItemManager::setEndCnt_()", _text + 0x3EFA84
	.equiv "net::NetworkItemManager::calc()", _text + 0x3EFAD4
	.equiv "net::NetworkItemManager::updateNetID()", _text + 0x3EFD84
	.equiv "net::NetworkItemManager::setItemEvent_OnlyItemEvent()", _text + 0x3EFDF4
	.equiv "net::NetworkItemManager::setItemEvent_SlotRotate()", _text + 0x3EFEA0
	.equiv "net::NetworkItemManager::setItemEvent_VanishEight()", _text + 0x3F0028
	.equiv "net::NetworkItemManager::setItemEvent_VanishItem()", _text + 0x3F0200
	.equiv "net::NetworkItemManager::setItemEvent_KeepToActivate()", _text + 0x3F0518
	.equiv "net::NetworkItemManager::setItemEvent_SelfMove()", _text + 0x3F05DC
	.equiv "net::NetworkItemManager::setItemEvent_KinokoUse()", _text + 0x3F077C
	.equiv "net::NetworkItemManager::setItemEvent_EightUse()", _text + 0x3F083C
	.equiv "net::NetworkItemManager::setItemEvent_KartItemCollision()", _text + 0x3F08FC
	.equiv "net::NetworkItemManager::setItemEvent_LockOn()", _text + 0x3F0A38
	.equiv "net::NetworkItemManager::setItemEvent_LockOff()", _text + 0x3F0AE8
	.equiv "net::NetworkItemManager::setItemEvent_EightDrop()", _text + 0x3F0DC0
	.equiv "net::NetworkMatchmakeCondition::getSystemType()", _text + 0x3F12C8
	.equiv "net::NetworkMatchmakeCondition::fromBinary()", _text + 0x3F1410
	.equiv "FUN_0E571F8C:FID_conflict:net::NetworkDataStoreManager::isTaskFinished_()", _text + 0x3F1F8C
	.equiv "FUN_0E572144:net::NetworkRankingManager::check_()", _text + 0x3F2144
	.equiv "net::OliveGetResultBase::fromOlive()", _text + 0x3F28CC
	.equiv "net::OliveGetResultForTV::getBodyMemo()", _text + 0x3F351C
	.equiv "net::OliveGetResultForTV::fromOlive()", _text + 0x3F3584
	.equiv "net::NetworkOliveGetResult::convertFromComment()", _text + 0x3F3D98
	.equiv "net::OliveGetInfo::clearAllDownloadData()", _text + 0x3F4494
	.equiv "net::OliveGetInfo::clear()", _text + 0x3F44D4
	.equiv "net::OliveGetInfo::allocDownloadPostData()", _text + 0x3F458C
	.equiv "net::OliveGetInfo::allocDownloadCommentData()", _text + 0x3F45E4
	.equiv "net::OliveGetInfo::setForGetPostedList()", _text + 0x3F463C
	.equiv "net::OliveGetInfo::setForGetFriendOrFollow()", _text + 0x3F4828
	.equiv "net::OliveGetInfo::setForGetCompetition()", _text + 0x3F4864
	.equiv "net::OlivePostInfo::setForHighlight()", _text + 0x3F4C18
	.equiv "net::OlivePostInfo::setForTimeAttack()", _text + 0x3F4C30
	.equiv "net::OlivePostInfo::setForMoviePost()", _text + 0x3F4C70
	.equiv "FUN_0E574C80:FID_conflict:net::OlivePostInfo::setYoutubeTitle()", _text + 0x3F4C80
	.equiv "FUN_0E574D54:FID_conflict:net::OlivePostInfo::setYoutubeTitle()", _text + 0x3F4D54
	.equiv "net::OlivePostInfo::setYoutubeTag()", _text + 0x3F4E28
	.equiv "net::OlivePostInfo::getGameMode()", _text + 0x3F4F48
	.equiv "net::OlivePostInfo::setForCompetition()", _text + 0x3F5120
	.equiv "net::OlivePostInfo::updateTopicTag()", _text + 0x3F5138
	.equiv "net::OlivePostInfo::getGameModeStr_()", _text + 0x3F51A4
	.equiv "net::OlivePostInfo::updateSearchKey()", _text + 0x3F5400
	.equiv "net::OlivePostInfo::report()", _text + 0x3F5B68
	.equiv "net::NetworkOliveManager::funcInitialize()", _text + 0x3F7364
	.equiv "net::NetworkOliveManager::applyPostInfoBase_()", _text + 0x3F79AC
	.equiv "net::NetworkOliveManager::applyPostInfo_()", _text + 0x3F7A58
	.equiv "net::NetworkOliveManager::funcPost()", _text + 0x3F822C
	.equiv "net::NetworkOliveManager::funcPostWithData()", _text + 0x3F836C
	.equiv "net::NetworkOliveManager::updatePostInfo_()", _text + 0x3F847C
	.equiv "net::NetworkOliveManager::readyStamp_()", _text + 0x3F84BC
	.equiv "net::NetworkOliveManager::applyStampForPost_()", _text + 0x3F8714
	.equiv "net::NetworkOliveManager::funcPost_App()", _text + 0x3F89B0
	.equiv "net::NetworkOliveManager::funcPostWithData_App()", _text + 0x3F8DC4
	.equiv "net::NetworkOliveManager::isTempJoinCommunity_()", _text + 0x3F8EE0
	.equiv "net::NetworkOliveManager::applyStampForComment_()", _text + 0x3F8F3C
	.equiv "net::NetworkOliveManager::funcReply_App()", _text + 0x3F91D8
	.equiv "net::NetworkOliveManager::funcGet()", _text + 0x3F9638
	.equiv "net::NetworkOliveManager::funcPostDM_App()", _text + 0x3F98E4
	.equiv "net::NetworkOliveManager::funcView_App()", _text + 0x3F9BA8
	.equiv "net::NetworkOliveManager::funcFavorite()", _text + 0x3FA094
	.equiv "net::NetworkOliveManager::updateOliveRetry_()", _text + 0x3FA1C4
	.equiv "net::NetworkOliveManager::getDownloadWorkSize()", _text + 0x3FA85C
	.equiv "net::NetworkOliveManager::clearDownloadWork()", _text + 0x3FA8AC
	.equiv "net::NetworkOliveManager::onForegroundCallback()", _text + 0x3FA8D8
	.equiv "net::NetworkOliveManager::init()", _text + 0x3FAF28
	.equiv "net::NetworkOliveManager::checkPostDataFinished_()", _text + 0x3FAF84
	.equiv "net::NetworkOpponentDataManager::NetworkOpponentDataManager()", _text + 0x3FBCDC
	.equiv "net::NetworkOpponentDataManager::getOpponentPtr()", _text + 0x3FBD7C
	.equiv "net::NetworkOpponentDataManager::isExistSave()", _text + 0x3FBDE8
	.equiv "net::NetworkOpponentDataManager::_updateOpponentNum()", _text + 0x3FBE6C
	.equiv "net::NetworkOpponentDataManager::_store()", _text + 0x3FBEDC
	.equiv "net::NetworkOpponentDataManager::_updateIdx()", _text + 0x3FBF60
	.equiv "net::NetworkOpponentDataManager::appendOpponent()", _text + 0x3FC01C
	.equiv "net::NetworkOpponentDataManager::updateOpponent()", _text + 0x3FC158
	.equiv "net::NetworkOpponentDataManager::removeOpponent()", _text + 0x3FC2DC
	.equiv "net::NetworkOpponentDataManager::addPoint()", _text + 0x3FC3D8
	.equiv "net::SessionInfo::convertFromSimplePlayingSession()", _text + 0x3FC8FC
	.equiv "net::OpponentItem::init()", _text + 0x3FC948
	.equiv "net::OpponentItem::~OpponentItem()", _text + 0x3FC974
	.equiv "net::NetworkOpponentManager::init()", _text + 0x3FCC70
	.equiv "net::NetworkOpponentManager::initFlg()", _text + 0x3FCDD0
	.equiv "net::NetworkOpponentManager::updateOpponentRace()", _text + 0x3FD70C
	.equiv "net::NetworkOpponentManager::addWin()", _text + 0x3FDC80
	.equiv "net::NetworkOpponentManager::addLose()", _text + 0x3FDCD8
	.equiv "net::NetworkOpponentManager::getItem_()", _text + 0x3FE240
	.equiv "net::NetworkOpponentManager::updateFriendInfo_()", _text + 0x3FE280
	.equiv "net::NetworkOpponentManager::updateRivalInfo_()", _text + 0x3FE2A8
	.equiv "FUN_0E57EB60:std::_List_val::_Alty::rebind::other::pointer_std::list::_Buynode()", _text + 0x3FEB60
	.equiv "FUN_0E57EB9C:FID_conflict:void_std::list::clear()", _text + 0x3FEB9C
	.equiv "FUN_0E57EC0C:std::_List_val::_Alty::rebind::other::pointer_std::list::_Buynode()", _text + 0x3FEC0C
	.equiv "FUN_0E57EC7C:std::_List_val::_Alty::rebind::other::pointer_std::list::_Buynode()", _text + 0x3FEC7C
	.equiv "FUN_0E57ECB8:FID_conflict:void_std::list::clear()", _text + 0x3FECB8
	.equiv "net::NetworkFriendData::init()", _text + 0x3FED28
	.equiv "net::NetworkOpponentData::init()", _text + 0x3FED54
	.equiv "net::NetworkOpponentData::set()", _text + 0x3FED88
	.equiv "net::PlayReport::PlayReport()", _text + 0x3FF1D0
	.equiv "net::PlayReport::updateSaveData()", _text + 0x3FF2A0
	.equiv "net::PlayReport::registerAsync()", _text + 0x4021EC
	.equiv "net::CourseTARankInfo::fromChart()", _text + 0x402A50
	.equiv "net::NetworkRankingChart::initialize()", _text + 0x402B78
	.equiv "FUN_0E582FA8:bool_std::vector::_Buy()", _text + 0x402FA8
	.equiv "FUN_0E583104:bool_std::vector::_Buy()", _text + 0x403104
	.equiv "FUN_0E583260:void_std::vector::_Tidy()", _text + 0x403260
	.equiv "FUN_0E5832F0:void_std::vector::_Tidy()", _text + 0x4032F0
	.equiv "net::NetworkRankingData::NetworkRankingData()", _text + 0x403354
	.equiv "FUN_0E583A20:object::RecordPlayEvent::RecordPlayEvent()", _text + 0x403A20
	.equiv "FUN_0E584460:void_std::vector::_Tidy()", _text + 0x404460
	.equiv "FUN_0E5844F0:bool_std::vector::_Buy()", _text + 0x4044F0
	.equiv "net::NetworkRankingDataCompe::NetworkRankingDataCompe()", _text + 0x404700
	.equiv "net::NetworkRankingDataCompe::CompeDataPeriod::init()", _text + 0x4048B0
	.equiv "net::NetworkRankingDataCompe::_invalidateCache()", _text + 0x40494C
	.equiv "net::NetworkRankingManager::init()", _text + 0x4051BC
	.equiv "net::NetworkRankingManager::setRankingScoreData_()", _text + 0x405814
	.equiv "net::NetworkRankingManager::reqUploadScore_()", _text + 0x405898
	.equiv "net::NetworkRankingManager::uploadTimeAttackScore()", _text + 0x405B64
	.equiv "net::NetworkRankingManager::getCommunityType_()", _text + 0x406064
	.equiv "net::NetworkRankingManager::setSendCommonData_()", _text + 0x40608C
	.equiv "net::NetworkRankingManager::reqUploadCompeScore_()", _text + 0x406230
	.equiv "FUN_0E586780:net::NetworkRankingManager::reqUploadCommon_()", _text + 0x406780
	.equiv "net::NetworkRankingManager::bind_()", _text + 0x406AF0
	.equiv "net::NetworkRankingManager::unbind_()", _text + 0x406B14
	.equiv "FUN_0E586FB0:net::NetworkRankingManager::reqUploadCommon_()", _text + 0x406FB0
	.equiv "net::NetworkRankingManager::uploadScore_()", _text + 0x4073AC
	.equiv "net::NetworkRankingManager::uploadCompeScore_()", _text + 0x40787C
	.equiv "FUN_0E587BB8:FID_conflict:net::NetworkDataStoreManager::isTaskFinished_()", _text + 0x407BB8
	.equiv "FUN_0E587D70:net::NetworkRankingManager::check_()", _text + 0x407D70
	.equiv "FUN_0E588498:bool_std::vector::_Buy()", _text + 0x408498
	.equiv "FUN_0E5885F4:void_std::vector::_Tidy()", _text + 0x4085F4
	.equiv "FUN_0E588684:bool_std::vector::_Buy()", _text + 0x408684
	.equiv "FUN_0E5887E0:void_std::vector::_Construct_n()", _text + 0x4087E0
	.equiv "FUN_0E588860:void_std::vector::_Insert_n()", _text + 0x408860
	.equiv "FUN_0E588C88:std::_Vector_iterator_std::vector::insert()", _text + 0x408C88
	.equiv "FUN_0E588D1C:void_std::vector::push_back()", _text + 0x408D1C
	.equiv "void_std::vector::_Assign_n()", _text + 0x408DA0
	.equiv "FUN_0E588E14:void_std::vector::_Insert_n()", _text + 0x408E14
	.equiv "FUN_0E589264:std::_Vector_iterator_std::vector::insert()", _text + 0x409264
	.equiv "FUN_0E589304:void_std::vector::push_back()", _text + 0x409304
	.equiv "FUN_0E589390:void_std::vector::_Construct_n()", _text + 0x409390
	.equiv "net::SimpleTaskManager::init()", _text + 0x409950
	.equiv "net::SimpleTaskManager::req()", _text + 0x409978
	.equiv "net::SimpleTaskManager::checkResult()", _text + 0x409A9C
	.equiv "net::NetworkTaskThread::NetworkTaskThread()", _text + 0x409F54
	.equiv "net::NetworkTaskThread::calc_()", _text + 0x40A0A4
	.equiv "net::NetworkTaskThread::isTaskWorking()", _text + 0x40A2C0
	.equiv "FUN_0E58B068:net::NetworkTransporter_AllPlayerInfo::decideCPU()", _text + 0x40B068
	.equiv "FUN_0E58B1FC:net::NetworkTransporter_AllPlayerInfo::decideCPU()", _text + 0x40B1FC
	.equiv "net::NetworkTransporter_Chat::enter()", _text + 0x40D194
	.equiv "net::NetworkTransporter_Chat::findChat_()", _text + 0x40D22C
	.equiv "net::NetworkTransporter_Chat::addMessageList_()", _text + 0x40D294
	.equiv "net::NetworkTransporter_Chat::popAllMessage_()", _text + 0x40D3F4
	.equiv "net::NetworkTransporter_Chat::calc()", _text + 0x40D460
	.equiv "net::NetworkTransporter_Drive::clearSlotAdmitAll()", _text + 0x40D994
	.equiv "net::NetworkTransporter_Drive::setSendData()", _text + 0x40DDF8
	.equiv "net::NetworkTransporter_Drive::calc()", _text + 0x40EBA8
	.equiv "net::NetworkTransporter_Drive::setLapDistanceOfForceGoal()", _text + 0x40F000
	.equiv "net::NetworkTransporter_Drive::isForceGoal()", _text + 0x40F170
	.equiv "net::NetworkTransporter_Drive::isAllForceGoal()", _text + 0x40F1AC
	.equiv "net::NetworkTransporter_Drive::setSlotAdmit()", _text + 0x40F29C
	.equiv "net::NetworkTransporter_Drive::invalidateSlotAdmit()", _text + 0x40F4D4
	.equiv "net::NetworkTransporter_Drive::isAdmitted()", _text + 0x40F60C
	.equiv "net::NetworkTransporter_Drive::isAdmit()", _text + 0x40F750
	.equiv "net::NetworkTransporter_Drive::getMaxSyncCount()", _text + 0x40F824
	.equiv "net::NetworkTransporter_Menu::initCourseSelectInfo_()", _text + 0x40FD44
	.equiv "net::NetworkTransporter_Menu::getPlayerTableIndex_()", _text + 0x4100A8
	.equiv "net::NetworkTransporter_Menu::findPlayerIndex()", _text + 0x410124
	.equiv "net::NetworkTransporter_Menu::isNeedUpdatePlayer_()", _text + 0x410180
	.equiv "net::NetworkTransporter_Menu::updatePlayerInfo_()", _text + 0x4101E0
	.equiv "net::NetworkTransporter_Menu::updatePlayerSendInfoCore_()", _text + 0x4103B4
	.equiv "net::NetworkTransporter_Menu::updatePlayerSendInfo_()", _text + 0x4104E8
	.equiv "net::NetworkTransporter_Menu::getCourseInfo_()", _text + 0x410DA4
	.equiv "net::NetworkTransporter_Menu::updatePlayerStats_()", _text + 0x410E00
	.equiv "net::NetworkTransporter_Menu::getLastReceivePlayerInfoUnique_()", _text + 0x410E94
	.equiv "net::NetworkTransporter_Menu::setLastReceivePlayerInfoUnique_()", _text + 0x410EAC
	.equiv "net::NetworkTransporter_Menu::getFreeCourseInfo_()", _text + 0x410EC4
	.equiv "net::NetworkTransporter_Menu::mergeCourse_()", _text + 0x410EFC
	.equiv "net::NetworkTransporter_Menu::getDecidedCourse()", _text + 0x411114
	.equiv "net::NetworkTransporter_Menu::updateCourseSelect_()", _text + 0x4111DC
	.equiv "net::NetworkTransporter_Menu::checkPlayerSettingSync_()", _text + 0x411B64
	.equiv "net::NetworkTransporter_Menu::calc()", _text + 0x411C30
	.equiv "net::NetworkTransporter_Menu::findPlayerIndexReceived()", _text + 0x413D44
	.equiv "net::NetworkTransporter_Menu::clearReceivePlayerInfoUnique()", _text + 0x413DF4
	.equiv "net::NetworkTransporter_PlayerInfo::NetworkTransporter_PlayerInfo()", _text + 0x414CA0
	.equiv "net::NetworkTransporter_PlayerInfo::updateGoldHandle_()", _text + 0x415048
	.equiv "net::NetworkTransporter_PlayerInfo::clearRankAndScore()", _text + 0x4154D0
	.equiv "net::NetworkTransporter_PlayerInfo::setRankAndScore()", _text + 0x41559C
	.equiv "net::NetworkTransporter_PlayerInfo::setRankAndScoreSend()", _text + 0x4155D4
	.equiv "net::NetworkTransporter_Race::Rank::clearData()", _text + 0x4188B0
	.equiv "net::NetworkTransporter_Race::enter()", _text + 0x418F48
	.equiv "net::NetworkTransporter_Race::updateIsReceived()", _text + 0x41910C
	.equiv "net::NetworkTransporter_Race::isAllReceived()", _text + 0x4191E0
	.equiv "net::NetworkTransporter_Race::calcSpectator_()", _text + 0x419250
	.equiv "net::NetworkTransporter_Race::updatePlayerNum()", _text + 0x419464
	.equiv "net::NetworkTransporter_Race::Takeover::changeToCPU_()", _text + 0x419794
	.equiv "net::NetworkTransporter_Race::Takeover::syncTakeover_()", _text + 0x419C20
	.equiv "net::NetworkTransporter_Race::Takeover::updateTakeover_()", _text + 0x41A0A0
	.equiv "net::NetworkTransporter_Race::Takeover::calc()", _text + 0x41A384
	.equiv "net::NetworkTransporter_Race::Rank::calc()", _text + 0x41AB7C
	.equiv "net::NetworkTransporter_Race::calc()", _text + 0x41AE30
	.equiv "net::NetworkTransporter_Race::resetSceneFlag()", _text + 0x41AEE4
	.equiv "net::NetworkTransporter_Race::Rank::fixForceGoalRank()", _text + 0x41B47C
	.equiv "net::NetworkTransporter_VoiceChat::getVoiceProtocol()", _text + 0x41C6B4
	.equiv "net::NetworkTransporter_VoiceChat::readReferenceBuffer()", _text + 0x41C70C
	.equiv "net::NetworkTransporter_VoiceChat::updateTransportData()", _text + 0x41C80C
	.equiv "net::NetworkTransporter_VoiceChat::NetworkTransporter_VoiceChat()", _text + 0x41C9E4
	.equiv "net::NetworkTransporter_VoiceChat::prepare()", _text + 0x41CCC0
	.equiv "net::NetworkTransporter_VoiceChat::updateReferenceBuffer()", _text + 0x41CFF0
	.equiv "net::NetworkTransporter_VoiceChat::setEnableFinalMixCallback()", _text + 0x41D150
	.equiv "net::NetworkTransporter_VoiceChat::exit()", _text + 0x41D1C8
	.equiv "net::NetworkTransporter_VoiceChat::update()", _text + 0x41D338
	.equiv "`global_constructor_keyed_to'_32_NetworkTransporter_VoiceChat_cpp_8225c8dd", _text + 0x41D59C
	.equiv "net::NetUtil::DataSync::calcUnique()", _text + 0x41DA34
	.equiv "net::NetUtil::OnlineAndInitializeOlv::update()", _text + 0x41E458
	.equiv "net::NetUtil::isLocalPlayer()", _text + 0x41E524
	.equiv "net::NetUtil::isLocalKart()", _text + 0x41E614
	.equiv "net::NetUtil::createNewPlayerIDTable()", _text + 0x41E704
	.equiv "net::NetUtil::willBePlayer()", _text + 0x41E8D8
	.equiv "net::NetUtil::convertCourseIDZeroOrigin()", _text + 0x41E968
	.equiv "FUN_0E59E978:nn::nex::ErrorCodeConverter::ConvertToNetworkErrorCode()", _text + 0x41E978
	.equiv "<unnamed>::ParseAdditionalRankingData()", _text + 0x41EF58
	.equiv "<unnamed>::ParseAdditionalChartData()", _text + 0x41F194
	.equiv "<unnamed>::ReadDateTime()", _text + 0x41F2A0
	.equiv "<unnamed>::ParseChartData()", _text + 0x41F478
	.equiv "nn::nex::RankingChart::GetChartDataByCategoryAndGroup()", _text + 0x41FA7C
	.equiv "FUN_0E5A020C:std::vector_&std::vector::operator_=()", _text + 0x42020C
	.equiv "FUN_0E5A0498:void_std::vector::_Insert()", _text + 0x420498
	.equiv "FUN_0E5A099C:void_std::vector::_Assign()", _text + 0x42099C
	.equiv "FUN_0E5A0A24:void_std::vector::_Insert_n()", _text + 0x420A24
	.equiv "FUN_0E5A1350:std::_Vector_iterator_std::vector::insert()", _text + 0x421350
	.equiv "FUN_0E5A1418:void_std::vector::push_back()", _text + 0x421418
	.equiv "FUN_0E5A159C:void_std::vector::_Insert_n()", _text + 0x42159C
	.equiv "FUN_0E5A1AE0:std::_Vector_iterator_std::vector::insert()", _text + 0x421AE0
	.equiv "FUN_0E5A1BA8:void_std::vector::push_back()", _text + 0x421BA8
	.equiv "`global_constructor_keyed_to'_12_TurboDDF_cpp_a0f985ef", _text + 0x421C6C
	.equiv "util::VoiceChatSndControllerCafe::VoiceChatSndControllerCafe()", _text + 0x422290
	.equiv "util::VoiceChatSndControllerCafe::setVolumeTV()", _text + 0x422918
	.equiv "util::VoiceChatSndControllerCafe::setVolumeDRC()", _text + 0x422984
	.equiv "object::ObjectBase::ObjectBase()", _text + 0x422E80
	.equiv "object::ObjectBase::createAnimationSlot()", _text + 0x42309C
	.equiv "object::ObjectBase::stopSkeletalAnm()", _text + 0x4233DC
	.equiv "object::ObjectBase::calcBlend_()", _text + 0x4233FC
	.equiv "object::ObjectBase::swapSkeletalAnmInfo()", _text + 0x4234A0
	.equiv "object::ObjectBase::updateAnimation()", _text + 0x423518
	.equiv "object::ObjectBase::createELink()", _text + 0x423844
	.equiv "object::ObjectBase::createRecorder()", _text + 0x423900
	.equiv "object::ObjectBase::getSoundObj()", _text + 0x42398C
	.equiv "object::ObjectBase::getPrevWorldPos()", _text + 0x4239E8
	.equiv "object::ObjectBase::getPrevWorldMtx()", _text + 0x4239FC
	.equiv "object::ObjectBase::updateMatrix()", _text + 0x423A60
	.equiv "object::ObjectBase::stopSkeletalAnmBlend()", _text + 0x423F4C
	.equiv "object::ObjectBase::searchSkeletalSlot()", _text + 0x423F90
	.equiv "object::ObjectBase::changeSkeletalAnmBlend()", _text + 0x4241B8
	.equiv "object::ObjectBase::setSkeletalAnmFrmRate()", _text + 0x4241F0
	.equiv "object::ObjectBase::setSkeletalAnmFrm()", _text + 0x424214
	.equiv "object::ObjectBase::isSkeletalAnmFinished()", _text + 0x424284
	.equiv "object::ObjectBase::clearSkeletalAnm()", _text + 0x424390
	.equiv "object::ObjectBase::stopMaterialAnm()", _text + 0x424418
	.equiv "object::ObjectBase::changeMaterialAnm()", _text + 0x424438
	.equiv "object::ObjectBase::setMaterialAnmFrmRate()", _text + 0x42450C
	.equiv "object::ObjectBase::setMaterialAnmFrm()", _text + 0x424530
	.equiv "object::ObjectBase::clearMaterialAnm()", _text + 0x424678
	.equiv "object::ObjectBase::setAttSafe()", _text + 0x4246B8
	.equiv "FUN_0E5A4AF4:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x424AF4
	.equiv "FUN_0E5A4C34:FID_conflict:void_EffectLinkUserBase::createELinkSlotSimple()", _text + 0x424C34
	.equiv "object::ObjectEngine::getBehavior()", _text + 0x424E64
	.equiv "FUN_0E5A4EAC:FID_conflict:::sCreateFunc_Race()", _text + 0x424EAC
	.equiv "FUN_0E5A5420:FID_conflict:::sCreateFunc_Race()", _text + 0x425420
	.equiv "FUN_0E5A5994:FID_conflict:::sCreateFunc_Customizer()", _text + 0x425994
	.equiv "FUN_0E5A6008:FID_conflict:::sCreateFunc_Race()", _text + 0x426008
	.equiv "FUN_0E5A657C:FID_conflict:::sCreateFunc_Customizer()", _text + 0x42657C
	.equiv "FUN_0E5A6E38:sys::GetTypedEngine()", _text + 0x426E38
	.equiv "FUN_0E5A7D60:FID_conflict:dash::create_actor_alone()", _text + 0x427D60
	.equiv "FUN_0E5A7EEC:dash::create_actor_alone()", _text + 0x427EEC
	.equiv "FUN_0E5A7F1C:dash::create_actor_alone()", _text + 0x427F1C
	.equiv "FUN_0E5A8104:sys::GetTypedEngine()", _text + 0x428104
	.equiv "object::PathBase::PathBase()", _text + 0x428168
	.equiv "object::PathBase::reset()", _text + 0x4283B8
	.equiv "object::FixedPath::FixedPath()", _text + 0x428494
	.equiv "object::FixedPath::reset()", _text + 0x4289A0
	.equiv "object::FixedPath::getTangentFromRatio()", _text + 0x4290CC
	.equiv "object::FixedPathEx::FixedPathEx()", _text + 0x429500
	.equiv "object::FixedPathEx::setPath()", _text + 0x4295A0
	.equiv "object::FixedPathEx::calcCurrentDistance()", _text + 0x4296F8
	.equiv "object::FixedPathEx::calcForward()", _text + 0x429740
	.equiv "object::Path::getResultFromRatio()", _text + 0x42A020
	.equiv "object::CustomizeDirector::CustomizeDirector()", _text + 0x42A8EC
	.equiv "object::PartsParameter::PartsInfo::setup()", _text + 0x42B2E8
	.equiv "nn::nex::EventLog::LogLevelToString()", _text + 0x42B4CC
	.equiv "object::PartsParameter::getGenderAndVoice()", _text + 0x42B5A0
	.equiv "object::PartsParameter::appendPath_()", _text + 0x42B958
	.equiv "object::PartsParameter::setup_Common_()", _text + 0x42DFBC
	.equiv "object::PartsParameter::setup_Kart_()", _text + 0x42E3EC
	.equiv "object::PartsParameter::getMiiVoiceResourceName()", _text + 0x42F3AC
	.equiv "object::PartsParameter::setup_Voice_()", _text + 0x42F67C
	.equiv "object::PartsParameter::reload()", _text + 0x431C5C
	.equiv "FUN_0E5B21C8:nn::nex::SystemComponentGroup::TestState()", _text + 0x4321C8
	.equiv "object::RaceCheckerBase::initBalloonIndexList()", _text + 0x432A18
	.equiv "object::RaceCheckerBase::RaceCheckerBase()", _text + 0x432AC0
	.equiv "object::RaceCheckerBase::forceGoalAll()", _text + 0x4331F0
	.equiv "object::RaceCheckerBase::_initUpdateRank()", _text + 0x4332A0
	.equiv "object::RaceCheckerBase::startCountDown()", _text + 0x4333A4
	.equiv "object::RaceCheckerBase::fStartState()", _text + 0x433428
	.equiv "object::RaceCheckerBase::updateRank()", _text + 0x4339EC
	.equiv "object::RaceCheckerBase::checkToCountDown()", _text + 0x433E1C
	.equiv "object::RaceCheckerBase::checkToRace()", _text + 0x433E60
	.equiv "object::RaceTimeAttackChecker::getGhostTimeMax()", _text + 0x433F9C
	.equiv "object::RaceTimeAttackChecker::updateRank()", _text + 0x434150
	.equiv "FUN_0E5B4988:FID_conflict:object::RaceWiFiBattleChecker::updateRank()", _text + 0x434988
	.equiv "object::RaceWiFiVSChecker::_setOpponent()", _text + 0x434DA4
	.equiv "object::RaceWiFiVSChecker::net_OnRealGoal()", _text + 0x434F24
	.equiv "object::RaceWiFiVSChecker::_checkOffence()", _text + 0x434FFC
	.equiv "object::RaceWiFiVSChecker::fCalc()", _text + 0x4350C0
	.equiv "object::RaceWiFiVSChecker::checkRaceFinishByWatcher()", _text + 0x435818
	.equiv "object::RaceWiFiVSChecker::updateRankForWatcher()", _text + 0x435F18
	.equiv "object::RaceWiFiBattleChecker::checkRaceFinish()", _text + 0x4363DC
	.equiv "FUN_0E5B67D8:FID_conflict:object::RaceWiFiBattleChecker::updateRank()", _text + 0x4367D8
	.equiv "`global_constructor_keyed_to'_15_RaceChecker_cpp_8225c8dd", _text + 0x436AD8
	.equiv "FID_conflict:ui::Control_PartsCursor::Control_PartsCursor()", _text + 0x43943C
	.equiv "object::RaceDirector::RaceDirector()", _text + 0x43ECB4
	.equiv "object::RaceDirector::raceStart()", _text + 0x43F0E4
	.equiv "object::RaceDirector::raceEnd()", _text + 0x43F1D4
	.equiv "object::RaceDirector::prepareBeforeStructure()", _text + 0x43F2F4
	.equiv "FUN_0E5C1194:dash::create_actor_alone()", _text + 0x441194
	.equiv "FUN_0E5C11C4:dash::create_actor_alone()", _text + 0x4411C4
	.equiv "FUN_0E5C120C:dash::create_actor_alone()", _text + 0x44120C
	.equiv "FUN_0E5C1280:FID_conflict:dash::create_actor_alone()", _text + 0x441280
	.equiv "FUN_0E5C12CC:FID_conflict:dash::create_actor_alone()", _text + 0x4412CC
	.equiv "FUN_0E5C1318:dash::create_actor_alone()", _text + 0x441318
	.equiv "FUN_0E5C13A0:FID_conflict:dash::create_actor_alone()", _text + 0x4413A0
	.equiv "FUN_0E5C13EC:dash::create_actor_alone()", _text + 0x4413EC
	.equiv "FUN_0E5C14CC:FID_conflict:dash::create_actor_alone()", _text + 0x4414CC
	.equiv "FUN_0E5C1518:dash::create_actor_alone()", _text + 0x441518
	.equiv "FUN_0E5C1570:FID_conflict:dash::create_actor_alone()", _text + 0x441570
	.equiv "FUN_0E5C15BC:FID_conflict:dash::create_actor_alone()", _text + 0x4415BC
	.equiv "object::courseinfo::GetLapNum()", _text + 0x441608
	.equiv "object::courseinfo::GetPatternNum()", _text + 0x44161C
	.equiv "object::courseinfo::GetEffectSW()", _text + 0x441630
	.equiv "object::courseinfo::IsJugemMirror()", _text + 0x441644
	.equiv "object::courseinfo::IsFirstLeft()", _text + 0x441658
	.equiv "object::courseinfo::IsJugemAbove()", _text + 0x44166C
	.equiv "object::courseinfo::GetHeadLight()", _text + 0x441680
	.equiv "object::courseinfo::GetCourseParam()", _text + 0x4416D0
	.equiv "object::IsCountDownState()", _text + 0x4416FC
	.equiv "object::IsRaceState()", _text + 0x44171C
	.equiv "object::IsResultState()", _text + 0x44173C
	.equiv "FUN_0E5C175C:ui::Control_RaceItem::GetItemMaxNumByItemID()", _text + 0x44175C
	.equiv "object::RaceIndex_::Window2View()", _text + 0x4418C4
	.equiv "object::RaceIndex_::Player2Controller()", _text + 0x441944
	.equiv "object::RaceIndex_::Kart2Player()", _text + 0x4419D0
	.equiv "object::RaceIndex_::Kart2Controller()", _text + 0x441A40
	.equiv "object::RaceIndex_::Player2Kart()", _text + 0x441A88
	.equiv "object::RaceIndex_::DRCPlayer2Kart()", _text + 0x441B00
	.equiv "object::RaceInfo::updateRaceModeFlag()", _text + 0x441D40
	.equiv "object::RaceInfo::getMasterIndexOrder()", _text + 0x44209C
	.equiv "object::RaceInfo::getMasterNumForWindow()", _text + 0x442230
	.equiv "object::RaceInfo::updateKartNum()", _text + 0x44229C
	.equiv "object::RaceKartChecker::getGoalReaction()", _text + 0x4428EC
	.equiv "object::RaceKartChecker::getRankPoint()", _text + 0x442F1C
	.equiv "object::RaceKartChecker::realGoal()", _text + 0x443038
	.equiv "object::RaceKartChecker::forceGoal()", _text + 0x443118
	.equiv "object::RaceKartChecker::fakeGoalByWatcher()", _text + 0x4438B4
	.equiv "object::RaceKartChecker::initCoinNum()", _text + 0x443940
	.equiv "object::RaceKartCheckerBattle::kartIndex2BalloonType()", _text + 0x4440E0
	.equiv "object::RaceKartCheckerBattle::decBalloon()", _text + 0x4442BC
	.equiv "object::RaceKartCheckerBattle::incBalloon()", _text + 0x444460
	.equiv "object::RaceKartCheckerBattle::isSameTeam()", _text + 0x4445D0
	.equiv "object::RaceKartCheckerBattle::trigJugem()", _text + 0x44489C
	.equiv "object::RaceKartCheckerBattle::incHitCount()", _text + 0x444940
	.equiv "object::DriverModelResource::clearImpl()", _text + 0x44635C
	.equiv "object::DriverSEResource::loadImpl()", _text + 0x4465C8
	.equiv "FUN_0E5C78AC:FID_conflict:object::WingModelResource::loadImpl()", _text + 0x4478AC
	.equiv "FUN_0E5C813C:FID_conflict:object::WingModelResource::clearImpl()", _text + 0x44813C
	.equiv "object::BodySEResource::loadImpl()", _text + 0x4483F0
	.equiv "object::TireResource::loadImpl()", _text + 0x448AE4
	.equiv "object::ArmModelResource::loadImpl()", _text + 0x449520
	.equiv "object::ArmModelResource::clearImpl()", _text + 0x44A794
	.equiv "FUN_0E5CAD60:FID_conflict:object::WingModelResource::loadImpl()", _text + 0x44AD60
	.equiv "FUN_0E5CB5F0:FID_conflict:object::WingModelResource::clearImpl()", _text + 0x44B5F0
	.equiv "object::KartResource::updateKartInfo()", _text + 0x44DEF0
	.equiv "object::RaceKartResult::clear()", _text + 0x4534E0
	.equiv "object::LapRankChecker3D::LapRankChecker3D()", _text + 0x453528
	.equiv "object::LapRankChecker3D::reset()", _text + 0x45369C
	.equiv "object::LapRankChecker3D::prepare()", _text + 0x453958
	.equiv "object::LapRankChecker3D::updateSector_()", _text + 0x453E08
	.equiv "object::LapRankChecker3D::updateSector_allowWarp_()", _text + 0x453FD0
	.equiv "object::LapRankChecker3D::updateGravityDir_()", _text + 0x4541A4
	.equiv "object::LapRankChecker3D::updateMapCamera_()", _text + 0x45467C
	.equiv "object::LapRankChecker3D::calcLapPosition_Replay_()", _text + 0x454730
	.equiv "object::LapRankChecker3D::isReverseRecoverEnable()", _text + 0x454924
	.equiv "object::LapRankChecker3D::updateReverse_()", _text + 0x454950
	.equiv "object::LapRankChecker3D::updateLapDistance_Battle_()", _text + 0x454CC8
	.equiv "object::LapRankChecker3D::calcLapPosition_Battle_()", _text + 0x454D58
	.equiv "object::LapRankChecker3D::updateSector_start_()", _text + 0x454FD8
	.equiv "object::LapRankChecker3D::updateCheckPoint_()", _text + 0x4550A4
	.equiv "object::LapRankChecker3D::countLap_()", _text + 0x4550E4
	.equiv "object::LapRankChecker3D::decLap_()", _text + 0x455250
	.equiv "object::LapRankChecker3D::updateLapCheck_()", _text + 0x455278
	.equiv "object::LapRankChecker3D::updateLapDistance_()", _text + 0x455310
	.equiv "object::LapRankChecker3D::updateHarassment_()", _text + 0x455578
	.equiv "object::LapRankChecker3D::calcLapPosition_()", _text + 0x45571C
	.equiv "object::LapRankChecker3D::updateLapRank_()", _text + 0x455A10
	.equiv "object::LapRankChecker3D::calcImpl()", _text + 0x455C24
	.equiv "object::LapRankChecker3D::adapt()", _text + 0x455D8C
	.equiv "object::LapRankChecker3D::adaptCurrentSector()", _text + 0x455F44
	.equiv "object::LapRankChecker3D::setRecvDataForNetKart()", _text + 0x45606C
	.equiv "object::LapRankChecker3D::getSoundSW()", _text + 0x456294
	.equiv "object::LapRankChecker3D::getGravityDir_forKart()", _text + 0x4562EC
	.equiv "object::RaceLogRecorder::setCoinSum()", _text + 0x457F08
	.equiv "object::RaceLogRecorder::init()", _text + 0x457F60
	.equiv "object::RaceLogRecorder::RaceLogRecorder()", _text + 0x45807C
	.equiv "object::RaceLogRecorder::raceEnd()", _text + 0x458194
	.equiv "object::RaceLogRecorder::updateSaveDataAsAccount()", _text + 0x4581B8
	.equiv "object::RaceLogRecorder::updateSaveDataAsGuest()", _text + 0x4597F0
	.equiv "object::RaceLogRecorder::addValue()", _text + 0x459BB8
	.equiv "object::RaceLogRecorder::calc()", _text + 0x459C40
	.equiv "FUN_0E5DAB10:FID_conflict:void_object::ResourceCache::createBuffer()", _text + 0x45AB10
	.equiv "FUN_0E5DABE0:FID_conflict:void_object::ResourceCache::createUnloadableBuffer()", _text + 0x45ABE0
	.equiv "FUN_0E5DAC28:FID_conflict:void_*object::ResourceCacheType::loadImpl()", _text + 0x45AC28
	.equiv "FUN_0E5DAD38:void_object::ResourceCache::createBuffer()", _text + 0x45AD38
	.equiv "FUN_0E5DAE10:void_*object::ResourceCacheType::loadImpl()", _text + 0x45AE10
	.equiv "FUN_0E5DAF28:FID_conflict:void_object::ResourceCache::createBuffer()", _text + 0x45AF28
	.equiv "FUN_0E5DAFF8:FID_conflict:void_object::ResourceCache::createUnloadableBuffer()", _text + 0x45AFF8
	.equiv "FUN_0E5DB040:FID_conflict:void_*object::ResourceCacheType::loadImpl()", _text + 0x45B040
	.equiv "FUN_0E5DB150:FID_conflict:void_object::ResourceCache::createBuffer()", _text + 0x45B150
	.equiv "FUN_0E5DB228:FID_conflict:void_object::ResourceCache::createUnloadableBuffer()", _text + 0x45B228
	.equiv "FUN_0E5DB270:FID_conflict:void_*object::ResourceCacheType::loadImpl()", _text + 0x45B270
	.equiv "FUN_0E5DB388:FID_conflict:void_object::ResourceCache::createBuffer()", _text + 0x45B388
	.equiv "FUN_0E5DB450:FID_conflict:void_object::ResourceCache::createUnloadableBuffer()", _text + 0x45B450
	.equiv "FUN_0E5DB490:FID_conflict:void_*object::ResourceCacheType::loadImpl()", _text + 0x45B490
	.equiv "FUN_0E5DB598:FID_conflict:void_object::ResourceCache::createBuffer()", _text + 0x45B598
	.equiv "FUN_0E5DB668:FID_conflict:void_object::ResourceCache::createUnloadableBuffer()", _text + 0x45B668
	.equiv "FUN_0E5DB6B0:FID_conflict:void_*object::ResourceCacheType::loadImpl()", _text + 0x45B6B0
	.equiv "void_object::ResourceGSysModelCache::createModelResource_()", _text + 0x45B7C0
	.equiv "FUN_0E5DB888:void_object::ResourceCache::createBuffer()", _text + 0x45B888
	.equiv "void_object::ResourceCache::createUnloadableBuffer()", _text + 0x45B970
	.equiv "FUN_0E5DB9B8:void_*object::ResourceCacheType::loadImpl()", _text + 0x45B9B8
	.equiv "FUN_0E5DBAE0:FID_conflict:void_object::ResourceCache::createBuffer()", _text + 0x45BAE0
	.equiv "FUN_0E5DBBB8:FID_conflict:void_object::ResourceCache::createUnloadableBuffer()", _text + 0x45BBB8
	.equiv "FUN_0E5DBC00:FID_conflict:void_*object::ResourceCacheType::loadImpl()", _text + 0x45BC00
	.equiv "FUN_0E5DBD18:void_object::ResourceCache::createBuffer()", _text + 0x45BD18
	.equiv "FUN_0E5DBEB8:FID_conflict:void_*object::ResourceCacheType::loadImpl()", _text + 0x45BEB8
	.equiv "FUN_0E5DBFC0:FID_conflict:void_object::ResourceGSysModelCache::createModelResource_()", _text + 0x45BFC0
	.equiv "FUN_0E5DC090:FID_conflict:void_*object::ResourceCacheType::loadImpl()", _text + 0x45C090
	.equiv "FUN_0E5DC198:FID_conflict:void_object::ResourceGSysModelCache::createModelResource_()", _text + 0x45C198
	.equiv "FUN_0E5DC268:FID_conflict:void_*object::ResourceCacheType::loadImpl()", _text + 0x45C268
	.equiv "FUN_0E5DC370:FID_conflict:void_object::ResourceGSysModelCache::createModelResource_()", _text + 0x45C370
	.equiv "FUN_0E5DC438:FID_conflict:void_object::ResourceCache::createBuffer()", _text + 0x45C438
	.equiv "object::RaceResource::getDriverType()", _text + 0x45D06C
	.equiv "object::Stopwatch::Stopwatch()", _text + 0x45D7F8
	.equiv "object::Stopwatch::setImpl()", _text + 0x45DC60
	.equiv "object::RecordBufferComp::create()", _text + 0x45DE44
	.equiv "object::RecordBufferComp::setBuffer()", _text + 0x45DF0C
	.equiv "object::RecordBufferComp::calcBlockSize()", _text + 0x45E040
	.equiv "object::RecordBufferComp::isDoneCompress()", _text + 0x45E098
	.equiv "object::RecordBufferComp::calcHash()", _text + 0x45E114
	.equiv "object::RecordBufferComp::writeEntryData()", _text + 0x45E518
	.equiv "object::RecordBufferComp::format_()", _text + 0x45E668
	.equiv "object::RecordBufferComp::format()", _text + 0x45E9BC
	.equiv "object::RecordBufferComp::formatMax()", _text + 0x45EA20
	.equiv "object::RecordBufferComp::resetTemporary()", _text + 0x45EA40
	.equiv "object::RecordBufferComp::formatFromHeader()", _text + 0x45EAF4
	.equiv "object::RecordBufferComp::clear()", _text + 0x45EBAC
	.equiv "object::RecordBufferComp::isEmpty()", _text + 0x45EC7C
	.equiv "object::RecordBufferComp::calcSZSBlockSize()", _text + 0x45EC94
	.equiv "object::RecordBufferComp::beginWriteBlock()", _text + 0x45ECCC
	.equiv "object::RecordBufferComp::endWriteBlock()", _text + 0x45F000
	.equiv "object::RecordBufferComp::beginWriteRecorder()", _text + 0x45F1C0
	.equiv "object::RecordBufferComp::endWriteRecorder()", _text + 0x45F1FC
	.equiv "object::RecordBufferComp::writeBitFlg()", _text + 0x45F2A4
	.equiv "object::RecordBufferComp::writeData()", _text + 0x45F350
	.equiv "object::RecordBufferComp::invalidate()", _text + 0x45F558
	.equiv "FUN_0E5DF600:object::RecordBufferComp::endWriteData()", _text + 0x45F600
	.equiv "FUN_0E5DF61C:object::RecordBufferComp::endWriteData()", _text + 0x45F61C
	.equiv "object::RecordBufferComp::finalize()", _text + 0x45F698
	.equiv "FUN_0E5DF6E8:object::RecordBufferComp::detectEntryData()", _text + 0x45F6E8
	.equiv "FUN_0E5DF92C:object::RecordBufferComp::detectEntryData()", _text + 0x45F92C
	.equiv "object::RecordBufferComp::beginRead()", _text + 0x45FA04
	.equiv "object::RecordBufferComp::convertBlockIdxToSZSBlockIdxRange()", _text + 0x45FA28
	.equiv "object::RecordBufferComp::convertBlockIdxRangeToSZSBlockIdxRange()", _text + 0x45FA90
	.equiv "object::RecordBufferComp::makeBlockDataTable()", _text + 0x45FB1C
	.equiv "object::RecordBufferComp::beginReadBlock()", _text + 0x45FC6C
	.equiv "object::RecordBufferComp::beginReadRecorder()", _text + 0x45FEB0
	.equiv "object::RecordBufferComp::readData()", _text + 0x45FFA8
	.equiv "object::RecordBufferComp::getEntryData()", _text + 0x46041C
	.equiv "object::RecordBufferComp::skipData()", _text + 0x460434
	.equiv "object::RecordBufferComp::compressIfReady()", _text + 0x460580
	.equiv "object::RecordBufferComp::convertFrameToBlockIdx()", _text + 0x460770
	.equiv "object::RecordBufferComp::decompressSZSBlock()", _text + 0x4607A8
	.equiv "object::RecordBufferComp::decompressForBlockRange()", _text + 0x46088C
	.equiv "object::RecordBufferComp::decompressForFrame()", _text + 0x460918
	.equiv "object::RecordBufferComp::convertDataIdxToRecorderIdx()", _text + 0x46097C
	.equiv "object::RecordBufferComp::convertRecorderIdxToDataIdx()", _text + 0x4609A4
	.equiv "object::RecordBufferRaw::clear()", _text + 0x460B18
	.equiv "object::RecordBufferRaw::create()", _text + 0x460B28
	.equiv "object::RecordBufferRaw::beginReadBlock()", _text + 0x460B98
	.equiv "object::RecordBufferRaw::endReadBlock()", _text + 0x460C8C
	.equiv "object::Recorder::Recorder()", _text + 0x460CF0
	.equiv "object::Recorder::addChild_()", _text + 0x461078
	.equiv "object::Recorder::addChild()", _text + 0x4610B8
	.equiv "object::Recorder::addSubsetChild()", _text + 0x4610F0
	.equiv "object::Recorder::setELinkUser()", _text + 0x461118
	.equiv "object::Recorder::initialize()", _text + 0x461150
	.equiv "object::Recorder::updateCalcStateRecAfterPtr()", _text + 0x4611C0
	.equiv "object::Recorder::createRecorderValid()", _text + 0x461274
	.equiv "object::Recorder::createRecorderWarp()", _text + 0x46138C
	.equiv "object::Recorder::changeState()", _text + 0x461410
	.equiv "object::Recorder::getChildNum()", _text + 0x4618E4
	.equiv "object::Recorder::addToChildList()", _text + 0x46193C
	.equiv "object::Recorder::getRecCalcNum()", _text + 0x4619A8
	.equiv "object::Recorder::getPlayCalcNum()", _text + 0x461A14
	.equiv "object::Recorder::addToRecCalcList()", _text + 0x461A8C
	.equiv "object::Recorder::createCalcList_()", _text + 0x461B2C
	.equiv "object::Recorder::createCalcList()", _text + 0x461BC4
	.equiv "object::Recorder::invalidateRecursive()", _text + 0x461F98
	.equiv "object::Recorder::interpolateRecursive()", _text + 0x461FF8
	.equiv "object::Recorder::calcStatePlayBefore()", _text + 0x462098
	.equiv "object::Recorder::setControllerRecursive()", _text + 0x462260
	.equiv "object::Recorder::dequantizeAll()", _text + 0x462304
	.equiv "object::Recorder::copyRawData()", _text + 0x462468
	.equiv "object::Recorder::quantizeAll()", _text + 0x4624C8
	.equiv "object::Recorder::setOffsetRecursive()", _text + 0x462B38
	.equiv "object::Recorder::playCalcRecursive()", _text + 0x462C10
	.equiv "object::Recorder::calcELinkUserIdx()", _text + 0x462C80
	.equiv "object::Recorder::calcSLinkUserIdx()", _text + 0x462CB8
	.equiv "object::Recorder::sortDequantizeList()", _text + 0x462CF0
	.equiv "object::Recorder::addToPlayCalcList()", _text + 0x462D8C
	.equiv "object::Recorder::updatePlayCalcList()", _text + 0x462E44
	.equiv "object::Recorder::formatInfoText()", _text + 0x462EB4
	.equiv "object::Recorder::sampleRecursiveF32()", _text + 0x4635D4
	.equiv "object::RecorderStateObserver::RecorderStateObserver()", _text + 0x4638C8
	.equiv "object::RecorderAudio::playCalc()", _text + 0x46416C
	.equiv "object::RecorderAudio::RecorderAudio()", _text + 0x464374
	.equiv "object::RecorderAudio::setKey()", _text + 0x46448C
	.equiv "object::RecorderAudio::recordTrigSe()", _text + 0x464584
	.equiv "object::RecorderVoice::playCalc()", _text + 0x4646CC
	.equiv "object::RecorderVoice::RecorderVoice()", _text + 0x464770
	.equiv "object::RecorderController::create()", _text + 0x4666B4
	.equiv "object::RecorderController::registRecorder()", _text + 0x466758
	.equiv "object::RecorderController::registCallback()", _text + 0x466794
	.equiv "object::RecorderController::initJobQueue()", _text + 0x4667C0
	.equiv "object::RecorderController::prepare()", _text + 0x466850
	.equiv "object::RecorderController::setFile()", _text + 0x466B38
	.equiv "object::RecorderController::changeState()", _text + 0x466BE0
	.equiv "object::RecorderController::reset()", _text + 0x466C90
	.equiv "object::RecorderController::calcBackgroundRec()", _text + 0x466D80
	.equiv "object::RecorderController::calcSZS()", _text + 0x4670C0
	.equiv "object::RecorderController::readBlockIfNeed()", _text + 0x467204
	.equiv "object::RecorderController::calcBackgroundPlay()", _text + 0x46767C
	.equiv "object::RecorderController::calcBackground()", _text + 0x4677D8
	.equiv "object::RecorderController::sendEvent()", _text + 0x467B3C
	.equiv "object::RecorderController::updateState()", _text + 0x467C08
	.equiv "object::RecorderController::isRead()", _text + 0x467E94
	.equiv "object::RecorderController::calcFirst()", _text + 0x467F78
	.equiv "object::RecorderController::calc()", _text + 0x468380
	.equiv "object::RecorderController::calcBeforeAudio()", _text + 0x4684D0
	.equiv "object::RecorderController::onWarpPost()", _text + 0x468698
	.equiv "object::RecorderController::stop()", _text + 0x4686AC
	.equiv "object::RecorderController::stopImm()", _text + 0x4686D0
	.equiv "object::RecorderController::preparePlay()", _text + 0x468730
	.equiv "object::RecorderController::prepareRec()", _text + 0x4687A0
	.equiv "object::RecorderController::play()", _text + 0x4687D0
	.equiv "object::RecorderController::rec()", _text + 0x468828
	.equiv "object::RecorderController::searchRecorder()", _text + 0x4688D8
	.equiv "object::RecorderDirector::getPlaySection()", _text + 0x468F20
	.equiv "object::RecorderDirector::getTargetKartIdx()", _text + 0x468F4C
	.equiv "object::RecorderDirector::addFrame_()", _text + 0x468FD8
	.equiv "object::RecorderDirector::addFrame()", _text + 0x469298
	.equiv "object::RecorderDirector::convertStickInput()", _text + 0x469644
	.equiv "object::RecorderDirector::getPlayRateInner()", _text + 0x4697A8
	.equiv "object::RecorderDirector::updatePlayRate()", _text + 0x469938
	.equiv "object::RecorderDirector::clearPlayData()", _text + 0x469D10
	.equiv "object::RecorderDirector::isRead()", _text + 0x469DA8
	.equiv "object::RecorderDirector::onStopPlay()", _text + 0x469E40
	.equiv "object::RecorderDirector::calcBackground()", _text + 0x46A33C
	.equiv "object::RecorderDirector::stopImm()", _text + 0x46A380
	.equiv "object::RecorderDirector::makeHighlight()", _text + 0x46A488
	.equiv "object::RecorderDirector::getFrameNum()", _text + 0x46A834
	.equiv "object::RecorderDirector::beginMakeGhostData()", _text + 0x46A880
	.equiv "object::RecorderDirector::isReadyToMakeGhostData()", _text + 0x46A8E8
	.equiv "object::RecorderDirector::postDraw()", _text + 0x46AD40
	.equiv "object::RecorderDirector::getCurrentSection()", _text + 0x46AD50
	.equiv "object::RecorderDirector::getCurrentEventNum()", _text + 0x46AD74
	.equiv "object::RecorderDirector::getCurrentEvent()", _text + 0x46AEA8
	.equiv "object::RecorderDirector::RecorderDirector()", _text + 0x46B08C
	.equiv "FUN_0E5EB710:object::RecorderDirector::registRecorder()", _text + 0x46B710
	.equiv "object::RecorderDirector::prepareFirst()", _text + 0x46B724
	.equiv "object::RecorderDirector::calcAfterAudio()", _text + 0x46BE60
	.equiv "object::RecorderDirector::stopImmIfRec()", _text + 0x46C650
	.equiv "object::RecorderDirector::beginLoadFile()", _text + 0x46C6C0
	.equiv "object::RecorderDirector::endLoadFile()", _text + 0x46C744
	.equiv "object::RecorderDirector::registRecorderKart()", _text + 0x46C84C
	.equiv "object::RecorderDirector::registRecorderForKart()", _text + 0x46C944
	.equiv "object::RecorderDirector::registPlayEventReceiver()", _text + 0x46C984
	.equiv "object::RecorderDirector::startCountDown()", _text + 0x46C9C8
	.equiv "object::RecorderDirector::updateGameFrame()", _text + 0x46C9D0
	.equiv "object::RecorderDirector::getCurrentTargetId()", _text + 0x46CA18
	.equiv "object::RecorderDirector::setReplayCameraIdx()", _text + 0x46CAC0
	.equiv "object::RecorderDirector::getReplayCameraIdx()", _text + 0x46CB00
	.equiv "object::RecorderDirector::isPermitFrame()", _text + 0x46CB4C
	.equiv "object::RecorderDirector::prepare()", _text + 0x46CBDC
	.equiv "object::RecorderDirector::onStartPlayPost()", _text + 0x46D0B4
	.equiv "object::RecorderDirector::onWarpPost()", _text + 0x46D104
	.equiv "object::RecorderDirector::calc()", _text + 0x46D14C
	.equiv "object::RecorderELinkSlotState::recCalc()", _text + 0x46DA20
	.equiv "object::RecorderELinkSlotState::quantize()", _text + 0x46DC58
	.equiv "object::RecorderELinkSlotState::comp()", _text + 0x46DF10
	.equiv "object::RecorderELinkSlotState::decomp()", _text + 0x46DF78
	.equiv "object::RecorderEffect::playCalc()", _text + 0x46DFB8
	.equiv "object::RecorderEffect::RecorderEffect()", _text + 0x46E7F0
	.equiv "object::RecorderEffect::setKey()", _text + 0x46E8FC
	.equiv "object::RecorderEffect::onEmit()", _text + 0x46F598
	.equiv "object::RecorderForKart::clear()", _text + 0x4704E0
	.equiv "object::RecorderForKart::RecorderForKart()", _text + 0x4704F4
	.equiv "object::RecorderForKart::calcMoveAt()", _text + 0x47056C
	.equiv "object::RecorderForKart::calc()", _text + 0x470E58
	.equiv "object::RecorderItem::RecorderItem()", _text + 0x4711FC
	.equiv "object::RecorderKartUnit::RecorderKartUnit()", _text + 0x471C58
	.equiv "object::RecorderKartUnit::onWarp()", _text + 0x471CF0
	.equiv "object::RecorderKartChassis::RecorderKartChassis()", _text + 0x471ED8
	.equiv "object::RecorderKartChassisPackun::RecorderKartChassisPackun()", _text + 0x47218C
	.equiv "object::RecorderKartTire::RecorderKartTire()", _text + 0x47246C
	.equiv "object::RecorderKartTireMark::RecorderKartTireMark()", _text + 0x472668
	.equiv "object::RecorderKartDriver::RecorderKartDriver()", _text + 0x472874
	.equiv "object::RecorderKartEvent::RecorderKartEvent()", _text + 0x473148
	.equiv "object::RecorderKartEvent::recordEvent()", _text + 0x4731F0
	.equiv "object::RecorderKartEvent::recordJumpActionEvent()", _text + 0x473228
	.equiv "object::RecorderKartVehicleDrift::RecorderKartVehicleDrift()", _text + 0x47324C
	.equiv "object::RecorderKartVehicleDash::RecorderKartVehicleDash()", _text + 0x473558
	.equiv "object::RecorderKartVehicle::RecorderKartVehicle()", _text + 0x473724
	.equiv "object::RecorderKartVehicleMove::recCalc()", _text + 0x473AAC
	.equiv "object::RecorderKartVehicleMove::RecorderKartVehicleMove()", _text + 0x473CC4
	.equiv "object::RecordKartKey::RecordKartKey()", _text + 0x474130
	.equiv "object::RecordKartKey::calc()", _text + 0x4741F4
	.equiv "object::RecorderKartCamera::RecorderKartCamera()", _text + 0x4745E8
	.equiv "object::RecorderKey::clear()", _text + 0x478944
	.equiv "object::RecorderKey::RecorderKey()", _text + 0x478954
	.equiv "object::RecorderKey::setKey()", _text + 0x478A00
	.equiv "object::RecorderKey::calc()", _text + 0x478A80
	.equiv "FUN_0E5FAAB4:FID_conflict:object::RecorderMatrix33fComp6::dequantize()", _text + 0x47AAB4
	.equiv "FID_conflict:object::RecorderMatrix33fComp6::quantize()", _text + 0x47ACAC
	.equiv "FUN_0E5FC5E4:FID_conflict:object::RecorderMatrix33fComp6::dequantize()", _text + 0x47C5E4
	.equiv "object::RecorderMatrix34f::RecorderMatrix34f()", _text + 0x47C7DC
	.equiv "object::RecorderMtxT::RecorderMtxT()", _text + 0x47CBFC
	.equiv "object::RecorderSkeletalAnm::interpolate()", _text + 0x47F268
	.equiv "object::RecorderSkeletalAnm::RecorderSkeletalAnm()", _text + 0x47F4E0
	.equiv "object::RecorderSkeletalAnm::quantize()", _text + 0x47F7A8
	.equiv "object::RecorderMaterialAnm::RecorderMaterialAnm()", _text + 0x4803D4
	.equiv "object::RecorderMaterialAnm::quantize()", _text + 0x4806B4
	.equiv "object::RecorderModel::playCalc()", _text + 0x480F74
	.equiv "object::RecorderBoneLocalMatrix::RecorderBoneLocalMatrix()", _text + 0x481748
	.equiv "object::RecorderBoneWorldMatrix::RecorderBoneWorldMatrix()", _text + 0x481B30
	.equiv "object::RecorderModelObject::RecorderModelObject()", _text + 0x48265C
	.equiv "object::RecorderObject::RecorderObject()", _text + 0x4826D0
	.equiv "object::RecorderPtr::getObjectPtr()", _text + 0x484CB0
	.equiv "object::RecorderRaceEvent::playCalc()", _text + 0x484D0C
	.equiv "object::RecorderRaceEvent::RecorderRaceEvent()", _text + 0x484D94
	.equiv "object::RecorderThread::RecorderThread()", _text + 0x48503C
	.equiv "object::RecorderThread::run()", _text + 0x4852A8
	.equiv "object::RecorderThread::waitSync()", _text + 0x485300
	.equiv "object::RecorderThread::stop()", _text + 0x48534C
	.equiv "object::RecorderVector3fComp4::decomp()", _text + 0x485AC8
	.equiv "object::RecorderVector3fComp6::comp()", _text + 0x485B68
	.equiv "object::RecorderVector3fComp6::decomp()", _text + 0x485C70
	.equiv "object::RecorderVector3fComp6Auto::compFirst()", _text + 0x485CFC
	.equiv "object::RecorderVector3fComp6Auto::comp()", _text + 0x486158
	.equiv "object::RecorderVector3fComp6Auto::decomp()", _text + 0x48636C
	.equiv "FID_conflict:object::RecorderLnQuatfComp6::quantizeDirect()", _text + 0x487808
	.equiv "FUN_0E60AE18:int_object::RecorderVector2f::decomp()", _text + 0x48AE18
	.equiv "FUN_0E60B0DC:int_object::RecorderVector2f::decomp()", _text + 0x48B0DC
	.equiv "object::RecordEventData::reset()", _text + 0x48B14C
	.equiv "object::RecordEventData::resetLink()", _text + 0x48B3F0
	.equiv "object::RecordEventData::getEventFrame()", _text + 0x48B56C
	.equiv "object::RecordEventLogger::create()", _text + 0x48B9B0
	.equiv "object::RecordEventLogger::reset()", _text + 0x48BDBC
	.equiv "object::RecordEventLogger::clear()", _text + 0x48BF0C
	.equiv "object::RecordEventLogger::makeInfo()", _text + 0x48BF54
	.equiv "object::RecordEventLogger::finalize()", _text + 0x48C0F0
	.equiv "object::RecordEventLogger::invalidateReplayCameraIdxData()", _text + 0x48C1A0
	.equiv "object::RecordEventLogger::pushToSleepList()", _text + 0x48C274
	.equiv "object::RecordEventLogger::calcMerge()", _text + 0x48C2FC
	.equiv "object::RecordEventLogger::getInsertIdx()", _text + 0x48C390
	.equiv "object::RecordEventLogger::sendEvent()", _text + 0x48C414
	.equiv "object::RecordEventLogger::calc()", _text + 0x48C574
	.equiv "FUN_0E60C91C:object::RecordEventLogger::addData()", _text + 0x48C91C
	.equiv "object::RecordEventLogger::addPosData()", _text + 0x48CA2C
	.equiv "object::RecordEventLogger::setPosData()", _text + 0x48D4B4
	.equiv "object::RecordEventLogger::addGoalEventIfNeed()", _text + 0x48D51C
	.equiv "object::RecordEventLogger::onEndRec()", _text + 0x48D6B4
	.equiv "object::RecordEventLogger::isPermitKartIdx()", _text + 0x48D724
	.equiv "FUN_0E60D7A0:object::RecordEventLogger::addData()", _text + 0x48D7A0
	.equiv "object::RecordEventLogger::addReplayCameraIdxData()", _text + 0x48D8A8
	.equiv "object::RecordEventLogger::onThrowItem()", _text + 0x48D9A4
	.equiv "object::RecordEventLogger::checkChangeTargetDist()", _text + 0x48DC28
	.equiv "object::RecordEventLogger::onDamageItem()", _text + 0x48DD08
	.equiv "object::RecordEventLogger::onHitItem()", _text + 0x48DE54
	.equiv "object::RecordEventLogger::onUseItem()", _text + 0x48E454
	.equiv "object::RecordEventLogger::onStart()", _text + 0x48E54C
	.equiv "object::RecordEventLogger::onGoal()", _text + 0x48E668
	.equiv "object::RecordEventLogger::onJumpAction()", _text + 0x48E8C4
	.equiv "object::RecordEventLogger::onDrift()", _text + 0x48EA6C
	.equiv "object::RecordEventLogger::onChangeRank()", _text + 0x48EAAC
	.equiv "object::RecordEventLogger::onGlide()", _text + 0x48F588
	.equiv "object::RecordEventLogger::onSpinDash()", _text + 0x48F5C8
	.equiv "object::RecordEventLogger::onPanelDash()", _text + 0x48F608
	.equiv "object::RecordEventLogger::onReactKartMapObj()", _text + 0x48F648
	.equiv "object::RecordEventLogger::onCrashCommon()", _text + 0x48F964
	.equiv "object::RecordEventLogger::onCrashKiller()", _text + 0x490694
	.equiv "object::RecordEventLogger::onCrashStar()", _text + 0x4906C0
	.equiv "object::RecordEventLogger::onCrashItemPackun()", _text + 0x4906EC
	.equiv "object::RecordEventLogger::onRobBalloon()", _text + 0x490718
	.equiv "object::RecordEventLogger::getPosData()", _text + 0x490F30
	.equiv "object::RecordEventLogger::beginSearchEvent()", _text + 0x491280
	.equiv "object::RecordEventLogger::searchEvent()", _text + 0x4912B4
	.equiv "object::RecordEventLogger::updatePlayEventList()", _text + 0x49144C
	.equiv "object::RecordEventLogger::sortFrameInv()", _text + 0x491774
	.equiv "object::RecordEventNode::reset()", _text + 0x491BCC
	.equiv "object::RecordEventNode::getRandom()", _text + 0x491C10
	.equiv "object::RecordEventNode::updateImportance()", _text + 0x491D48
	.equiv "object::RecordEventNode::updateCutInfoAll()", _text + 0x492418
	.equiv "object::RecordEventNode::makeInfo()", _text + 0x49328C
	.equiv "object::RecordEventNode::terminateCurrentFrame()", _text + 0x493350
	.equiv "object::RecordEventNode::calcFix()", _text + 0x493B10
	.equiv "object::RecordEventNode::isAcceptEvent()", _text + 0x493E14
	.equiv "object::RecordEventNode::getFrameRange_All()", _text + 0x493E8C
	.equiv "object::RecordEventNode::isOverlap()", _text + 0x493EDC
	.equiv "object::RecordEventNode::makeComplexEventIfNeed()", _text + 0x493F60
	.equiv "object::RecordEventNode::getFrameRange()", _text + 0x4941AC
	.equiv "object::RecordEventNode::mergeFrame()", _text + 0x494224
	.equiv "object::RecordEventNode::merge()", _text + 0x494440
	.equiv "object::RecordEventNode::getCameraDirByDir()", _text + 0x494714
	.equiv "FUN_0E6155CC:object::RecordEventNode::getTargetId()", _text + 0x4955CC
	.equiv "FUN_0E6156D0:object::RecordEventNode::getTargetId()", _text + 0x4956D0
	.equiv "object::RecordEventNode::getSubCutIdx()", _text + 0x4957E8
	.equiv "object::RecordEventNode::getCameraIdx()", _text + 0x4958C0
	.equiv "object::RecordEventNode::getMergePriority()", _text + 0x495A08
	.equiv "object::RecordEventNode::getTargetId_All()", _text + 0x495AC0
	.equiv "object::RecordEventNode::mergeContinuousCut()", _text + 0x495EF8
	.equiv "object::RecordEventNode::isHighPriority()", _text + 0x4960BC
	.equiv "object::RecordEventNode::checkEnableMerge()", _text + 0x4960D4
	.equiv "object::RecordEventNode::setGroupNum_All()", _text + 0x496598
	.equiv "object::RecordEventNode::makeGroup()", _text + 0x4965F4
	.equiv "object::RecordEventNode::tryMerge()", _text + 0x496780
	.equiv "object::RecordEventNode::quitGroup()", _text + 0x4968E4
	.equiv "object::RecordEventNode::removeJugemSection()", _text + 0x496A6C
	.equiv "object::RecordEventNode::calcCurrentEvent()", _text + 0x496DB4
	.equiv "object::RecordEventNode::calcReplayCameraType_()", _text + 0x496F0C
	.equiv "object::RecordEventNode::calcReplayCameraType()", _text + 0x49710C
	.equiv "object::RecordEventNode::updateParentChildPtr()", _text + 0x49724C
	.equiv "object::RecordEventNode::updateGroupNum()", _text + 0x4972E4
	.equiv "object::RecordEventNode::getTrapezoidRate()", _text + 0x497364
	.equiv "object::RecordEventNode::getRate_All()", _text + 0x4977B4
	.equiv "FUN_0E617F18:sead::XmlElement::findRoot()", _text + 0x497F18
	.equiv "FUN_0E617F38:sead::XmlElement::findRoot()", _text + 0x497F38
	.equiv "object::RecordFile::RecordFile()", _text + 0x497FA0
	.equiv "object::RecordFileKart::create()", _text + 0x498000
	.equiv "object::RecordFileManager::RecordFileManager()", _text + 0x498010
	.equiv "object::RecordFile::checkVersion()", _text + 0x4982A4
	.equiv "object::RecordFile::clear()", _text + 0x49837C
	.equiv "object::RecordFile::updateFileSize()", _text + 0x498418
	.equiv "object::RecordFile::getTmpBufferComp()", _text + 0x498434
	.equiv "object::RecordFile::beginSave()", _text + 0x4984A0
	.equiv "object::RecordFile::beginLoad()", _text + 0x498550
	.equiv "object::RecordFile::endLoad()", _text + 0x4985A4
	.equiv "object::RecordFile::beginUpload()", _text + 0x498624
	.equiv "object::RecordFileMain::clear()", _text + 0x498648
	.equiv "object::RecordFileMain::fBeginSave()", _text + 0x498814
	.equiv "FUN_0E619304:object::RecordHighlightMaker::updateValidTargetKartIdx()", _text + 0x499304
	.equiv "object::RecordHighlightMaker::setTargetKartIdxDefault()", _text + 0x4993C0
	.equiv "object::RecordHighlightMaker::resetConfig()", _text + 0x499494
	.equiv "object::RecordHighlightMaker::reset()", _text + 0x499538
	.equiv "FUN_0E6195D8:object::RecordHighlightMaker::updateValidTargetKartIdx()", _text + 0x4995D8
	.equiv "object::RecordHighlightMaker::calcHighlightFrame()", _text + 0x4995DC
	.equiv "object::RecordHighlightMaker::entryEvent_()", _text + 0x49962C
	.equiv "object::RecordHighlightMaker::entryEvent()", _text + 0x4996F4
	.equiv "object::RecordHighlightMaker::isEntryChangeRank()", _text + 0x499800
	.equiv "object::RecordHighlightMaker::entryEventDefault()", _text + 0x499894
	.equiv "object::RecordHighlightMaker::selectPattern()", _text + 0x499EF4
	.equiv "object::RecordHighlightMaker::beginAcceptEvent()", _text + 0x49A158
	.equiv "object::RecordHighlightMaker::searchStartOrGoal()", _text + 0x49A1C0
	.equiv "object::RecordHighlightMaker::updateTargetKartOrder()", _text + 0x49A244
	.equiv "object::RecordHighlightMaker::acceptOneEvent()", _text + 0x49A748
	.equiv "object::RecordHighlightMaker::searchNegativeEvent()", _text + 0x49A914
	.equiv "object::RecordHighlightMaker::searchPositiveEvent()", _text + 0x49AAE4
	.equiv "object::RecordHighlightMaker::acceptSpecialEvent()", _text + 0x49AC38
	.equiv "object::RecordHighlightMaker::calcFrameNum()", _text + 0x49AEA4
	.equiv "FUN_0E61AF04:object::RecordHighlightMaker::searchOneEvent()", _text + 0x49AF04
	.equiv "FUN_0E61B0E4:object::RecordHighlightMaker::searchOneEvent()", _text + 0x49B0E4
	.equiv "object::RecordHighlightMaker::removeJugemSection()", _text + 0x49B178
	.equiv "object::RecordHighlightMaker::acceptEvent()", _text + 0x49B20C
	.equiv "object::RecordHighlightMaker::decFrame()", _text + 0x49B2B4
	.equiv "object::RecordHighlightMaker::calcMinMax()", _text + 0x49B628
	.equiv "object::RecordHighlightMaker::incFrame_()", _text + 0x49B704
	.equiv "object::RecordHighlightMaker::incFrame()", _text + 0x49BB68
	.equiv "object::RecordHighlightMaker::adjustFrame()", _text + 0x49BC5C
	.equiv "object::RecordHighlightMaker::applyEventToPlayData()", _text + 0x49BD74
	.equiv "object::RecordHighlightMaker::updatePlayData()", _text + 0x49C3CC
	.equiv "object::RecordHighlightMaker::makeHighlight()", _text + 0x49C4A4
	.equiv "object::RecordHighlightMaker::RecordHighlightMaker()", _text + 0x49C7A8
	.equiv "object::RecordHighlightMaker::clear()", _text + 0x49C968
	.equiv "object::RecordHighlightMaker::calcScreenShotInfo()", _text + 0x49C9C4
	.equiv "FUN_0E61D290:sead::XmlElement::findRoot()", _text + 0x49D290
	.equiv "object::RecordHighlightParam::CameraInfo::init()", _text + 0x49D2B4
	.equiv "object::RecordHighlightParam::EventShare::init()", _text + 0x49D410
	.equiv "object::RecordHighlightParam::update()", _text + 0x49D584
	.equiv "object::RecordHighlightParam::RecordHighlightParam()", _text + 0x49D61C
	.equiv "object::RecordHighlightParam::createInstance()", _text + 0x49D71C
	.equiv "object::RecordHighlightParam::getCameraInfoType()", _text + 0x49D7B0
	.equiv "object::RecordHighlightParam::CameraInfo::selectType_()", _text + 0x49DB1C
	.equiv "object::RecordHighlightParam::CameraInfo::selectType()", _text + 0x49DBC4
	.equiv "object::RecordHighlightParam::getCameraInfo_()", _text + 0x49DC44
	.equiv "object::RecordHighlightParam::getCameraInfo()", _text + 0x49E13C
	.equiv "object::RecordHighlightParam::getScreenShotOffset()", _text + 0x49E500
	.equiv "object::RecordIGR::acquireRpl()", _text + 0x49E728
	.equiv "object::RecordIGR::copyAudioSamples()", _text + 0x49EB94
	.equiv "object::RecordIGR::setEnableAudioRecording()", _text + 0x49ED14
	.equiv "object::RecordIGR::unmountSDCard()", _text + 0x49ED8C
	.equiv "object::RecordIGR::deleteFile()", _text + 0x49EDD4
	.equiv "object::RecordIGR::calc()", _text + 0x49F05C
	.equiv "object::RecordIGR::isExistFile()", _text + 0x49F1DC
	.equiv "object::RecordIGR::removeFile()", _text + 0x49F274
	.equiv "object::RecordIGR::mountSDCard()", _text + 0x49F308
	.equiv "object::RecordIGR::getTmpDirID()", _text + 0x49F98C
	.equiv "object::RecordKartData::RecordKartData()", _text + 0x49F9C4
	.equiv "object::RecordKartData::setBuffer()", _text + 0x49FAB4
	.equiv "object::RecordKartData::clear()", _text + 0x49FB1C
	.equiv "object::RecordKartData::calc()", _text + 0x49FC24
	.equiv "object::RecordKeyFrameBuffer::RecordKeyFrameBuffer()", _text + 0x4A003C
	.equiv "object::RecordKeyFrameBufferS16::getValue()", _text + 0x4A009C
	.equiv "object::RecordKeyFrameBufferBool::getValue()", _text + 0x4A0198
	.equiv "FUN_0E62037C:void_object::RecordKeyFrameBufferTemplate::clearBy()", _text + 0x4A037C
	.equiv "FUN_0E6203CC:void_object::RecordKeyFrameBufferTemplate::fill()", _text + 0x4A03CC
	.equiv "FUN_0E620460:int_object::RecordKeyFrameBufferTemplate::getInsertIdx()", _text + 0x4A0460
	.equiv "FUN_0E6204BC:object::RecordKeyFrameBufferTemplate::getValue()", _text + 0x4A04BC
	.equiv "FUN_0E620624:bool_object::RecordKeyFrameBufferTemplate::setKey_()", _text + 0x4A0624
	.equiv "FUN_0E620748:bool_object::RecordKeyFrameBufferTemplate::cleanBufferInterpolate_()", _text + 0x4A0748
	.equiv "FUN_0E62091C:bool_object::RecordKeyFrameBufferTemplate::cleanBuffer_()", _text + 0x4A091C
	.equiv "FUN_0E620A28:void_object::RecordKeyFrameBufferTemplate::cleanBuffer()", _text + 0x4A0A28
	.equiv "FUN_0E620A90:bool_object::RecordKeyFrameBufferTemplate::setKey()", _text + 0x4A0A90
	.equiv "bool_object::RecordKeyFrameBufferTemplate::setKeyRange()", _text + 0x4A0B6C
	.equiv "bool_object::RecordKeyFrameBufferTemplate::setKeyIfChange()", _text + 0x4A0C68
	.equiv "FUN_0E620DB4:void_object::RecordKeyFrameBufferTemplate::clearBy()", _text + 0x4A0DB4
	.equiv "FUN_0E620E08:void_object::RecordKeyFrameBufferTemplate::fill()", _text + 0x4A0E08
	.equiv "FUN_0E620E9C:int_object::RecordKeyFrameBufferTemplate::getInsertIdx()", _text + 0x4A0E9C
	.equiv "FUN_0E620EF8:object::RecordKeyFrameBufferTemplate::getValue()", _text + 0x4A0EF8
	.equiv "FUN_0E6210CC:bool_object::RecordKeyFrameBufferTemplate::setKey_()", _text + 0x4A10CC
	.equiv "FUN_0E6211FC:bool_object::RecordKeyFrameBufferTemplate::cleanBufferInterpolate_()", _text + 0x4A11FC
	.equiv "FUN_0E6213E4:bool_object::RecordKeyFrameBufferTemplate::cleanBuffer_()", _text + 0x4A13E4
	.equiv "FUN_0E621518:void_object::RecordKeyFrameBufferTemplate::cleanBuffer()", _text + 0x4A1518
	.equiv "FUN_0E621580:bool_object::RecordKeyFrameBufferTemplate::setKey()", _text + 0x4A1580
	.equiv "object::RecordManager::RecordManager()", _text + 0x4A1674
	.equiv "object::RecordPlayEvent::getEventNode()", _text + 0x4A1844
	.equiv "object::RecordPlayEvent::getKartIdxA()", _text + 0x4A1888
	.equiv "object::RecordPlayEvent::getKartIdxB()", _text + 0x4A18E0
	.equiv "object::RecordPlayEvent::invalidate()", _text + 0x4A1938
	.equiv "FUN_0E621954:object::RecordPlayEvent::RecordPlayEvent()", _text + 0x4A1954
	.equiv "object::RecordPlaySection::RecordPlaySection()", _text + 0x4A1A7C
	.equiv "object::RecordPlaySection::setBuffer()", _text + 0x4A1BDC
	.equiv "object::RecordPlaySection::clear()", _text + 0x4A1C64
	.equiv "object::RecordPlaySection::copyFrom()", _text + 0x4A1D10
	.equiv "object::RecordPlaySection::getEndFrame()", _text + 0x4A1D24
	.equiv "object::RecordPlaySection::getReplayCameraIdxFrame()", _text + 0x4A1DA4
	.equiv "FUN_0E6221A0:object::RecordPlaySection::modifyTargetId()", _text + 0x4A21A0
	.equiv "FUN_0E622808:object::RecordPlaySection::modifyTargetId()", _text + 0x4A2808
	.equiv "object::RecordPlaySection::getEventNum()", _text + 0x4A2858
	.equiv "object::RecordPlaySection::getEventIdx()", _text + 0x4A2924
	.equiv "object::RecordPlaySection::getTargetIdBlendInfo()", _text + 0x4A2A08
	.equiv "object::RecordPlaySectionMgr::RecordPlaySectionMgr()", _text + 0x4A2E2C
	.equiv "object::RecordPlaySectionMgr::setBuffer()", _text + 0x4A2E8C
	.equiv "object::RecordPlaySectionMgr::clear()", _text + 0x4A2F18
	.equiv "object::RecordPlaySectionMgr::addSection()", _text + 0x4A2F38
	.equiv "object::RecordPlaySectionMgr::calcTotalFrame()", _text + 0x4A2FC4
	.equiv "object::RecordPlaySectionMgr::calcHighlightFrame()", _text + 0x4A3054
	.equiv "object::RecordTargetId::RecordTargetId()", _text + 0x4A34EC
	.equiv "object::RecordTargetId::isSameTarget()", _text + 0x4A3534
	.equiv "object::RecordTargetId::getPosData()", _text + 0x4A359C
	.equiv "object::RecordTargetId::getTargetKartIdx()", _text + 0x4A3600
	.equiv "object::CreateRecorderForKart()", _text + 0x4A370C
	.equiv "object::CreateRecorderObject()", _text + 0x4A3824
	.equiv "object::CreateRecorderObjectNull()", _text + 0x4A386C
	.equiv "object::CreateRecorderVector3f()", _text + 0x4A38C0
	.equiv "object::CreateRecorderVector2f()", _text + 0x4A3BE4
	.equiv "render::RenderSubEngine::getBehavior()", _text + 0x4A410C
	.equiv "render::RenderSubEngine::RenderSubEngine()", _text + 0x4A4154
	.equiv "render::RenderEngine::loadAndApplyModelSceneEnv_()", _text + 0x4A46D4
	.equiv "render::RenderEngine::loadAndApplySubModelSceneEnv_()", _text + 0x4A4AC4
	.equiv "render::RenderEngine::getEngine()", _text + 0x4A5AA4
	.equiv "render::RenderEngine::RenderEngine()", _text + 0x4A5D4C
	.equiv "render::RenderEngine::changeSubModelSceneShadowSettings()", _text + 0x4A6254
	.equiv "render::RenderEngine::changeToneMappingToFilmic()", _text + 0x4A6280
	.equiv "render::RenderEngine::resetEnableDOF()", _text + 0x4A6290
	.equiv "render::RenderEngine::resetDOFParameter()", _text + 0x4A62A8
	.equiv "render::RenderEngine::engineEnterBefore()", _text + 0x4A7E48
	.equiv "render::RenderEngine::sceneEnterAfter()", _text + 0x4A8180
	.equiv "render::RenderEngine::attachCalcImpl()", _text + 0x4A8220
	.equiv "FUN_0E62A950:dash::create_actor_alone()", _text + 0x4AA950
	.equiv "render::Layer2D::Layer2D()", _text + 0x4AAA04
	.equiv "render::Layer2D::clearParticleGroup()", _text + 0x4AAD60
	.equiv "render::Layer2D::addParticleGroup()", _text + 0x4AAD7C
	.equiv "render::Layer2D::drawParticle_()", _text + 0x4AADE4
	.equiv "render::LayerOverlay::LayerOverlay()", _text + 0x4AB6F4
	.equiv "render::LayerManager::initViewInfos_()", _text + 0x4ABE74
	.equiv "render::LayerManager::initViewFrameBounds_()", _text + 0x4ABF14
	.equiv "render::LayerManager::initScreenCaptureFrameBounds_()", _text + 0x4AC2A0
	.equiv "render::LayerManager::createLayers_()", _text + 0x4AD2D8
	.equiv "render::LayerManager::updateLayers_()", _text + 0x4AEAF4
	.equiv "render::LayerManager::updateBack_()", _text + 0x4AF430
	.equiv "render::LayerManager::updateExtra_()", _text + 0x4AF570
	.equiv "render::LayerManager::updateScreenLayerTexture_()", _text + 0x4AF9A4
	.equiv "render::LayerManager::updateView()", _text + 0x4AFCDC
	.equiv "render::LayerManager::restoreDynamicModelSceneSettings_()", _text + 0x4B0084
	.equiv "render::LayerManager::updateDynamicModelSceneSettings_()", _text + 0x4B0474
	.equiv "render::LayerManager::postCalc()", _text + 0x4B05E4
	.equiv "render::LayerManager::setModelScene()", _text + 0x4B0908
	.equiv "render::LayerManager::setModelSceneToExtra()", _text + 0x4B0A30
	.equiv "render::LayerManager::addParticleGroup3D()", _text + 0x4B0B54
	.equiv "render::LayerManager::clearParticleGroup3D()", _text + 0x4B0B9C
	.equiv "render::LayerManager::addParticleGroup2D()", _text + 0x4B0BD4
	.equiv "render::LayerManager::clearParticleGroup2D()", _text + 0x4B0C98
	.equiv "FUN_0E6312BC:agl::lyr::Renderer::createLayer()", _text + 0x4B12BC
	.equiv "FUN_0E631338:agl::lyr::Renderer::createLayer()", _text + 0x4B1338
	.equiv "FUN_0E6313B4:agl::lyr::Renderer::createLayer()", _text + 0x4B13B4
	.equiv "render::CausticsLightManager::CausticsLightManager()", _text + 0x4B1430
	.equiv "render::CausticsLightManager::setTexture()", _text + 0x4B1514
	.equiv "render::CausticsLightManager::calcParam()", _text + 0x4B1734
	.equiv "FUN_0E631E84:FID_conflict:render::FloorLightManager::calcViewImpl_()", _text + 0x4B1E84
	.equiv "render::CausticsLightManager::drawImpl_()", _text + 0x4B2248
	.equiv "render::FloorLightManager::FloorLightManager()", _text + 0x4B25B4
	.equiv "render::FloorLightManager::calcParam()", _text + 0x4B2698
	.equiv "FUN_0E632A38:FID_conflict:render::FloorLightManager::calcViewImpl_()", _text + 0x4B2A38
	.equiv "render::FloorLightManager::drawImpl_()", _text + 0x4B2D84
	.equiv "render::TheaterLightManager::TheaterLightManager()", _text + 0x4B30A8
	.equiv "render::TheaterLightManager::calcParam()", _text + 0x4B32F0
	.equiv "render::UserLightManager::freeResultTexture_()", _text + 0x4B362C
	.equiv "render::TheaterLightManager::drawImpl_()", _text + 0x4B364C
	.equiv "<unnamed>::parse_prefix_to_value_()", _text + 0x4B4180
	.equiv "render::UserLightManager::createCausticsLightManager_()", _text + 0x4B41E8
	.equiv "render::UserLightManager::createFloorLightManager_()", _text + 0x4B4584
	.equiv "render::UserLightManager::createTheaterLightManager_()", _text + 0x4B482C
	.equiv "void_sead::Matrix33CalcCommon::getRow()", _text + 0x4B777C
	.equiv "void_sead::Matrix34CalcCommon::setRow()", _text + 0x4B77A0
	.equiv "render::CreateModelResource()", _text + 0x4B8410
	.equiv "FUN_0E6390F8:render::CreateModel()", _text + 0x4B90F8
	.equiv "FUN_0E6391EC:render::CreateModel()", _text + 0x4B91EC
	.equiv "FUN_0E6392CC:render::CreateModel()", _text + 0x4B92CC
	.equiv "render::CreateModelWithLocalLightMap()", _text + 0x4B93E8
	.equiv "render::BindModel()", _text + 0x4B94DC
	.equiv "render::BindModelWithAoObject()", _text + 0x4B9524
	.equiv "render::BindModelToSub()", _text + 0x4B95B0
	.equiv "render::CreateEffectModel()", _text + 0x4B95E8
	.equiv "render::CreateDecalTrail()", _text + 0x4B96F8
	.equiv "render::ReplaceTexture()", _text + 0x4B97A0
	.equiv "FUN_0E639E98:sys::SystemEngine::getEngine()", _text + 0x4B9E98
	.equiv "serializer::writeCommunitycode()", _text + 0x4BAF8C
	.equiv "serializer::readCommunitycode()", _text + 0x4BB1D8
	.equiv "dash::Actor::Actor()", _text + 0x4BBA74
	.equiv "dash::Actor::~Actor()", _text + 0x4BBB2C
	.equiv "dash::Actor::calcOuter()", _text + 0x4BBB7C
	.equiv "main", _text + 0x4BBC30
	.equiv "sys::AccelAnalyzer::VariableThreshold::update()", _text + 0x4BC0F8
	.equiv "sys::AccelAnalyzer::VariableThresholdSet::update()", _text + 0x4BC23C
	.equiv "sys::AccelAnalyzer::VariableThresholdSet::isCrossed()", _text + 0x4BC290
	.equiv "<unnamed>::getMinimum()", _text + 0x4BC2DC
	.equiv "sys::AccelAnalyzer::SwingTrigger::getMaximunMinimunPointCountBack()", _text + 0x4BC30C
	.equiv "sys::AccelAnalyzer::VariableThreshold::startTransThreshold()", _text + 0x4BC4F8
	.equiv "sys::AccelAnalyzer::VariableThresholdSet::startTransThreshold()", _text + 0x4BC530
	.equiv "sys::AccelAnalyzer::SwingTrigger::update()", _text + 0x4BC588
	.equiv "sys::AccelAnalyzer::SwingKit::update()", _text + 0x4BC718
	.equiv "sys::AccelAnalyzer::PitchBalancer::update()", _text + 0x4BC754
	.equiv "sys::AccelAnalyzer::update()", _text + 0x4BCB14
	.equiv "sys::AccelAnalyzer::isSwing()", _text + 0x4BCB84
	.equiv "sys::AccelAnalyzer::VariableThresholdSet::setCountLongMax()", _text + 0x4BCBA4
	.equiv "sys::AccelAnalyzer::VariableThresholdSet::setCountShortMax()", _text + 0x4BCBB8
	.equiv "sys::AccelAnalyzer::setVariableThresholdFrameLongShort()", _text + 0x4BCBCC
	.equiv "sys::AccelAnalyzer::VariableThreshold::setThresholdNormal()", _text + 0x4BCC08
	.equiv "sys::AccelAnalyzer::setSwingKitCoord()", _text + 0x4BCC74
	.equiv "sys::AccelHistory::correctCount()", _text + 0x4BCDC4
	.equiv "sys::AccelHistory::getDirect()", _text + 0x4BCDF0
	.equiv "sys::AccelHistory::calcHermite2D()", _text + 0x4BCE30
	.equiv "sys::AccelHistory::interpolateIfOverflow()", _text + 0x4BCF78
	.equiv "FUN_0E63D2C4:sys::AccelHistory::setAccel()", _text + 0x4BD2C4
	.equiv "FUN_0E63D360:sys::AccelHistory::setAccel()", _text + 0x4BD360
	.equiv "sys::AccelHistory::getDirectDiff()", _text + 0x4BD364
	.equiv "sys::AccelHistory::getDirectDiffDiff()", _text + 0x4BD3A8
	.equiv "sys::AccountSetting::Account::setup()", _text + 0x4BD438
	.equiv "sys::AccountSetting::Setting::setup()", _text + 0x4BD6C0
	.equiv "sys::AccountSetting::update()", _text + 0x4BDB48
	.equiv "sys::AccountSetting::Setting::Setting()", _text + 0x4BDBB8
	.equiv "sys::GetArchiveIdentifierWithSeparator()", _text + 0x4BDD74
	.equiv "FUN_0E63E128:nw::lyt::ShaderSetupHelper::ShaderSetupHelper()", _text + 0x4BE128
	.equiv "sys::BackgroundLoadThread::waitHalfSync()", _text + 0x4BF8E8
	.equiv "sys::BackgroundLoadThread::syncAllKartRes()", _text + 0x4BF9DC
	.equiv "sys::BackgroundLoadThread::destroyMenuBuffer()", _text + 0x4BF9EC
	.equiv "sys::BackgroundLoadThread::~BackgroundLoadThread()", _text + 0x4BFD5C
	.equiv "sys::BackgroundLoadThread::updateInfo_()", _text + 0x4C1A94
	.equiv "sys::BackgroundLoadThread::loadStartMainTheaterMenu()", _text + 0x4C1F40
	.equiv "sys::BackgroundLoadThread::loadStartMainMenu()", _text + 0x4C1F50
	.equiv "sys::BackgroundLoadThread::loadStartMainAward()", _text + 0x4C1F60
	.equiv "sys::BackgroundLoadThread::loadStartMainEnding()", _text + 0x4C1F70
	.equiv "sys::BackgroundLoadThread::cacheStart_()", _text + 0x4C1F9C
	.equiv "sys::BackgroundLoadThread::loadStartStamp()", _text + 0x4C2138
	.equiv "sys::BackgroundLoadThread::waitSync()", _text + 0x4C2198
	.equiv "sys::BackgroundLoadThread::waitSceneExit()", _text + 0x4C2260
	.equiv "sys::BackgroundLoadThread::sceneBegin()", _text + 0x4C22AC
	.equiv "sys::BackgroundLoadThread::prepareRace()", _text + 0x4C22C0
	.equiv "sys::BackgroundLoadThread::syncRaceCommon()", _text + 0x4C23F8
	.equiv "sys::BackgroundLoadThread::syncCourse()", _text + 0x4C2408
	.equiv "sys::BackgroundLoadThread::syncCourseGroundAudio()", _text + 0x4C243C
	.equiv "sys::BackgroundLoadThread::syncMapObj()", _text + 0x4C244C
	.equiv "sys::BackgroundLoadThread::syncUI()", _text + 0x4C2488
	.equiv "sys::BackgroundLoadThread::createReconstructibleBuffer()", _text + 0x4C2868
	.equiv "sys::BackgroundLoadThread::loadStartKart()", _text + 0x4C2918
	.equiv "sys::BackgroundLoadThread::setupBeforeKartContsruct()", _text + 0x4C2938
	.equiv "sys::BackgroundLoadThread::changeTheaterMode()", _text + 0x4C2D20
	.equiv "sys::Base::Base()", _text + 0x4C5A00
	.equiv "sys::Base::createManagers()", _text + 0x4C5BE4
	.equiv "sys::Base::taskStart()", _text + 0x4C5F3C
	.equiv "FID_conflict:pead::HeapMgr::HeapMgr()", _text + 0x4C66EC
	.equiv "sys::CommonModuleManager::isPause()", _text + 0x4C7C80
	.equiv "sys::CommonModuleManager::launchErrorViewer()", _text + 0x4C7E5C
	.equiv "sys::CommonModuleManager::KeyboardModule::calc()", _text + 0x4C7ECC
	.equiv "sys::CommonModuleManager::DiscErrorModule::start()", _text + 0x4C86B0
	.equiv "FUN_0E648804:FID_conflict:`global_constructor_keyed_to'_23_SystemPlayerManager_cpp_8225c8dd", _text + 0x4C8804
	.equiv "FID_conflict:sys::ContentsManager::check()", _text + 0x4C942C
	.equiv "FUN_0E649C60:sys::ContentsManager::check()", _text + 0x4C9C60
	.equiv "FUN_0E649DE4:sys::ContentsManager::check()", _text + 0x4C9DE4
	.equiv "sys::ControllerBase::ControllerBase()", _text + 0x4CA698
	.equiv "sys::ControllerBase::startRumble_()", _text + 0x4CA800
	.equiv "sead::Controller::getAddonAs()", _text + 0x4CAAD4
	.equiv "sys::ControllerManager::unbind()", _text + 0x4CABE0
	.equiv "sys::ControllerManager::setDRCGyroEnable()", _text + 0x4CAD58
	.equiv "sys::ControllerManager::setWiiRemoteGyroEnable()", _text + 0x4CAE74
	.equiv "sys::ControllerManager::isSwingOn()", _text + 0x4CAFC0
	.equiv "sys::ControllerManager::setAllRaceControllerPause()", _text + 0x4CB02C
	.equiv "sys::ControllerManager::getDevType()", _text + 0x4CB09C
	.equiv "sys::ControllerManager::getGameType()", _text + 0x4CB184
	.equiv "sys::ControllerManager::isWiiRemote()", _text + 0x4CB498
	.equiv "sys::ControllerManager::isWPadController()", _text + 0x4CB61C
	.equiv "sys::ControllerManager::sceneEnter()", _text + 0x4CBB90
	.equiv "sys::ControllerManager::findUnbindedController()", _text + 0x4CC004
	.equiv "sys::ControllerManager::findVoidController()", _text + 0x4CC29C
	.equiv "sead::ControllerMgr::getControlDeviceAs()", _text + 0x4CC8FC
	.equiv "sys::CourseDecompThread::CourseDecompThread()", _text + 0x4CCB18
	.equiv "sys::CourseDecompThread::~CourseDecompThread()", _text + 0x4CCBFC
	.equiv "sys::CourseDecompThread::decompStart()", _text + 0x4CCC5C
	.equiv "sys::CourseDecompThread::waitSync()", _text + 0x4CCD74
	.equiv "sys::CourseDecompThread::createBuffer()", _text + 0x4CCE2C
	.equiv "sys::DirectoryIterator::close()", _text + 0x4CCF98
	.equiv "sys::DirectoryIterator::getNext()", _text + 0x4CCFE8
	.equiv "sys::DirectoryIterator::getFileInfo()", _text + 0x4CD670
	.equiv "sys::DirectoryIterator::convertType2ActSlotNo()", _text + 0x4CD7B8
	.equiv "sys::DirectoryIterator::openFS()", _text + 0x4CD7DC
	.equiv "sys::DirectoryIterator::openNandCommon()", _text + 0x4CD848
	.equiv "sys::DirectoryIterator::openNandUser()", _text + 0x4CD8A8
	.equiv "sys::DirectoryIterator::open()", _text + 0x4CD914
	.equiv "sys::DirectoryIterator::getNandUserType()", _text + 0x4CDE28
	.equiv "sys::SystemGsysTaskCallback::SystemGsysTaskCallback()", _text + 0x4CDFC4
	.equiv "sys::SystemEngine::isEnableMultiCore()", _text + 0x4CE1A4
	.equiv "FUN_0E64E218:sys::SystemEngine::getEngine()", _text + 0x4CE218
	.equiv "sys::SystemGsysTaskCallback::calc()", _text + 0x4CE250
	.equiv "sys::SystemSubEngine::getBehavior()", _text + 0x4CE774
	.equiv "sys::SystemEngine::SystemEngine()", _text + 0x4CE864
	.equiv "sys::SystemEngine::setupWindow()", _text + 0x4CFC28
	.equiv "sys::SystemEngine::ghostLoad_()", _text + 0x4CFC98
	.equiv "sys::SystemEngine::beforeScenePrepare()", _text + 0x4CFDC8
	.equiv "sys::SystemEngine::checkReadyForReplay()", _text + 0x4D00CC
	.equiv "sys::SystemEngine::miiCreateSync()", _text + 0x4D03E0
	.equiv "FID_conflict:sys::SystemEngine::isUI2Gsys()", _text + 0x4D0424
	.equiv "sys::SystemEngine::isRecorder2Gsys()", _text + 0x4D0558
	.equiv "sys::SystemEngine::showHomeNix()", _text + 0x4D05B8
	.equiv "FUN_0E652068:dash::create_actor_alone()", _text + 0x4D2068
	.equiv "FUN_0E652120:dash::create_actor_alone()", _text + 0x4D2120
	.equiv "FUN_0E652288:dash::create_actor_alone()", _text + 0x4D2288
	.equiv "FUN_0E6522B8:dash::create_actor_alone()", _text + 0x4D22B8
	.equiv "FUN_0E6522E8:dash::create_actor_alone()", _text + 0x4D22E8
	.equiv "sead::TaskBase_*sead::TTaskFactory()", _text + 0x4D2368
	.equiv "sys::EngineHolder::getEngine()", _text + 0x4D2CD0
	.equiv "sys::EngineHolder::setEnginePause()", _text + 0x4D2D10
	.equiv "sys::GetControllerIndexFromKartIndex()", _text + 0x4D2DD8
	.equiv "sys::FrameDropCounter::begin()", _text + 0x4D3390
	.equiv "sys::FrameDropCounter::reset()", _text + 0x4D351C
	.equiv "sys::GameController::disconnect()", _text + 0x4D3614
	.equiv "sys::GameController::reset()", _text + 0x4D36B4
	.equiv "sys::GameController::isWPadController()", _text + 0x4D37CC
	.equiv "sys::GameController::sceneEnter()", _text + 0x4D422C
	.equiv "sys::GameControllerBase::setController()", _text + 0x4D468C
	.equiv "sys::GameControllerBase::isValid()", _text + 0x4D4734
	.equiv "sys::GameControllerBase::getRawIndex()", _text + 0x4D479C
	.equiv "sys::GameFramework::gpuSleepProc_()", _text + 0x4D48D4
	.equiv "sys::GameFramework::waitForNextFrame_()", _text + 0x4D4944
	.equiv "sys::GameSequence::init()", _text + 0x4D6584
	.equiv "sys::GetTypedRootEngine()", _text + 0x4D6D58
	.equiv "sys::OpenFlagPack::init()", _text + 0x4D6DC0
	.equiv "FUN_0E657810:FID_conflict:sys::FlagAccessor::isOpen()", _text + 0x4D7810
	.equiv "FUN_0E6578B4:FID_conflict:sys::FlagAccessor::isOpen()", _text + 0x4D78B4
	.equiv "FUN_0E657958:FID_conflict:sys::FlagAccessor::isOpen()", _text + 0x4D7958
	.equiv "FUN_0E6579FC:FID_conflict:sys::FlagAccessor::isOpen()", _text + 0x4D79FC
	.equiv "FUN_0E657AA0:FID_conflict:sys::FlagAccessor::isOpen()", _text + 0x4D7AA0
	.equiv "FUN_0E657B44:FID_conflict:sys::FlagAccessor::isOpen()", _text + 0x4D7B44
	.equiv "sys::FlagAccessor::isOpen()", _text + 0x4D7BE8
	.equiv "FUN_0E657C8C:FID_conflict:sys::FlagAccessor::isOpen()", _text + 0x4D7C8C
	.equiv "sys::FlagAccessor::searchDialogGrandPrix()", _text + 0x4D7D30
	.equiv "sys::FlagAccessor::searchDialogEngineLevel()", _text + 0x4D7DB4
	.equiv "sys::FlagAccessor::searchNextAchiveDriver()", _text + 0x4D7E38
	.equiv "sys::FlagAccessor::searchDialogDriver()", _text + 0x4D804C
	.equiv "sys::FlagAccessor::searchDialogParts()", _text + 0x4D8140
	.equiv "sys::FlagAccessor::getCorrespondStamp()", _text + 0x4D84D0
	.equiv "sys::FlagAccessor::searchDialogCourseStamp()", _text + 0x4D8BB4
	.equiv "sys::FlagAccessor::searchDialogDriverStamp()", _text + 0x4D8CC8
	.equiv "sys::FlagAccessor::searchPresentDriver()", _text + 0x4D8E24
	.equiv "sys::FlagAccessor::searchPresentParts()", _text + 0x4D8EEC
	.equiv "sys::FlagAccessor::getPartsDialogCoinNum()", _text + 0x4D9138
	.equiv "sys::FlagAccessor::isGoldHandle()", _text + 0x4D96FC
	.equiv "sys::FlagAccessor::getNormalEndingFlag()", _text + 0x4D9754
	.equiv "sys::FlagAccessor::getTrueEndingFlag()", _text + 0x4D97A8
	.equiv "sys::FlagAccessor::setToOpenFlagPack()", _text + 0x4D97FC
	.equiv "FUN_0E659AD4:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4D9AD4
	.equiv "FUN_0E659B34:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4D9B34
	.equiv "FUN_0E659B94:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4D9B94
	.equiv "FUN_0E659BF4:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4D9BF4
	.equiv "FUN_0E659C54:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4D9C54
	.equiv "FUN_0E659CB4:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4D9CB4
	.equiv "FUN_0E659D14:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4D9D14
	.equiv "FUN_0E65A07C:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4DA07C
	.equiv "FUN_0E65A0DC:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4DA0DC
	.equiv "FUN_0E65A13C:FID_conflict:sys::FlagAccessor::setShowDialog()", _text + 0x4DA13C
	.equiv "FUN_0E65AA98:FID_conflict:int_sys::<unnamed>::searchStatus()", _text + 0x4DAA98
	.equiv "FUN_0E65AB30:int_sys::<unnamed>::searchStatus()", _text + 0x4DAB30
	.equiv "FUN_0E65ABC8:int_sys::<unnamed>::searchStatus()", _text + 0x4DABC8
	.equiv "FUN_0E65AC60:FID_conflict:int_sys::<unnamed>::searchStatus()", _text + 0x4DAC60
	.equiv "FUN_0E65ACF8:FID_conflict:int_sys::<unnamed>::searchStatus()", _text + 0x4DACF8
	.equiv "FUN_0E65AD90:FID_conflict:int_sys::<unnamed>::searchStatus()", _text + 0x4DAD90
	.equiv "sys::RaceLogSaveData::init()", _text + 0x4DAE28
	.equiv "sys::FlagData::OpenGrandPrixStatus::init()", _text + 0x4DAE98
	.equiv "FUN_0E65AED8:sys::FlagData::OpenEngineLevelStatus::init()", _text + 0x4DAED8
	.equiv "sys::FlagData::OpenTireStatus::init()", _text + 0x4DAFE8
	.equiv "FUN_0E65B034:sys::FlagData::OpenEngineLevelStatus::init()", _text + 0x4DB034
	.equiv "sys::FlagData::OpenStampStatus::init()", _text + 0x4DB078
	.equiv "sys::FlagData::init()", _text + 0x4DB12C
	.equiv "FUN_0E65B720:FID_conflict:sys::FlagData::GPTrophy::check()", _text + 0x4DB720
	.equiv "FUN_0E65B848:FID_conflict:sys::FlagData::GPTrophy::check()", _text + 0x4DB848
	.equiv "sys::FlagData::OpenGrandPrixStatus::check()", _text + 0x4DB970
	.equiv "sys::FlagData::OpenEngineLevelStatus::check()", _text + 0x4DBA7C
	.equiv "FUN_0E65BB88:FID_conflict:sys::FlagData::OpenTireStatus::check()", _text + 0x4DBB88
	.equiv "FUN_0E65BC88:FID_conflict:sys::FlagData::OpenTireStatus::check()", _text + 0x4DBC88
	.equiv "FUN_0E65BD88:FID_conflict:sys::FlagData::OpenTireStatus::check()", _text + 0x4DBD88
	.equiv "FUN_0E65BE88:FID_conflict:sys::FlagData::OpenTireStatus::check()", _text + 0x4DBE88
	.equiv "sys::FlagData::OpenStampStatus::check()", _text + 0x4DBF88
	.equiv "sys::FlagData::OpenDlcPackStatus::check()", _text + 0x4DC094
	.equiv "sys::FlagData::getTotalHandleRatio()", _text + 0x4DC31C
	.equiv "FID_conflict:sys::FlagData::getControllerSlot()", _text + 0x4DC3C0
	.equiv "sys::FlagData::getBattleCourseSlot()", _text + 0x4DC3DC
	.equiv "sys::FlagData::getControllerSlot()", _text + 0x4DC478
	.equiv "sys::PlayerFlagSaveData::init()", _text + 0x4DC494
	.equiv "FUN_0E65C59C:sys::AddFlagValue()", _text + 0x4DC59C
	.equiv "FUN_0E65C5B4:sys::AddFlagValue()", _text + 0x4DC5B4
	.equiv "sys::PlayerInfo::init()", _text + 0x4DC6BC
	.equiv "sys::PlayerInfo::operator_=()", _text + 0x4DC748
	.equiv "sys::PlayerInfo::initFromAccount()", _text + 0x4DC834
	.equiv "sys::PlayerInfo::initDummy()", _text + 0x4DCB1C
	.equiv "sys::PlayerInfo::initFromOther()", _text + 0x4DCB58
	.equiv "sys::PlayerInfo::initTemporary()", _text + 0x4DCB9C
	.equiv "sys::PlayerInfo::initAnonymous()", _text + 0x4DCBF4
	.equiv "sys::PlayerInfo::updateFromOther()", _text + 0x4DCC4C
	.equiv "sys::PlayerInfo::getCore()", _text + 0x4DCD6C
	.equiv "sys::PlayerManager::getBlankController()", _text + 0x4DCF18
	.equiv "sys::PlayerManager::getBlankResourceIndex()", _text + 0x4DD054
	.equiv "sys::PlayerManager::setResourceIndex_()", _text + 0x4DD108
	.equiv "sys::Player::updateResourceIndex()", _text + 0x4DD148
	.equiv "sys::PlayerManager::updateInfo()", _text + 0x4DD1C0
	.equiv "sys::Player::changeType()", _text + 0x4DD29C
	.equiv "sys::Player::init()", _text + 0x4DD394
	.equiv "sys::Player::setIndex()", _text + 0x4DD478
	.equiv "sys::Player::validate()", _text + 0x4DD4A8
	.equiv "sys::Player::forMenu()", _text + 0x4DD508
	.equiv "sys::Player::setMii()", _text + 0x4DD678
	.equiv "sys::Player::setAccountMii()", _text + 0x4DD724
	.equiv "sys::Player::setPlayerInfoFromAccount()", _text + 0x4DD7CC
	.equiv "sys::Player::updateMiiFromNetPacket()", _text + 0x4DD83C
	.equiv "sys::Player::setPlayerInfoFromOther()", _text + 0x4DD8B4
	.equiv "sys::Player::setPlayerInfoTemporary()", _text + 0x4DD930
	.equiv "sys::Player::setMiiDummy()", _text + 0x4DD974
	.equiv "sys::Player::setPlayerInfoAnonymous()", _text + 0x4DDA78
	.equiv "sys::Player::getStartPos()", _text + 0x4DDB84
	.equiv "sys::Player::loadCourseGhost()", _text + 0x4DDC98
	.equiv "sys::Player::loadDownloadGhost()", _text + 0x4DDCF8
	.equiv "sys::Player::getKartResource()", _text + 0x4DDD54
	.equiv "sys::Player::startDestroyPhase_()", _text + 0x4DE124
	.equiv "sys::Player::checkAndDestroyMii_()", _text + 0x4DE158
	.equiv "sys::Player::findBlankMiiSlot()", _text + 0x4DE1F8
	.equiv "sys::Player::startCreatePhase_()", _text + 0x4DE27C
	.equiv "sys::Player::endCreatePhase_()", _text + 0x4DE47C
	.equiv "sys::Player::checkAndCreateMii()", _text + 0x4DE8D8
	.equiv "sys::Player::checkAndDestroyMii()", _text + 0x4DE960
	.equiv "sys::Player::startFindingController()", _text + 0x4DE9E8
	.equiv "sys::Player::stopFindingController()", _text + 0x4DEA64
	.equiv "sys::Player::copy_()", _text + 0x4DEAA0
	.equiv "sys::PlayerManager::eraseGuestPlayerAccount()", _text + 0x4DED34
	.equiv "sys::PlayerManager::closerPlayers()", _text + 0x4DEFA0
	.equiv "sys::PlayerManager::finalizePlayerInvite()", _text + 0x4DF01C
	.equiv "sys::PlayerManager::stopFindingController()", _text + 0x4DF844
	.equiv "sys::PlayerManager::releaseController()", _text + 0x4DF868
	.equiv "sys::PlayerManager::getDRCLocalPlayer()", _text + 0x4DF91C
	.equiv "sys::PlayerManager::getDRCPlayer()", _text + 0x4DF998
	.equiv "sys::PlayerManager::resetKartIndex()", _text + 0x4DFA2C
	.equiv "sys::PlayerManager::setKartIndex()", _text + 0x4DFAA8
	.equiv "sys::PlayerManager::applyKartInfo()", _text + 0x4DFAE4
	.equiv "sys::PlayerManager::updateForTitleDemo()", _text + 0x4DFF4C
	.equiv "sys::PlayerManager::updateForReplay()", _text + 0x4E01A0
	.equiv "sys::PlayerManager::createMii()", _text + 0x4E0780
	.equiv "sys::PlayerManager::updateKartIndexForMenu()", _text + 0x4E0830
	.equiv "sys::PlayerManager::getAnyPlayerIndexOrder_()", _text + 0x4E0FE0
	.equiv "FUN_0E661060:FID_conflict:`global_constructor_keyed_to'_23_SystemPlayerManager_cpp_8225c8dd", _text + 0x4E1060
	.equiv "sys::PlayerRaceScore::setRank()", _text + 0x4E1B24
	.equiv "sys::PlayerRaceScore::setScore()", _text + 0x4E1B84
	.equiv "sys::PlayerScore::init()", _text + 0x4E1BAC
	.equiv "sys::PlayerScore::update()", _text + 0x4E1CF8
	.equiv "sys::ProcessManager::calcProcUIProcess()", _text + 0x4E1E44
	.equiv "sys::ProcessManager::lockHBM()", _text + 0x4E1F08
	.equiv "sys::ProcessManager::unlockHBM()", _text + 0x4E1F64
	.equiv "sys::ProcessManager::initialize()", _text + 0x4E2130
	.equiv "sys::ProcessManager::readySwitch()", _text + 0x4E2208
	.equiv "FUN_0E662560:FID_conflict:`global_constructor_keyed_to'_29_SystemCommonModuleManager_cpp_8225c8dd", _text + 0x4E2560
	.equiv "sys::RaceController::sceneEnter()", _text + 0x4E2B08
	.equiv "sys::RaceController::startRumble()", _text + 0x4E2B18
	.equiv "FID_conflict:sys::RaceController::updateWiiRemoteConfig()", _text + 0x4E2E00
	.equiv "sys::RaceController::updateGyroMode()", _text + 0x4E2E30
	.equiv "sys::RaceController::arrowToItem()", _text + 0x4E3460
	.equiv "sys::RaceController::calcItemOtherWay()", _text + 0x4E3550
	.equiv "sys::RaceController::calcAccelTurn()", _text + 0x4E359C
	.equiv "sys::RumbleControllerFromKartIndex()", _text + 0x4E38FC
	.equiv "sys::Rate::setImm()", _text + 0x4E3C1C
	.equiv "sys::Rate::Rate()", _text + 0x4E3C5C
	.equiv "sys::RegionLang::convRegionFromSDK()", _text + 0x4E413C
	.equiv "sys::RegionLang::convLanguageFromSDK()", _text + 0x4E4300
	.equiv "sys::ResourceBase::ResourceBase()", _text + 0x4E47F0
	.equiv "sys::ResourceBase::attach()", _text + 0x4E4968
	.equiv "sys::AudioArchiveRes::constructSoundArc()", _text + 0x4E4A1C
	.equiv "sys::ArchiveDir::postLoad()", _text + 0x4E4DF0
	.equiv "sys::Archive::append()", _text + 0x4E6288
	.equiv "sead::TreeMapNode_*sead::TreeMapImpl::erase()", _text + 0x4E71DC
	.equiv "FUN_0E667A98:sead::TreeMapNode_*sead::TreeMapImpl::insert()", _text + 0x4E7A98
	.equiv "sys::ResourceLoader::init()", _text + 0x4E8104
	.equiv "sys::ResourceLoader::pathNormalize()", _text + 0x4E85A8
	.equiv "sys::ResourceLoader::pathConvert()", _text + 0x4E88FC
	.equiv "sys::ResourceLoader::check_()", _text + 0x4E9BC4
	.equiv "sys::ResourceLoader::loadBuffer()", _text + 0x4E9CAC
	.equiv "sys::ResourceLoader::check()", _text + 0x4E9E6C
	.equiv "sys::ResourceLoader::pathConvertArc()", _text + 0x4E9F3C
	.equiv "sys::ResourceLoader::getErrorCode()", _text + 0x4EAECC
	.equiv "sys::ResourceLoader::regist()", _text + 0x4EAEF4
	.equiv "sys::ResourceLoader::openDirectory_()", _text + 0x4EAF38
	.equiv "sys::AudioTaskProxyThread::AudioTaskProxyThread()", _text + 0x4EB5AC
	.equiv "sys::RootScene::RootScene()", _text + 0x4EB6AC
	.equiv "sys::RootScene::setupSead()", _text + 0x4EBBFC
	.equiv "sys::RootScene::createRootSceneEngines()", _text + 0x4EBCD4
	.equiv "sys::RootScene::createRootSceneEngines2()", _text + 0x4EC0BC
	.equiv "sys::RootScene::createFader()", _text + 0x4EC258
	.equiv "sys::RootScene::scenePrepare()", _text + 0x4EC35C
	.equiv "FID_conflict:sys::RootScene::engineEnter()", _text + 0x4ECBAC
	.equiv "sys::RootScene::engineExit()", _text + 0x4ECC6C
	.equiv "sys::RootScene::rootCalcNode()", _text + 0x4ED0B4
	.equiv "sys::SaveDataFile::read_()", _text + 0x4EDF48
	.equiv "sys::SaveDataFile::Header::isValid()", _text + 0x4EDFA4
	.equiv "sys::SaveDataFile::load_()", _text + 0x4EE01C
	.equiv "sys::SaveDataFile::load()", _text + 0x4EE26C
	.equiv "sys::SaveDataFile::Header::updateCRC()", _text + 0x4EE394
	.equiv "sys::SaveDataFile::writeHeader_()", _text + 0x4EE3E4
	.equiv "sys::SaveDataFile::write_()", _text + 0x4EE468
	.equiv "sys::SaveDataFile::save_()", _text + 0x4EE54C
	.equiv "sys::SaveDataFile::save()", _text + 0x4EE6D8
	.equiv "sys::SaveDataGhostListStaff::init()", _text + 0x4F0570
	.equiv "sys::SaveDataGhostListStaff::update()", _text + 0x4F05B8
	.equiv "sys::SaveDataGhostList::init()", _text + 0x4F0610
	.equiv "sys::SaveDataManager::execute()", _text + 0x4F1F28
	.equiv "sys::SaveDataManager::init()", _text + 0x4F203C
	.equiv "sys::SaveDataManager::load()", _text + 0x4F209C
	.equiv "sys::SaveDataManager::saveUserDataWithParam()", _text + 0x4F20D4
	.equiv "sys::SaveDataManager::saveUserData()", _text + 0x4F2108
	.equiv "sys::SaveDataManager::loadGhost()", _text + 0x4F21D0
	.equiv "sys::SaveDataManager::saveGhost()", _text + 0x4F2230
	.equiv "sys::SaveDataManager::loadReplay()", _text + 0x4F22C4
	.equiv "sys::SaveDataManager::saveReplay()", _text + 0x4F22F4
	.equiv "sys::SaveDataManager::copyReplay()", _text + 0x4F2328
	.equiv "sys::SaveDataManager::getGhostList()", _text + 0x4F2390
	.equiv "sys::SaveDataManager::removeFileUser_()", _text + 0x4F25C0
	.equiv "sys::SaveDataManager::removeFileCommon_()", _text + 0x4F2638
	.equiv "sys::SaveDataManager::clearInvalidFiles_()", _text + 0x4F2678
	.equiv "sys::SaveDataManager::clearInvalidFiles()", _text + 0x4F3260
	.equiv "sys::SaveDataManager::checkCommonArea()", _text + 0x4F33E8
	.equiv "sys::SaveDataManager::getUserSaveDataPtr()", _text + 0x4F3630
	.equiv "sys::SaveDataManager::SaveReplayParam::createFileName()", _text + 0x4F49F4
	.equiv "sys::SaveDataManager::executeSaveReplayCommand_()", _text + 0x4F4A80
	.equiv "sys::SaveDataManager::executeLoadReplayCommand_()", _text + 0x4F5000
	.equiv "sys::SaveDataManager::SaveReplayParam::updateFileName()", _text + 0x4F53BC
	.equiv "sys::SaveDataManager::executeCopyReplayCommand()", _text + 0x4F5440
	.equiv "sys::SaveDataManager::waitSync()", _text + 0x4F5B7C
	.equiv "sys::SaveDataManager::openDirectory_()", _text + 0x4F5C34
	.equiv "sys::SaveDataManager::openDirectoryUser_()", _text + 0x4F5C70
	.equiv "sys::SaveDataManager::getFileSize_()", _text + 0x4F5C80
	.equiv "sys::SaveDataReplayList::init()", _text + 0x4F66C4
	.equiv "sys::SaveDataReplayList::getCommonIndexNewer()", _text + 0x4F6754
	.equiv "sys::SaveDataReplayList::update_()", _text + 0x4F684C
	.equiv "sys::SaveDataReplayList::getBlankSlotCount()", _text + 0x4F8674
	.equiv "sys::SaveDataReplayList::getNextWriteCommonIndex()", _text + 0x4F874C
	.equiv "sys::SaveDataReplayList::getNextWriteCommonIsNew()", _text + 0x4F8804
	.equiv "sys::SaveDataReplayList::getCommonOrder()", _text + 0x4F88AC
	.equiv "sys::SaveDataReplayList::getBlankUserIndex()", _text + 0x4F8978
	.equiv "sys::SaveDataReplayWriteLog::init()", _text + 0x4F9D78
	.equiv "sys::SaveDataReplayWriteLog::update()", _text + 0x4F9E80
	.equiv "sys::SceneBase::accept()", _text + 0x4FA2B8
	.equiv "sys::SeadCafeDRCController::swingControl()", _text + 0x4FA9FC
	.equiv "sys::SeadCafeDRCController::calcWheel()", _text + 0x4FABD4
	.equiv "sys::SeadCafeDRCController::calcPitch()", _text + 0x4FB114
	.equiv "sys::SeadCafeDRCController::calcSensor()", _text + 0x4FB71C
	.equiv "sys::SeadCafeDRCController::calcRecalibration()", _text + 0x4FBA54
	.equiv "sys::SeadCafeDRCController::calcImpl_()", _text + 0x4FBADC
	.equiv "sys::SeadCafeRemoteController::swingControl()", _text + 0x4FC1C4
	.equiv "sys::SeadCafeRemoteController::updateWheelDegMinMax()", _text + 0x4FC638
	.equiv "sys::SeadCafeRemoteController::wheelDeg2Stick()", _text + 0x4FC700
	.equiv "sys::SeadCafeRemoteController::updateGravityVec()", _text + 0x4FD3C0
	.equiv "sys::SeadCafeRemoteController::calcWheelAcc()", _text + 0x4FD540
	.equiv "sys::SeadCafeRemoteController::calcPitchAcc()", _text + 0x4FD878
	.equiv "sys::SeadCafeRemoteController::updateCoreOnly()", _text + 0x4FDEB0
	.equiv "sys::SeadControllerWrapper::createPadMaskFromControllerPadMaskEx_()", _text + 0x4FEDF4
	.equiv "sys::SeadControllerWrapper::updateStickToCross()", _text + 0x4FEEA8
	.equiv "sys::SeadControllerWrapper::updateDerivativeParamsEx_()", _text + 0x4FEFE4
	.equiv "sys::SeadControllerWrapper::setPadConfigEx()", _text + 0x4FF7D8
	.equiv "FUN_0E6878FC:FID_conflict:sys::SmartModelResourceCacheNode::copyCore()", _text + 0x5078FC
	.equiv "FUN_0E689D88:FID_conflict:sys::SmartModelResourceCacheNode::copyCore()", _text + 0x509D88
	.equiv "sys::ThreadManager::ThreadManager()", _text + 0x50C900
	.equiv "sys::ThreadManager::endCalc()", _text + 0x50CA00
	.equiv "sys::ThreadManager::sleepCurrentThread()", _text + 0x50CA38
	.equiv "sys::ThreadManager::sleepMainThread()", _text + 0x50CAD0
	.equiv "sys::UIController::init()", _text + 0x50CB34
	.equiv "sys::UIController::sceneEnter()", _text + 0x50CB74
	.equiv "sys::UnrecognizedController::UnrecognizedController()", _text + 0x50D28C
	.equiv "sys::FreeAndClearHeap()", _text + 0x50D58C
	.equiv "sys::FreeAndClearHeapDebug()", _text + 0x50D634
	.equiv "sys::WindowManager::init()", _text + 0x50D65C
	.equiv "sys::WindowManager::updateLookup()", _text + 0x50D740
	.equiv "sys::WindowManager::setupWindow()", _text + 0x50D968
	.equiv "sys::WindowManager::setupWindowForMenu()", _text + 0x50D9AC
	.equiv "sys::WindowManager::setupWindowForRace()", _text + 0x50D9F0
	.equiv "sys::WindowManager::raceSetup()", _text + 0x50DA84
	.equiv "sys::WindowManager::windowStateUpdated()", _text + 0x50DFE0
	.equiv "sys::WindowManager::setup_()", _text + 0x50E098
	.equiv "sys::WindowManager::postCalc()", _text + 0x50E434
	.equiv "sys::WindowManager::isDraw3D30fps()", _text + 0x50E4C0
	.equiv "sys::WindowManager::getWindowNum()", _text + 0x50E4F0
	.equiv "sys::WindowManager::setRaceTypeToDemo()", _text + 0x50E518
	.equiv "sys::WorkerMgr::WorkerMgr()", _text + 0x50E754
	.equiv "sys::WorkerMgr::createInstance()", _text + 0x50E7A8
	.equiv "object::TempMessageMgr::prepare()", _text + 0x50EA60
	.equiv "object::TempMessageMgr::checkIsSafeToView()", _text + 0x50EB88
	.equiv "object::TempMessageMgr::pushMessage()", _text + 0x50ED8C
	.equiv "object::TempMessageMgr::pushFakeMessage()", _text + 0x50EFD4
	.equiv "object::TheaterRecordPlayEventReceiver::isNewEventReceived()", _text + 0x50F194
	.equiv "object::MiiActorBase::prepareModel()", _text + 0x51042C
	.equiv "object::MiiActorBase::decideModelGender()", _text + 0x510CB4
	.equiv "object::MiiActorBase::disableLodModelFFL()", _text + 0x510CDC
	.equiv "object::MiiActorBase::applyFFLColor()", _text + 0x510D64
	.equiv "object::MiiActorBase::prepare()", _text + 0x51102C
	.equiv "object::MiiActorBase::resetAnimationRelatedParams()", _text + 0x5112CC
	.equiv "object::MiiActorBase::enter()", _text + 0x511364
	.equiv "object::MiiActorBase::isInStatePersist()", _text + 0x5116CC
	.equiv "object::MiiActorBase::isInState()", _text + 0x5117FC
	.equiv "object::MiiActorMgrBase::convertRtPlaneToSphere()", _text + 0x5119C4
	.equiv "object::MiiActorBase::calcPosLobbyMessagePopup_()", _text + 0x511D10
	.equiv "object::MiiActorBase::isLobbySpeechOverwritable()", _text + 0x511E58
	.equiv "object::MiiActorBase::popupLobbyMessage()", _text + 0x511FB4
	.equiv "object::MiiActorBase::updateBoundSubTrail()", _text + 0x5125E4
	.equiv "object::MiiActorBase::updateBoundTrail()", _text + 0x512908
	.equiv "object::MiiActorBase::calcTheaterSpeech()", _text + 0x512AF0
	.equiv "object::MiiActorBase::isNeedMappedRT()", _text + 0x512DCC
	.equiv "object::MiiActorBase::calcClampedWorldAttentionDir()", _text + 0x512E40
	.equiv "object::MiiActorBase::calcApproachHeadFrontToWorldDir()", _text + 0x513378
	.equiv "object::MiiActorBase::beforeModelUpdateWorldMatrix()", _text + 0x5136B4
	.equiv "object::MiiActorBase::isTouchable()", _text + 0x513DFC
	.equiv "object::MiiActorBase::isTouchReactable()", _text + 0x513F3C
	.equiv "object::MiiActorBase::startTheaterTouched()", _text + 0x5140EC
	.equiv "object::MiiActorBase::isWiFiWaitFree()", _text + 0x514424
	.equiv "object::MiiActorBase::startWiFiTouched()", _text + 0x514498
	.equiv "object::MiiActorBase::isLobbySpeechAcceptable()", _text + 0x5146B4
	.equiv "object::MiiActorBase::getLobbyMovingSpeechExpression()", _text + 0x514A2C
	.equiv "object::MiiActorBase::decideSpotByRow_()", _text + 0x514A94
	.equiv "object::MiiActorBase::calcBezier()", _text + 0x51503C
	.equiv "object::MiiActorBase::calcLerpedBezier()", _text + 0x515104
	.equiv "object::MiiActorBase::simCalcGoToGoal()", _text + 0x5152C4
	.equiv "FUN_0E695474:FID_conflict:object::MiiActorBase::saveMovingParameter()", _text + 0x515474
	.equiv "FUN_0E695520:FID_conflict:object::MiiActorBase::saveMovingParameter()", _text + 0x515520
	.equiv "object::MiiActorMgrBase::simulateTrails()", _text + 0x5155CC
	.equiv "object::MiiActorBase::initBoundTrail()", _text + 0x515940
	.equiv "object::MiiActorBase::buildTrail_()", _text + 0x515B54
	.equiv "object::MiiActorBase::decideTrail()", _text + 0x515D18
	.equiv "object::MiiActorBase::decideWanderTrail()", _text + 0x516484
	.equiv "object::MiiActorBase::setGoal()", _text + 0x516650
	.equiv "object::MiiActorMgrBase::reserveSlot()", _text + 0x516770
	.equiv "object::MiiActorMgrBase::unreserveSlot()", _text + 0x516828
	.equiv "FUN_0E6968D4:object::MiiActorBase::setGoalBySlotIdx()", _text + 0x5168D4
	.equiv "FUN_0E696B78:object::MiiActorBase::setGoalBySlotIdx()", _text + 0x516B78
	.equiv "object::MiiActorBase::setGoalBySlotIdxInstantly()", _text + 0x516D64
	.equiv "object::MiiActorBase::changeSkeletalAnimation()", _text + 0x51705C
	.equiv "object::MiiActorBase::setFrmTillSpeakMsg()", _text + 0x517388
	.equiv "FUN_0E6973A8:object::MiiActorBase::startAttention()", _text + 0x5173A8
	.equiv "FUN_0E697504:object::MiiActorBase::startAttention()", _text + 0x517504
	.equiv "object::MiiActorBase::requestStartLookGone()", _text + 0x5175B4
	.equiv "object::MiiActorBase::startEmotion()", _text + 0x51766C
	.equiv "object::MiiActorBase::setSpecialExpression_byFlag()", _text + 0x517764
	.equiv "object::MiiActorBase::endAttention()", _text + 0x5177F4
	.equiv "object::MiiActorBase::payAttentionToSpeaker()", _text + 0x51780C
	.equiv "object::MiiActorBase::payAttentionToMeWiFiAppearing()", _text + 0x5178C0
	.equiv "object::MiiActorBase::payAttentionToMeWiFiExplainRule()", _text + 0x517940
	.equiv "object::MiiActorBase::catchMeWiFi()", _text + 0x517980
	.equiv "object::MiiActorMgrBase::getEmptySlotIdxRandomly()", _text + 0x517B40
	.equiv "object::MiiActorMgrBase::getNextIdxExtraMii()", _text + 0x517EE4
	.equiv "object::MiiActorMgrBase::setupMiiExpressionFlag()", _text + 0x517F4C
	.equiv "object::MiiActorMgrBase::checkEmptySlotClosableTheater()", _text + 0x5188A8
	.equiv "object::MiiActorBase::updateAnimationInner_()", _text + 0x518C80
	.equiv "object::MiiActorBase::updateAnimation()", _text + 0x51900C
	.equiv "object::MiiActorBase::updateModelAndMatrix()", _text + 0x519150
	.equiv "object::MiiActorBase::fakeMessageGenerate()", _text + 0x5192E8
	.equiv "object::MiiActorMgrBase::informGettingOutBegin()", _text + 0x51950C
	.equiv "object::MiiActorBase::stateTheaterLookTv()", _text + 0x519704
	.equiv "object::MiiActorMgrBase::informSpeakBegin()", _text + 0x51A370
	.equiv "object::MiiActorMgrBase::informSpeakEnd()", _text + 0x51A4AC
	.equiv "object::MiiActorBase::stateTheaterSpeak()", _text + 0x51A5A0
	.equiv "object::MiiActorBase::stateTheaterEmotion()", _text + 0x51B898
	.equiv "object::MiiActorMgrBase::payAttentionToMeBySlotIdx()", _text + 0x51BC08
	.equiv "object::MiiActorMgrBase::informIamAppearing()", _text + 0x51BC84
	.equiv "object::MiiActorMgrBase::reachedSlot()", _text + 0x51C1D0
	.equiv "object::MiiActorBase::calcGoToGoal()", _text + 0x51C1F4
	.equiv "object::MiiActorBase::calcAutoFront()", _text + 0x51C890
	.equiv "object::MiiActorBase::isBadRank()", _text + 0x51DEF8
	.equiv "object::MiiActorBase::stateWiFiVoting()", _text + 0x51ED18
	.equiv "object::MiiActorMgrBase::isSlotWiFiFreeStanding()", _text + 0x51F41C
	.equiv "object::MiiActorMgrBase::checkEmptySlotIdxWiFi_()", _text + 0x51F5DC
	.equiv "object::MiiActorMgrBase::getEmptySlotIdxWiFi()", _text + 0x51FFF0
	.equiv "object::MiiActorBase::stateWiFiWait()", _text + 0x520230
	.equiv "object::MiiActorBase::stateWiFiSpecialWait()", _text + 0x520B18
	.equiv "object::MiiActorBase::stateInitWiFiInteraction()", _text + 0x5213E8
	.equiv "object::MiiActorBase::stateWiFiInteraction()", _text + 0x5216FC
	.equiv "object::MiiActorBase::stateWiFiStraggled()", _text + 0x522068
	.equiv "object::MiiActorBase::stateWiFiTouched()", _text + 0x522A7C
	.equiv "object::MiiActorBase::stateWiFiLookRoulette()", _text + 0x523258
	.equiv "object::MiiActorMgrBase::informIamExplainingRule()", _text + 0x524120
	.equiv "object::MiiActorBase::stateWiFiDisappear()", _text + 0x5244DC
	.equiv "object::MiiActorMgrBase::setupPosCloseup()", _text + 0x524B04
	.equiv "object::MiiActorMgrBase::detachCameraCloseup()", _text + 0x525420
	.equiv "object::MiiActorMgrBase::randomizeIndicesExtraMii()", _text + 0x525A34
	.equiv "object::MiiActorMgrBase::createHeap_forAsync()", _text + 0x525B18
	.equiv "object::MiiActorMgrBase::prepare()", _text + 0x525D94
	.equiv "object::MiiActorMgrBase::calcFrmLongestEmotionalMotion_partial()", _text + 0x5267FC
	.equiv "object::MiiActorMgrBase::calcFrmLongestEmotionalMotion()", _text + 0x526964
	.equiv "object::MiiActorMgrBase::setupCameraCloseup()", _text + 0x526FA8
	.equiv "object::MiiActorMgrBase::enter()", _text + 0x52700C
	.equiv "object::MiiActorMgrBase::touchMii_inner()", _text + 0x52728C
	.equiv "object::MiiActorMgrBase::touchMii()", _text + 0x52755C
	.equiv "object::MiiActorMgrBase::manageLobbyMessage()", _text + 0x527B04
	.equiv "object::MiiActorMgrBase::determineIdealSpeechSlot()", _text + 0x527F98
	.equiv "object::MiiActorMgrBase::arrangeOliveResult()", _text + 0x528714
	.equiv "object::MiiActorMgrBase::isReplayBadGoal()", _text + 0x5289C4
	.equiv "object::MiiActorMgrBase::isHighlightTargetKart()", _text + 0x528A8C
	.equiv "object::MiiActorMgrBase::checkEmotionalSpot()", _text + 0x528ACC
	.equiv "object::MiiActorMgrBase::updatePosScreenStareReplay()", _text + 0x528E5C
	.equiv "object::MiiActorMgrBase::setupArrangeSlotByRow_()", _text + 0x52A2B8
	.equiv "object::MiiActorMgrBase::setupArrangeSlotNeighbor()", _text + 0x52A850
	.equiv "object::MiiActorMgrBase::setupSphereMappingParam()", _text + 0x52B0EC
	.equiv "`global_constructor_keyed_to'_16_MiiActorBase_cpp_8225c8dd", _text + 0x52B988
	.equiv "object::TheaterDirector::startDisplayHeatUp()", _text + 0x52CE94
	.equiv "void_sead::Matrix33CalcCommon::getBase()", _text + 0x52D9B0
	.equiv "object::TheaterEngine::TheaterEngine()", _text + 0x52DA24
	.equiv "FUN_0E6ADBC0:sys::GetTypedEngine()", _text + 0x52DBC0
	.equiv "FUN_0E6AE904:sys::GetTypedEngine()", _text + 0x52E904
	.equiv "object::TheaterModel::prepareAnimation()", _text + 0x52EA78
	.equiv "object::TheaterModel::prepare()", _text + 0x52EEE8
	.equiv "object::TheaterModel::updateAnimation()", _text + 0x52F29C
	.equiv "object::TheaterModel::startAnmSet_Off()", _text + 0x52F940
	.equiv "object::TheaterModel::setEnable_SpotLight_DownLight()", _text + 0x52FC0C
	.equiv "FUN_0E6B01F8:FID_conflict:bool_EffectLinkUserBase::isExistAction()", _text + 0x5301F8
	.equiv "void_EffectLinkUserBase::createELinkSlotSimple()", _text + 0x530338
	.equiv "ui::UIAnimation::init()", _text + 0x530478
	.equiv "ui::UIAnimator::UIAnimator()", _text + 0x530494
	.equiv "ui::UIAnimator::change()", _text + 0x5305D0
	.equiv "ui::UIAnimator::playContinue()", _text + 0x53068C
	.equiv "ui::UIAnimator::setType()", _text + 0x5306F8
	.equiv "FUN_0E6B07DC:ui::UIAnimator::bind()", _text + 0x5307DC
	.equiv "FUN_0E6B08A0:ui::UIAnimator::bind()", _text + 0x5308A0
	.equiv "ui::UIAnimator::setSpeed()", _text + 0x5309F4
	.equiv "ui::UIAnimator::play()", _text + 0x530A48
	.equiv "FUN_0E6B0B00:ui::UIAnimator::playOnOff()", _text + 0x530B00
	.equiv "FUN_0E6B0B5C:ui::UIAnimator::stop()", _text + 0x530B5C
	.equiv "FUN_0E6B0BDC:ui::UIAnimator::getMaxFrame()", _text + 0x530BDC
	.equiv "ui::UIAnimator::getFrame()", _text + 0x530C5C
	.equiv "FUN_0E6B0C98:ui::UIAnimator::playOnOff()", _text + 0x530C98
	.equiv "FUN_0E6B0D94:ui::UIAnimator::stop()", _text + 0x530D94
	.equiv "ui::UIAnimator::setEnable()", _text + 0x530DF8
	.equiv "FUN_0E6B0E5C:ui::UIAnimator::getMaxFrame()", _text + 0x530E5C
	.equiv "ui::UIAnimator::getMaxFrameInt()", _text + 0x530ED8
	.equiv "ui::UIAnimator::isPlay()", _text + 0x530F48
	.equiv "ui::UIAnimator::isTrigEnd()", _text + 0x530F94
	.equiv "ui::UIAnimator::isEnd()", _text + 0x530FCC
	.equiv "ui::UIControl::load_()", _text + 0x5310C8
	.equiv "ui::UIControl::findPartsRecursive_()", _text + 0x5311B4
	.equiv "FUN_0E6B1284:ui::UIControl::create_()", _text + 0x531284
	.equiv "ui::UIControl::applyAnim()", _text + 0x5312D4
	.equiv "ui::UIControl::calcAnim()", _text + 0x5312F0
	.equiv "ui::UIControl::applyUpdateAnim()", _text + 0x531334
	.equiv "ui::UIControl::draw()", _text + 0x531358
	.equiv "ui::UIControl::findPane()", _text + 0x531394
	.equiv "ui::UIControl::getGlobalMtx()", _text + 0x53142C
	.equiv "ui::UIControl::getGlobalPos()", _text + 0x531468
	.equiv "ui::UIControl::getGlobalAlpha()", _text + 0x531584
	.equiv "ui::UIControl::checkVisible()", _text + 0x5315E0
	.equiv "ui::UIControl::setGlobalMtx()", _text + 0x5315FC
	.equiv "FUN_0E6B1650:ui::UIControl::getPos()", _text + 0x531650
	.equiv "FUN_0E6B1670:ui::UIControl::getPos()", _text + 0x531670
	.equiv "ui::UIControl::getSize()", _text + 0x53168C
	.equiv "ui::UIControl::isVisible()", _text + 0x5316C4
	.equiv "ui::UIControl::setPos()", _text + 0x531704
	.equiv "ui::UIControl::setScale()", _text + 0x53175C
	.equiv "ui::UIControl::setAlphaEnable()", _text + 0x5317E0
	.equiv "ui::UIControl::setAlpha()", _text + 0x531808
	.equiv "FUN_0E6B1828:ui::UIControl::setVisible()", _text + 0x531828
	.equiv "FUN_0E6B1858:ui::UIControl::setVisible()", _text + 0x531858
	.equiv "ui::UIControl::moveFront()", _text + 0x531874
	.equiv "ui::UIControl::setTexture()", _text + 0x5318D0
	.equiv "ui::UIControl::setCapTexture()", _text + 0x53193C
	.equiv "ui::UIControl::setTextureWindow()", _text + 0x531B54
	.equiv "ui::UIControl::allocMessage()", _text + 0x531DBC
	.equiv "FUN_0E6B1EB8:ui::UIControl::setMessage()", _text + 0x531EB8
	.equiv "ui::UIControl::setMessageRecursive_()", _text + 0x532058
	.equiv "FUN_0E6B2110:ui::UIControl::setMessage()", _text + 0x532110
	.equiv "ui::UIGraphics::UIGraphics()", _text + 0x53216C
	.equiv "ui::UIGraphics::setupDrawInfo()", _text + 0x532220
	.equiv "ui::UIGraphics::initializeNw4f_()", _text + 0x532358
	.equiv "FUN_0E6B25BC:ui::UIInput::pushBounding()", _text + 0x5325BC
	.equiv "FUN_0E6B2638:ui::UIInput::pushBounding()", _text + 0x532638
	.equiv "ui::UIInput::setBoundingRecursive_()", _text + 0x53267C
	.equiv "ui::UIInput::setBounding()", _text + 0x5327D0
	.equiv "FUN_0E6B2844:ui::UIInput::isHit()", _text + 0x532844
	.equiv "FUN_0E6B2C9C:ui::UIInput::isHit()", _text + 0x532C9C
	.equiv "ui::UIResourceAccessor::UIResourceAccessor()", _text + 0x532F3C
	.equiv "ui::UILoader::loadArchive()", _text + 0x53304C
	.equiv "ui::UILoader::getResource_()", _text + 0x53316C
	.equiv "ui::UILoader::setupFont_()", _text + 0x5331E0
	.equiv "ui::UILoader::setFont()", _text + 0x5335C0
	.equiv "ui::UILoader::setupTexture_()", _text + 0x533828
	.equiv "ui::UILoader::loadTexture()", _text + 0x533B44
	.equiv "ui::UILoader::create_()", _text + 0x533D14
	.equiv "FUN_0E6B3E04:sead::TreeMapNode_*sead::TreeMapImpl::find()", _text + 0x533E04
	.equiv "FUN_0E6B3F00:sead::TreeMapNode_*sead::TreeMapImpl::insert()", _text + 0x533F00
	.equiv "ui::UICapTexture::UICapTexture()", _text + 0x5341AC
	.equiv "ui::UICapTexture::getTexScale()", _text + 0x534258
	.equiv "ui::UICapTexture::setAutoCapture()", _text + 0x534394
	.equiv "ui::UICapTexture::preDraw()", _text + 0x534458
	.equiv "ui::UICapTexture::postDraw()", _text + 0x534CD8
	.equiv "ui::UILayout::BuildPaneObj()", _text + 0x534D04
	.equiv "ui::UILayout::BuildPartsLayout()", _text + 0x534E4C
	.equiv "ui::UIPicture::setCapTexture()", _text + 0x534F10
	.equiv "ui::UIWindow::setCapTexture()", _text + 0x535138
	.equiv "ui::UIWindow::DrawSelf()", _text + 0x53514C
	.equiv "FUN_0E6B5470:nw::lyt::Layout::BuildImpl()", _text + 0x535470
	.equiv "ui::UIScreen::apply_()", _text + 0x535668
	.equiv "ui::UIDummy::UIDummy()", _text + 0x535830
	.equiv "ui::UIControl::UIControl()", _text + 0x535A44
	.equiv "FUN_0E6B5B9C:ui::UIControl::create_()", _text + 0x535B9C
	.equiv "ui::UIControl::load()", _text + 0x535BB0
	.equiv "ui::UIControl::create()", _text + 0x535CF0
	.equiv "ui::UIControl::init()", _text + 0x535E40
	.equiv "ui::UIControl::toIn()", _text + 0x535E50
	.equiv "ui::UIControl::resetInput()", _text + 0x535E60
	.equiv "ui::UIControl::calcInput()", _text + 0x535EF0
	.equiv "ui::UIControl::calc()", _text + 0x535F80
	.equiv "ui::UIControl::calcAfter()", _text + 0x535F9C
	.equiv "ui::UIControl::createAnimator()", _text + 0x5360B8
	.equiv "ui::UIControl::pushInput()", _text + 0x536114
	.equiv "ui::UIControl::runHandler()", _text + 0x5361B0
	.equiv "ui::UIControl::isSelect()", _text + 0x536218
	.equiv "FUN_0E6B6428:ui::UIControl::setMessage()", _text + 0x536428
	.equiv "FUN_0E6B6464:ui::UIControl::setMessage()", _text + 0x536464
	.equiv "FUN_0E6B64C4:ui::UIControl::setMessage()", _text + 0x5364C4
	.equiv "FUN_0E6B6504:ui::UIControl::setMessage()", _text + 0x536504
	.equiv "ui::UIControlSlider::UIControlSlider()", _text + 0x5366BC
	.equiv "ui::UIControlSlider::startIn()", _text + 0x536764
	.equiv "ui::UIControlSlider::startOut()", _text + 0x536B1C
	.equiv "ui::UIControlSlider::calc()", _text + 0x536D20
	.equiv "ui::UIControlSlider::push()", _text + 0x5370A4
	.equiv "ui::UIControlSlider::SlideItem::SlideItem()", _text + 0x537110
	.equiv "bool_sead::MathCalcCommon::chase()", _text + 0x5371AC
	.equiv "ui::UIPlayerCursor::init()", _text + 0x537208
	.equiv "ui::UICursor::clear()", _text + 0x5372FC
	.equiv "ui::UICursor::set()", _text + 0x5374B8
	.equiv "ui::UICursor::isMove()", _text + 0x5374F4
	.equiv "ui::UICursor::calcInput()", _text + 0x537544
	.equiv "ui::UICursor::calcAfter_()", _text + 0x5375F0
	.equiv "ui::UICursor::calcAfter()", _text + 0x537AC8
	.equiv "ui::UICursorSelector::loadCursor()", _text + 0x537B30
	.equiv "ui::UICursor::load()", _text + 0x537B68
	.equiv "ui::UICursor::reset()", _text + 0x537BB4
	.equiv "ui::UICursor::save()", _text + 0x537C6C
	.equiv "ui::UICursor::canSelect_()", _text + 0x537C84
	.equiv "ui::UICursor::next_()", _text + 0x537CE0
	.equiv "ui::UICursor::runHandler()", _text + 0x537ECC
	.equiv "ui::UICursor::selectOn()", _text + 0x537F38
	.equiv "ui::UICursor::in()", _text + 0x538318
	.equiv "ui::UICursor::selectOff()", _text + 0x53850C
	.equiv "ui::UICursor::animKeepIn()", _text + 0x538814
	.equiv "ui::UICursorLink::UICursorLink()", _text + 0x5388B8
	.equiv "ui::UICursorLink::nextMatrix_()", _text + 0x538968
	.equiv "ui::UICursorSelector::UICursorSelector()", _text + 0x538BF8
	.equiv "bool_sead::Vector3CalcCommon::chase()", _text + 0x538DFC
	.equiv "ui::UIEngine::initialize_()", _text + 0x539084
	.equiv "ui::UIEngine::getSceneFlow()", _text + 0x53937C
	.equiv "ui::UIEngine::calc()", _text + 0x539414
	.equiv "ui::UIEngine::setupPlayer_()", _text + 0x5395C8
	.equiv "ui::UIEngine::copySceneFlow()", _text + 0x5396AC
	.equiv "ui::UIFlow::UIFlow()", _text + 0x539828
	.equiv "ui::UIFlow::prevComplete()", _text + 0x5398F0
	.equiv "ui::UIFlow::waitComplete()", _text + 0x539900
	.equiv "ui::UIFlow::prevOut()", _text + 0x539910
	.equiv "ui::UIFlow::waitOut()", _text + 0x539A80
	.equiv "ui::UIFlow::nextIn()", _text + 0x539AF0
	.equiv "ui::UIFlow::waitIn()", _text + 0x539C00
	.equiv "ui::UIFlow::nextRun()", _text + 0x539C10
	.equiv "ui::UIFlow::setFader()", _text + 0x539C84
	.equiv "ui::UIFlow::getPrevPage()", _text + 0x539CD4
	.equiv "ui::UIFlow::getNextPage()", _text + 0x539D04
	.equiv "ui::UISceneFlow::UISceneFlow()", _text + 0x539D34
	.equiv "ui::UISceneFlow::waitExit()", _text + 0x539F0C
	.equiv "ui::UISceneFlow::create()", _text + 0x53A0D0
	.equiv "ui::Flow_Open::Flow_Open()", _text + 0x53A750
	.equiv "ui::UIHeap::createPreImpl_()", _text + 0x53B538
	.equiv "ui::UIHeap::createPre()", _text + 0x53B608
	.equiv "ui::UIHeap::init()", _text + 0x53B638
	.equiv "ui::UIHeap::create()", _text + 0x53B6DC
	.equiv "ui::UIHeap::createLoader_()", _text + 0x53B860
	.equiv "ui::UIHeap::createPage_()", _text + 0x53B8B0
	.equiv "FUN_0E6BB9C4:FID_conflict:ui::UIScreenManager::UIScreenManager()", _text + 0x53B9C4
	.equiv "FUN_0E6BBB0C:ui::UIEvent::UIEvent()", _text + 0x53BB0C
	.equiv "FUN_0E6BBB6C:ui::UIEvent::UIEvent()", _text + 0x53BB6C
	.equiv "ui::UIInput::UIInput()", _text + 0x53BC3C
	.equiv "ui::UIInput::runHandler()", _text + 0x53BD70
	.equiv "ui::Input_Key::Input_Key()", _text + 0x53BF3C
	.equiv "ui::Input_Key::calc_()", _text + 0x53BF98
	.equiv "ui::Input_Touch::reset()", _text + 0x53C0C8
	.equiv "ui::Input_Touch::Input_Touch()", _text + 0x53C0D8
	.equiv "ui::Input_Touch::isCursorNode_()", _text + 0x53C160
	.equiv "ui::Input_Touch::isSelect_()", _text + 0x53C184
	.equiv "ui::Input_Touch::calcImpl_()", _text + 0x53C19C
	.equiv "ui::Input_Touch::release()", _text + 0x53C6C8
	.equiv "ui::Input_Timer::resetTimer()", _text + 0x53C700
	.equiv "ui::Input_Timer::Input_Timer()", _text + 0x53C714
	.equiv "ui::UILoadArg::UILoadArg()", _text + 0x53C924
	.equiv "ui::UILoader::UILoader()", _text + 0x53C9C0
	.equiv "ui::UILoader::attach()", _text + 0x53CB14
	.equiv "ui::UILoader::onCreate()", _text + 0x53CB40
	.equiv "ui::UILoader::getHeap_()", _text + 0x53CC78
	.equiv "ui::UILoader::getResource()", _text + 0x53CCDC
	.equiv "ui::UILoader::findTexture_()", _text + 0x53D0A8
	.equiv "ui::UILoader::getTexture()", _text + 0x53D0F8
	.equiv "ui::UILoader::findMessage_()", _text + 0x53D194
	.equiv "ui::UILoader::getMessage()", _text + 0x53D30C
	.equiv "ui::UIMessage::calcTagLength()", _text + 0x53D434
	.equiv "ui::UIMessage::set()", _text + 0x53D5EC
	.equiv "ui::UIMessage::replaceTag()", _text + 0x53D640
	.equiv "ui::UIMessage::print()", _text + 0x53D750
	.equiv "FUN_0E6BD7A0:FID_conflict:ui::UIMessage::printNum2()", _text + 0x53D7A0
	.equiv "FUN_0E6BD828:FID_conflict:ui::UIMessage::printNum2()", _text + 0x53D828
	.equiv "ui::UIMessage::setNum()", _text + 0x53D8B0
	.equiv "ui::UIMessage::calcMessageLength()", _text + 0x53D8C0
	.equiv "ui::UIMessage::copyMessage()", _text + 0x53D954
	.equiv "ui::UIMessage::removeTag()", _text + 0x53D9E0
	.equiv "ui::UIPage::StateInfo::StateInfo()", _text + 0x53DAF0
	.equiv "ui::UIPage::initState_()", _text + 0x53DDE4
	.equiv "ui::UIPage::create()", _text + 0x53DE00
	.equiv "ui::UIPage::toReady()", _text + 0x53E148
	.equiv "ui::UIPage::init()", _text + 0x53E16C
	.equiv "ui::UIPage::resetInput()", _text + 0x53E214
	.equiv "ui::UIPage::calcInput()", _text + 0x53E2EC
	.equiv "ui::UIPage::calc()", _text + 0x53E4C4
	.equiv "ui::UIPage::calcAfter()", _text + 0x53E6B0
	.equiv "ui::UIPage::onDraw()", _text + 0x53E7E8
	.equiv "ui::UIPage::loadControl_()", _text + 0x53E8C8
	.equiv "ui::UIPage::createControl_()", _text + 0x53E970
	.equiv "ui::UIPage::createAnimator()", _text + 0x53EA24
	.equiv "ui::UIPage::toRun()", _text + 0x53EA84
	.equiv "ui::UIPage::toOut()", _text + 0x53EB34
	.equiv "ui::UIPage::toPage()", _text + 0x53ECC4
	.equiv "ui::UIPage::toPrepare()", _text + 0x53EDAC
	.equiv "ui::UIPage::hasCursor()", _text + 0x53EDC0
	.equiv "ui::UIPage::toIn()", _text + 0x53EDD8
	.equiv "ui::UIPage::toComplete()", _text + 0x53EFC4
	.equiv "ui::UIPage::toDetach()", _text + 0x53F064
	.equiv "ui::UIPage::toStateSub()", _text + 0x53F07C
	.equiv "ui::UIPage::pageIn()", _text + 0x53F0A4
	.equiv "ui::UIPage::pageDetach()", _text + 0x53F124
	.equiv "ui::UIPage::pushInput()", _text + 0x53F460
	.equiv "ui::UIPage::isInputImpl()", _text + 0x53F490
	.equiv "ui::UIPage::isInput()", _text + 0x53F4D4
	.equiv "ui::UIPage::decideButton()", _text + 0x53F540
	.equiv "ui::UIPage::cancelButton()", _text + 0x53F718
	.equiv "ui::UIPage::dialogSeq()", _text + 0x53F8C0
	.equiv "ui::UIPage::startDialogSeq()", _text + 0x53F95C
	.equiv "ui::UIPage::changeDialogSeq()", _text + 0x53FA20
	.equiv "ui::UIPage::dialogSeqEnd()", _text + 0x53FAB8
	.equiv "ui::UIPage::closeDialogSeq()", _text + 0x53FADC
	.equiv "ui::UIPageManager::UIPageManager()", _text + 0x53FDC4
	.equiv "ui::UIPageManager::set()", _text + 0x53FF74
	.equiv "ui::UIPageManager::attach()", _text + 0x53FF98
	.equiv "ui::UIPageManager::detach()", _text + 0x5400C0
	.equiv "ui::UIPageManager::detachAll()", _text + 0x54014C
	.equiv "ui::UIPageManager::isAttach()", _text + 0x54020C
	.equiv "ui::UIPageManager::calcInput()", _text + 0x5402C4
	.equiv "ui::UIPageManager::calcUpdate()", _text + 0x54036C
	.equiv "ui::UIPageManager::setFocusOff()", _text + 0x540464
	.equiv "ui::UIPageManager::calcFocus()", _text + 0x5404F8
	.equiv "ui::UIPageManager::calc()", _text + 0x5406C0
	.equiv "ui::UIPageManager::calcAfter()", _text + 0x54073C
	.equiv "ui::UIPageManager::draw()", _text + 0x5407EC
	.equiv "ui::UIPageManager::isRunAll()", _text + 0x54086C
	.equiv "ui::UIPlayer::resetController()", _text + 0x540960
	.equiv "ui::UIPlayer::UIPlayer()", _text + 0x540A30
	.equiv "ui::UIPlayer::setHitPosTV()", _text + 0x540C98
	.equiv "ui::UIPlayer::interporate_()", _text + 0x540CE4
	.equiv "ui::UIPlayer::convert_()", _text + 0x540DF4
	.equiv "ui::UIPlayer::convertHit_()", _text + 0x540FD0
	.equiv "ui::UIPlayerManager::UIPlayerManager()", _text + 0x54108C
	.equiv "ui::UIPlayerManager::calc()", _text + 0x5410FC
	.equiv "ui::UIScreen::setViewport()", _text + 0x54161C
	.equiv "ui::UIScreen::setProjection()", _text + 0x541708
	.equiv "FUN_0E6C1CB8:FID_conflict:ui::UIScreenManager::UIScreenManager()", _text + 0x541CB8
	.equiv "ui::UIThread::UIThread()", _text + 0x541E00
	.equiv "ui::UIThread::req()", _text + 0x541F00
	.equiv "ui::GetCursor()", _text + 0x542168
	.equiv "ui::GetDialog()", _text + 0x54221C
	.equiv "FUN_0E6C2498:ui::CourseInfo::CourseInfo()", _text + 0x542498
	.equiv "FUN_0E6C24E4:ui::CourseInfo::CourseInfo()", _text + 0x5424E4
	.equiv "ui::CupInfo::CupInfo()", _text + 0x5425A0
	.equiv "ui::UICourseList::setRace_()", _text + 0x542760
	.equiv "ui::UICourseList::setBattle_()", _text + 0x542860
	.equiv "ui::UICourseList::findBegin_()", _text + 0x543194
	.equiv "ui::UICourseList::isIgnore_()", _text + 0x543210
	.equiv "ui::UICourseList::copyCourseArray_()", _text + 0x5433B8
	.equiv "FID_conflict:ui::UICourseList::getSerialCourse()", _text + 0x5434E4
	.equiv "ui::UICourseList::getAllCourseBattle_()", _text + 0x543588
	.equiv "ui::UICourseList::getSerialCourseBattle()", _text + 0x543628
	.equiv "FID_conflict:ui::UICourseList::getRandomCourse()", _text + 0x543C34
	.equiv "ui::UICourseList::getRandomCourseBattle()", _text + 0x543CDC
	.equiv "FUN_0E6C4624:FID_conflict:`global_constructor_keyed_to'_23_SystemPlayerManager_cpp_8225c8dd", _text + 0x544624
	.equiv "ui::CursorLink_CourseMatrix::CursorLink_CourseMatrix()", _text + 0x544E9C
	.equiv "ui::CursorLink_CourseMatrix::next()", _text + 0x544F10
	.equiv "ui::UIDataRace::init()", _text + 0x545270
	.equiv "ui::UIDataReplay::init()", _text + 0x545878
	.equiv "ui::UIDataReplay::set()", _text + 0x545898
	.equiv "ui::UIStoreArray::init()", _text + 0x5458A8
	.equiv "ui::Flow_Reset::Flow_Reset()", _text + 0x545DCC
	.equiv "ui::Flow_Reset::WaitResetNetwork()", _text + 0x545E3C
	.equiv "ui::Flow_Reset::NextIn()", _text + 0x545FC4
	.equiv "ui::Flow_Scene::Flow_Scene()", _text + 0x546260
	.equiv "ui::Flow_Scene::onWaitOut()", _text + 0x546744
	.equiv "ui::Flow_Scene::onPrevExit()", _text + 0x54690C
	.equiv "ui::Flow_Scene::onWaitExit()", _text + 0x546AC4
	.equiv "ui::UIFramework::prepare()", _text + 0x548000
	.equiv "ui::UIFramework::calc()", _text + 0x5481AC
	.equiv "ui::UIFramework::changeScreen()", _text + 0x548434
	.equiv "ui::UIFramework::initMovie()", _text + 0x549864
	.equiv "ui::UIFramework::prepareMovie()", _text + 0x549A8C
	.equiv "ui::UIFramework::destroyMovie()", _text + 0x549D20
	.equiv "ui::UIEngineEx::resumeMovieDecode()", _text + 0x549E00
	.equiv "FUN_0E6D2280:FID_conflict:gsys::ModelRenderUnitFx::ModelRenderUnitFx()", _text + 0x552280
	.equiv "FUN_0E6D22DC:FID_conflict:gsys::ModelRenderUnitFx::ModelRenderUnitFx()", _text + 0x5522DC
	.equiv "FUN_0E6D2338:FID_conflict:gsys::ModelRenderUnitFx::ModelRenderUnitFx()", _text + 0x552338
	.equiv "ui::UITexLoader::UITexLoader()", _text + 0x5540AC
	.equiv "ui::UITexLoader::create()", _text + 0x5541D4
	.equiv "ui::UITexLoader::loadReq()", _text + 0x554414
	.equiv "ui::UITexLoader::loadSync()", _text + 0x554450
	.equiv "ui::UITexLoader::loadAsync()", _text + 0x554688
	.equiv "ui::UITexLoader::freeAll()", _text + 0x554750
	.equiv "ui::UIPartsTex::getIdxChara_()", _text + 0x556048
	.equiv "FUN_0E6D6B04:ui::UIPartsTex::loadReq()", _text + 0x556B04
	.equiv "FUN_0E6D6B50:ui::UIPartsTex::loadReq()", _text + 0x556B50
	.equiv "ui::UIPartsTex::appendPartsName_()", _text + 0x556C40
	.equiv "ui::UIPartsTex::getArcPath_()", _text + 0x55702C
	.equiv "ui::UIPartsTex::getTex()", _text + 0x5573D0
	.equiv "ui::UICharaTex::getArcPath_()", _text + 0x55A35C
	.equiv "ui::UICharaTex::getTex()", _text + 0x55AC30
	.equiv "ui::UICharaTex::appendCharaName_()", _text + 0x55AD1C
	.equiv "ui::UICharaTex::getPath_()", _text + 0x55B408
	.equiv "ui::UICourseTex::getTex()", _text + 0x55C534
	.equiv "ui::UICourseTex::getPath_()", _text + 0x55CA4C
	.equiv "ui::UICompeTex::getTexPath_()", _text + 0x55D1DC
	.equiv "ui::UICompeTex::getTex()", _text + 0x55D56C
	.equiv "ui::UICompeTex::getTgaPath_()", _text + 0x55D708
	.equiv "ui::UICompeTex::loadSync_()", _text + 0x55DA98
	.equiv "ui::UICountryTex::getTex()", _text + 0x55DB60
	.equiv "ui::UIMiiThread::UIMiiThread()", _text + 0x55DF88
	.equiv "ui::UIMiiTex::UIMiiTex()", _text + 0x55E000
	.equiv "ui::UIMiiTex::clear()", _text + 0x55E2E8
	.equiv "ui::UIMiiTex::createMenu()", _text + 0x55E3C4
	.equiv "ui::UIMiiTex::loadChara()", _text + 0x55E50C
	.equiv "ui::UIMiiTex::getIdx_()", _text + 0x55E528
	.equiv "ui::UIMiiTex::loadAsync_()", _text + 0x55E588
	.equiv "ui::UIMiiTex::loadTheater()", _text + 0x55E704
	.equiv "ui::UIMiiTex::getTexImpl_()", _text + 0x55E79C
	.equiv "ui::UIMiiTex::isLoad()", _text + 0x55E8B8
	.equiv "ui::UIMiiTex::loadAsyncWait_()", _text + 0x55E8E0
	.equiv "ui::UIMiiTex::getTex()", _text + 0x55ED3C
	.equiv "FUN_0E6DEDE0:ui::UIMiiTexEx::clear()", _text + 0x55EDE0
	.equiv "ui::UIMiiTexEx::UIMiiTexEx()", _text + 0x55EE8C
	.equiv "FUN_0E6DF168:ui::UIMiiTexEx::clear()", _text + 0x55F168
	.equiv "ui::UIMiiTexEx::getMiiIndex_()", _text + 0x55F990
	.equiv "ui::UIMiiTexEx::calc()", _text + 0x55F9B8
	.equiv "ui::UIMiiTexEx::loadAsyncWait_()", _text + 0x55FF9C
	.equiv "ui::UIMiiTexEx::calcRequest_()", _text + 0x56028C
	.equiv "ui::UIMessageEx::UIMessageEx()", _text + 0x560D7C
	.equiv "ui::UIMoviePlayer::createPlayer_()", _text + 0x5616F8
	.equiv "ui::UIMoviePlayer::initMovieBuffer()", _text + 0x561758
	.equiv "ui::UIMoviePlayer::setRenderTarget()", _text + 0x561AB0
	.equiv "ui::UIMoviePlayer::initWorkBuffer()", _text + 0x561AD0
	.equiv "ui::UIMoviePlayer::destroyPlayer_()", _text + 0x561E5C
	.equiv "ui::UIMoviePlayer::destroy()", _text + 0x561EA4
	.equiv "ui::UIMoviePlayer::setMovie()", _text + 0x562024
	.equiv "ui::UIMoviePlayer::prepare()", _text + 0x562068
	.equiv "ui::UIMoviePlayer::acquireForeground()", _text + 0x562428
	.equiv "ui::UIMoviePlayerAsync::requestSync_()", _text + 0x562724
	.equiv "ui::UIMoviePlayerAsync::createPlayer_()", _text + 0x562784
	.equiv "ui::UIMoviePlayerAsync::initMovieBuffer()", _text + 0x562798
	.equiv "ui::UIMoviePlayerAsync::setRenderTarget()", _text + 0x562AF0
	.equiv "ui::UIMoviePlayerAsync::initWorkBuffer()", _text + 0x562B10
	.equiv "ui::UIMoviePlayerAsync::setMovie()", _text + 0x562DEC
	.equiv "ui::UIMoviePlayerAsync::prepare()", _text + 0x562E0C
	.equiv "ui::UIMoviePlayerAsync::play()", _text + 0x562E40
	.equiv "ui::UIMoviePlayerAsync::isPlay()", _text + 0x562EB4
	.equiv "ui::UIMoviePlayerAsync::acquireForeground()", _text + 0x56308C
	.equiv "ui::UIMoviePlayerAsync::releaseForegroundImpl_()", _text + 0x563314
	.equiv "ui::UIPlayerEx::getPlayer()", _text + 0x5636C8
	.equiv "ui::UIPlayerEx::getUIController()", _text + 0x563740
	.equiv "ui::UIPlayerEx::getControllerPort()", _text + 0x5637D0
	.equiv "ui::UIPlayerEx::getPrevControllerType()", _text + 0x563814
	.equiv "ui::UIPlayerEx::getControllerType()", _text + 0x5638B4
	.equiv "ui::UIPlayerEx::isConnect()", _text + 0x563A6C
	.equiv "ui::UIPlayerEx::disconnect()", _text + 0x563ADC
	.equiv "FID_conflict:ui::UIPlayerEx::startFindController()", _text + 0x563B5C
	.equiv "ui::UIPlayerEx::startFindHandle()", _text + 0x563BD4
	.equiv "ui::UIPlayerEx::stopFindController()", _text + 0x563C40
	.equiv "ui::UIPlayerEx::calc()", _text + 0x563CB8
	.equiv "ui::UIEngineEx::onSetupPlayer()", _text + 0x564858
	.equiv "ui::UIScalableFont::UIScalableFont()", _text + 0x564AD0
	.equiv "ui::UIScalableFont::registerText()", _text + 0x564E40
	.equiv "ui::UIScalableFont::registerTextDirect()", _text + 0x565168
	.equiv "ui::UIScalableFont::calc()", _text + 0x56533C
	.equiv "ui::EncodeToJpegRaw()", _text + 0x56566C
	.equiv "ui::GX2InitSurface()", _text + 0x56579C
	.equiv "ui::EncodeToJpeg()", _text + 0x5657D0
	.equiv "ui::DecodeJpeg()", _text + 0x5659EC
	.equiv "ui::GetLangStr()", _text + 0x565CA0
	.equiv "ui::LockHome()", _text + 0x565D30
	.equiv "ui::GetCupName()", _text + 0x565E94
	.equiv "ui::GetPlayerType()", _text + 0x566154
	.equiv "ui::GetDriver()", _text + 0x566218
	.equiv "FUN_0E6E6394:ui::SetPlayerType()", _text + 0x566394
	.equiv "ui::SetDriver()", _text + 0x5664C8
	.equiv "ui::SetBody()", _text + 0x566B78
	.equiv "ui::SetTire()", _text + 0x566CB8
	.equiv "ui::SetWing()", _text + 0x566DF8
	.equiv "ui::GetPlayerColor()", _text + 0x566F38
	.equiv "ui::GetPlayerColorWithCPU()", _text + 0x56706C
	.equiv "ui::UseItem()", _text + 0x5671F0
	.equiv "ui::SettleItem()", _text + 0x567360
	.equiv "ui::DisableRank()", _text + 0x5674F0
	.equiv "ui::BeginFade()", _text + 0x5675A8
	.equiv "ui::EndFade()", _text + 0x567748
	.equiv "ui::FindWindowIndexByKartIndex()", _text + 0x567908
	.equiv "ui::GetAlarmState()", _text + 0x5679DC
	.equiv "ui::ShowTelop()", _text + 0x567CE8
	.equiv "FID_conflict:ui::GetBg()", _text + 0x567DB4
	.equiv "ui::GetMenuUnder()", _text + 0x567E68
	.equiv "ui::GetOKButton()", _text + 0x567F08
	.equiv "ui::GetBackButton()", _text + 0x567F34
	.equiv "ui::GetMatching()", _text + 0x567F60
	.equiv "ui::GetMiiPage()", _text + 0x568000
	.equiv "ui::GetMiiComment()", _text + 0x5680A0
	.equiv "FUN_0E6E8648:ui::SpeechTheaterMii()", _text + 0x568648
	.equiv "FUN_0E6E8740:ui::SpeechTheaterMii()", _text + 0x568740
	.equiv "FUN_0E6E87E0:ui::SpeechTheaterMii()", _text + 0x5687E0
	.equiv "ui::SpeechLobbyMii()", _text + 0x568980
	.equiv "ui::SpeechLobbyMiiRule()", _text + 0x5689E4
	.equiv "ui::SpeechLobbyMiiFriend()", _text + 0x568A48
	.equiv "ui::SetPosLobbyMii()", _text + 0x568AA0
	.equiv "ui::ShowMiiName()", _text + 0x568AEC
	.equiv "ui::SetPosMiiName()", _text + 0x568B48
	.equiv "ui::SafeSetCursorVisible()", _text + 0x568B94
	.equiv "ui::IsValidCountry()", _text + 0x568BE8
	.equiv "ui::IsValidArea()", _text + 0x568CCC
	.equiv "ui::GetUnicodeFromRaceButton()", _text + 0x568D9C
	.equiv "ui::RegisterScalableFontText()", _text + 0x568F1C
	.equiv "ui::RegisterBitmapFontText()", _text + 0x5690AC
	.equiv "ui::RegisterScalableFontTextDirect()", _text + 0x5690BC
	.equiv "ui::GetScalableFont()", _text + 0x569170
	.equiv "FUN_0E6E9268:ui::ConvertTex()", _text + 0x569268
	.equiv "FUN_0E6E9314:ui::ConvertTex()", _text + 0x569314
	.equiv "ui::GetDummyTex()", _text + 0x569440
	.equiv "ui::GetDummyHiddenTex()", _text + 0x5694A4
	.equiv "ui::IsLogin()", _text + 0x569508
	.equiv "ui::IsLoginProcess()", _text + 0x56952C
	.equiv "ui::IsOlive()", _text + 0x569560
	.equiv "ui::IsOliveProcess()", _text + 0x569584
	.equiv "ui::GetCompe()", _text + 0x569D7C
	.equiv "ui::IsHandleOnly()", _text + 0x569E20
	.equiv "ui::isOlivePostDataFinished()", _text + 0x56AE44
	.equiv "ui::isOliveReplyFinished()", _text + 0x56AEAC
	.equiv "ui::DisconnectNetworkCommon()", _text + 0x56AEDC
	.equiv "ui::DisconnectNetwork()", _text + 0x56B0A4
	.equiv "ui::FinalizeNetwork()", _text + 0x56B0CC
	.equiv "ui::GetSaveFlag()", _text + 0x56BA58
	.equiv "FUN_0E6EBC8C:sys::SystemEngine::getEngine()", _text + 0x56BC8C
	.equiv "object::Menu3DModelDirector::Menu3DModelDirector()", _text + 0x56C13C
	.equiv "object::Menu3DModelDirector::readyCameraRotate()", _text + 0x56C33C
	.equiv "object::Menu3DModelDirector::changeCamera()", _text + 0x56C538
	.equiv "object::Menu3DModelDirector::executeBeginWiFi()", _text + 0x56C958
	.equiv "object::Menu3DModelDirector::executeEndWiFi()", _text + 0x56CA28
	.equiv "object::Menu3DModelDirector::executeBeginEarthZoom()", _text + 0x56CABC
	.equiv "object::Menu3DModelDirector::executeBeginEarthZoomInstant()", _text + 0x56CB04
	.equiv "object::Menu3DModelDirector::executeEndEarthZoom()", _text + 0x56CB54
	.equiv "object::Menu3DModelDirector::executeBeginMenu()", _text + 0x56CBD8
	.equiv "object::Menu3DModelDirector::procZoomEarthBegin()", _text + 0x56CC18
	.equiv "object::Menu3DModelDirector::updateCamera()", _text + 0x56CEA0
	.equiv "object::Menu3DModelDirector::calc()", _text + 0x56D890
	.equiv "object::Menu3DModelDirector::setRotateTurnTable()", _text + 0x56DACC
	.equiv "object::Menu3DModelDirector::informBeginWiFi()", _text + 0x56DB74
	.equiv "object::Menu3DModelDirector::informBeginMenu()", _text + 0x56DE68
	.equiv "object::Menu3DModelDirector::informEndMenu()", _text + 0x56DED4
	.equiv "object::Menu3DModelDirector::isEarthSpotDecided()", _text + 0x56DEF4
	.equiv "object::Menu3DModelDirector::isEarthMiiInstantAppearAcceptable()", _text + 0x56DEFC
	.equiv "object::Menu3DModelDirector::getEarthRadius()", _text + 0x56DF24
	.equiv "`global_constructor_keyed_to'_23_Menu3DModelDirector_cpp_8225c8dd", _text + 0x56DF40
	.equiv "void_sead::Matrix33CalcCommon::setBase()", _text + 0x56E588
	.equiv "void_sead::Matrix33CalcCommon::setDirections()", _text + 0x56E5AC
	.equiv "object::Menu3DModelMiiMgr::setupArrangeSlotByRow_wifi()", _text + 0x56E6E8
	.equiv "object::Menu3DModelMiiMgr::destroyAllMii()", _text + 0x56EF18
	.equiv "object::Menu3DModelMiiMgr::isAllMiiDestroyed()", _text + 0x56EF94
	.equiv "object::Menu3DModelMiscBase::Menu3DModelMiscBase()", _text + 0x56F578
	.equiv "object::Menu3DModelMiscBase::prepare()", _text + 0x56F794
	.equiv "FUN_0E6EF7CC:object::Menu3DModelMiscBase::calc()", _text + 0x56F7CC
	.equiv "object::Menu3DModelEarth::setFocusSpot()", _text + 0x56FAE8
	.equiv "object::Menu3DModelEarth::lerpColorCorrectionCrnt()", _text + 0x5708B8
	.equiv "object::Menu3DModelEarth::applyColorCorrectionCrnt()", _text + 0x570A88
	.equiv "object::Menu3DModelMiscMgr::setIntensity_SunLight()", _text + 0x570C24
	.equiv "object::Menu3DModelEarth::lerpApplyAtmosphere()", _text + 0x570C2C
	.equiv "object::Menu3DModelEarth::calcRotation()", _text + 0x570D04
	.equiv "object::Menu3DModelEarth::calc()", _text + 0x571784
	.equiv "object::Menu3DModelEarth::forceApplyColorCorrectionBase()", _text + 0x571A48
	.equiv "object::Menu3DModelEarth::forceApplyAtmosphereFar()", _text + 0x571A84
	.equiv "object::Menu3DModelEarth::startRotation()", _text + 0x571AD4
	.equiv "object::Menu3DModelEarth::simCalcRotationLerp()", _text + 0x571B28
	.equiv "object::Menu3DModelMiscMgr::changeSunLightDir_forZoom()", _text + 0x571D8C
	.equiv "object::Menu3DModelEarth::stopRotation()", _text + 0x571D94
	.equiv "object::Menu3DModelEarth::forceApplyColorCorrectionDest()", _text + 0x572608
	.equiv "object::Menu3DModelEarth::forceApplyAtmosphereNear()", _text + 0x572644
	.equiv "FUN_0E6F2C64:object::Menu3DModelMiscBase::calc()", _text + 0x572C64
	.equiv "object::Menu3DModelMiscMgr::setEarthMatParam_LightDir()", _text + 0x572D08
	.equiv "object::Menu3DModelSun::calc()", _text + 0x572D10
	.equiv "object::Menu3DModelMiscMgr::emitEarthFlare()", _text + 0x5734BC
	.equiv "object::Menu3DModelTurnTable::calc()", _text + 0x57385C
	.equiv "object::Menu3DModelTurnTable::emitUnlockEffect()", _text + 0x5741F8
	.equiv "object::Menu3DModelMiscMgr::getFrmLaunchOffset_forSpaceToads()", _text + 0x5744FC
	.equiv "object::Menu3DModelSpaceToad::reset()", _text + 0x574524
	.equiv "object::Menu3DModelSpaceToad::enter()", _text + 0x5745A4
	.equiv "object::Menu3DModelMiscMgr::getIdxTexture_forSpaceToads()", _text + 0x574780
	.equiv "object::Menu3DModelMiscMgr::getIdxSklAnm_forSpaceToads()", _text + 0x574834
	.equiv "object::Menu3DModelMiscMgr::getIdxTerm_forSpaceToads()", _text + 0x5748F8
	.equiv "object::Menu3DModelSpaceToad::updateAnimation()", _text + 0x574AAC
	.equiv "object::Menu3DModelSpaceToad::calc()", _text + 0x574B8C
	.equiv "object::Menu3DModelSpaceToad::prepareAnimation()", _text + 0x5763B8
	.equiv "object::Menu3DModelMiscMgr::setupArea_forSpaceToads()", _text + 0x576ABC
	.equiv "object::Menu3DModelMiscMgr::calcSpaceToads()", _text + 0x576E3C
	.equiv "object::Menu3DModelMiscMgr::calc()", _text + 0x576F7C
	.equiv "object::Menu3DModelMiscMgr::destroy_NotResidents()", _text + 0x577018
	.equiv "object::Menu3DModelMiscMgr::startDisplayMode()", _text + 0x57703C
	.equiv "object::Menu3DModelMiscMgr::reset_spaceToads()", _text + 0x577174
	.equiv "FUN_0E6F7B7C:FID_conflict:nw::ut::MessageQueue::MessageQueue()", _text + 0x577B7C
	.equiv "void_sead::Matrix33CalcCommon::setCol()", _text + 0x5784D0
	.equiv "ui::Control_Button::Control_Button()", _text + 0x578630
	.equiv "ui::Control_Button::createAnim_()", _text + 0x578700
	.equiv "ui::Control_Button::createInput_()", _text + 0x578848
	.equiv "ui::Control_Button::createSLink_()", _text + 0x5788C4
	.equiv "ui::Control_Button::onCreate()", _text + 0x5789C8
	.equiv "ui::Control_Button::getSLinkSeName()", _text + 0x578C14
	.equiv "ui::Control_LoopButton::Control_LoopButton()", _text + 0x5796C4
	.equiv "ui::Control_BindButton::Control_BindButton()", _text + 0x579B78
	.equiv "ui::Control_BindButton::setID()", _text + 0x579C54
	.equiv "ui::Control_BindButton::setPage()", _text + 0x579C70
	.equiv "FUN_0E6F9CA8:ui::Control_BindButton::setEnable()", _text + 0x579CA8
	.equiv "ui::Control_BindButton::onCreate()", _text + 0x579D94
	.equiv "ui::Control_BindButton::getSLinkSeName()", _text + 0x57A370
	.equiv "FUN_0E6FAF4C:ui::Control_BindButton::setEnable()", _text + 0x57AF4C
	.equiv "ui::Control_CharaButton::Control_CharaButton()", _text + 0x57BD58
	.equiv "ui::Control_CharaButton::setColor_()", _text + 0x57C5B4
	.equiv "ui::Control_CourseButton::Control_CourseButton()", _text + 0x57D8C4
	.equiv "ui::Control_CourseButton::setCourse()", _text + 0x57DC88
	.equiv "ui::Control_CourseButton::onCreate()", _text + 0x57DF1C
	.equiv "ui::Control_PartsCursor::Control_PartsCursor()", _text + 0x57E608
	.equiv "ui::Control_CharaButton::animKeepOn()", _text + 0x57E950
	.equiv "ui::Control_LRButton::Control_LRButton()", _text + 0x57E9A4
	.equiv "ui::Control_LRButton::onCreate()", _text + 0x57EAD4
	.equiv "ui::Control_LRButton::animIn()", _text + 0x57F058
	.equiv "ui::Control_LRButton::animKeepIn()", _text + 0x57F08C
	.equiv "ui::Control_LRButton::animTouchOff()", _text + 0x57F0B8
	.equiv "ui::Control_LRButton::animOut()", _text + 0x57F11C
	.equiv "ui::Control_LRButton::animKeepOut()", _text + 0x57F1EC
	.equiv "ui::Control_MiiLRButton::hold_()", _text + 0x57F578
	.equiv "ui::Control_MiiLRButton::input_()", _text + 0x57F5E8
	.equiv "ui::Control_Cursor::Control_Cursor()", _text + 0x581818
	.equiv "ui::Control_Cursor::setCursorType()", _text + 0x581890
	.equiv "FUN_0E7018F0:ui::Control_Cursor::setColor()", _text + 0x5818F0
	.equiv "ui::Control_Cursor::isCursorVisible()", _text + 0x581BDC
	.equiv "ui::Control_Cursor::setLoopFrame()", _text + 0x581C78
	.equiv "ui::Control_Cursor::nextLoopFrame()", _text + 0x581C98
	.equiv "ui::Control_Cursor::animIn()", _text + 0x581D24
	.equiv "ui::Control_Cursor::animKeepIn()", _text + 0x581E1C
	.equiv "ui::Control_Cursor::animOut()", _text + 0x581EE4
	.equiv "ui::Control_Cursor::animKeepOut()", _text + 0x581FAC
	.equiv "ui::Control_Cursor::setCursorSize()", _text + 0x582134
	.equiv "ui::Control_Pointer::Control_Pointer()", _text + 0x582140
	.equiv "ui::Control_Pointer::setColor()", _text + 0x5821BC
	.equiv "ui::Control_Pointer::setPointerEnable()", _text + 0x58220C
	.equiv "ui::Control_PartsCursor::setColor()", _text + 0x582AC8
	.equiv "ui::Control_PartsCursor::setLoopFrame()", _text + 0x582B28
	.equiv "ui::Control_PartsCursor::nextLoopFrame()", _text + 0x582B48
	.equiv "ui::Control_Dialog::setCenter()", _text + 0x582EDC
	.equiv "ui::Control_StampDialog::animStampKeep()", _text + 0x583B10
	.equiv "ui::Control_ControllerDialog::setControllerType_()", _text + 0x584250
	.equiv "ui::Control_ControllerDialog::animInit()", _text + 0x5843AC
	.equiv "ui::Control_RaceStart::animIn()", _text + 0x584AA4
	.equiv "ui::Control_Fader::setType()", _text + 0x585140
	.equiv "ui::Control_Fader::setSpeed()", _text + 0x58529C
	.equiv "ui::UIRule::UIRule()", _text + 0x588074
	.equiv "ui::UIRule::setVal()", _text + 0x5880CC
	.equiv "ui::UIRule::getMessage_()", _text + 0x58828C
	.equiv "FID_conflict:ui::Rule_NumRace::getValText()", _text + 0x5883AC
	.equiv "ui::Rule_Team::getValText()", _text + 0x5885FC
	.equiv "ui::Rule_Item::getValText()", _text + 0x5886F0
	.equiv "ui::Rule_Item::getItemPattern()", _text + 0x588804
	.equiv "ui::Rule_Body::getValText()", _text + 0x5888E8
	.equiv "ui::Rule_CompeDate::clamp()", _text + 0x588B2C
	.equiv "ui::Rule_CompeDate::Rule_CompeDate()", _text + 0x588CD8
	.equiv "ui::Rule_CompeDate::getCompeText()", _text + 0x588E20
	.equiv "ui::Rule_CompeTime::clamp()", _text + 0x589110
	.equiv "ui::Rule_CompeTime::Rule_CompeTime()", _text + 0x5891F8
	.equiv "ui::Rule_CompeTime::getCompeText()", _text + 0x589334
	.equiv "ui::Rule_COM::getValText()", _text + 0x589B6C
	.equiv "ui::Rule_COM::isNone()", _text + 0x589BC0
	.equiv "ui::Rule_COM::setSingle()", _text + 0x589C40
	.equiv "ui::Rule_COM::getLevel()", _text + 0x589CAC
	.equiv "ui::Rule_Time::getValText()", _text + 0x589F0C
	.equiv "ui::Rule_Time::getBattleTime()", _text + 0x589F60
	.equiv "ui::Rule_NumBattle::getNumBattle()", _text + 0x58A0B0
	.equiv "ui::Rule_PlayerPriority::adjustKartNum()", _text + 0x58A120
	.equiv "ui::Control_Rule::animTouchOff_()", _text + 0x58BA8C
	.equiv "ui::Control_Rule::onCalc()", _text + 0x58C0AC
	.equiv "ui::Control_Slider::update_()", _text + 0x58CB88
	.equiv "ui::Control_Slider::slide_()", _text + 0x58CF58
	.equiv "ui::Control_Scroll::isOut()", _text + 0x58D4B4
	.equiv "ui::Control_Scroll::binarySearch()", _text + 0x58D614
	.equiv "ui::Control_Scroll::findNext()", _text + 0x58D73C
	.equiv "ui::Control_Scroll::ItemControl::runEvent_()", _text + 0x58D9BC
	.equiv "ui::Control_Scroll::selectOn()", _text + 0x58DA18
	.equiv "ui::Control_Scroll::cursorOn()", _text + 0x58DC74
	.equiv "ui::Control_Scroll::scroll()", _text + 0x58DFF4
	.equiv "ui::Control_Scroll::onCreate()", _text + 0x58EA4C
	.equiv "ui::Control_Scroll::calcScroll_()", _text + 0x58EAFC
	.equiv "ui::Control_Scroll::input_()", _text + 0x58EE84
	.equiv "FUN_0E70EF88:ui::Control_Scroll::refresh()", _text + 0x58EF88
	.equiv "FUN_0E70F504:ui::Control_Scroll::refresh()", _text + 0x58F504
	.equiv "ui::Control_Scroll::alloc()", _text + 0x58F514
	.equiv "ui::Control_Scroll::allocControl()", _text + 0x58F79C
	.equiv "ui::Control_Scroll::pushControl()", _text + 0x58F7C4
	.equiv "ui::Control_Scroll::setView()", _text + 0x58F80C
	.equiv "FUN_0E70F840:ui::Control_Scroll::update()", _text + 0x58F840
	.equiv "ui::Control_Scroll::find()", _text + 0x5902A4
	.equiv "FUN_0E7103A4:ui::Control_Scroll::update()", _text + 0x5903A4
	.equiv "ui::Control_Scroll::setKey()", _text + 0x590628
	.equiv "ui::Control_Scroll::setDefaultKey()", _text + 0x590660
	.equiv "ui::Control_Scroll::setTouch()", _text + 0x590678
	.equiv "ui::Control_Scroll::onFollowCursor()", _text + 0x5906FC
	.equiv "ui::Control_Scroll::startBack()", _text + 0x590DC0
	.equiv "ui::Control_Scroll::stopScrollTouch()", _text + 0x5911C4
	.equiv "ui::Control_Scroll::Item::set()", _text + 0x591AF4
	.equiv "ui::Control_Scroll::ItemControl::ItemControl()", _text + 0x591B08
	.equiv "ui::Control_ScrollOld::allocControl()", _text + 0x5920C4
	.equiv "ui::Control_ScrollOld::checkMinMax()", _text + 0x592534
	.equiv "ui::Control_ScrollOld::scroll()", _text + 0x593A1C
	.equiv "ui::Control_ScrollOld::ItemControl::runMessageReq()", _text + 0x593CD4
	.equiv "ui::Control_ScrollOld::calcMessageReq()", _text + 0x593D7C
	.equiv "ui::Control_ScrollOld::stopScrollTouch()", _text + 0x59491C
	.equiv "ui::Control_ScrollOld::startBack()", _text + 0x5949E0
	.equiv "ui::Control_ScrollOld::decide()", _text + 0x594E34
	.equiv "FUN_0E717B1C:FID_conflict:nn::nex::AnyGatheringAdapter::AnyGatheringAdapter()", _text + 0x597B1C
	.equiv "ui::Page_Lyt_RuleList::setToDrawFront()", _text + 0x59C96C
	.equiv "ui::Page_Lyt_RuleList::in()", _text + 0x59C9DC
	.equiv "ui::Page_Lyt_RuleList::complete()", _text + 0x59CAB0
	.equiv "ui::Control_RuleList::onCreate()", _text + 0x59D428
	.equiv "ui::Control_RuleList::pushRule()", _text + 0x59DB90
	.equiv "ui::Control_RuleList::pushTitle()", _text + 0x59DC6C
	.equiv "ui::GetRulePage()", _text + 0x59E4A0
	.equiv "FUN_0E71E820:agl::env::EnvObjMgr::InitArg::InitArg()", _text + 0x59E820
	.equiv "FUN_0E71E884:FID_conflict:nn::nex::AnyGatheringAdapter::AnyGatheringAdapter()", _text + 0x59E884
	.equiv "ui::Control_CharaList::setSingle()", _text + 0x5A0564
	.equiv "ui::Control_Slot::Control_Slot()", _text + 0x5A4600
	.equiv "ui::Control_Slot::defineReel()", _text + 0x5A61F4
	.equiv "FUN_0E7271A8:ui::Page_Bg::animChange()", _text + 0x5A71A8
	.equiv "ui::Control_PartsParam::setParam()", _text + 0x5A7470
	.equiv "ui::Control_PartsParam::setColor()", _text + 0x5A750C
	.equiv "ui::Control_EntryPanel::animIn()", _text + 0x5A76AC
	.equiv "ui::Control_EntryPanel::animOut()", _text + 0x5A76D4
	.equiv "ui::Control_EntryPanel::animKeepOut()", _text + 0x5A7768
	.equiv "ui::Control_SelectorButton::setVisibleArrow()", _text + 0x5A7B2C
	.equiv "FUN_0E727B7C:ui::Control_Cursor::setColor()", _text + 0x5A7B7C
	.equiv "ui::Control_LobbyMiiName::show()", _text + 0x5A9D38
	.equiv "ui::Page_RaceStart::onIn()", _text + 0x5BD7BC
	.equiv "ui::Page_RaceStart::onComplete()", _text + 0x5BDDC4
	.equiv "ui::Page_Cursor::onCreate()", _text + 0x5BEA78
	.equiv "ui::Page_Cursor::onCalcAfter()", _text + 0x5BEC80
	.equiv "ui::Page_Cursor::setDrawTV()", _text + 0x5BED20
	.equiv "ui::Page_Cursor::setSwap()", _text + 0x5BEEB8
	.equiv "ui::Page_Cursor::moveFront()", _text + 0x5BEF98
	.equiv "ui::Page_Cursor::isCursorVisible()", _text + 0x5BF084
	.equiv "ui::Page_Cursor::isPointerVisible()", _text + 0x5BF0F4
	.equiv "ui::Page_Cursor::setCursorVisible()", _text + 0x5BF164
	.equiv "ui::Page_Cursor::setPointerVisible()", _text + 0x5BF2E4
	.equiv "ui::UIDialogReq::set()", _text + 0x5BF5D0
	.equiv "ui::Page_Dialog::setDrawTV()", _text + 0x5BF850
	.equiv "ui::Page_Dialog::pauseOn_()", _text + 0x5BFAE8
	.equiv "ui::Page_Dialog::in_()", _text + 0x5BFCDC
	.equiv "ui::Page_Dialog::soundOut()", _text + 0x5BFD38
	.equiv "ui::Page_Dialog::open()", _text + 0x5BFD58
	.equiv "ui::Page_Dialog::close()", _text + 0x5C003C
	.equiv "ui::Page_Dialog::toScene()", _text + 0x5C01CC
	.equiv "ui::Page_Dialog::isClose()", _text + 0x5C0214
	.equiv "ui::Page_Dialog::setInput_()", _text + 0x5C101C
	.equiv "ui::Page_Dialog::setBodyMessage_()", _text + 0x5C1084
	.equiv "ui::Page_Dialog::setButtonMessage_()", _text + 0x5C10FC
	.equiv "ui::Page_Dialog::setTeamButtonMessage_()", _text + 0x5C12BC
	.equiv "ui::Page_Dialog::soundIn()", _text + 0x5C133C
	.equiv "ui::Page_Dialog::flowError_()", _text + 0x5C20D0
	.equiv "ui::Page_Dialog::setCheckController()", _text + 0x5C2C54
	.equiv "ui::Page_Dialog::sortCheckController()", _text + 0x5C2D04
	.equiv "ui::Page_Dialog::setCheckNetworkError()", _text + 0x5C2D74
	.equiv "ui::Page_Fader::onCreate()", _text + 0x5C3568
	.equiv "ui::Page_FaderPause::onCreate()", _text + 0x5C39AC
	.equiv "ui::Page_FaderPlayer::onCreate()", _text + 0x5C3ACC
	.equiv "FUN_0E745404:FID_conflict:`global_constructor_keyed_to'_22_UIPage_WiFi_Friend_cpp_8225c8dd", _text + 0x5C5404
	.equiv "ui::Page_Ghost::loadGhostToKart()", _text + 0x5C8578
	.equiv "ui::Page_Ghost::loadStaffGhostToKart()", _text + 0x5C9A60
	.equiv "ui::Page_Ghost::loadDLGhostToKart()", _text + 0x5C9CA8
	.equiv "ui::Page_Ghost::checkLoadGhost()", _text + 0x5C9DF8
	.equiv "ui::Page_Ghost::loadGhost()", _text + 0x5C9EB4
	.equiv "`global_constructor_keyed_to'_27_UIPage_Ghost_ScrollList_cpp_8225c8dd", _text + 0x5CEE80
	.equiv "ui::Page_Login::Page_Login()", _text + 0x5CF5C8
	.equiv "ui::Page_Login::startLogin()", _text + 0x5CF660
	.equiv "ui::Page_Login::onDialogSeq()", _text + 0x5CF774
	.equiv "ui::Page_Login::onDialogLoginError()", _text + 0x5CFDDC
	.equiv "ui::Page_Login::onDialogOliveError()", _text + 0x5CFFB0
	.equiv "ui::Page_Login::dialogOliveError()", _text + 0x5D00F4
	.equiv "ui::Page_CharaBase::setMiiName()", _text + 0x5D23FC
	.equiv "ui::Page_CharaBase::getCharaList()", _text + 0x5D2428
	.equiv "ui::Page_CharaList::onUpdate()", _text + 0x5D45D0
	.equiv "ui::Page_CharaBase::reqMii()", _text + 0x5D4844
	.equiv "ui::Page_CharaList::isClose()", _text + 0x5D6010
	.equiv "ui::Page_CharaList::close()", _text + 0x5D6038
	.equiv "ui::Page_CharaList::decideOK()", _text + 0x5D6068
	.equiv "ui::Page_CharaBase::onCreate()", _text + 0x5D6088
	.equiv "ui::Page_CharaBase::waitMii()", _text + 0x5DAEDC
	.equiv "FUN_0E75D008:FID_conflict:`global_constructor_keyed_to'_22_UIPage_WiFi_Friend_cpp_8225c8dd", _text + 0x5DD008
	.equiv "ui::Control_CharaPartsName::Control_CharaPartsName()", _text + 0x5DD72C
	.equiv "ui::Control_CharaPartsName::onCreate()", _text + 0x5DD908
	.equiv "ui::Control_CharaPartsName::onIn()", _text + 0x5DDC64
	.equiv "ui::Control_CharaPartsName::setName()", _text + 0x5DDE4C
	.equiv "ui::Control_CharaPartsName::animKeep()", _text + 0x5DDE64
	.equiv "ui::Control_CharaPartsName::animKeepPlus()", _text + 0x5DDF1C
	.equiv "ui::Control_CharaPartsName::animPlusIn()", _text + 0x5DDFC4
	.equiv "ui::Control_CharaPartsName::animOpen()", _text + 0x5DE030
	.equiv "ui::Control_CharaPartsName::animClose()", _text + 0x5DE060
	.equiv "ui::Control_CharaPartsName::animCloseAll()", _text + 0x5DE090
	.equiv "ui::Control_CharaPartsName::setPlusLeft()", _text + 0x5DE0C0
	.equiv "ui::Control_CharaPartsName::setColor()", _text + 0x5DE100
	.equiv "ui::Control_CharaPartsName::setPartsIcon()", _text + 0x5DE1E4
	.equiv "ui::Page_Lyt_CharaParts::onCreate()", _text + 0x5DE3F4
	.equiv "ui::Page_Lyt_CharaParts::onIn()", _text + 0x5DEA34
	.equiv "ui::Page_PartsBase::onCreate()", _text + 0x5DF064
	.equiv "ui::Page_PartsBase::setColor_()", _text + 0x5DFE20
	.equiv "ui::Page_PartsBase::decideEntry_()", _text + 0x5E1930
	.equiv "ui::Page_PartsBase::cancelEntry_()", _text + 0x5E1B28
	.equiv "ui::Page_PartsBase::onUpdateRun()", _text + 0x5E1CEC
	.equiv "ui::Page_PartsBase::onCalcAfter()", _text + 0x5E244C
	.equiv "ui::Page_PartsBase::onComplete()", _text + 0x5E2668
	.equiv "ui::Page_PartsBase::onOut()", _text + 0x5E29B8
	.equiv "FUN_0E763868:FID_conflict:ui::Page_PartsM::Page_PartsM()", _text + 0x5E3868
	.equiv "FUN_0E763A08:FID_conflict:ui::Page_PartsM::Page_PartsM()", _text + 0x5E3A08
	.equiv "FUN_0E763D44:FID_conflict:ui::Page_PartsM::Page_PartsM()", _text + 0x5E3D44
	.equiv "FUN_0E763EE4:FID_conflict:`global_constructor_keyed_to'_22_UIPage_WiFi_Friend_cpp_8225c8dd", _text + 0x5E3EE4
	.equiv "ui::Page_Bg::killTwinkle()", _text + 0x5E5480
	.equiv "ui::Page_Bg::animKeepTitleTop()", _text + 0x5E5518
	.equiv "ui::Page_Bg::animKeepTitleSelect()", _text + 0x5E5668
	.equiv "ui::Page_Bg::setModeTex()", _text + 0x5E57C8
	.equiv "ui::Page_Bg::emitTwinkle()", _text + 0x5E58A8
	.equiv "ui::Page_Bg::animKeepLocal()", _text + 0x5E58F8
	.equiv "ui::Page_Bg::animKeepWiFi()", _text + 0x5E5AC0
	.equiv "FUN_0E765D0C:ui::Page_Bg::animChange()", _text + 0x5E5D0C
	.equiv "ui::Page_MenuUnder::onCreate()", _text + 0x5E6798
	.equiv "ui::Page_MenuUnder::setToDrawFront()", _text + 0x5E6BC4
	.equiv "ui::Page_MenuUnder::animIn()", _text + 0x5E6CA0
	.equiv "ui::Page_MenuUnder::animOut()", _text + 0x5E6E7C
	.equiv "ui::Page_TitleSelect::setStampNum()", _text + 0x5EE858
	.equiv "ui::Page_TitleSelect::onCreate", _text + 0x5EE9E4
	.equiv "ui::Page_Unlock::init()", _text + 0x5F178C
	.equiv "FUN_0E775E50:FID_conflict:`global_constructor_keyed_to'_22_UIPage_WiFi_Friend_cpp_8225c8dd", _text + 0x5F5E50
	.equiv "object::RecorderDirector::isErrorOccured()", _text + 0x5FBE50
	.equiv "FUN_0E77C3D0:object::KartVehicleDash::isIgnoreDirt()", _text + 0x5FC3D0
	.equiv "ui::Page_WiFi_MiiComment::speechMii()", _text + 0x5FC9F4
	.equiv "ui::Page_WiFi_MiiComment::speechMiiRule()", _text + 0x5FCB2C
	.equiv "ui::Page_WiFi_MiiComment::speechMiiFriend()", _text + 0x5FCC9C
	.equiv "ui::Page_WiFi_MiiComment::setPosMii()", _text + 0x5FCDE8
	.equiv "ui::Page_WiFi_MiiComment::showMiiName()", _text + 0x5FCE84
	.equiv "ui::Page_WiFi_MiiComment::setPosMiiName()", _text + 0x5FCFD0
	.equiv "FUN_0E7801D0:FID_conflict:`global_constructor_keyed_to'_22_UIPage_WiFi_Friend_cpp_8225c8dd", _text + 0x6001D0
	.equiv "FUN_0E794654:FID_conflict:`global_constructor_keyed_to'_22_UIPage_WiFi_Friend_cpp_8225c8dd", _text + 0x614654
	.equiv "ui::SetupMenu()", _text + 0x614C9C
	.equiv "ui::MenuPrepare()", _text + 0x614DF0
	.equiv "ui::SetupRaceDemo()", _text + 0x615B88
	.equiv "FUN_0E795EE0:ui::SetPlayerType()", _text + 0x615EE0
	.equiv "ui::SetupRaceTimeAttack()", _text + 0x6166C8
	.equiv "ui::SetupRaceBattle()", _text + 0x6178C4
	.equiv "ui::GetFriendRuleStr()", _text + 0x6196B4
	.equiv "ui::SetupTheaterMenu()", _text + 0x61B1A0
	.equiv "`global_constructor_keyed_to'_11_UISetup_cpp_8225c8dd", _text + 0x61B330
	.equiv "object::AwardDirector::AwardDirector()", _text + 0x61B874
	.equiv "object::AwardDirector::adjustTrophyRotate_()", _text + 0x61BB04
	.equiv "object::AwardDirector::enterBeforeStructure()", _text + 0x61C6DC
	.equiv "void_sead::QuatCalcCommon::setAxisRotation()", _text + 0x61DDE8
	.equiv "void_sead::Matrix34CalcCommon::setAxisRotation()", _text + 0x61DE90
	.equiv "ui::Control_TeamAward::setCongTexture_()", _text + 0x61ECA0
	.equiv "ui::Control_AwardPanel::prepare()", _text + 0x61F368
	.equiv "FUN_0E79FC18:ui::Control_Credit::setup()", _text + 0x61FC18
	.equiv "FUN_0E79FDFC:ui::Control_Credit::setup()", _text + 0x61FDFC
	.equiv "ui::Control_Credit::onCreate()", _text + 0x61FEE8
	.equiv "ui::Control_RaceDRCRankPanel::setDriverID()", _text + 0x620630
	.equiv "ui::Control_RaceDRC::setupHorn()", _text + 0x620868
	.equiv "ui::Control_RaceDRC::enableDRCButtons()", _text + 0x620C44
	.equiv "ui::Control_RaceDRC::disableDRCButtons()", _text + 0x620CC4
	.equiv "ui::Control_RaceDRC::quitDRCButtons()", _text + 0x620E0C
	.equiv "ui::Control_RaceDRC::setPushButton()", _text + 0x620E6C
	.equiv "ui::Control_RaceDRCRankPanel::prepareNameAndIcon()", _text + 0x620F68
	.equiv "ui::Control_RaceDRCRankPanel::setAsBattle()", _text + 0x621230
	.equiv "ui::Control_RaceDRC::setAsBattle()", _text + 0x6212F0
	.equiv "ui::Control_RaceDRC::findPanel_()", _text + 0x621580
	.equiv "ui::Control_RaceDRC::useItem()", _text + 0x6217C8
	.equiv "ui::Control_RaceDRCRankPanel::setVisibleItemPane_()", _text + 0x6217F4
	.equiv "ui::Control_RaceDRCRankPanel::forceSettleItem()", _text + 0x621844
	.equiv "ui::Control_RaceDRC::settleItem()", _text + 0x621904
	.equiv "ui::Control_RaceDRC::forceSetFullScreen()", _text + 0x621DF8
	.equiv "ui::Control_RaceDRCRankPanel::Control_RaceDRCRankPanel()", _text + 0x62255C
	.equiv "ui::Control_RaceDRCRankPanel::onCalc", _text + 0x622AD4
	.equiv "ui::Control_RaceDRCSwitch::setSwitchState()", _text + 0x622E74
	.equiv "ui::Control_RaceDRCSwitch::enableButton()", _text + 0x622F58
	.equiv "ui::Control_RaceDRCSwitch::onHandler()", _text + 0x623134
	.equiv "ui::Control_RaceDRCGyroSwitch::lockGyro()", _text + 0x623384
	.equiv "ui::Control_RaceDRCGyroSwitch::unlockGyro()", _text + 0x62342C
	.equiv "ui::Control_RaceDRCHorn::Control_RaceDRCHorn()", _text + 0x623970
	.equiv "ui::Control_RaceDRCHorn::setDriver()", _text + 0x623A68
	.equiv "ui::Control_RaceDRCHorn::disableHorn()", _text + 0x623C78
	.equiv "ui::Control_RaceMiniMap::Control_RaceMiniMap", _text + 0x6243E0
	.equiv "FUN_0E7A4B68:object::RecorderDirector::registRecorder()", _text + 0x624B68
	.equiv "ui::Control_RaceDRCCharaIcon::initRot()", _text + 0x624B7C
	.equiv "ui::Control_RaceMiniMap::setupBomb()", _text + 0x624E1C
	.equiv "ui::Control_RaceDRCBombIcon::invoke()", _text + 0x624F04
	.equiv "ui::Control_RaceMiniMap::invokeBomb()", _text + 0x624FCC
	.equiv "ui::Control_RaceMiniMap::setupKouraB()", _text + 0x6250F4
	.equiv "ui::Control_RaceDRCCharaIcon::setVisibleCrown()", _text + 0x625154
	.equiv "ui::Control_RaceDRCKouraB::onCalc()", _text + 0x6263F0
	.equiv "ui::Control_RaceIntro::getCurrentCourse_()", _text + 0x626A0C
	.equiv "ui::Control_RaceIntro::getAllTexture_()", _text + 0x626B44
	.equiv "ui::Control_RaceIntro::getCupIconName_()", _text + 0x626F14
	.equiv "ui::Control_RaceIntro::onIn()", _text + 0x626F70
	.equiv "ui::Control_RaceIntroAward::onCreate()", _text + 0x627B8C
	.equiv "ui::Control_RaceInvokeOnce::invokeAnim()", _text + 0x628A50
	.equiv "ui::Control_RaceInvokeOnce::endAnim()", _text + 0x628B18
	.equiv "ui::Control_RaceItem::Control_RaceItem()", _text + 0x628D58
	.equiv "ui::Control_RaceItem::destroyItem()", _text + 0x628F28
	.equiv "FUN_0E7A907C:ui::Control_RaceItem::GetItemMaxNumByItemID()", _text + 0x62907C
	.equiv "ui::Control_RaceItem::forceSettleItem()", _text + 0x6290A8
	.equiv "ui::Control_RaceItem::quit()", _text + 0x6291CC
	.equiv "ui::Control_RaceItem::setColor()", _text + 0x629238
	.equiv "ui::Control_RaceRank::invoke()", _text + 0x62A548
	.equiv "ui::Control_RaceRank::quit()", _text + 0x62A5BC
	.equiv "ui::Control_RaceRank::fixRank()", _text + 0x62A630
	.equiv "ui::Control_RaceRank::setNewRank_()", _text + 0x62A698
	.equiv "ui::Control_RaceRank::setTarget()", _text + 0x62AA98
	.equiv "ui::Control_RaceRank::setRank()", _text + 0x62AAF4
	.equiv "ui::Control_RaceRank::onCreate()", _text + 0x62AB98
	.equiv "FID_conflict:ui::Control_Caption::animIn()", _text + 0x62B0A4
	.equiv "ui::Control_RaceBattleScore::setColor()", _text + 0x62B13C
	.equiv "ui::Control_RaceTimer::invoke()", _text + 0x62B4CC
	.equiv "FID_conflict:ui::Control_RaceTimer::quit()", _text + 0x62B54C
	.equiv "ui::Control_RaceLapTimer::invoke()", _text + 0x62B9E0
	.equiv "ui::Control_RaceBattleTimer::setColor()", _text + 0x62C700
	.equiv "ui::Control_RacePauseController::setController()", _text + 0x62CEE8
	.equiv "ui::Control_RacePauseController::toggleSingleMulti()", _text + 0x62D174
	.equiv "ui::Control_RacePauseGyro::Control_RacePauseGyro()", _text + 0x62D3BC
	.equiv "ui::Control_RacePauseGyro::setIconChange_()", _text + 0x62D47C
	.equiv "ui::Control_RacePauseGyro::setButtonType()", _text + 0x62D4D8
	.equiv "ui::Control_RacePauseGyro::playDecide()", _text + 0x62D64C
	.equiv "ui::Control_RacePauseGyro::adjustButtonEnable_()", _text + 0x62D674
	.equiv "ui::Control_RaceReplay::Control_RaceReplay()", _text + 0x62E12C
	.equiv "ui::Control_RaceReplay::setNameText_()", _text + 0x62E240
	.equiv "ui::Control_RaceReplay::setNewTargetWithName_()", _text + 0x62E340
	.equiv "ui::Control_RaceReplay::invoke()", _text + 0x62E408
	.equiv "ui::Control_RaceReplay::quit()", _text + 0x62E478
	.equiv "ui::Control_RaceReplay::setTime()", _text + 0x62E568
	.equiv "ui::Control_RaceReplay::onCreate()", _text + 0x62E5D4
	.equiv "ui::Control_RaceReplayHint::invoke()", _text + 0x62EEE4
	.equiv "ui::Control_RaceReplayHint::quit()", _text + 0x62EF40
	.equiv "ui::Control_Favstar::reset()", _text + 0x62F1C8
	.equiv "ui::Control_Favstar::favo()", _text + 0x62F31C
	.equiv "ui::Control_Favstar::unfavo()", _text + 0x62F440
	.equiv "ui::Control_RaceResult::forceQuit()", _text + 0x62FB90
	.equiv "ui::Control_RaceResult::align()", _text + 0x62FBDC
	.equiv "ui::Control_RaceResult::setAsReplayResult()", _text + 0x62FC58
	.equiv "ui::Control_RaceTeamResult::invoke()", _text + 0x62FDF0
	.equiv "ui::Control_RaceTeamResult::setTotalScore()", _text + 0x62FE8C
	.equiv "ui::Control_RaceTeamResult::addResultScore()", _text + 0x63013C
	.equiv "ui::Control_RaceTeamResult::quit()", _text + 0x630238
	.equiv "ui::Control_RaceResultPanel::setRank()", _text + 0x630774
	.equiv "ui::Control_RaceResultPanel::setRankIcon()", _text + 0x630EDC
	.equiv "ui::Control_RaceResultPanel::hideRankIcon()", _text + 0x630FC0
	.equiv "ui::Control_RaceResultPanel::hideAdPoint()", _text + 0x63104C
	.equiv "ui::Control_RaceResultPanel::setAsReplay()", _text + 0x631374
	.equiv "ui::Control_RaceTAResultKart::StartLoad()", _text + 0x631768
	.equiv "ui::Control_RaceTAResultKart::CheckLoadPartsFinished()", _text + 0x63180C
	.equiv "ui::Control_RaceTAResultKart::setHandle()", _text + 0x632250
	.equiv "ui::Control_RaceTelop::invoke()", _text + 0x632A50
	.equiv "ui::Control_RaceTelop::quit()", _text + 0x632ADC
	.equiv "ui::Control_RaceTelop::setTelopTexture()", _text + 0x632B30
	.equiv "ui::Control_RaceTelop::setTelopMessage()", _text + 0x632B94
	.equiv "ui::Control_RaceRival::setName()", _text + 0x63325C
	.equiv "ui::Control_RaceBackAlarm::GetDistanceKart()", _text + 0x6337A4
	.equiv "ui::Control_RaceBackAlarm::invoke()", _text + 0x63441C
	.equiv "ui::Control_RaceBackAlarm::isInAlertSectorKart_()", _text + 0x6349EC
	.equiv "ui::Control_RaceBackAlarm::checkInvokeKart()", _text + 0x634B7C
	.equiv "ui::Control_RaceBackAlarm::setSize()", _text + 0x635110
	.equiv "ui::Control_RaceBackAlarm::setColor()", _text + 0x635148
	.equiv "ui::Control_TheaterPanel::blackizeThumbnail()", _text + 0x635704
	.equiv "ui::Control_TheaterPanel::resetThumbnail()", _text + 0x6357C0
	.equiv "ui::Control_TheaterMenu::resetCurrentBoardThumbnail()", _text + 0x635868
	.equiv "ui::UIWordWrapper::ChopWord()", _text + 0x6358FC
	.equiv "FUN_0E7B597C:ui::UIWordWrapper::calcWordWrapping()", _text + 0x63597C
	.equiv "ui::Control_TheaterDetailButton::select()", _text + 0x635A10
	.equiv "ui::Control_TheaterMenu::openDetail()", _text + 0x635AB4
	.equiv "ui::Control_TheaterDetailButton::unselect()", _text + 0x636300
	.equiv "ui::Control_TheaterMenu::closeDetail()", _text + 0x63633C
	.equiv "ui::Control_TheaterMenu::forceCloseDetail()", _text + 0x636414
	.equiv "ui::Control_TheaterMenu::invokeLoadMsg()", _text + 0x63642C
	.equiv "ui::Control_TheaterMenu::leaveBoard()", _text + 0x63650C
	.equiv "ui::Control_TheaterMenu::setBoardScrollNum()", _text + 0x6366BC
	.equiv "ui::UIWordWrapper::UIWordWrapper()", _text + 0x6367E4
	.equiv "ui::Control_TheaterMenu::onCreate()", _text + 0x636974
	.equiv "ui::Control_TheaterBoard::callChangeMode()", _text + 0x637198
	.equiv "ui::Control_TheaterBoard::getCompeNum()", _text + 0x6371D8
	.equiv "ui::Control_TheaterPanel::startLoadingAnim()", _text + 0x6371EC
	.equiv "FUN_0E7B7260:ui::Control_TheaterPanel::setContent()", _text + 0x637260
	.equiv "FUN_0E7B7488:ui::UIWordWrapper::calcWordWrapping()", _text + 0x637488
	.equiv "FUN_0E7B74F0:ui::Control_TheaterPanel::setContent()", _text + 0x6374F0
	.equiv "ui::Control_TheaterPanel::select()", _text + 0x637ECC
	.equiv "ui::Control_TheaterPanel::unselect()", _text + 0x637F44
	.equiv "ui::Control_TheaterPanel::onCreate()", _text + 0x638D30
	.equiv "ui::Control_MiiSpeech::onCreate()", _text + 0x639400
	.equiv "ui::Control_MiiSpeech::setMiiName_()", _text + 0x639944
	.equiv "ui::Control_MiiSpeech::setMiiPos()", _text + 0x639A2C
	.equiv "ui::Control_MiiSpeech::invoke()", _text + 0x639AEC
	.equiv "ui::Control_MiiMemo::invokeMemo()", _text + 0x639E98
	.equiv "ui::Control_TheaterScreen::init()", _text + 0x63A094
	.equiv "ui::Control_TheaterScreen::changeColorToBlack()", _text + 0x63A0F8
	.equiv "ui::Control_TheaterScreen::invoke()", _text + 0x63A174
	.equiv "ui::Control_TheaterScreen::quit()", _text + 0x63A1D0
	.equiv "ui::Control_TheaterLoadIcon::invoke()", _text + 0x63A2E0
	.equiv "ui::Control_TheaterLoadIcon::invokeTimed()", _text + 0x63A394
	.equiv "ui::Control_TheaterLoadIcon::quit()", _text + 0x63A3EC
	.equiv "`global_constructor_keyed_to'_21_UIControl_Theater_cpp_8225c8dd", _text + 0x63A530
	.equiv "ui::Page_Credit::parseStaffName_()", _text + 0x63D438
	.equiv "ui::Page_Credit::onCreate()", _text + 0x63DB44
	.equiv "ui::Page_Credit::onCalc()", _text + 0x63E39C
	.equiv "ui::Page_Credit::onHandler()", _text + 0x63E9F0
	.equiv "ui::Page_Race::findWindowByKartIndex()", _text + 0x63F008
	.equiv "FID_conflict:ui::Page_Race::useItem()", _text + 0x63F074
	.equiv "ui::Page_Race::settleItem()", _text + 0x63F13C
	.equiv "ui::Page_Race::disableRank()", _text + 0x63F1AC
	.equiv "ui::Page_Race::invokeFader()", _text + 0x63F36C
	.equiv "ui::Page_Race::findWindowIndexByKartIndex()", _text + 0x63F420
	.equiv "ui::Page_Race::resume()", _text + 0x63F658
	.equiv "ui::Page_Race::forceResume()", _text + 0x63F850
	.equiv "ui::Page_Race::getAlarmState()", _text + 0x63F904
	.equiv "ui::Page_Race::commonInit()", _text + 0x63FB10
	.equiv "ui::Page_Race::bindWindowLayout_", _text + 0x63FFC8
	.equiv "ui::Page_Race::loadTimeControl_()", _text + 0x640B48
	.equiv "ui::Page_Race::onCreate", _text + 0x640C80
	.equiv "ui::Page_Race::saveUserDataInit()", _text + 0x641738
	.equiv "ui::Page_Race::invokeWindowLayout_()", _text + 0x6423E4
	.equiv "ui::Page_Race::calcExtraCamera_", _text + 0x642A54
	.equiv "ui::Page_WatchRace::onUpdateRun()", _text + 0x643A18
	.equiv "ui::Page_WatchRace::setNextTarget_()", _text + 0x6441AC
	.equiv "FUN_0E7C4374:FID_conflict:ui::Page_RaceDRC::Page_RaceDRC()", _text + 0x644374
	.equiv "ui::Page_RaceTelop::showTelop()", _text + 0x6443E0
	.equiv "ui::Page_RaceTelop::onCreate()", _text + 0x644588
	.equiv "FUN_0E7C47DC:FID_conflict:`global_constructor_keyed_to'_22_UIPage_WiFi_Friend_cpp_8225c8dd", _text + 0x6447DC
	.equiv "FUN_0E7C4FF4:FID_conflict:ui::Page_RaceDRC::Page_RaceDRC()", _text + 0x644FF4
	.equiv "ui::Page_RaceDRC::isRaceMode()", _text + 0x6450A4
	.equiv "ui::Page_RaceDRC::isMapMode()", _text + 0x6450C4
	.equiv "ui::Page_RaceDRC::setupHorn_()", _text + 0x6450F8
	.equiv "ui::Page_RaceDRC::onCreate", _text + 0x6452B0
	.equiv "ui::Page_RaceDRC::onDetach()", _text + 0x6461B0
	.equiv "ui::Page_RaceIntro::Page_RaceIntro()", _text + 0x646734
	.equiv "ui::Page_RaceNext::StartSavingReplay()", _text + 0x647804
	.equiv "ui::Page_RaceNext::AddRaceNo()", _text + 0x648504
	.equiv "ui::Page_RaceNext::ResetRaceNo()", _text + 0x6485D4
	.equiv "ui::Page_RaceNext::WaitSavingReplayCompleted()", _text + 0x649020
	.equiv "ui::Page_RaceNext::IsSavingReplayCompleted()", _text + 0x649B98
	.equiv "ui::Page_RaceRemake::setupRules()", _text + 0x649DF8
	.equiv "ui::Page_RacePause::closeMenu()", _text + 0x64AE70
	.equiv "ui::Page_RacePause::IsControllerGyroEnable()", _text + 0x64AF00
	.equiv "ui::Page_RacePause::HasGyroController()", _text + 0x64B018
	.equiv "ui::Page_RacePause::onCreate()", _text + 0x64B038
	.equiv "ui::Page_RacePause::adjustGyroButton_()", _text + 0x64C308
	.equiv "ui::Page_RacePause::onCalc()", _text + 0x64C9C8
	.equiv "ui::Page_RacePause::exitGame_()", _text + 0x64CE84
	.equiv "ui::Page_RacePause::onHandler()", _text + 0x64D240
	.equiv "ui::Page_RaceReplay::initReplayResult_()", _text + 0x64DDA4
	.equiv "ui::Page_RaceReplay::setAudioType_()", _text + 0x64DFDC
	.equiv "ui::Page_RaceReplay::setCapTexture_()", _text + 0x64E074
	.equiv "ui::Page_RaceReplay::commonInit_()", _text + 0x64E14C
	.equiv "ui::Page_RaceReplay::onClose()", _text + 0x64FC1C
	.equiv "ui::Page_RaceResult::Page_RaceResult()", _text + 0x6502A4
	.equiv "ui::Page_RaceResult::isCompeUpload_()", _text + 0x6519B0
	.equiv "ui::Page_RaceResult::uploadCompe_()", _text + 0x651BD8
	.equiv "ui::Page_RaceResult::saveUnlock_()", _text + 0x651E24
	.equiv "ui::Page_RaceResult::saveUnlockExtra_()", _text + 0x652D10
	.equiv "ui::Page_RaceResult::toNext_()", _text + 0x652D64
	.equiv "ui::Page_RaceResult::setNextResultState_()", _text + 0x652E9C
	.equiv "ui::Page_RaceResult::calcCompeUpload_()", _text + 0x653374
	.equiv "ui::Page_RaceTAResult::finishTimeAttack()", _text + 0x656B9C
	.equiv "ui::Page_RaceTAResult::onDialogEnd()", _text + 0x658C54
	.equiv "ui::Page_TheaterNext::leaveMenu_()", _text + 0x659EFC
	.equiv "ui::Page_PostOlive::onIn()", _text + 0x65A288
	.equiv "ui::Page_TheaterMenu::getCurrentPostID()", _text + 0x65A5A0
	.equiv "ui::Page_TheaterNext::onComplete()", _text + 0x65ACDC
	.equiv "ui::Page_TheaterRace::quitAllSpeech()", _text + 0x65B560
	.equiv "ui::Page_PostOlive::onDialogUpdateRun()", _text + 0x65C3EC
	.equiv "ui::_thumbdata_t::init()", _text + 0x65C8E0
	.equiv "ui::Page_TheaterMenu::setDownloadWorkHeap()", _text + 0x65D794
	.equiv "ui::Page_TheaterMenu::onIn()", _text + 0x65D880
	.equiv "ui::Page_TheaterMenu::getStoreArray()", _text + 0x65E834
	.equiv "ui::Page_TheaterMenu::addDownloadIndex()", _text + 0x65E868
	.equiv "ui::Page_TheaterMenu::DecodeThumbnailAsync()", _text + 0x65F28C
	.equiv "ui::Page_TheaterMenu::calcThumb_()", _text + 0x65F2AC
	.equiv "ui::Page_TheaterMenu::DecodeThumbnail()", _text + 0x660CF8
	.equiv "FUN_0E7E0FCC:ui::Page_TheaterRace::speechMii()", _text + 0x660FCC
	.equiv "FUN_0E7E10D4:ui::Page_TheaterRace::speechMii()", _text + 0x6610D4
	.equiv "ui::Page_TheaterRace::invokeFader()", _text + 0x6611F0
	.equiv "ui::Page_TheaterRace::onCreate()", _text + 0x6612AC
	.equiv "ui::Page_TheaterRace::onCalc()", _text + 0x661D24
	.equiv "ui::Page_TheaterRace::onClose()", _text + 0x661FA4
	.equiv "ui::InRaceMenu::createMenu()", _text + 0x662CFC
	.equiv "ui::InRaceMenu::createButton()", _text + 0x662DA4
	.equiv "ui::InRaceMenu::disableButton()", _text + 0x662E38
	.equiv "ui::InRaceMenu::setCursorLoopY()", _text + 0x662E84
	.equiv "ui::InRaceMenu::setButtonNum()", _text + 0x662E9C
	.equiv "ui::InRaceMenu::changeButtonNum()", _text + 0x662F58
	.equiv "ui::InRaceMenu::enterMenu()", _text + 0x662FD8
	.equiv "ui::InRaceMenu::invokeMenu()", _text + 0x6630C0
	.equiv "ui::InRaceMenu::leaveMenu()", _text + 0x663154
	.equiv "ui::RaceWindow::invokeFader()", _text + 0x6637C8
	.equiv "ui::RaceWindow::adjustRivalNameOverlap()", _text + 0x663ED8
	.equiv "ui::RaceWindow::isFinished()", _text + 0x664990
	.equiv "ui::RaceWindow::isFinalLap()", _text + 0x6649CC
	.equiv "ui::RaceWindow::settleItem()", _text + 0x664F2C
	.equiv "ui::RaceWindow::disableRank()", _text + 0x664F64
	.equiv "FUN_0E7E5218:FID_conflict:`global_constructor_keyed_to'_14_AIDirector_cpp_8225c8dd", _text + 0x665218
	.equiv "void_sead::Matrix34CalcCommon::makeST()", _text + 0x66564C
	.equiv "ui::Unlock::reset()", _text + 0x6656F8
	.equiv "ui::Unlock::calcGPRank()", _text + 0x665F5C
	.equiv "util::AttT::normalizeXYZ()", _text + 0x6680F8
	.equiv "util::AttT::normalizeYZX()", _text + 0x6682AC
	.equiv "util::AttT::normalizeYXZ()", _text + 0x668460
	.equiv "util::AttT::normalizeZXY()", _text + 0x668614
	.equiv "util::AttT::normalizeZYX()", _text + 0x6687C8
	.equiv "util::AttT::normalize()", _text + 0x66897C
	.equiv "util::AttT::normalizeWeak_YZ()", _text + 0x668DBC
	.equiv "util::AttT::normalizeWeakYZX()", _text + 0x668F2C
	.equiv "util::AttT::normalize_ZX()", _text + 0x669054
	.equiv "util::AttT::normalizeWeak_ZX()", _text + 0x669118
	.equiv "util::AttT::normalizeWeakYXZ()", _text + 0x6691C8
	.equiv "util::AttT::normalizeWeakZYX()", _text + 0x669398
	.equiv "util::AttT::normalizeWeak_YX()", _text + 0x6694C0
	.equiv "FUN_0E7E9570:util::AttT::rotateWorld()", _text + 0x669570
	.equiv "FUN_0E7E971C:util::AttT::rotateLocal()", _text + 0x66971C
	.equiv "FUN_0E7E9794:util::AttT::rotateWorld()", _text + 0x669794
	.equiv "FUN_0E7E992C:util::AttT::rotateLocal()", _text + 0x66992C
	.equiv "sead::QuatCalcCommon::squaredNorm()", _text + 0x669A98
	.equiv "void_sead::Matrix33CalcCommon::setAxisRotation()", _text + 0x669ABC
	.equiv "FUN_0E7E9AF8:void_util::AttT::rotateLocal()", _text + 0x669AF8
	.equiv "FUN_0E7E9BB4:void_util::AttT::rotateLocal()", _text + 0x669BB4
	.equiv "FUN_0E7E9C70:void_util::AttT::rotateLocal()", _text + 0x669C70
	.equiv "FUN_0E7E9D2C:void_util::AttT::rotateLocal()", _text + 0x669D2C
	.equiv "FUN_0E7E9DC0:void_util::AttT::rotateLocal()", _text + 0x669DC0
	.equiv "FUN_0E7E9E54:void_util::AttT::rotateLocal()", _text + 0x669E54
	.equiv "FUN_0E7E9EE8:void_util::AttT::rotateWorld()", _text + 0x669EE8
	.equiv "FUN_0E7EA0C8:void_util::AttT::rotateWorld()", _text + 0x66A0C8
	.equiv "FUN_0E7EA1B8:al::ByamlIter::ByamlIter()", _text + 0x66A1B8
	.equiv "FUN_0E7EA1F8:al::ByamlIter::ByamlIter()", _text + 0x66A1F8
	.equiv "FUN_0E7EA298:al::ByamlIter::ByamlIter()", _text + 0x66A298
	.equiv "al::ByamlIter::isValid()", _text + 0x66A2E8
	.equiv "al::ByamlIter::isTypeHash()", _text + 0x66A2F8
	.equiv "al::ByamlIter::isTypeArray()", _text + 0x66A320
	.equiv "al::ByamlIter::isTypeContainer()", _text + 0x66A348
	.equiv "al::ByamlIter::getKeyIndex()", _text + 0x66A378
	.equiv "al::ByamlIter::getByamlDataByKey()", _text + 0x66A3C0
	.equiv "FUN_0E7EA458:al::ByamlIter::ByamlIter()", _text + 0x66A458
	.equiv "al::ByamlIter::getIterByKey()", _text + 0x66A4AC
	.equiv "al::ByamlIter::tryGetIterByKey()", _text + 0x66A568
	.equiv "al::ByamlIter::tryConvertString()", _text + 0x66A5B0
	.equiv "al::ByamlIter::tryGetStringByKey()", _text + 0x66A634
	.equiv "al::ByamlIter::tryConvertInt()", _text + 0x66A7F4
	.equiv "al::ByamlIter::tryGetIntByKey()", _text + 0x66A818
	.equiv "al::ByamlIter::tryConvertFloat()", _text + 0x66A894
	.equiv "al::ByamlIter::tryGetFloatByKey()", _text + 0x66A8B8
	.equiv "al::ByamlIter::tryConvertBool()", _text + 0x66A934
	.equiv "al::ByamlIter::tryGetBoolByKey()", _text + 0x66A960
	.equiv "al::ByamlIter::getByamlDataByIndex()", _text + 0x66A9DC
	.equiv "al::ByamlIter::getIterByIndex()", _text + 0x66AA9C
	.equiv "al::ByamlIter::tryGetIterByIndex()", _text + 0x66AB58
	.equiv "al::ByamlIter::getByamlDataAndKeyName()", _text + 0x66ABA0
	.equiv "al::ByamlIter::tryGetIterAndKeyNameByIndex()", _text + 0x66AC78
	.equiv "al::ByamlIter::tryGetStringByIndex()", _text + 0x66AD74
	.equiv "al::ByamlIter::tryGetIntByIndex()", _text + 0x66ADF0
	.equiv "al::ByamlIter::tryGetFloatByIndex()", _text + 0x66AE6C
	.equiv "al::ByamlIter::getSize()", _text + 0x66AEE8
	.equiv "al::ByamlStringTableIter::ByamlStringTableIter()", _text + 0x66AF4C
	.equiv "al::ByamlStringTableIter::getSize()", _text + 0x66AF90
	.equiv "al::ByamlStringTableIter::getString()", _text + 0x66AFD4
	.equiv "al::ByamlStringTableIter::getEndAddress()", _text + 0x66B000
	.equiv "al::ByamlStringTableIter::findStringIndex()", _text + 0x66B034
	.equiv "FUN_0E7EB1C0:FID_conflict:al::ByamlHashIter::ByamlHashIter()", _text + 0x66B1C0
	.equiv "al::ByamlArrayIter::getSize()", _text + 0x66B204
	.equiv "al::ByamlArrayIter::getDataTable()", _text + 0x66B220
	.equiv "al::ByamlArrayIter::getDataByIndex()", _text + 0x66B258
	.equiv "al::ByamlHashIter::ByamlHashIter()", _text + 0x66B2CC
	.equiv "al::ByamlHashIter::getSize()", _text + 0x66B310
	.equiv "al::ByamlHashIter::getPairTable()", _text + 0x66B330
	.equiv "al::ByamlHashIter::getDataByIndex()", _text + 0x66B344
	.equiv "al::ByamlHashIter::findPair()", _text + 0x66B3A8
	.equiv "al::ByamlHashIter::getDataByKey()", _text + 0x66B430
	.equiv "al::ByamlHashIter::getPairByIndex()", _text + 0x66B4A8
	.equiv "alByamlLocalUtil::verifiByamlHeader()", _text + 0x66B504
	.equiv "alByamlLocalUtil::verifiByamlStringTable()", _text + 0x66B52C
	.equiv "alByamlLocalUtil::verifiByaml()", _text + 0x66B674
	.equiv "al::tryGetByamlU8ByIndex()", _text + 0x66B7B8
	.equiv "al::tryGetByamlU16()", _text + 0x66B8CC
	.equiv "al::tryGetByamlU16ByIndex()", _text + 0x66B928
	.equiv "al::tryGetByamlS16()", _text + 0x66B984
	.equiv "FUN_0E7EB9E0:al::tryGetByamlV2f()", _text + 0x66B9E0
	.equiv "FUN_0E7EBA9C:al::tryGetByamlV3f()", _text + 0x66BA9C
	.equiv "FUN_0E7EBB84:al::tryGetByamlV2f()", _text + 0x66BB84
	.equiv "FUN_0E7EBC04:al::tryGetByamlV3f()", _text + 0x66BC04
	.equiv "util::CompressorFast::encode()", _text + 0x66BE38
	.equiv "util::Time::toU32()", _text + 0x66C368
	.equiv "util::Time::fromU32()", _text + 0x66C37C
	.equiv "util::Time::set()", _text + 0x66C3AC
	.equiv "util::Time::toUtc()", _text + 0x66C3C0
	.equiv "util::Time::toLocal()", _text + 0x66C518
	.equiv "util::Time::normalize()", _text + 0x66C670
	.equiv "util::WeekTime::toUtc()", _text + 0x66C790
	.equiv "util::WeekTime::toLocal()", _text + 0x66C914
	.equiv "util::WeekTime::normalize()", _text + 0x66CA98
	.equiv "util::Date::toU64()", _text + 0x66CAB4
	.equiv "util::Date::fromU64()", _text + 0x66CB24
	.equiv "util::Date::toU32()", _text + 0x66CBFC
	.equiv "util::Date::fromU32()", _text + 0x66CC6C
	.equiv "FUN_0E7ECD10:util::Date::set()", _text + 0x66CD10
	.equiv "FUN_0E7ECD28:util::Date::set()", _text + 0x66CD28
	.equiv "util::Date::toUtc()", _text + 0x66CD3C
	.equiv "util::Date::toLocal()", _text + 0x66CE90
	.equiv "util::Date::toCalendarTime()", _text + 0x66CFE4
	.equiv "util::Date::toDateTime()", _text + 0x66D0B4
	.equiv "util::Date::makeFromCalendarTime()", _text + 0x66D0F4
	.equiv "util::makeSeadCalendarTime()", _text + 0x66D170
	.equiv "util::Math::convertRatioToCurve()", _text + 0x66D430
	.equiv "util::Math::crossVecLen()", _text + 0x66D5FC
	.equiv "util::Math::clampLen()", _text + 0x66D6D4
	.equiv "util::Math::parallel()", _text + 0x66D75C
	.equiv "util::Math::verticalize()", _text + 0x66D7A8
	.equiv "util::Math::decompose()", _text + 0x66D800
	.equiv "FUN_0E7ED868:util::Math::MakeRotAxisVec_CCW()", _text + 0x66D868
	.equiv "FUN_0E7ED928:util::Math::MakeRotAxisVec_CCW()", _text + 0x66D928
	.equiv "FUN_0E7ED9E0:util::Math::calcAngle()", _text + 0x66D9E0
	.equiv "FUN_0E7EDA44:util::Math::calcAngle()", _text + 0x66DA44
	.equiv "util::Math::slerpVec()", _text + 0x66DAF0
	.equiv "util::Math::slerpVecLimit()", _text + 0x66E388
	.equiv "util::Math::slerpVecRad()", _text + 0x66E4C0
	.equiv "util::Math::calcBezier()", _text + 0x66EE6C
	.equiv "util::Math::calcNearestPosIn2Line()", _text + 0x66EF84
	.equiv "util::Math::calcJointPos()", _text + 0x6710A8
	.equiv "util::MinMax::convToWorld()", _text + 0x671548
	.equiv "FUN_0E7F16C8:util::MtxT::rotateWorldOffset()", _text + 0x6716C8
	.equiv "util::MtxT::rotateLocalOffset()", _text + 0x6718F8
	.equiv "FUN_0E7F19AC:util::MtxT::rotateWorldOffset()", _text + 0x6719AC
	.equiv "FUN_0E7F1C34:util::MtxT::rotateWorldOffset()", _text + 0x671C34
	.equiv "`global_constructor_keyed_to'_12_UtilMtxT_cpp_13757883", _text + 0x671E40
	.equiv "util::RailBase::RailBase()", _text + 0x671FAC
	.equiv "FUN_0E7F2054:util::RailBase::reconfig_()", _text + 0x672054
	.equiv "FUN_0E7F2088:util::RailBase::reconfig_()", _text + 0x672088
	.equiv "FUN_0E7F20B4:util::RailLine::reconfig_()", _text + 0x6720B4
	.equiv "FUN_0E7F2204:util::RailLine::RailLine()", _text + 0x672204
	.equiv "FUN_0E7F22CC:util::RailLine::reconfig_()", _text + 0x6722CC
	.equiv "FUN_0E7F2464:util::RailLine::RailLine()", _text + 0x672464
	.equiv "util::RailLine::calcSegmentLength_()", _text + 0x672510
	.equiv "util::RailBezier::reconfig_()", _text + 0x6725B8
	.equiv "util::RailBezier::RailBezier()", _text + 0x6729D0
	.equiv "util::RailBezier::calcTangent()", _text + 0x672A3C
	.equiv "util::RailBezier::calcInner_()", _text + 0x672DAC
	.equiv "util::RailBezier::calcSegmentLength_()", _text + 0x673264
	.equiv "util::RailUpdater::RailUpdater()", _text + 0x673614
	.equiv "util::RailUpdater::calcNormal()", _text + 0x6736E4
	.equiv "util::RailUpdater::calcForward()", _text + 0x673908
	.equiv "util::RailUpdater::reset()", _text + 0x673CC8
	.equiv "util::RailUpdater::calcCurrentDistance()", _text + 0x673D10
	.equiv "util::RigidBody::setTimeScale()", _text + 0x673DC0
	.equiv "util::RigidBody::reset()", _text + 0x673DD8
	.equiv "util::RigidBody::updatePos()", _text + 0x673EC0
	.equiv "util::RigidBody::updateAtt()", _text + 0x673EEC
	.equiv "util::RigidBody::updatePosAtt()", _text + 0x6740CC
	.equiv "util::RigidBody::updateVel()", _text + 0x6740F0
	.equiv "util::RigidBody::updateRot()", _text + 0x674230
	.equiv "util::RigidBody::updateVelRot()", _text + 0x674384
	.equiv "util::RigidBody::applyReject()", _text + 0x6743C8
	.equiv "util::RigidBody::calcVelL()", _text + 0x674440
	.equiv "util::RigidBody::contactL()", _text + 0x6744F0
	.equiv "util::RigidBody::contactW()", _text + 0x67489C
	.equiv "util::RigidBody::setInertia()", _text + 0x674A84
	.equiv "util::RigidBody::RigidBody()", _text + 0x674ACC
	.equiv "util::RigidBody::inputForceW()", _text + 0x674D70
	.equiv "util::RigidBody::inputTorqueL()", _text + 0x674EA8
	.equiv "FID_conflict:util::RigidBody::addForceL()", _text + 0x675088
	.equiv "util::RigidBody::extendTorqueW()", _text + 0x67512C
	.equiv "util::StringCalc::setInterval()", _text + 0x675434
	.equiv "util::StringCalc::setAdjustRatio()", _text + 0x675474
	.equiv "util::StringCalc::StringCalc()", _text + 0x6754B4
	.equiv "util::StringCalc::resetAllNode()", _text + 0x67566C
	.equiv "util::StringCalc::updatePosBetween()", _text + 0x675764
	.equiv "util::YamlOR::getData_int()", _text + 0x676AE0
	.equiv "util::YamlOR::getData_f32()", _text + 0x676B84
	.equiv "util::YamlOR::tryGetDataByKey_int()", _text + 0x676C28
	.equiv "util::YamlOR::tryGetDataByKey_f32()", _text + 0x676E24
	.equiv "FUN_0E7F73D0:memmove..obj.5Cghs.5Ccafe.5Ccos.5Ccore.5Ctarget.5Cdyn.5Ccore_dyn_stub.5CNDEBUG.5Cstub.", _text + 0x6773D0
	.equiv "_main", _text + 0x677434
	.equiv "entry", _text + 0x6774B8
	.equiv "ASM_MTX44Identity", _text + 0x67764C
	.equiv "ASM_MTX44Copy", _text + 0x677690
	.equiv "ASM_MTX44Transpose", _text + 0x6776D4
	.equiv "ASM_MTX44Concat", _text + 0x677738
	.equiv "ASM_MTX44Trans", _text + 0x67783C
	.equiv "ASM_MTX44Scale", _text + 0x677888
	.equiv "ASM_MTX34To44", _text + 0x6778CC
	.equiv "ASM_VECCrossProduct", _text + 0x677924
	.equiv "ASM_VECSquareDistance", _text + 0x677960
	.equiv "ASM_VECMag", _text + 0x677988
	.equiv "ASM_VECDistance", _text + 0x6779DC
	.equiv "ASM_VECNormalize", _text + 0x677A4C
	.equiv "ASM_MTXMultVec", _text + 0x677AA0
	.equiv "ASM_MTXMultVecSR", _text + 0x677AF4
	.equiv "ASM_MTXCopy", _text + 0x677B48
	.equiv "ASM_MTXConcat", _text + 0x677B7C
	.equiv "ASM_MTXInverse", _text + 0x677C60
	.equiv "ASM_MTXTrans", _text + 0x677D58
	.equiv "ASM_MTXTransApply", _text + 0x677D9C
	.equiv "ASM_MTXScale", _text + 0x677DE8
	.equiv "ASM_MTXRotTrig", _text + 0x677E18
	.equiv "C_QUATSlerp", _text + 0x677ED8
	.equiv "nn::erreula::AppearErrorViewer()", _text + 0x678F8C
	.equiv "nw::font::ResFont::ResFont()", _text + 0x6791C8
	.equiv "nw::font::ResFont::FindBlock()", _text + 0x6792C4
	.equiv "nw::font::ResFont::Rebuild()", _text + 0x679304
	.equiv "nw::font::ResFont::SetResource()", _text + 0x67946C
	.equiv "nw::font::ResFontBase::DeleteTextureNames()", _text + 0x67954C
	.equiv "nw::font::internal::InitTexture_()", _text + 0x679568
	.equiv "nw::font::ResFontBase::LoadTexture()", _text + 0x6795E0
	.equiv "nw::font::ResFontBase::GenTextureNames()", _text + 0x679684
	.equiv "nw::font::ResFontBase::EnableLinearFilter()", _text + 0x67970C
	.equiv "nw::font::ResFontBase::ResFontBase()", _text + 0x67974C
	.equiv "nw::font::ResFontBase::SetResourceBuffer()", _text + 0x679D4C
	.equiv "nw::font::TagProcessorBase::TagProcessorBase()", _text + 0x679E08
	.equiv "void_nw::font::TagProcessorBase::ProcessLinefeed()", _text + 0x679E5C
	.equiv "void_nw::font::TagProcessorBase::ProcessTab()", _text + 0x679EB8
	.equiv "nw::font::TagProcessorBase::Operation_nw::font::TagProcessorBase::CalcRect()", _text + 0x67A05C
	.equiv "nw::font::TextWriterBase::TextWriterBase()", _text + 0x67A264
	.equiv "nw::font::TextWriterBase::~TextWriterBase()", _text + 0x67A2E4
	.equiv "float_nw::font::TextWriterBase::GetLineHeight()", _text + 0x67A338
	.equiv "bool_nw::font::TextWriterBase::CalcLineRectImpl()", _text + 0x67A3E0
	.equiv "void_nw::font::TextWriterBase::CalcStringRectImpl()", _text + 0x67A998
	.equiv "void_nw::font::TextWriterBase::CalcStringRect()", _text + 0x67AA98
	.equiv "float_nw::font::TextWriterBase::CalcStringWidth()", _text + 0x67AAE4
	.equiv "const_nw::font::TextWriterBase::FindPosOfWidthLimit()", _text + 0x67AB34
	.equiv "float_nw::font::TextWriterBase::CalcLineWidth()", _text + 0x67ABC0
	.equiv "float_nw::font::TextWriterBase::AdjustCursor()", _text + 0x67AC64
	.equiv "float_nw::font::TextWriterBase::PrintImpl()", _text + 0x67AEB0
	.equiv "nw::font::WordWrapping::FindLineBreak()", _text + 0x67B6F4
	.equiv "nw::font::WordWrapping::CalcWordWrapping()", _text + 0x67B9BC
	.equiv "nw::ut::IsValidBinaryFile()", _text + 0x67BBAC
	.equiv "nw::ut::IsReverseEndianBinaryFile()", _text + 0x67BC24
	.equiv "nw::ut::GetNextBinaryBlockHeader()", _text + 0x67BC38
	.equiv "nw::font::CharWriter::CharWriter()", _text + 0x67BD38
	.equiv "nw::font::CharWriter::GetFontWidth()", _text + 0x67BEF8
	.equiv "nw::font::CharWriter::GetFontHeight()", _text + 0x67BF60
	.equiv "nw::font::CharWriter::GetFontAscent()", _text + 0x67BFC8
	.equiv "FUN_0E7FC030:nw::font::CharWriter::PrintGlyph()", _text + 0x67C030
	.equiv "FUN_0E7FC3E8:nw::font::CharWriter::PrintGlyph()", _text + 0x67C3E8
	.equiv "nw::font::CharWriter::GetDispStringBufferSize()", _text + 0x67C524
	.equiv "nw::font::CharWriter::InitDispStringBuffer()", _text + 0x67C54C
	.equiv "nw::font::DispStringBuffer::DispStringBuffer()", _text + 0x67C5D8
	.equiv "nw::font::Glyph::Glyph()", _text + 0x67C6BC
	.equiv "nw::font::Font::Font()", _text + 0x67C6F8
	.equiv "nw::font::Font::GetCharStrmReader()", _text + 0x67C774
	.equiv "nw::font::internal::TextureObject::Set()", _text + 0x67C814
	.equiv "nw::g3d::AnimFrameCtrl::AnimFrameCtrl()", _text + 0x67C84C
	.equiv "nw::g3d::AnimFrameCtrl::Init()", _text + 0x67C8B4
	.equiv "nw::g3d::AnimBindTable::Init()", _text + 0x67C8E4
	.equiv "nw::g3d::AnimBindTable::ClearAll()", _text + 0x67C900
	.equiv "nw::g3d::AnimContext::Init()", _text + 0x67C940
	.equiv "nw::g3d::AnimObj::AnimObj()", _text + 0x67C964
	.equiv "nw::g3d::AnimObj::ResetFrameCtrl()", _text + 0x67CA98
	.equiv "nw::g3d::ModelAnimObj::SetBindFlagImpl()", _text + 0x67CB04
	.equiv "nw::g3d::fnd::GfxBuffer::GfxBuffer()", _text + 0x67CB44
	.equiv "nw::g3d::SkeletonObj::Sizer::Calc()", _text + 0x67CB90
	.equiv "nw::g3d::SkeletonObj::CalcBufferSize()", _text + 0x67CC20
	.equiv "nw::g3d::SkeletonObj::ClearLocalMtx()", _text + 0x67CC4C
	.equiv "nw::g3d::SkeletonObj::Init()", _text + 0x67D020
	.equiv "nw::g3d::SkeletonObj::CalcBlockBufferSize()", _text + 0x67D178
	.equiv "nw::g3d::fnd::GfxBuffer::SetData()", _text + 0x67D1A0
	.equiv "nw::g3d::SkeletonObj::SetupBlockBuffer()", _text + 0x67D1C0
	.equiv "nw::g3d::Billboard::Calc()", _text + 0x67D39C
	.equiv "nw::g3d::SkeletonObj::CalcBillboardMtx()", _text + 0x67D584
	.equiv "FUN_0E7FDB90:nw::g3d::fnd::GfxBuffer::GetData()", _text + 0x67DB90
	.equiv "nw::g3d::fnd::CPUCache::IsValid()", _text + 0x67DBA4
	.equiv "FUN_0E7FDBCC:nw::g3d::fnd::GfxBuffer::GetData()", _text + 0x67DBCC
	.equiv "nw::g3d::fnd::GfxBuffer::DCFlush()", _text + 0x67DBE0
	.equiv "nw::g3d::SkeletonObj::CalcMtxBlock()", _text + 0x67DC0C
	.equiv "nw::g3d::fnd::LockedCache::LoadDMABlocks()", _text + 0x67E048
	.equiv "nw::g3d::SkeletonObj::LCMountLocalMtx()", _text + 0x67E0D8
	.equiv "nw::g3d::fnd::LockedCache::StoreDMABlocks()", _text + 0x67E1B0
	.equiv "nw::g3d::SkeletonObj::LCUnmountLocalMtx()", _text + 0x67E23C
	.equiv "nw::g3d::MaterialObj::Sizer::Calc()", _text + 0x67F46C
	.equiv "nw::g3d::MaterialObj::CalcBufferSize()", _text + 0x67F500
	.equiv "nw::g3d::MaterialObj::InitDependPointer()", _text + 0x67F52C
	.equiv "nw::g3d::MaterialObj::Init()", _text + 0x67F5C4
	.equiv "nw::g3d::MaterialObj::CalcBlockBufferSize()", _text + 0x67F784
	.equiv "nw::g3d::MaterialObj::ResetDirtyFlags()", _text + 0x67F7A0
	.equiv "nw::g3d::MaterialObj::SetupBlockBuffer()", _text + 0x67F89C
	.equiv "nw::g3d::MaterialObj::CalcMatBlock()", _text + 0x67F980
	.equiv "nw::g3d::Sphere::Transform()", _text + 0x67FAFC
	.equiv "nw::g3d::Sphere::Merge()", _text + 0x67FBFC
	.equiv "nw::g3d::AABB::Set()", _text + 0x67FD18
	.equiv "nw::g3d::AABB::Transform()", _text + 0x67FE18
	.equiv "nw::g3d::AABB::Merge()", _text + 0x67FF1C
	.equiv "nw::g3d::Plane::Set()", _text + 0x67FF78
	.equiv "nw::g3d::ViewVolume::SetFrustum()", _text + 0x6800A8
	.equiv "nw::g3d::ViewVolume::SetPerspectiveOffset()", _text + 0x68046C
	.equiv "nw::g3d::ViewVolume::TestIntersection()", _text + 0x6805C4
	.equiv "nw::g3d::ShapeObj::Sizer::Calc()", _text + 0x6807DC
	.equiv "nw::g3d::ShapeObj::CalcBufferSize()", _text + 0x6808B8
	.equiv "nw::g3d::ShapeObj::ClearBlendWeights()", _text + 0x6808E4
	.equiv "nw::g3d::ShapeObj::Init()", _text + 0x680924
	.equiv "nw::g3d::ShapeObj::CalcBlockBufferSize()", _text + 0x680B44
	.equiv "nw::g3d::ShapeObj::SetupBlockBuffer()", _text + 0x680B5C
	.equiv "nw::g3d::ShapeObj::CalcBounding()", _text + 0x680D90
	.equiv "nw::g3d::ShapeObj::CalcSubBounding()", _text + 0x680EAC
	.equiv "nw::g3d::ShapeObj::CalcShpBlock()", _text + 0x680FE4
	.equiv "nw::g3d::ShapeObj::TestSubMeshIntersection()", _text + 0x681178
	.equiv "nw::g3d::ShapeObj::TestSubMeshLodIntersection()", _text + 0x6812A0
	.equiv "nw::g3d::ShapeObj::MakeSubMeshRange()", _text + 0x6814BC
	.equiv "nw::g3d::ShapeObj::MakeSubMeshLodRange()", _text + 0x681578
	.equiv "nw::g3d::ModelObj::Sizer::Calc()", _text + 0x68162C
	.equiv "nw::g3d::ModelObj::CalcBufferSize()", _text + 0x6818C4
	.equiv "nw::g3d::ModelObj::ClearBoneVisibility()", _text + 0x6818FC
	.equiv "nw::g3d::ModelObj::ClearMatVisibility()", _text + 0x681968
	.equiv "nw::g3d::ModelObj::Init()", _text + 0x6819D0
	.equiv "nw::g3d::ModelObj::CalcBlockBufferSize()", _text + 0x681E6C
	.equiv "nw::g3d::ModelObj::SetupBlockBuffer()", _text + 0x681F50
	.equiv "nw::g3d::ModelObj::CalcShape()", _text + 0x6821E4
	.equiv "nw::g3d::ModelObj::CalcView()", _text + 0x682288
	.equiv "nw::g3d::res::ResAnimCurve::WrapFrame()", _text + 0x6824B8
	.equiv "nw::g3d::res::ResAnimCurve::EvalFloat()", _text + 0x6825F8
	.equiv "nw::g3d::res::ResAnimCurve::EvalInt()", _text + 0x6826AC
	.equiv "nw::g3d::ShadingModelObj::Sizer::Calc()", _text + 0x682760
	.equiv "nw::g3d::ShadingModelObj::CalcBufferSize()", _text + 0x6827D0
	.equiv "nw::g3d::res::ResShadingModel::GetStaticKey()", _text + 0x6827FC
	.equiv "nw::g3d::res::ResShaderOption::WriteStaticKey()", _text + 0x682830
	.equiv "nw::g3d::res::ResShadingModel::WriteDefaultStaticKey()", _text + 0x68285C
	.equiv "nw::g3d::ShadingModelObj::Init()", _text + 0x6829CC
	.equiv "nw::g3d::ShadingModelObj::CalcBlockBufferSize()", _text + 0x682B9C
	.equiv "nw::g3d::ShadingModelObj::SetupBlockBuffer()", _text + 0x682BE4
	.equiv "nw::g3d::ShadingModelObj::CleanupBlockBuffer()", _text + 0x682CF4
	.equiv "nw::g3d::res::ResShaderOption::ReadStaticKey()", _text + 0x682D04
	.equiv "nw::g3d::ShadingModelObj::CalcOptionBlock()", _text + 0x682D24
	.equiv "nw::g3d::ShadingModelObj::WriteStaticKey()", _text + 0x682E48
	.equiv "nw::g3d::ShadingModelObj::ClearStaticKey()", _text + 0x682EF4
	.equiv "nw::g3d::res::ResShadingModel::PrintKeyTo()", _text + 0x682F90
	.equiv "nw::g3d::ShadingModelObj::PrintKeyTo()", _text + 0x683070
	.equiv "nw::g3d::ShadingModelObj::PrintRawKeyTo()", _text + 0x683180
	.equiv "nw::g3d::res::ResShadingModel::PrintStaticOptionTo()", _text + 0x68319C
	.equiv "nw::g3d::ShadingModelObj::PrintOptionTo()", _text + 0x6833C4
	.equiv "nw::g3d::ShaderSelector::Sizer::Calc()", _text + 0x6834E4
	.equiv "nw::g3d::ShaderSelector::CalcBufferSize()", _text + 0x68354C
	.equiv "nw::g3d::res::ResShadingModel::FindProgramIndex()", _text + 0x683578
	.equiv "nw::g3d::res::ResShadingModel::GetDynamicKey()", _text + 0x6836D8
	.equiv "nw::g3d::res::ResShaderOption::WriteDynamicKey()", _text + 0x683714
	.equiv "nw::g3d::res::ResShadingModel::WriteDefaultDynamicKey()", _text + 0x683744
	.equiv "nw::g3d::res::ResShadingModel::WriteInvalidDynamicKey()", _text + 0x6838C4
	.equiv "nw::g3d::ShaderSelector::Init()", _text + 0x6838E8
	.equiv "nw::g3d::ShaderSelector::UpdateVariation()", _text + 0x683AD4
	.equiv "nw::g3d::ShaderSelector::WriteDynamicKey()", _text + 0x683C44
	.equiv "nw::g3d::ShaderSelector::ClearDynamicKey()", _text + 0x683C90
	.equiv "nw::g3d::res::ResShaderOption::ReadDynamicKey()", _text + 0x683D34
	.equiv "nw::g3d::ShaderSelector::PrintKeyTo()", _text + 0x683D5C
	.equiv "nw::g3d::ShaderSelector::PrintRawKeyTo()", _text + 0x683E60
	.equiv "nw::g3d::res::ResShadingModel::PrintDynamicOptionTo()", _text + 0x683E80
	.equiv "nw::g3d::ShaderSelector::PrintOptionTo()", _text + 0x6840A4
	.equiv "nw::g3d::ShaderSelector::PrintRawOptionTo()", _text + 0x6841A8
	.equiv "nw::g3d::ShaderParamAnimObj::Sizer::Calc()", _text + 0x6841B8
	.equiv "nw::g3d::ShaderParamAnimObj::Init()", _text + 0x68429C
	.equiv "nw::g3d::ShaderParamAnimObj::CalcBufferSize()", _text + 0x6843F4
	.equiv "FUN_0E804420:nw::g3d::res::<unnamed>::GetBit()", _text + 0x684420
	.equiv "FUN_0E804448:nw::g3d::res::<unnamed>::GetBit()", _text + 0x684448
	.equiv "FUN_0E804458:nw::g3d::res::ResDicPatricia::FindNode()", _text + 0x684458
	.equiv "FUN_0E804554:nw::g3d::res::ResDicPatricia::FindIndex()", _text + 0x684554
	.equiv "nw::g3d::ShaderParamAnimObj::SubBind()", _text + 0x6845B4
	.equiv "FUN_0E80468C:nw::g3d::ShaderParamAnimObj::Bind()", _text + 0x68468C
	.equiv "FUN_0E804858:nw::g3d::ShaderParamAnimObj::Bind()", _text + 0x684858
	.equiv "nw::g3d::ShaderParamAnimObj::Calc()", _text + 0x684A04
	.equiv "FUN_0E804B74:nw::g3d::ShaderParamAnimObj::ApplyTo()", _text + 0x684B74
	.equiv "FUN_0E804D6C:nw::g3d::ShaderParamAnimObj::ApplyTo()", _text + 0x684D6C
	.equiv "nw::g3d::ShaderParamAnimObj::SetResource()", _text + 0x684DEC
	.equiv "FUN_0E804EAC:nw::g3d::res::ResDicPatricia::FindNode()", _text + 0x684EAC
	.equiv "FUN_0E804F8C:nw::g3d::res::ResDicPatricia::FindIndex()", _text + 0x684F8C
	.equiv "FUN_0E805000:nw::g3d::res::ResDicPatricia::Find()", _text + 0x685000
	.equiv "nw::g3d::ShaderUtility::BindShaderParam()", _text + 0x685074
	.equiv "nw::g3d::SkeletalAnimObj::Sizer::Calc()", _text + 0x685170
	.equiv "nw::g3d::SkeletalAnimObj::Init()", _text + 0x685248
	.equiv "nw::g3d::SkeletalAnimObj::CalcBufferSize()", _text + 0x6853A0
	.equiv "nw::g3d::res::ResBoneAnim::Init()", _text + 0x6853CC
	.equiv "nw::g3d::SkeletalAnimObj::ClearResult()", _text + 0x685548
	.equiv "nw::g3d::SkeletalAnimObj::Bind()", _text + 0x6855F0
	.equiv "nw::g3d::res::ResSkeleton::GetBranchEndIndex()", _text + 0x6857A8
	.equiv "nw::g3d::SkeletalAnimObj::SetBindFlag()", _text + 0x685824
	.equiv "nw::g3d::SkeletalAnimObj::Calc()", _text + 0x6858CC
	.equiv "nw::g3d::SkeletalAnimObj::ApplyTo()", _text + 0x685960
	.equiv "nw::g3d::SkeletalAnimObj::SetResource()", _text + 0x6859AC
	.equiv "nw::g3d::SkeletalAnimObj::LCMount()", _text + 0x685B0C
	.equiv "nw::g3d::SkeletalAnimObj::LCUnmount()", _text + 0x685BE0
	.equiv "FUN_0E805C88:nw::g3d::res::ResBoneAnim::Eval()", _text + 0x685C88
	.equiv "FUN_0E805D20:nw::g3d::res::ResBoneAnim::Eval()", _text + 0x685D20
	.equiv "nw::g3d::SkeletalAnimBlender::Sizer::Calc()", _text + 0x685DD0
	.equiv "nw::g3d::SkeletalAnimBlender::Init()", _text + 0x685DFC
	.equiv "nw::g3d::SkeletalAnimBlender::CalcBufferSize()", _text + 0x685EA0
	.equiv "nw::g3d::SkeletalAnimBlender::ClearResult()", _text + 0x685ED0
	.equiv "nw::g3d::SkeletalAnimBlender::Blend()", _text + 0x685EF8
	.equiv "nw::g3d::SkeletalAnimBlender::ApplyTo()", _text + 0x685FF4
	.equiv "nw::g3d::SkeletalAnimBlender::LCMount()", _text + 0x686090
	.equiv "nw::g3d::SkeletalAnimBlender::LCUnmount()", _text + 0x686164
	.equiv "nw::g3d::TexPatternAnimObj::Sizer::Calc()", _text + 0x68620C
	.equiv "nw::g3d::TexPatternAnimObj::Init()", _text + 0x68630C
	.equiv "nw::g3d::TexPatternAnimObj::CalcBufferSize()", _text + 0x686468
	.equiv "nw::g3d::TexPatternAnimObj::SubBind()", _text + 0x686494
	.equiv "nw::g3d::res::ResTexPatternMatAnim::Init()", _text + 0x686568
	.equiv "nw::g3d::TexPatternAnimObj::ClearResult()", _text + 0x6865A8
	.equiv "FUN_0E806600:nw::g3d::TexPatternAnimObj::Bind()", _text + 0x686600
	.equiv "FUN_0E8067D4:nw::g3d::TexPatternAnimObj::Bind()", _text + 0x6867D4
	.equiv "FUN_0E806988:nw::g3d::res::ResTexPatternMatAnim::Eval()", _text + 0x686988
	.equiv "FUN_0E806A6C:nw::g3d::res::ResTexPatternMatAnim::Eval()", _text + 0x686A6C
	.equiv "nw::g3d::TexPatternAnimObj::Calc()", _text + 0x686B64
	.equiv "FUN_0E806CC4:nw::g3d::TexPatternAnimObj::ApplyTo()", _text + 0x686CC4
	.equiv "FUN_0E806D30:nw::g3d::TexPatternAnimObj::ApplyTo()", _text + 0x686D30
	.equiv "nw::g3d::TexPatternAnimObj::SetResource()", _text + 0x686DB0
	.equiv "nw::g3d::VisibilityAnimObj::Sizer::Calc()", _text + 0x686EEC
	.equiv "nw::g3d::VisibilityAnimObj::Init()", _text + 0x687030
	.equiv "nw::g3d::VisibilityAnimObj::CalcBufferSize()", _text + 0x6871E4
	.equiv "nw::g3d::VisibilityAnimObj::ClearResult()", _text + 0x687210
	.equiv "nw::g3d::VisibilityAnimObj::Bind()", _text + 0x687240
	.equiv "nw::g3d::VisibilityAnimObj::Calc()", _text + 0x68747C
	.equiv "nw::g3d::VisibilityAnimObj::ApplyTo()", _text + 0x687640
	.equiv "nw::g3d::VisibilityAnimObj::SetResource()", _text + 0x687710
	.equiv "nw::g3d::fnd::GfxBuffer::LoadVertices()", _text + 0x6877D8
	.equiv "FUN_0E807818:FID_conflict:nw::g3d::fnd::GfxBuffer::LoadVertexUniforms()", _text + 0x687818
	.equiv "FUN_0E807854:FID_conflict:nw::g3d::fnd::GfxBuffer::LoadVertexUniforms()", _text + 0x687854
	.equiv "FUN_0E807890:FID_conflict:nw::g3d::fnd::GfxBuffer::LoadVertexUniforms()", _text + 0x687890
	.equiv "nw::g3d::fnd::GfxSampler::GetMinLOD()", _text + 0x6878E4
	.equiv "nw::g3d::fnd::GfxSampler::GetMaxLOD()", _text + 0x687914
	.equiv "nw::g3d::fnd::GfxSampler::GetLODBias()", _text + 0x687944
	.equiv "nw::g3d::fnd::GfxTexture::DCFlush()", _text + 0x687990
	.equiv "nw::g3d::fnd::GfxTexture::SetImagePtrs()", _text + 0x6879E8
	.equiv "nw::g3d::fnd::GfxFetchShader::GfxFetchShader()", _text + 0x687A18
	.equiv "nw::g3d::fnd::GfxFetchShader::DCFlush()", _text + 0x687A6C
	.equiv "nw::g3d::fnd::GfxFetchShader::CalcSize()", _text + 0x687A98
	.equiv "FUN_0E807AD4:nw::g3d::fnd::GfxFetchShader::GetVFInst()", _text + 0x687AD4
	.equiv "nw::g3d::fnd::GfxFetchShader::SetVertexBuffer()", _text + 0x687AE8
	.equiv "FUN_0E807B18:nw::g3d::fnd::GfxFetchShader::GetVFInst()", _text + 0x687B18
	.equiv "nw::g3d::fnd::GfxFetchShader::GetVertexBuffer()", _text + 0x687B2C
	.equiv "nw::g3d::fnd::GfxFetchShader::SetDefault()", _text + 0x687B58
	.equiv "nw::g3d::fnd::GfxFetchShader::SetLocation()", _text + 0x687C9C
	.equiv "nw::g3d::fnd::GfxFetchShader::GetLocation()", _text + 0x687CCC
	.equiv "nw::g3d::fnd::GfxFetchShader::SetBufferSlot()", _text + 0x687CF8
	.equiv "nw::g3d::fnd::GfxFetchShader::GetBufferSlot()", _text + 0x687D24
	.equiv "nw::g3d::fnd::GfxFetchShader::SetFormat()", _text + 0x687D4C
	.equiv "nw::g3d::fnd::<unnamed>::FindInternalFormat()", _text + 0x687DE4
	.equiv "nw::g3d::fnd::GfxFetchShader::GetFormat()", _text + 0x687E3C
	.equiv "nw::g3d::fnd::GfxFetchShader::SetOffset()", _text + 0x687EC0
	.equiv "nw::g3d::fnd::GfxFetchShader::GetOffset()", _text + 0x687EF0
	.equiv "nw::g3d::fnd::GfxPolygonCtrl::SetDefault()", _text + 0x687F20
	.equiv "nw::g3d::fnd::GfxPolygonCtrl::SetCullFront()", _text + 0x687F30
	.equiv "nw::g3d::fnd::GfxPolygonCtrl::SetCullBack()", _text + 0x687F40
	.equiv "nw::g3d::fnd::GfxPolygonCtrl::SetPolygonModeEnable()", _text + 0x687F68
	.equiv "nw::g3d::fnd::GfxPolygonCtrl::SetPolygonModeFront()", _text + 0x687F78
	.equiv "nw::g3d::fnd::GfxPolygonCtrl::SetPolygonModeBack()", _text + 0x687F88
	.equiv "nw::g3d::fnd::GfxPolygonCtrl::SetPolygonOffsetFrontEnable()", _text + 0x687F98
	.equiv "nw::g3d::fnd::GfxPolygonCtrl::SetPolygonOffsetBackEnable()", _text + 0x687FA8
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetDefault()", _text + 0x687FBC
	.equiv "FUN_0E807FCC:FID_conflict:nw::g3d::fnd::GfxColorCtrl::SetMultiWriteEnable()", _text + 0x687FCC
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetDepthWriteEnable()", _text + 0x687FDC
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetDepthFunc()", _text + 0x687FEC
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetStencilTestEnable()", _text + 0x687FFC
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetBackStencilEnable()", _text + 0x68800C
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetFrontStencilFunc()", _text + 0x68801C
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetFrontStencilZPass()", _text + 0x68802C
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetFrontStencilZFail()", _text + 0x68803C
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetFrontStencilFail()", _text + 0x68804C
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetBackStencilFunc()", _text + 0x68805C
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetBackStencilZPass()", _text + 0x68806C
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetBackStencilZFail()", _text + 0x68807C
	.equiv "nw::g3d::fnd::GfxDepthCtrl::SetBackStencilFail()", _text + 0x68808C
	.equiv "nw::g3d::fnd::GfxStencilMask::SetDefault()", _text + 0x6880A0
	.equiv "FUN_0E8080B4:FID_conflict:nw::g3d::fnd::GfxStencilMask::SetValueMaskFront()", _text + 0x6880B4
	.equiv "FUN_0E8080C4:FID_conflict:nw::g3d::fnd::GfxColorCtrl::SetLogicOp()", _text + 0x6880C4
	.equiv "nw::g3d::fnd::GfxStencilMask::SetRefValueFront()", _text + 0x6880D4
	.equiv "nw::g3d::fnd::GfxStencilMask::SetValueMaskBack()", _text + 0x6880E4
	.equiv "nw::g3d::fnd::GfxStencilMask::SetWriteMaskBack()", _text + 0x6880F4
	.equiv "nw::g3d::fnd::GfxStencilMask::SetRefValueBack()", _text + 0x688104
	.equiv "nw::g3d::fnd::GfxAlphaTest::SetDefault()", _text + 0x688118
	.equiv "nw::g3d::fnd::GfxAlphaTest::SetAlphaTestEnable()", _text + 0x68812C
	.equiv "nw::g3d::fnd::GfxAlphaTest::SetAlphaFunc()", _text + 0x68813C
	.equiv "nw::g3d::fnd::GfxAlphaTest::SetRefValue()", _text + 0x68814C
	.equiv "nw::g3d::fnd::GfxAlphaTest::GetRefValue()", _text + 0x688164
	.equiv "FUN_0E80818C:FID_conflict:nw::g3d::fnd::GfxColorCtrl::SetLogicOp()", _text + 0x68818C
	.equiv "FUN_0E80819C:FID_conflict:nw::g3d::fnd::GfxStencilMask::SetValueMaskFront()", _text + 0x68819C
	.equiv "FUN_0E8081AC:FID_conflict:nw::g3d::fnd::GfxColorCtrl::SetMultiWriteEnable()", _text + 0x6881AC
	.equiv "nw::g3d::fnd::GfxColorCtrl::SetColorBufferEnable()", _text + 0x6881BC
	.equiv "nw::g3d::fnd::GfxBlendCtrl::Load()", _text + 0x6881D4
	.equiv "nw::g3d::fnd::GfxBlendCtrl::SetDefault()", _text + 0x688204
	.equiv "nw::g3d::fnd::GfxBlendCtrl::SetColorSrcBlend()", _text + 0x68821C
	.equiv "nw::g3d::fnd::GfxBlendCtrl::SetColorDstBlend()", _text + 0x68822C
	.equiv "nw::g3d::fnd::GfxBlendCtrl::SetColorCombine()", _text + 0x68823C
	.equiv "nw::g3d::fnd::GfxBlendCtrl::SetSeparateAlphaBlend()", _text + 0x68824C
	.equiv "nw::g3d::fnd::GfxBlendCtrl::SetAlphaSrcBlend()", _text + 0x68825C
	.equiv "nw::g3d::fnd::GfxBlendCtrl::SetAlphaDstBlend()", _text + 0x68826C
	.equiv "nw::g3d::fnd::GfxBlendCtrl::SetAlphaCombine()", _text + 0x68827C
	.equiv "nw::g3d::fnd::GfxBlendColor::SetConstantColor()", _text + 0x688298
	.equiv "nw::g3d::fnd::GfxPolygonOffset::SetFrontScale()", _text + 0x6882C8
	.equiv "nw::g3d::fnd::GfxPolygonOffset::SetBackScale()", _text + 0x6882E4
	.equiv "nw::g3d::fnd::GfxChannelMasks::SetChannelMask()", _text + 0x688318
	.equiv "nw::g3d::res::ResAnimCurve::CalcBakedFloatSize()", _text + 0x68837C
	.equiv "nw::g3d::res::ResAnimCurve::BakeFloat()", _text + 0x688414
	.equiv "nw::g3d::res::ResAnimCurve::CalcBakedIntSize()", _text + 0x688568
	.equiv "nw::g3d::res::ResAnimCurve::ResetFloat()", _text + 0x6887A8
	.equiv "nw::g3d::res::ResAnimCurve::ResetInt()", _text + 0x68884C
	.equiv "nw::g3d::res::ResAnimCurve::EvalBakedBool()", _text + 0x6888E8
	.equiv "FUN_0E808948:nw::g3d::res::ResDicPatricia::Find()", _text + 0x688948
	.equiv "nw::g3d::res::ResTexture::Setup()", _text + 0x6889A8
	.equiv "nw::g3d::res::ResTextureRef::Bind()", _text + 0x688A24
	.equiv "nw::g3d::res::ResShaderParam::ConvertSrt3dCallback()", _text + 0x688BD4
	.equiv "nw::g3d::res::ResMaterial::Setup()", _text + 0x688E84
	.equiv "nw::g3d::res::ResMaterial::Bind()", _text + 0x688F88
	.equiv "nw::g3d::res::ResMaterial::Release()", _text + 0x689008
	.equiv "nw::g3d::res::ResBuffer::Setup()", _text + 0x689060
	.equiv "nw::g3d::res::ResVertex::Setup()", _text + 0x6890BC
	.equiv "nw::g3d::res::ResMesh::DrawSubMesh()", _text + 0x689190
	.equiv "nw::g3d::res::ResShape::Setup()", _text + 0x689264
	.equiv "nw::g3d::res::ResModel::Setup()", _text + 0x6893A8
	.equiv "nw::g3d::res::ResModel::Bind()", _text + 0x689720
	.equiv "nw::g3d::res::ResModel::Release()", _text + 0x6897AC
	.equiv "nw::g3d::res::ResCameraAnim::ResetCurve()", _text + 0x689820
	.equiv "nw::g3d::res::ResLightAnim::ResetCurve()", _text + 0x6898F4
	.equiv "nw::g3d::res::ResFogAnim::ResetCurve()", _text + 0x6899C8
	.equiv "nw::g3d::res::ResShaderProgram::Setup()", _text + 0x689BDC
	.equiv "nw::g3d::res::ResShadingModel::Setup()", _text + 0x689EE8
	.equiv "nw::g3d::res::ResShadingModel::FindProgramRange()", _text + 0x689FC0
	.equiv "nw::g3d::res::ResShaderArchive::Setup()", _text + 0x68A39C
	.equiv "nw::g3d::res::ResShaderArchive::IsValid()", _text + 0x68A4B8
	.equiv "nw::g3d::res::ResShaderParamMatAnim::PreBind()", _text + 0x68A4FC
	.equiv "nw::g3d::res::ResShaderParamAnim::PreBind()", _text + 0x68A59C
	.equiv "nw::g3d::res::ResShaderParamAnim::ResetCurve()", _text + 0x68A6AC
	.equiv "nw::g3d::res::ResShapeAnim::ResetCurve()", _text + 0x68A858
	.equiv "nw::g3d::res::ResSkeletalAnim::PreBind()", _text + 0x68AA00
	.equiv "nw::g3d::res::ResSkeletalAnim::BakeCurve()", _text + 0x68AB00
	.equiv "nw::g3d::res::ResSkeletalAnim::ResetCurve()", _text + 0x68AC18
	.equiv "nw::g3d::res::ResTexPatternMatAnim::PreBind()", _text + 0x68AD64
	.equiv "nw::g3d::res::ResTexPatternAnim::Bind()", _text + 0x68AE04
	.equiv "nw::g3d::res::ResTexPatternAnim::Release()", _text + 0x68AE9C
	.equiv "nw::g3d::res::ResTexPatternAnim::PreBind()", _text + 0x68AF0C
	.equiv "nw::g3d::res::ResTexPatternAnim::ResetCurve()", _text + 0x68B01C
	.equiv "nw::g3d::res::ResVisibilityAnim::PreBind()", _text + 0x68B1C4
	.equiv "nw::g3d::res::ResVisibilityAnim::ResetCurve()", _text + 0x68B30C
	.equiv "nw::g3d::res::ResFile::Setup()", _text + 0x68B424
	.equiv "nw::g3d::res::ResFile::Bind()", _text + 0x68B8E0
	.equiv "nw::g3d::res::ResFile::Release()", _text + 0x68B9D4
	.equiv "FUN_0E80C570:void_nw::g3d::SkeletonObj::CalcWorldImpl()", _text + 0x68C570
	.equiv "FUN_0E80C838:void_nw::g3d::SkeletonObj::CalcWorldImpl()", _text + 0x68C838
	.equiv "FUN_0E80CD00:void_nw::g3d::SkeletonObj::CalcWorldImpl()", _text + 0x68CD00
	.equiv "FUN_0E80D39C:void_nw::g3d::SkeletonObj::CalcWorldImpl()", _text + 0x68D39C
	.equiv "FUN_0E80D908:void_nw::g3d::SkeletonObj::CalcWorldImpl()", _text + 0x68D908
	.equiv "FUN_0E80DC9C:void_nw::g3d::SkeletonObj::CalcWorldImpl()", _text + 0x68DC9C
	.equiv "FUN_0E80E258:void_nw::g3d::SkeletonObj::CalcWorldImpl()", _text + 0x68E258
	.equiv "FUN_0E80E9C0:void_nw::g3d::SkeletonObj::CalcWorldImpl()", _text + 0x68E9C0
	.equiv "FUN_0E80F030:void_nw::g3d::res::ResShaderParam::Convert()", _text + 0x68F030
	.equiv "FUN_0E80F0D4:void_nw::g3d::MaterialObj::ConvertDirtyParams()", _text + 0x68F0D4
	.equiv "FUN_0E80F228:void_nw::g3d::res::ResShaderParam::Convert()", _text + 0x68F228
	.equiv "FUN_0E80F2D4:void_nw::g3d::MaterialObj::ConvertDirtyParams()", _text + 0x68F2D4
	.equiv "FUN_0E80F40C:void_nw::g3d::res::ResShaderParamMatAnim::EvalImpl()", _text + 0x68F40C
	.equiv "FUN_0E80F550:void_nw::g3d::res::ResShaderParamMatAnim::EvalImpl()", _text + 0x68F550
	.equiv "FUN_0E80F6C8:FID_conflict:void_nw::g3d::SkeletalAnimObj::CalcImpl()", _text + 0x68F6C8
	.equiv "FUN_0E80F824:void_nw::g3d::SkeletalAnimObj::ApplyToImpl()", _text + 0x68F824
	.equiv "FUN_0E80FAD0:FID_conflict:void_nw::g3d::SkeletalAnimObj::CalcImpl()", _text + 0x68FAD0
	.equiv "FUN_0E80FC2C:void_nw::g3d::SkeletalAnimObj::ApplyToImpl()", _text + 0x68FC2C
	.equiv "FUN_0E80FD8C:void_nw::g3d::SkeletalAnimBlender::BlendImpl()", _text + 0x68FD8C
	.equiv "FUN_0E80FEF4:void_nw::g3d::SkeletalAnimBlender::BlendImpl()", _text + 0x68FEF4
	.equiv "FUN_0E810160:void_nw::g3d::SkeletalAnimBlender::BlendImpl()", _text + 0x690160
	.equiv "FUN_0E81063C:void_nw::g3d::SkeletalAnimBlender::BlendImpl()", _text + 0x69063C
	.equiv "FUN_0E811638:void_nw::g3d::SkeletalAnimBlender::ApplyToImpl()", _text + 0x691638
	.equiv "FUN_0E811888:void_nw::g3d::SkeletalAnimBlender::ApplyToImpl()", _text + 0x691888
	.equiv "FUN_0E811A8C:void_nw::g3d::SkeletalAnimBlender::ApplyToImpl()", _text + 0x691A8C
	.equiv "FUN_0E811C58:void_nw::g3d::SkeletalAnimBlender::ApplyToImpl()", _text + 0x691C58
	.equiv "void_nw::g3d::res::ResAnimCurve::BakeImpl()", _text + 0x691DCC
	.equiv "FUN_0E812104:void_nw::g3d::res::ResAnimCurve::FindFrame()", _text + 0x692104
	.equiv "FUN_0E812260:void_nw::g3d::res::ResAnimCurve::FindFrame()", _text + 0x692260
	.equiv "FUN_0E8127D4:float_nw::g3d::res::ResAnimCurve::EvalBakedFloat()", _text + 0x6927D4
	.equiv "FUN_0E81286C:float_nw::g3d::res::ResAnimCurve::EvalBakedFloat()", _text + 0x69286C
	.equiv "FUN_0E81291C:float_nw::g3d::res::ResAnimCurve::EvalBakedFloat()", _text + 0x69291C
	.equiv "FUN_0E8129C4:int_nw::g3d::res::ResAnimCurve::EvalBakedInt()", _text + 0x6929C4
	.equiv "FUN_0E812A14:int_nw::g3d::res::ResAnimCurve::EvalBakedInt()", _text + 0x692A14
	.equiv "FUN_0E812A64:int_nw::g3d::res::ResAnimCurve::EvalBakedInt()", _text + 0x692A64
	.equiv "nw::lyt::AnimTransform::AnimTransform()", _text + 0x692AB4
	.equiv "nw::lyt::AnimTransform::IsLoopData()", _text + 0x692B44
	.equiv "nw::lyt::AnimTransformBasic::AnimTransformBasic()", _text + 0x692B6C
	.equiv "nw::lyt::AnimTransformBasic::BindPaneImpl()", _text + 0x692E88
	.equiv "nw::lyt::AnimTransformBasic::BindMaterialImpl()", _text + 0x692EC4
	.equiv "nw::lyt::AnimTransformBasic::BindGroup()", _text + 0x693134
	.equiv "nw::lyt::<unnamed>::GetHermiteCurveValue()", _text + 0x69330C
	.equiv "nw::lyt::<unnamed>::AnimatePaneSRT()", _text + 0x693470
	.equiv "nw::lyt::<unnamed>::GetStepCurveValue()", _text + 0x693514
	.equiv "nw::lyt::<unnamed>::AnimateVisibility()", _text + 0x6935E0
	.equiv "nw::lyt::<unnamed>::AnimateVertexColor()", _text + 0x693678
	.equiv "nw::lyt::AnimTransformBasic::AnimatePaneImpl()", _text + 0x6937A4
	.equiv "nw::lyt::<unnamed>::AnimateMaterialColor()", _text + 0x693880
	.equiv "nw::lyt::<unnamed>::AnimateTextureSRT()", _text + 0x6939D4
	.equiv "nw::lyt::<unnamed>::AnimateTexturePattern()", _text + 0x693A88
	.equiv "nw::lyt::<unnamed>::AnimateIndirectSRT()", _text + 0x693B3C
	.equiv "nw::lyt::<unnamed>::AnimateAlphaCompare()", _text + 0x693C10
	.equiv "nw::lyt::<unnamed>::AnimateFontShadow()", _text + 0x693CEC
	.equiv "nw::lyt::AnimTransformBasic::AnimateMaterialImpl()", _text + 0x693E2C
	.equiv "nw::lyt::AnimResource::Init()", _text + 0x693F98
	.equiv "nw::lyt::AnimResource::Set()", _text + 0x693FB0
	.equiv "nw::lyt::AnimResource::GetGroupNum()", _text + 0x6940AC
	.equiv "nw::lyt::AnimResource::GetGroupArray()", _text + 0x6940C4
	.equiv "FUN_0E8140DC:bool_nw::lyt::internal::EqualsName()", _text + 0x6940DC
	.equiv "FUN_0E814118:bool_nw::lyt::internal::EqualsName()", _text + 0x694118
	.equiv "nw::lyt::Animator::Animator()", _text + 0x694154
	.equiv "FUN_0E814720:nw::lyt::GroupAnimator::Setup()", _text + 0x694720
	.equiv "FUN_0E81478C:nw::lyt::GroupAnimator::Setup()", _text + 0x69478C
	.equiv "nw::lyt::<unnamed>::GetResourceSub()", _text + 0x694850
	.equiv "nw::lyt::ArcResourceLink::Set()", _text + 0x694988
	.equiv "nw::lyt::MultiArcResourceAccessor::MultiArcResourceAccessor()", _text + 0x694A1C
	.equiv "nw::lyt::MultiArcResourceAccessor::Attach()", _text + 0x694B3C
	.equiv "nw::lyt::MultiArcResourceAccessor::GetResource()", _text + 0x694B70
	.equiv "nw::lyt::ArcExtractor::PrepareArchive()", _text + 0x694DCC
	.equiv "nw::lyt::ArcExtractor::ArcExtractor()", _text + 0x694F8C
	.equiv "nw::lyt::ArcExtractor::GetFileFast()", _text + 0x69500C
	.equiv "nw::lyt::ArcExtractor::ConvertPathToEntryID()", _text + 0x69508C
	.equiv "nw::lyt::DrawInfo::DrawInfo()", _text + 0x69520C
	.equiv "nw::lyt::DrawInfo::SetProjectionMtx()", _text + 0x69546C
	.equiv "nw::lyt::DrawInfo::GetUniformId()", _text + 0x6954AC
	.equiv "nw::lyt::DrawInfo::LoadProjectionMtx()", _text + 0x6954C0
	.equiv "nw::lyt::DrawInfo::LoadMtxModelView()", _text + 0x6954FC
	.equiv "nw::lyt::DrawInfo::SetupProgram()", _text + 0x69554C
	.equiv "nw::lyt::DrawInfo::SetShader()", _text + 0x69556C
	.equiv "nw::lyt::FontRefLink::FontRefLink()", _text + 0x6955E8
	.equiv "nw::lyt::FontRefLink::Set()", _text + 0x695630
	.equiv "nw::lyt::FontContainer::RegistFont()", _text + 0x69566C
	.equiv "nw::lyt::Group::AppendPane()", _text + 0x695804
	.equiv "nw::lyt::Group::Group()", _text + 0x695890
	.equiv "nw::lyt::Group::~Group()", _text + 0x6959B8
	.equiv "nw::lyt::GroupContainer::~GroupContainer()", _text + 0x695A64
	.equiv "nw::lyt::GroupContainer::AppendGroup()", _text + 0x695B28
	.equiv "nw::lyt::GroupContainer::FindGroupByName()", _text + 0x695B58
	.equiv "nw::lyt::Initialize()", _text + 0x695BE8
	.equiv "nw::lyt::Picture::Picture()", _text + 0x695C3C
	.equiv "nw::lyt::Picture::DrawSelf()", _text + 0x695EE0
	.equiv "nw::lyt::ResourceAccessor::ResourceAccessor()", _text + 0x696358
	.equiv "nw::lyt::TexMap::InitSampler()", _text + 0x6964F0
	.equiv "nw::lyt::TexMap::TexMap()", _text + 0x696554
	.equiv "nw::lyt::TexMap::Set()", _text + 0x6965B8
	.equiv "nw::lyt::TexMap::SetWrapMode()", _text + 0x6965EC
	.equiv "nw::lyt::TexMap::SetFilter()", _text + 0x696624
	.equiv "nw::lyt::TexMap::GetTextureInfo()", _text + 0x69665C
	.equiv "nw::lyt::internal::PaneBase::PaneBase()", _text + 0x6968D4
	.equiv "nw::lyt::Pane::Init()", _text + 0x696920
	.equiv "nw::lyt::Pane::SetName()", _text + 0x6969D8
	.equiv "nw::lyt::Pane::SetUserData()", _text + 0x696A0C
	.equiv "nw::lyt::Pane::CalcScaleFromPartsRoot()", _text + 0x696A40
	.equiv "nw::lyt::Pane::Pane()", _text + 0x696B1C
	.equiv "nw::lyt::Pane::~Pane()", _text + 0x696E78
	.equiv "nw::lyt::Pane::GetVtxPos()", _text + 0x697030
	.equiv "nw::lyt::Pane::GetMaterial()", _text + 0x6970F4
	.equiv "nw::lyt::Pane::GetExtUserDataArray()", _text + 0x69716C
	.equiv "nw::lyt::Pane::FindExtUserDataByName()", _text + 0x697180
	.equiv "nw::lyt::Pane::InsertChild()", _text + 0x69720C
	.equiv "nw::lyt::Pane::AppendChild()", _text + 0x697264
	.equiv "nw::lyt::Pane::RemoveChild()", _text + 0x697294
	.equiv "nw::lyt::Pane::FindMaterialByName()", _text + 0x697390
	.equiv "nw::lyt::Pane::CalculateMtx()", _text + 0x697484
	.equiv "nw::lyt::Pane::FindMaterialByNameRecursive()", _text + 0x6980C4
	.equiv "nw::lyt::TextBox::Init()", _text + 0x69827C
	.equiv "nw::lyt::TextBox::TextBox()", _text + 0x69833C
	.equiv "nw::lyt::TextBox::AllocStringBuffer()", _text + 0x698A3C
	.equiv "nw::lyt::TextBox::AdjustTextPos()", _text + 0x698C40
	.equiv "nw::lyt::Window::InitContent()", _text + 0x699920
	.equiv "nw::lyt::Window::InitFrame()", _text + 0x699930
	.equiv "nw::lyt::Window::Window()", _text + 0x6999EC
	.equiv "nw::lyt::Window::Frame::~Frame()", _text + 0x699E30
	.equiv "nw::lyt::Window::~Window()", _text + 0x699EC0
	.equiv "nw::lyt::Window::FindMaterialByName()", _text + 0x69A000
	.equiv "nw::lyt::Window::DrawFrame()", _text + 0x69A100
	.equiv "nw::lyt::Window::DrawFrame4()", _text + 0x69A828
	.equiv "nw::lyt::Window::DrawFrame8()", _text + 0x69B138
	.equiv "nw::lyt::Window::DrawContent()", _text + 0x69BA94
	.equiv "nw::lyt::Window::DrawAroundFrameWindow()", _text + 0x69BBEC
	.equiv "nw::lyt::Window::DrawHorizontalFrame()", _text + 0x69C34C
	.equiv "nw::lyt::Window::DrawHorizontalFrame2()", _text + 0x69C884
	.equiv "nw::lyt::Window::DrawHorizontalFrameWindow()", _text + 0x69CDD4
	.equiv "nw::lyt::Window::DrawHorizontalNocontentFrame()", _text + 0x69D1B0
	.equiv "nw::lyt::Window::DrawHorizontalNocontentFrame2()", _text + 0x69D6E8
	.equiv "nw::lyt::Window::DrawHorizontalFrameNocontentWindow()", _text + 0x69DC38
	.equiv "nw::lyt::Window::DrawSelf()", _text + 0x69DD40
	.equiv "nw::lyt::ShaderSlotDescription::EstimateBufferSize()", _text + 0x69DED8
	.equiv "nw::lyt::ShaderSlot::Initialize()", _text + 0x69DF88
	.equiv "nw::lyt::ShaderSlot::Connect()", _text + 0x69E1D8
	.equiv "nw::lyt::ShaderSlot::MakeDisplayList()", _text + 0x69E214
	.equiv "nw::lyt::ShaderSlot::GetConnection()", _text + 0x69E2D0
	.equiv "nw::lyt::ShaderSlot::GetAttribStream()", _text + 0x69E300
	.equiv "nw::lyt::ShaderSlot::SetToDevice()", _text + 0x69E328
	.equiv "FUN_0E81E3F0:nw::lyt::ShaderSetupHelper::ShaderSetupHelper()", _text + 0x69E3F0
	.equiv "nw::lyt::ShaderSetupHelper::ReadVertexShader()", _text + 0x69E448
	.equiv "nw::lyt::ShaderSetupHelper::ReadPixelShader()", _text + 0x69E560
	.equiv "nw::lyt::GraphicsResource::GetUniformList()", _text + 0x69E678
	.equiv "nw::lyt::ShaderSetupHelper::Setup()", _text + 0x6A0330
	.equiv "nw::lyt::GraphicsResource::GraphicsResource()", _text + 0x6A0A94
	.equiv "nw::lyt::GraphicsResource::InitVBO()", _text + 0x6A0C14
	.equiv "nw::lyt::GraphicsResource::Setup()", _text + 0x6A0CF4
	.equiv "nw::lyt::GraphicsResource::DrawVBO()", _text + 0x6A0D6C
	.equiv "<unnamed>::InitializeTexture()", _text + 0x6A0DE0
	.equiv "nw::lyt::LoadTexture()", _text + 0x6A0F04
	.equiv "nw::lyt::GX2SurfaceFormatToLytFormat()", _text + 0x6A1048
	.equiv "nw::lyt::Layout::AllocMemory()", _text + 0x6A1238
	.equiv "nw::lyt::Layout::FreeMemory()", _text + 0x6A1258
	.equiv "nw::lyt::Layout::Layout()", _text + 0x6A1274
	.equiv "nw::lyt::Layout::~Layout()", _text + 0x6A136C
	.equiv "nw::lyt::Layout::Build()", _text + 0x6A1488
	.equiv "nw::lyt::Layout::BuildWithName()", _text + 0x6A14EC
	.equiv "nw::lyt::Layout::GetAnimResourceData()", _text + 0x6A157C
	.equiv "nw::lyt::Layout::CreateGroupAnimator()", _text + 0x6A15EC
	.equiv "nw::lyt::Layout::CreateGroupAnimatorWithIndex()", _text + 0x6A16D8
	.equiv "nw::lyt::Layout::FindPartsPaneByName()", _text + 0x6A1B8C
	.equiv "nw::lyt::Layout::PartsBuildDataSet::FindPartsPropertyFromName()", _text + 0x6A1C38
	.equiv "nw::lyt::Layout::PartsBuildDataSet::GetExtUserDataListResBlock()", _text + 0x6A1CA8
	.equiv "nw::lyt::Layout::PartsBuildDataSet::GetPropertyResBlock()", _text + 0x6A1CC4
	.equiv "nw::lyt::Layout::PartsBuildDataSet::GetPartsPaneBasicInfoResBlock()", _text + 0x6A1CE0
	.equiv "nw::lyt::Layout::PartsBuildDataSet::PartsBuildDataSet()", _text + 0x6A1CFC
	.equiv "FUN_0E821DAC:nw::lyt::Layout::BuildImpl()", _text + 0x6A1DAC
	.equiv "nw::lyt::Layout::BuildPaneObj()", _text + 0x6A25B8
	.equiv "nw::lyt::Layout::GetLayoutResourceData()", _text + 0x6A2908
	.equiv "nw::lyt::Layout::BuildPartsLayout()", _text + 0x6A2974
	.equiv "nw::lyt::internal::TexCoordAry::TexCoordAry()", _text + 0x6A2AE4
	.equiv "nw::lyt::internal::TexCoordAry::Free()", _text + 0x6A2B28
	.equiv "nw::lyt::internal::TexCoordAry::Copy()", _text + 0x6A2C20
	.equiv "nw::lyt::internal::DrawQuad()", _text + 0x6A2C8C
	.equiv "nw::lyt::internal::DrawQuadWithTexCoords()", _text + 0x6A2D18
	.equiv "nw::lyt::internal::DrawQuad_Repeat()", _text + 0x6A2EAC
	.equiv "nw::lyt::Material::InitMatMemNums()", _text + 0x6A2F28
	.equiv "nw::lyt::Material::Init()", _text + 0x6A2F38
	.equiv "nw::lyt::Material::ReserveMem()", _text + 0x6A2F98
	.equiv "nw::lyt::Material::Material()", _text + 0x6A33D8
	.equiv "nw::lyt::Material::CalcTextureMtx()", _text + 0x6A43F4
	.equiv "nw::lyt::Material::SetupSubmaterialOf_TextureMatrix()", _text + 0x6A454C
	.equiv "nw::lyt::Material::SetupSubmaterialOf_Texture()", _text + 0x6A4FA4
	.equiv "nw::lyt::Material::CalcIndirectMtx()", _text + 0x6A5100
	.equiv "nw::lyt::Material::SetupSubmaterialOf_Tev()", _text + 0x6A522C
	.equiv "nw::lyt::Material::SetupSubmaterialOf_Blender()", _text + 0x6A57E8
	.equiv "nw::lyt::Material::SetupGraphics()", _text + 0x6A5BE4
	.equiv "nw::lyt::ControlSrc::Init()", _text + 0x6A5DA0
	.equiv "nw::lyt::Parts::Parts()", _text + 0x6A5E04
	.equiv "nw::lyt::Parts::FindMaterialByNameRecursive()", _text + 0x6A5F28
	.equiv "nw::lyt::Bounding::Bounding()", _text + 0x6A6008
	.equiv "nw::snd::internal::BasicSound::BasicSound()", _text + 0x6A6124
	.equiv "nw::snd::internal::BasicSound::ClearIsFinalizedForCannotAllocatedResourceFlag()", _text + 0x6A63BC
	.equiv "nw::snd::internal::BasicSound::SetPlayerPriority()", _text + 0x6A6434
	.equiv "nw::snd::internal::BasicSound::Stop()", _text + 0x6A6488
	.equiv "nw::snd::internal::BasicSound::ApplyCommonParam()", _text + 0x6A6678
	.equiv "nw::snd::internal::BasicSound::UpdateParam()", _text + 0x6A66E0
	.equiv "nw::snd::internal::BasicSound::Update()", _text + 0x6A6D40
	.equiv "nw::snd::internal::BasicSound::Pause()", _text + 0x6A75B4
	.equiv "nw::snd::internal::BasicSound::SetAutoStopCounter()", _text + 0x6A78C8
	.equiv "nw::snd::internal::BasicSound::FadeIn()", _text + 0x6A78E0
	.equiv "nw::snd::internal::BasicSound::IsAttachedGeneralHandle()", _text + 0x6A7C08
	.equiv "nw::snd::internal::BasicSound::IsAttachedTempGeneralHandle()", _text + 0x6A7C20
	.equiv "nw::snd::internal::BasicSound::SetInitialVolume()", _text + 0x6A7E14
	.equiv "nw::snd::internal::BasicSound::SetVolume()", _text + 0x6A7E28
	.equiv "nw::snd::internal::BasicSound::ResetOutputLine()", _text + 0x6A7ECC
	.equiv "nw::snd::internal::BasicSound::SetFxSend()", _text + 0x6A7EEC
	.equiv "nw::snd::internal::BasicSound::SetPanMode()", _text + 0x6A7EFC
	.equiv "nw::snd::internal::BasicSound::SetPanCurve()", _text + 0x6A7F84
	.equiv "nw::snd::internal::BasicSound::SetFrontBypass()", _text + 0x6A800C
	.equiv "nw::snd::internal::BasicSound::SetRemoteFilter()", _text + 0x6A8094
	.equiv "nw::snd::internal::BasicSound::SetVoiceRendererType()", _text + 0x6A811C
	.equiv "nw::snd::internal::BasicSound::SetOutputVolume()", _text + 0x6A81A4
	.equiv "nw::snd::internal::BasicSound::GetRemainingFadeFrames()", _text + 0x6A81B4
	.equiv "nw::snd::internal::BasicSound::SetAmbientInfo()", _text + 0x6A820C
	.equiv "nw::snd::internal::BasicSound::GetAmbientPriority()", _text + 0x6A82A4
	.equiv "nw::snd::internal::DriverCommand::DriverCommand()", _text + 0x6A8470
	.equiv "nw::snd::internal::DriverCommand::GetInstance()", _text + 0x6A84B8
	.equiv "nw::snd::internal::DriverCommand::GetInstanceForTaskThread()", _text + 0x6A8510
	.equiv "nw::snd::internal::DriverCommand::ProcessCommandList()", _text + 0x6A8568
	.equiv "nw::snd::internal::DriverCommand::Initialize()", _text + 0x6A9368
	.equiv "nw::snd::internal::CommandBuffer::CommandBuffer()", _text + 0x6A9418
	.equiv "nw::snd::internal::CommandBuffer::Initialize()", _text + 0x6A947C
	.equiv "nw::snd::internal::CommandManager::CommandManager()", _text + 0x6A9550
	.equiv "nw::snd::internal::CommandManager::Initialize()", _text + 0x6A966C
	.equiv "nw::snd::internal::CommandManager::PushCommand()", _text + 0x6A96E8
	.equiv "nw::snd::internal::CommandManager::TryAllocMemory()", _text + 0x6A9724
	.equiv "nw::snd::internal::CommandManager::FinalizeCommandList()", _text + 0x6A972C
	.equiv "nw::snd::internal::CommandManager::RecvCommandReply()", _text + 0x6A9750
	.equiv "nw::snd::internal::CommandManager::AllocMemory()", _text + 0x6A97B4
	.equiv "nw::snd::internal::CommandManager::FlushCommand()", _text + 0x6A9808
	.equiv "nw::snd::internal::CommandManager::ProcessCommand()", _text + 0x6A9958
	.equiv "nw::snd::internal::CommandManager::IsFinishCommand()", _text + 0x6A9A40
	.equiv "nw::snd::internal::ExternalSoundPlayer::StopAllSound()", _text + 0x6A9BAC
	.equiv "nw::snd::internal::ExternalSoundPlayer::GetLowestPrioritySound()", _text + 0x6A9C30
	.equiv "nw::snd::internal::ExternalSoundPlayer::SetPlayableSoundCount()", _text + 0x6A9CB4
	.equiv "nw::snd::internal::ExternalSoundPlayer::detail_CanPlaySound()", _text + 0x6A9D14
	.equiv "nw::snd::internal::ExternalSoundPlayer::AppendSound()", _text + 0x6A9D9C
	.equiv "nw::snd::internal::ExternalSoundPlayer::RemoveSound()", _text + 0x6A9EC4
	.equiv "nw::snd::internal::ExternalSoundPlayer::Finalize()", _text + 0x6A9F0C
	.equiv "nw::snd::internal::FrameHeap::ProcessCallback()", _text + 0x6AA020
	.equiv "nw::snd::internal::FrameHeap::Section::~Section()", _text + 0x6AA1A4
	.equiv "nw::snd::internal::FrameHeap::ClearSection()", _text + 0x6AA2B0
	.equiv "nw::snd::internal::FrameHeap::Section::AppendBlock()", _text + 0x6AA5F4
	.equiv "nw::snd::internal::FrameHeap::Alloc()", _text + 0x6AA628
	.equiv "nw::snd::internal::driver::HardwareManager::HardwareManager()", _text + 0x6AA740
	.equiv "nw::snd::internal::driver::HardwareManager::OnMainFinalMixCallback()", _text + 0x6AA9CC
	.equiv "nw::snd::internal::driver::HardwareManager::OnDrcFinalMixCallback()", _text + 0x6AABEC
	.equiv "nw::snd::internal::driver::HardwareManager::SetBiquadFilterCallback()", _text + 0x6AAE44
	.equiv "nw::snd::internal::driver::HardwareManager::SetOutputMode()", _text + 0x6AAE5C
	.equiv "nw::snd::internal::driver::HardwareManager::Initialize()", _text + 0x6AAF60
	.equiv "nw::snd::<unnamed>::GetAxDeviceAndId()", _text + 0x6AB28C
	.equiv "nw::snd::internal::driver::HardwareManager::FinalizeEffect()", _text + 0x6AB2CC
	.equiv "nw::snd::internal::driver::HardwareManager::Finalize()", _text + 0x6AB3E0
	.equiv "nw::snd::internal::driver::HardwareManager::Update()", _text + 0x6AB4D0
	.equiv "nw::snd::<unnamed>::GetAuxDeviceSet()", _text + 0x6AB830
	.equiv "nw::snd::<unnamed>::GetAuxBusFromAuxDeviceSet()", _text + 0x6AB858
	.equiv "nw::snd::<unnamed>::GetDeviceFromAuxDeviceSet()", _text + 0x6AB878
	.equiv "nw::snd::internal::driver::HardwareManager::AuxCallbackFunc()", _text + 0x6AB890
	.equiv "nw::snd::internal::driver::HardwareManager::AppendEffect()", _text + 0x6ABA80
	.equiv "nw::snd::internal::driver::HardwareManager::ClearEffect()", _text + 0x6ABC1C
	.equiv "nw::snd::internal::driver::HardwareManager::GetOutputVolume()", _text + 0x6ABDB8
	.equiv "nw::snd::internal::driver::HardwareManager::AppendFinalMixCallback()", _text + 0x6ABF74
	.equiv "nw::snd::internal::SequenceSound::SequenceSound()", _text + 0x6AC1BC
	.equiv "nw::snd::internal::SequenceSound::Setup()", _text + 0x6AC234
	.equiv "nw::snd::internal::SequenceSound::Skip()", _text + 0x6AC2C0
	.equiv "nw::snd::internal::SequenceSound::Prepare()", _text + 0x6AC33C
	.equiv "nw::snd::internal::SequenceSound::RegisterDataLoadTask()", _text + 0x6AC490
	.equiv "nw::snd::internal::SequenceSound::SetTempoRatio()", _text + 0x6AC644
	.equiv "nw::snd::internal::SequenceSound::SetChannelPriority()", _text + 0x6AC6C0
	.equiv "FUN_0E82C93C:FID_conflict:nw::snd::StreamSoundHandle::detail_AttachSoundAsTempHandle()", _text + 0x6AC93C
	.equiv "nw::snd::SequenceSoundHandle::SequenceSoundHandle()", _text + 0x6AC9A0
	.equiv "nw::snd::SequenceSoundHandle::DetachSound()", _text + 0x6ACABC
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::GetPlayerTrack()", _text + 0x6ACAE4
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::CloseTrack()", _text + 0x6ACB04
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::FinishPlayer()", _text + 0x6ACB78
	.equiv "FID_conflict:nw::snd::internal::driver::WaveSoundLoader::IsInUse()", _text + 0x6ACC00
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::FreeLoader()", _text + 0x6ACC40
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::Finalize()", _text + 0x6ACCE4
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::InvalidateData()", _text + 0x6ACE04
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::PrepareForPlayerHeap()", _text + 0x6AD0F4
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::Skip()", _text + 0x6AD21C
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::ParseNextTick()", _text + 0x6AD28C
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::UpdateTick()", _text + 0x6AD548
	.equiv "nw::snd::internal::driver::SequenceSoundLoader::LoadInfo::LoadInfo()", _text + 0x6ADA00
	.equiv "nw::snd::internal::driver::SequenceSoundLoader::DataLoadTask::Execute()", _text + 0x6ADA78
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::InitSequenceSoundPlayer()", _text + 0x6ADCF4
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::SequenceSoundPlayer()", _text + 0x6ADD14
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::SetPlayerTrack()", _text + 0x6AE028
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::Setup()", _text + 0x6AE080
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::Prepare()", _text + 0x6AE194
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::RequestLoad()", _text + 0x6AE2C8
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::NoteOn()", _text + 0x6AE3E0
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::GetVariablePtr()", _text + 0x6AE410
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::CallSequenceUserprocCallback()", _text + 0x6AE448
	.equiv "FUN_0E82E504:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackOutputLine()", _text + 0x6AE504
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::SetTrackSilence()", _text + 0x6AE544
	.equiv "FUN_0E82E588:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackTvSurroundPan()", _text + 0x6AE588
	.equiv "FUN_0E82E5C0:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackTvSurroundPan()", _text + 0x6AE5C0
	.equiv "FUN_0E82E5F8:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackTvSurroundPan()", _text + 0x6AE5F8
	.equiv "FUN_0E82E630:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackBiquadFilter()", _text + 0x6AE630
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::SetTrackBankIndex()", _text + 0x6AE66C
	.equiv "FUN_0E82E6D4:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackVelocityRange()", _text + 0x6AE6D4
	.equiv "FUN_0E82E710:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackVelocityRange()", _text + 0x6AE710
	.equiv "FUN_0E82E74C:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackOutputLine()", _text + 0x6AE74C
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::ResetTrackOutputLine()", _text + 0x6AE78C
	.equiv "FUN_0E82E7C8:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackTvSurroundPan()", _text + 0x6AE7C8
	.equiv "FUN_0E82E800:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackTvSurroundPan()", _text + 0x6AE800
	.equiv "FUN_0E82E838:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackTvSurroundPan()", _text + 0x6AE838
	.equiv "FUN_0E82E870:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackTvSurroundPan()", _text + 0x6AE870
	.equiv "FUN_0E82E8A8:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackBiquadFilter()", _text + 0x6AE8A8
	.equiv "FUN_0E82E8E4:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackDrcPan()", _text + 0x6AE8E4
	.equiv "FUN_0E82E924:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackDrcPan()", _text + 0x6AE924
	.equiv "FUN_0E82E964:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackDrcPan()", _text + 0x6AE964
	.equiv "FUN_0E82E9A4:FID_conflict:nw::snd::internal::driver::SequenceSoundPlayer::SetTrackDrcPan()", _text + 0x6AE9A4
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::SetTrackDrcFxSend()", _text + 0x6AE9E4
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::SetLocalVariable()", _text + 0x6AEA2C
	.equiv "nw::snd::internal::driver::SequenceSoundPlayer::SetGlobalVariable()", _text + 0x6AEA3C
	.equiv "FUN_0E82EB58:FID_conflict:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AEB58
	.equiv "FUN_0E82EC0C:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AEC0C
	.equiv "FUN_0E82ECCC:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AECCC
	.equiv "FUN_0E82ED98:FID_conflict:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AED98
	.equiv "FUN_0E82EE70:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AEE70
	.equiv "FUN_0E82EF24:FID_conflict:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AEF24
	.equiv "FUN_0E82EFD8:FID_conflict:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AEFD8
	.equiv "FUN_0E82F08C:FID_conflict:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AF08C
	.equiv "FUN_0E82F164:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AF164
	.equiv "FUN_0E82F23C:void_nw::snd::internal::driver::SequenceSoundPlayer::SetTrackParam()", _text + 0x6AF23C
	.equiv "nw::snd::internal::driver::SequenceTrack::InitParam()", _text + 0x6AF3E4
	.equiv "nw::snd::internal::driver::SequenceTrack::UpdateChannelParam()", _text + 0x6AF7A8
	.equiv "nw::snd::internal::driver::SequenceTrack::ReleaseAllChannel()", _text + 0x6B00A8
	.equiv "nw::snd::internal::driver::SequenceTrack::FreeAllChannel()", _text + 0x6B0120
	.equiv "nw::snd::internal::driver::SequenceTrack::Close()", _text + 0x6B0178
	.equiv "nw::snd::internal::driver::SequenceTrack::SetSeqData()", _text + 0x6B0214
	.equiv "nw::snd::internal::driver::SequenceTrack::Open()", _text + 0x6B0224
	.equiv "nw::snd::internal::driver::SequenceTrack::ParseNextTick()", _text + 0x6B0240
	.equiv "nw::snd::internal::driver::SequenceTrack::UpdateChannelRelease()", _text + 0x6B03D8
	.equiv "nw::snd::internal::driver::SequenceTrack::UpdateChannelLength()", _text + 0x6B0408
	.equiv "nw::snd::internal::driver::SequenceTrack::AddChannel()", _text + 0x6B0494
	.equiv "nw::snd::internal::driver::SequenceTrack::NoteOn()", _text + 0x6B04A4
	.equiv "nw::snd::internal::driver::SequenceTrack::StopAllChannel()", _text + 0x6B08D8
	.equiv "nw::snd::internal::driver::SequenceTrack::SetMute()", _text + 0x6B09C4
	.equiv "nw::snd::internal::driver::SequenceTrack::SetSilence()", _text + 0x6B0A60
	.equiv "nw::snd::internal::driver::SequenceTrack::SetTrackVariable()", _text + 0x6B0B44
	.equiv "nw::snd::internal::driver::SequenceTrack::GetVariablePtr()", _text + 0x6B0B54
	.equiv "nw::snd::Sound3DActor::ClearUpdateCallback()", _text + 0x6B0C78
	.equiv "nw::snd::Sound3DActor::Finalize()", _text + 0x6B0C94
	.equiv "nw::snd::Sound3DActor::~Sound3DActor()", _text + 0x6B0D60
	.equiv "nw::snd::Sound3DActor::Initialize()", _text + 0x6B0E18
	.equiv "nw::snd::Sound3DActor::Sound3DActor()", _text + 0x6B0E88
	.equiv "nw::snd::Sound3DActor::SetupSound()", _text + 0x6B0FE4
	.equiv "nw::snd::Sound3DEngine::Sound3DEngine()", _text + 0x6B1168
	.equiv "nw::snd::Sound3DEngine::UpdateAmbientParam()", _text + 0x6B1214
	.equiv "nw::snd::Sound3DEngine::GetAmbientPriority()", _text + 0x6B1640
	.equiv "nw::snd::Sound3DParam::Sound3DParam()", _text + 0x6B1884
	.equiv "nw::snd::Sound3DManager::Sound3DManager()", _text + 0x6B195C
	.equiv "nw::snd::SoundActor::Initialize()", _text + 0x6B1CEC
	.equiv "FUN_0E831D88:nw::snd::SoundActor::SoundActor()", _text + 0x6B1D88
	.equiv "FUN_0E831E58:nw::snd::SoundActor::SoundActor()", _text + 0x6B1E58
	.equiv "nw::snd::SoundActor::Finalize()", _text + 0x6B1F10
	.equiv "nw::snd::SoundActor::~SoundActor()", _text + 0x6B1FC0
	.equiv "nw::snd::SoundActor::GetPlayingSoundCount()", _text + 0x6B20F0
	.equiv "nw::snd::SoundActor::detail_SetupSoundWithAmbientInfo()", _text + 0x6B2100
	.equiv "nw::snd::SoundArchive::SoundArchive()", _text + 0x6B21B8
	.equiv "nw::snd::SoundArchive::IsAvailable()", _text + 0x6B2224
	.equiv "nw::snd::SoundArchive::GetItemLabel()", _text + 0x6B2254
	.equiv "nw::snd::SoundArchive::GetItemId()", _text + 0x6B22C8
	.equiv "nw::snd::SoundArchive::GetSoundUserParam()", _text + 0x6B234C
	.equiv "nw::snd::SoundArchive::ReadSoundUserParam()", _text + 0x6B23BC
	.equiv "nw::snd::SoundArchive::ReadSoundInfo()", _text + 0x6B2474
	.equiv "nw::snd::SoundArchive::ReadSequenceSoundInfo()", _text + 0x6B24FC
	.equiv "nw::snd::SoundArchive::ReadBankInfo()", _text + 0x6B2584
	.equiv "nw::snd::SoundArchive::ReadPlayerInfo()", _text + 0x6B260C
	.equiv "nw::snd::SoundArchive::ReadSoundArchivePlayerInfo()", _text + 0x6B2694
	.equiv "nw::snd::SoundArchive::ReadStreamSoundInfo()", _text + 0x6B270C
	.equiv "nw::snd::SoundArchive::detail_ReadStreamSoundInfo2()", _text + 0x6B2794
	.equiv "nw::snd::SoundArchive::detail_ReadWaveSoundInfo()", _text + 0x6B281C
	.equiv "nw::snd::SoundArchive::ReadSound3DInfo()", _text + 0x6B28A4
	.equiv "nw::snd::SoundArchive::ReadWaveArchiveInfo()", _text + 0x6B292C
	.equiv "nw::snd::SoundArchive::detail_ReadSoundGroupInfo()", _text + 0x6B29B4
	.equiv "nw::snd::SoundArchive::ReadGroupInfo()", _text + 0x6B2A3C
	.equiv "nw::snd::SoundArchive::detail_ReadFileInfo()", _text + 0x6B2AC4
	.equiv "nw::snd::SoundArchive::OpenExtStreamImpl()", _text + 0x6B2B5C
	.equiv "nw::snd::SoundArchive::detail_OpenFileStream()", _text + 0x6B2C70
	.equiv "nw::snd::SoundArchive::SetExternalFileRoot()", _text + 0x6B2D58
	.equiv "nw::snd::SoundArchive::detail_GetExternalFileFullPath()", _text + 0x6B2DE0
	.equiv "nw::snd::SoundArchive::Initialize()", _text + 0x6B2ECC
	.equiv "nw::snd::internal::SoundArchiveFile::FileHeader::GetReferenceBy()", _text + 0x6B2F78
	.equiv "nw::snd::internal::SoundArchiveFile::FileHeader::GetStringBlockSize()", _text + 0x6B2FA8
	.equiv "nw::snd::internal::SoundArchiveFile::FileHeader::GetInfoBlockSize()", _text + 0x6B2FD0
	.equiv "nw::snd::internal::SoundArchiveFile::FileHeader::GetStringBlockOffset()", _text + 0x6B2FF8
	.equiv "nw::snd::internal::SoundArchiveFile::FileHeader::GetInfoBlockOffset()", _text + 0x6B3020
	.equiv "nw::snd::internal::SoundArchiveFile::FileHeader::GetFileBlockOffset()", _text + 0x6B3048
	.equiv "nw::snd::internal::SoundArchiveFile::StringBlockBody::GetSection()", _text + 0x6B3070
	.equiv "nw::snd::internal::SoundArchiveFile::StringBlockBody::GetString()", _text + 0x6B3094
	.equiv "nw::snd::internal::SoundArchiveFile::PatriciaTree::GetNodeDataBy()", _text + 0x6B30F0
	.equiv "nw::snd::internal::SoundArchiveFile::InfoBlockBody::GetSoundInfo()", _text + 0x6B324C
	.equiv "nw::snd::internal::SoundArchiveFile::InfoBlockBody::GetBankInfo()", _text + 0x6B32C4
	.equiv "nw::snd::internal::SoundArchiveFile::InfoBlockBody::GetPlayerInfo()", _text + 0x6B333C
	.equiv "nw::snd::internal::SoundArchiveFile::InfoBlockBody::GetSoundGroupInfo()", _text + 0x6B33B4
	.equiv "nw::snd::internal::SoundArchiveFile::InfoBlockBody::GetGroupInfo()", _text + 0x6B342C
	.equiv "nw::snd::internal::SoundArchiveFile::InfoBlockBody::GetWaveArchiveInfo()", _text + 0x6B34A4
	.equiv "nw::snd::internal::SoundArchiveFile::InfoBlockBody::GetFileInfo()", _text + 0x6B351C
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::GetStringId()", _text + 0x6B3668
	.equiv "nw::snd::internal::SoundArchiveFile::BankInfo::GetStringId()", _text + 0x6B3684
	.equiv "nw::snd::internal::SoundArchiveFile::WaveArchiveInfo::GetStringId()", _text + 0x6B36A0
	.equiv "nw::snd::internal::SoundArchiveFile::SoundGroupInfo::GetStringId()", _text + 0x6B36BC
	.equiv "FUN_0E8336D8:FID_conflict:nw::snd::internal::SoundArchiveFile::PlayerInfo::GetStringId()", _text + 0x6B36D8
	.equiv "FUN_0E8336F4:FID_conflict:nw::snd::internal::SoundArchiveFile::PlayerInfo::GetStringId()", _text + 0x6B36F4
	.equiv "nw::snd::internal::SoundArchiveFile::InfoBlockBody::GetItemStringId()", _text + 0x6B3710
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::GetSoundType()", _text + 0x6B3808
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::GetSound3DInfo()", _text + 0x6B38A4
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::GetPanMode()", _text + 0x6B3910
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::GetPanCurve()", _text + 0x6B397C
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::GetPlayerPriority()", _text + 0x6B39E8
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::GetActorPlayerId()", _text + 0x6B3A54
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::GetUserParam()", _text + 0x6B3AC0
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::ReadUserParam()", _text + 0x6B3B28
	.equiv "nw::snd::internal::SoundArchiveFile::SoundInfo::IsFrontBypass()", _text + 0x6B3BB0
	.equiv "nw::snd::internal::SoundArchiveFile::StreamSoundInfo::GetTrackInfoTable()", _text + 0x6B3C1C
	.equiv "nw::snd::internal::SoundArchiveFile::StreamSoundInfo::GetStreamSoundExtension()", _text + 0x6B3C48
	.equiv "nw::snd::internal::SoundArchiveFile::WaveSoundInfo::GetChannelPriority()", _text + 0x6B3C70
	.equiv "nw::snd::internal::SoundArchiveFile::WaveSoundInfo::GetIsReleasePriorityFix()", _text + 0x6B3C90
	.equiv "nw::snd::internal::SoundArchiveFile::SequenceSoundInfo::GetBankIds()", _text + 0x6B3CBC
	.equiv "nw::snd::internal::SoundArchiveFile::SequenceSoundInfo::GetStartOffset()", _text + 0x6B3D14
	.equiv "nw::snd::internal::SoundArchiveFile::SequenceSoundInfo::GetChannelPriority()", _text + 0x6B3D30
	.equiv "nw::snd::internal::SoundArchiveFile::SequenceSoundInfo::IsReleasePriorityFix()", _text + 0x6B3D9C
	.equiv "nw::snd::internal::SoundArchiveFile::PlayerInfo::GetPlayerHeapSize()", _text + 0x6B3E10
	.equiv "nw::snd::internal::SoundArchiveFile::WaveArchiveInfo::GetWaveCount()", _text + 0x6B3E78
	.equiv "nw::snd::internal::SoundArchiveFile::FileInfo::GetFileLocationType()", _text + 0x6B3EE0
	.equiv "nw::snd::internal::SoundArchiveFile::FileInfo::GetInternalFileInfo()", _text + 0x6B3F0C
	.equiv "nw::snd::internal::SoundArchiveFile::FileInfo::GetExternalFileInfo()", _text + 0x6B3F48
	.equiv "nw::snd::internal::SoundArchiveFileReader::SoundArchiveFileReader()", _text + 0x6B3F84
	.equiv "nw::snd::internal::<unnamed>::IsValidFileHeader()", _text + 0x6B3FC8
	.equiv "nw::snd::internal::SoundArchiveFileReader::Initialize()", _text + 0x6B4008
	.equiv "FUN_0E834070:FID_conflict:nw::snd::internal::SoundArchiveFileReader::IsStreamSendAvailable()", _text + 0x6B4070
	.equiv "FUN_0E83408C:FID_conflict:nw::snd::internal::SoundArchiveFileReader::IsStreamSendAvailable()", _text + 0x6B408C
	.equiv "nw::snd::internal::SoundArchiveFileReader::IsStreamPrefetchAvailable()", _text + 0x6B40A8
	.equiv "nw::snd::internal::SoundArchiveFileReader::GetItemLabel()", _text + 0x6B4100
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadSoundInfo()", _text + 0x6B4218
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadBankInfo()", _text + 0x6B42D4
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadPlayerInfo()", _text + 0x6B4330
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadSoundGroupInfo()", _text + 0x6B4394
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadFileInfo()", _text + 0x6B4404
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadGroupInfo()", _text + 0x6B44AC
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadWaveArchiveInfo()", _text + 0x6B4548
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadSoundArchivePlayerInfo()", _text + 0x6B45C4
	.equiv "nw::snd::internal::SoundArchiveFileReader::GetSoundUserParam()", _text + 0x6B46B8
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadSoundUserParam()", _text + 0x6B46E8
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadSound3DInfo()", _text + 0x6B4744
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadSequenceSoundInfo()", _text + 0x6B47C4
	.equiv "nw::snd::internal::<unnamed>::GetStreamTrackInfo()", _text + 0x6B4874
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadStreamSoundInfo()", _text + 0x6B48A8
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadStreamSoundInfo2()", _text + 0x6B4B98
	.equiv "nw::snd::internal::SoundArchiveFileReader::ReadWaveSoundInfo()", _text + 0x6B4C44
	.equiv "nw::snd::internal::SoundArchiveLoader::SoundArchiveLoader()", _text + 0x6B4E7C
	.equiv "nw::snd::internal::SoundArchiveLoader::~SoundArchiveLoader()", _text + 0x6B4EC4
	.equiv "nw::snd::internal::SoundArchiveLoader::IsAvailable()", _text + 0x6B4EEC
	.equiv "nw::snd::internal::SoundArchiveLoader::ReadFile()", _text + 0x6B4F38
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadFile()", _text + 0x6B5108
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadImpl()", _text + 0x6B51E4
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadWaveArchiveTable()", _text + 0x6B5274
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadIndividualWave()", _text + 0x6B5400
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadWaveArchive()", _text + 0x6B558C
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadWaveArchiveImpl()", _text + 0x6B5620
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadBank()", _text + 0x6B56DC
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadSequenceSound()", _text + 0x6B5854
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadWaveSound()", _text + 0x6B5960
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadStreamSoundPrefetch()", _text + 0x6B5B1C
	.equiv "nw::snd::internal::SoundArchiveLoader::SetWaveArchiveTableInEmbeddedGroupImpl()", _text + 0x6B5B84
	.equiv "nw::snd::internal::SoundArchiveLoader::SetWaveArchiveTableWithBankInEmbeddedGroup()", _text + 0x6B5CE8
	.equiv "nw::snd::internal::SoundArchiveLoader::SetWaveArchiveTableWithSeqInEmbeddedGroup()", _text + 0x6B5DA0
	.equiv "nw::snd::internal::SoundArchiveLoader::SetWaveArchiveTableWithWsdInEmbeddedGroup()", _text + 0x6B5E44
	.equiv "nw::snd::internal::SoundArchiveLoader::PostProcessForLoadedGroupFile()", _text + 0x6B5F3C
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadGroup()", _text + 0x6B61F8
	.equiv "nw::snd::internal::SoundArchiveLoader::LoadSoundGroup()", _text + 0x6B6274
	.equiv "FUN_0E8363A8:nw::snd::internal::SoundArchiveLoader::LoadData()", _text + 0x6B63A8
	.equiv "FUN_0E83661C:nw::snd::internal::SoundArchiveLoader::LoadData()", _text + 0x6B661C
	.equiv "nw::snd::internal::SoundArchiveLoader::detail_GetFileAddressByItemId()", _text + 0x6B6688
	.equiv "nw::snd::internal::SoundArchiveLoader::detail_LoadWaveArchiveByBankFile()", _text + 0x6B67C8
	.equiv "nw::snd::SoundArchivePlayer::SoundArchivePlayer()", _text + 0x6B6978
	.equiv "nw::snd::SoundArchivePlayer::GetRequiredMemSize()", _text + 0x6B6DE0
	.equiv "nw::snd::SoundArchivePlayer::GetRequiredStreamBufferSize()", _text + 0x6B6F54
	.equiv "nw::snd::SoundArchivePlayer::CreatePlayerHeap()", _text + 0x6B6FA0
	.equiv "nw::snd::SoundArchivePlayer::SetupSoundPlayer()", _text + 0x6B7058
	.equiv "nw::snd::SoundArchivePlayer::SetupSequenceSound()", _text + 0x6B71A4
	.equiv "nw::snd::SoundArchivePlayer::SetupWaveSound()", _text + 0x6B7408
	.equiv "nw::snd::SoundArchivePlayer::SetupStreamSound()", _text + 0x6B7630
	.equiv "nw::snd::SoundArchivePlayer::SetupSequenceTrack()", _text + 0x6B77CC
	.equiv "nw::snd::SoundArchivePlayer::SetupUserParamForBasicSound()", _text + 0x6B7850
	.equiv "nw::snd::SoundArchivePlayer::SetupMram()", _text + 0x6B7958
	.equiv "nw::snd::SoundArchivePlayer::SetupStreamBuffer()", _text + 0x6B7AA4
	.equiv "FUN_0E837B64:nw::snd::SoundArchivePlayer::Initialize()", _text + 0x6B7B64
	.equiv "nw::snd::SoundArchivePlayer::GetRequiredStreamCacheSize()", _text + 0x6B7C2C
	.equiv "FUN_0E837C7C:nw::snd::SoundArchivePlayer::Initialize()", _text + 0x6B7C7C
	.equiv "nw::snd::SoundArchivePlayer::IsAvailable()", _text + 0x6B8118
	.equiv "FUN_0E838164:nw::snd::SoundArchivePlayer::GetSoundPlayer()", _text + 0x6B8164
	.equiv "FUN_0E838178:nw::snd::SoundArchivePlayer::GetSoundPlayer()", _text + 0x6B8178
	.equiv "nw::snd::SoundArchivePlayer::Update()", _text + 0x6B817C
	.equiv "nw::snd::SoundArchivePlayer::PrepareSequenceSoundImpl()", _text + 0x6B85F0
	.equiv "nw::snd::SoundArchivePlayer::PrepareStreamSoundImpl()", _text + 0x6B8D74
	.equiv "nw::snd::SoundArchivePlayer::PrepareWaveSoundImpl()", _text + 0x6B9248
	.equiv "nw::snd::SoundArchivePlayer::IsSoundArchiveFileHooksEnabled()", _text + 0x6B9524
	.equiv "nw::snd::SoundArchivePlayer::LockSoundArchiveFileHooks()", _text + 0x6B954C
	.equiv "FUN_0E83958C:FID_conflict:nw::snd::SoundArchivePlayer::IsSequenceSoundEdited()", _text + 0x6B958C
	.equiv "FUN_0E83961C:FID_conflict:nw::snd::SoundArchivePlayer::IsSequenceSoundEdited()", _text + 0x6B961C
	.equiv "nw::snd::SoundArchivePlayer::UnlockSoundArchiveFileHooks()", _text + 0x6B96A0
	.equiv "nw::snd::SoundArchivePlayer::SetCommonSoundParam()", _text + 0x6B96E0
	.equiv "nw::snd::SoundArchivePlayer::detail_SetupSoundImpl()", _text + 0x6B9770
	.equiv "nw::snd::SoundArchivePlayer::detail_SetupSound()", _text + 0x6BA4FC
	.equiv "FUN_0E83AA48:FID_conflict:nw::snd::SoundArchivePlayer::AllocSound()", _text + 0x6BAA48
	.equiv "FUN_0E83AC38:FID_conflict:nw::snd::SoundArchivePlayer::AllocSound()", _text + 0x6BAC38
	.equiv "FUN_0E83AE28:FID_conflict:nw::snd::SoundArchivePlayer::AllocSound()", _text + 0x6BAE28
	.equiv "nw::snd::SoundDataManager::SoundDataManager()", _text + 0x6BB168
	.equiv "nw::snd::SoundDataManager::GetRequiredMemSize()", _text + 0x6BB208
	.equiv "nw::snd::SoundDataManager::CreateFileAddressTable()", _text + 0x6BB238
	.equiv "nw::snd::SoundDataManager::Initialize()", _text + 0x6BB328
	.equiv "nw::snd::SoundDataManager::detail_GetFileAddress()", _text + 0x6BB444
	.equiv "nw::snd::SoundHandle::DetachSound()", _text + 0x6BB5C0
	.equiv "nw::snd::SoundHandle::detail_AttachSound()", _text + 0x6BB60C
	.equiv "nw::snd::SoundHandle::detail_AttachSoundAsTempHandle()", _text + 0x6BB658
	.equiv "nw::snd::SoundHeap::Alloc()", _text + 0x6BB8E4
	.equiv "nw::snd::SoundPlayer::SoundPlayer()", _text + 0x6BBA30
	.equiv "nw::snd::SoundPlayer::StopAllSound()", _text + 0x6BBC30
	.equiv "nw::snd::SoundPlayer::DoFreePlayerHeap()", _text + 0x6BBCB4
	.equiv "FUN_0E83BD64:nw::snd::SoundPlayer::detail_SortPriorityList()", _text + 0x6BBD64
	.equiv "nw::snd::SoundPlayer::Update()", _text + 0x6BBEF8
	.equiv "nw::snd::SoundPlayer::PauseAllSound()", _text + 0x6BBF88
	.equiv "nw::snd::SoundPlayer::GetRemoteOutVolume()", _text + 0x6BC064
	.equiv "nw::snd::SoundPlayer::SetPlayableSoundCount()", _text + 0x6BC074
	.equiv "nw::snd::SoundPlayer::detail_CanPlaySound()", _text + 0x6BC0F8
	.equiv "nw::snd::SoundPlayer::InsertPriorityList()", _text + 0x6BC18C
	.equiv "nw::snd::SoundPlayer::detail_AppendSound()", _text + 0x6BC300
	.equiv "FUN_0E83C4F8:nw::snd::SoundPlayer::detail_SortPriorityList()", _text + 0x6BC4F8
	.equiv "nw::snd::SoundPlayer::detail_AppendPlayerHeap()", _text + 0x6BC53C
	.equiv "FUN_0E83C6C0:nw::snd::SoundStartable::StartSound()", _text + 0x6BC6C0
	.equiv "FUN_0E83C734:nw::snd::SoundStartable::StartSound()", _text + 0x6BC734
	.equiv "FUN_0E83C810:nw::snd::SoundStartable::HoldSound()", _text + 0x6BC810
	.equiv "FUN_0E83C940:nw::snd::SoundStartable::HoldSound()", _text + 0x6BC940
	.equiv "FUN_0E83C9D0:nw::snd::SoundStartable::PrepareSound()", _text + 0x6BC9D0
	.equiv "FUN_0E83CA04:nw::snd::SoundStartable::PrepareSound()", _text + 0x6BCA04
	.equiv "nw::snd::SoundSystem::detail_GetRequiredDriverCommandManagerMemSize()", _text + 0x6BCA94
	.equiv "nw::snd::SoundSystem::detail_InitializeDriverCommandManager()", _text + 0x6BCAB0
	.equiv "nw::snd::SoundSystem::Initialize()", _text + 0x6BCB78
	.equiv "nw::snd::SoundSystem::SoundSystemParam::SoundSystemParam()", _text + 0x6BD310
	.equiv "nw::snd::internal::driver::SoundThread::SoundThread()", _text + 0x6BD3B8
	.equiv "nw::snd::internal::driver::SoundThread::GetInstance()", _text + 0x6BD540
	.equiv "nw::snd::internal::driver::SoundThread::PrepareForCreate()", _text + 0x6BD598
	.equiv "nw::snd::internal::driver::SoundThread::HwCallbackProc()", _text + 0x6BD5B8
	.equiv "nw::snd::internal::driver::SoundThread::CreateSoundThread()", _text + 0x6BD620
	.equiv "nw::snd::internal::driver::SoundThread::RecordProfile()", _text + 0x6BD74C
	.equiv "nw::snd::internal::driver::SoundThread::FrameProcess()", _text + 0x6BD9E8
	.equiv "nw::snd::internal::driver::SoundThread::RegisterSoundFrameCallback()", _text + 0x6BDCE8
	.equiv "nw::snd::internal::driver::SoundThread::RegisterPlayerCallback()", _text + 0x6BDDAC
	.equiv "nw::snd::internal::driver::StreamBufferPool::Initialize()", _text + 0x6BDED4
	.equiv "nw::snd::internal::driver::StreamBufferPool::Alloc()", _text + 0x6BDF28
	.equiv "nw::snd::internal::driver::StreamBufferPool::Free()", _text + 0x6BDFE8
	.equiv "nw::snd::internal::StreamSound::StreamSound()", _text + 0x6BE028
	.equiv "nw::snd::internal::StreamSound::Setup()", _text + 0x6BE0BC
	.equiv "nw::snd::internal::StreamSound::Prepare()", _text + 0x6BE148
	.equiv "nw::snd::internal::StreamSound::PreparePrefetch()", _text + 0x6BE204
	.equiv "nw::snd::internal::StreamSound::SetTrackVolume()", _text + 0x6BE454
	.equiv "nw::snd::internal::StreamSound::GetPlayLoopCount()", _text + 0x6BE534
	.equiv "nw::snd::internal::StreamSound::OnUpdateParam()", _text + 0x6BE6F8
	.equiv "nw::snd::internal::driver::StreamSoundLoader::StreamSoundLoader()", _text + 0x6BE90C
	.equiv "nw::snd::internal::driver::StreamSoundLoader::WaitFinalize()", _text + 0x6BEA44
	.equiv "nw::snd::internal::driver::StreamSoundLoader::RequestLoadHeader()", _text + 0x6BEE84
	.equiv "nw::snd::internal::driver::StreamSoundLoader::RequestLoadData()", _text + 0x6BEECC
	.equiv "nw::snd::internal::driver::StreamSoundLoader::UpdateRegion()", _text + 0x6BFB78
	.equiv "nw::snd::internal::driver::StreamSoundLoader::LoadData1()", _text + 0x6BFCF4
	.equiv "nw::snd::internal::driver::StreamSoundLoader::LoadData2()", _text + 0x6C0418
	.equiv "nw::snd::internal::driver::StreamSoundLoader::LoadData()", _text + 0x6C0844
	.equiv "nw::snd::internal::StreamSoundFile::FileHeader::GetReferenceBy()", _text + 0x6C0A70
	.equiv "nw::snd::internal::StreamSoundFile::FileHeader::HasSeekBlock()", _text + 0x6C0AA8
	.equiv "nw::snd::internal::StreamSoundFile::FileHeader::HasRegionBlock()", _text + 0x6C0AD4
	.equiv "nw::snd::internal::StreamSoundFile::FileHeader::GetInfoBlockSize()", _text + 0x6C0B00
	.equiv "nw::snd::internal::StreamSoundFile::FileHeader::GetInfoBlockOffset()", _text + 0x6C0B28
	.equiv "nw::snd::internal::StreamSoundFile::FileHeader::GetSeekBlockOffset()", _text + 0x6C0B50
	.equiv "nw::snd::internal::StreamSoundFile::FileHeader::GetRegionBlockOffset()", _text + 0x6C0BA0
	.equiv "nw::snd::internal::StreamSoundFile::InfoBlockBody::GetStreamSoundInfo()", _text + 0x6C0BC8
	.equiv "nw::snd::internal::StreamSoundFile::InfoBlockBody::GetChannelInfoTable()", _text + 0x6C0C08
	.equiv "nw::snd::internal::StreamSoundFile::ChannelInfoTable::GetChannelInfo()", _text + 0x6C0C5C
	.equiv "nw::snd::internal::StreamSoundFile::ChannelInfo::GetDspAdpcmChannelInfo()", _text + 0x6C0C90
	.equiv "nw::snd::internal::StreamSoundFileLoader::LoadFileHeader()", _text + 0x6C0CB0
	.equiv "nw::snd::internal::StreamSoundFileLoader::ReadSeekBlockData()", _text + 0x6C0E68
	.equiv "nw::snd::internal::StreamSoundFileLoader::ReadRegionInfo()", _text + 0x6C0F6C
	.equiv "nw::snd::internal::StreamSoundFileReader::IsValidFileHeader()", _text + 0x6C1088
	.equiv "nw::snd::internal::StreamSoundFileReader::Initialize()", _text + 0x6C10C8
	.equiv "FUN_0E84133C:FID_conflict:nw::snd::StreamSoundHandle::detail_AttachSoundAsTempHandle()", _text + 0x6C133C
	.equiv "nw::snd::StreamSoundHandle::StreamSoundHandle()", _text + 0x6C13A0
	.equiv "nw::snd::StreamSoundHandle::DetachSound()", _text + 0x6C14BC
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::FreeStreamBuffers()", _text + 0x6C159C
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::Setup()", _text + 0x6C18F8
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::Prepare()", _text + 0x6C1A3C
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::UpdatePauseStatus()", _text + 0x6C1C84
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::StartPlayer()", _text + 0x6C1D34
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::UpdateLoadingBlockIndex()", _text + 0x6C1DF8
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::UpdateVoiceParams()", _text + 0x6C2120
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::StreamSoundPlayer()", _text + 0x6C2DD8
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetupPlayer()", _text + 0x6C30C4
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::AllocVoices()", _text + 0x6C3174
	.equiv "FUN_0E843264:nw::snd::internal::driver::StreamSoundPlayer::LoadStreamData()", _text + 0x6C3264
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::PreparePrefetch()", _text + 0x6C3478
	.equiv "FUN_0E843B30:FID_conflict:nw::snd::internal::driver::StreamSoundPlayer::SetTrackTvMainSend()", _text + 0x6C3B30
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackInitialVolume()", _text + 0x6C3B74
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackOutputLine()", _text + 0x6C3BB8
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::ResetTrackOutputLine()", _text + 0x6C3BFC
	.equiv "FUN_0E843C44:FID_conflict:nw::snd::internal::driver::StreamSoundPlayer::SetTrackTvMainSend()", _text + 0x6C3C44
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackChannelTvMixParameter()", _text + 0x6C3C88
	.equiv "FUN_0E843CF4:FID_conflict:nw::snd::internal::driver::StreamSoundPlayer::SetTrackTvMainSend()", _text + 0x6C3CF4
	.equiv "FUN_0E843D38:FID_conflict:nw::snd::internal::driver::StreamSoundPlayer::SetTrackTvMainSend()", _text + 0x6C3D38
	.equiv "FUN_0E843D7C:FID_conflict:nw::snd::internal::driver::StreamSoundPlayer::SetTrackTvMainSend()", _text + 0x6C3D7C
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackTvFxSend()", _text + 0x6C3DC0
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackDrcVolume()", _text + 0x6C3E10
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackChannelDrcMixParameter()", _text + 0x6C3E60
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackDrcPan()", _text + 0x6C3EE8
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackDrcSurroundPan()", _text + 0x6C3F38
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackDrcMainSend()", _text + 0x6C3F88
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::SetTrackDrcFxSend()", _text + 0x6C3FD8
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::AllocStreamBuffers()", _text + 0x6C4244
	.equiv "nw::snd::internal::driver::StreamSoundPlayer::LoadHeader()", _text + 0x6C4314
	.equiv "FUN_0E8446C0:nw::snd::internal::driver::StreamSoundPlayer::LoadStreamData()", _text + 0x6C46C0
	.equiv "nw::snd::internal::driver::StreamChannel::AppendWaveBuffer()", _text + 0x6C496C
	.equiv "nw::snd::internal::Task::Task()", _text + 0x6C4988
	.equiv "nw::snd::internal::TaskManager::TaskManager()", _text + 0x6C4A60
	.equiv "nw::snd::internal::TaskManager::GetInstance()", _text + 0x6C4AF0
	.equiv "nw::snd::internal::TaskManager::Initialize()", _text + 0x6C4B48
	.equiv "nw::snd::internal::TaskManager::AppendTask()", _text + 0x6C4DB0
	.equiv "nw::snd::internal::TaskManager::RemoveTaskById()", _text + 0x6C4E48
	.equiv "nw::snd::internal::TaskManager::CancelWaitTask()", _text + 0x6C4FFC
	.equiv "nw::snd::internal::TaskThread::TaskThread()", _text + 0x6C50DC
	.equiv "nw::snd::internal::TaskThread::Destroy()", _text + 0x6C5164
	.equiv "nw::snd::internal::TaskThread::Create()", _text + 0x6C5234
	.equiv "nw::snd::internal::TaskThread::GetInstance()", _text + 0x6C52E4
	.equiv "nw::snd::internal::Util::CalcLpfFreq()", _text + 0x6C53BC
	.equiv "nw::snd::internal::Util::CalcPanRatio()", _text + 0x6C5458
	.equiv "nw::snd::internal::Util::CalcSurroundPanRatio()", _text + 0x6C55A4
	.equiv "nw::snd::internal::Util::CalcPitchRatio()", _text + 0x6C5670
	.equiv "nw::snd::internal::Util::CalcVolumeRatio()", _text + 0x6C5760
	.equiv "nw::snd::internal::Util::CalcRandom()", _text + 0x6C57B8
	.equiv "nw::snd::internal::Util::GetByteBySample()", _text + 0x6C57E0
	.equiv "nw::snd::internal::Util::GetWaveArchiveOfBank()", _text + 0x6C5844
	.equiv "nw::snd::internal::Util::GetWaveFileOfWaveSound()", _text + 0x6C59BC
	.equiv "nw::snd::internal::Util::GetRemoteFilterCoefs()", _text + 0x6C5AAC
	.equiv "nw::snd::internal::Util::WarningLogger::Print()", _text + 0x6C5BA0
	.equiv "nw::snd::internal::Util::WarningLogger::SwapBuffer()", _text + 0x6C5BC4
	.equiv "nw::snd::internal::driver::MultiVoice::MultiVoice()", _text + 0x6C5BF8
	.equiv "nw::snd::internal::driver::MultiVoice::InitParam()", _text + 0x6C5D58
	.equiv "nw::snd::internal::driver::MultiVoice::Alloc()", _text + 0x6C5E48
	.equiv "nw::snd::internal::driver::MultiVoice::Free()", _text + 0x6C5F3C
	.equiv "nw::snd::internal::driver::MultiVoice::Start()", _text + 0x6C5FC8
	.equiv "nw::snd::internal::driver::MultiVoice::StopAllSdkVoice()", _text + 0x6C5FE8
	.equiv "nw::snd::internal::driver::MultiVoice::Stop()", _text + 0x6C6054
	.equiv "nw::snd::internal::driver::MultiVoice::IsPlayFinished()", _text + 0x6C60AC
	.equiv "nw::snd::internal::driver::MultiVoice::UpdateVoiceStatus()", _text + 0x6C60E8
	.equiv "nw::snd::internal::driver::MultiVoice::Pause()", _text + 0x6C628C
	.equiv "nw::snd::internal::driver::MultiVoice::CalcSrc()", _text + 0x6C62AC
	.equiv "nw::snd::internal::driver::MultiVoice::CalcVe()", _text + 0x6C62E0
	.equiv "nw::snd::internal::driver::MultiVoice::CalcPreMixVolume()", _text + 0x6C6394
	.equiv "nw::snd::internal::driver::MultiVoice::CalcRemoteMix()", _text + 0x6C6BBC
	.equiv "nw::snd::internal::driver::MultiVoice::CalcDrcMix()", _text + 0x6C6D34
	.equiv "nw::snd::internal::driver::MultiVoice::CalcMix()", _text + 0x6C6D54
	.equiv "nw::snd::internal::driver::MultiVoice::CalcLpf()", _text + 0x6C6EEC
	.equiv "nw::snd::internal::driver::MultiVoice::CalcBiquadFilter()", _text + 0x6C6F9C
	.equiv "nw::snd::internal::driver::MultiVoice::CalcRemoteFilter()", _text + 0x6C70B0
	.equiv "nw::snd::internal::driver::MultiVoice::Calc()", _text + 0x6C714C
	.equiv "nw::snd::internal::driver::MultiVoice::RunAllSdkVoice()", _text + 0x6C7230
	.equiv "nw::snd::internal::driver::MultiVoice::PauseAllSdkVoice()", _text + 0x6C729C
	.equiv "nw::snd::internal::driver::MultiVoice::Update()", _text + 0x6C7308
	.equiv "nw::snd::internal::driver::MultiVoice::SetSampleFormat()", _text + 0x6C74C4
	.equiv "nw::snd::internal::driver::MultiVoice::SetSampleRate()", _text + 0x6C74FC
	.equiv "nw::snd::internal::driver::MultiVoice::SetVolume()", _text + 0x6C752C
	.equiv "nw::snd::internal::driver::MultiVoice::SetPitch()", _text + 0x6C7558
	.equiv "FUN_0E847578:FID_conflict:nw::snd::internal::driver::MultiVoice::SetPanCurve()", _text + 0x6C7578
	.equiv "FUN_0E847598:FID_conflict:nw::snd::internal::driver::MultiVoice::SetPanCurve()", _text + 0x6C7598
	.equiv "nw::snd::internal::driver::MultiVoice::SetLpfFreq()", _text + 0x6C75B8
	.equiv "nw::snd::internal::driver::MultiVoice::SetBiquadFilter()", _text + 0x6C75D8
	.equiv "nw::snd::internal::driver::MultiVoice::SetPriority()", _text + 0x6C765C
	.equiv "nw::snd::internal::driver::MultiVoice::SetFrontBypass()", _text + 0x6C76D8
	.equiv "nw::snd::internal::driver::MultiVoice::SetInterpolationType()", _text + 0x6C770C
	.equiv "nw::snd::internal::driver::MultiVoice::SetRemoteFilter()", _text + 0x6C773C
	.equiv "nw::snd::internal::driver::MultiVoice::SetOutputLine()", _text + 0x6C7780
	.equiv "nw::snd::internal::driver::MultiVoice::SetDrcParam()", _text + 0x6C78FC
	.equiv "nw::snd::internal::driver::MultiVoice::SetRemoteParam()", _text + 0x6C7910
	.equiv "nw::snd::internal::driver::MultiVoice::GetCurrentPlayingSample()", _text + 0x6C7988
	.equiv "nw::snd::internal::driver::<unnamed>::DspAdpcmFrameToNibbleAddress()", _text + 0x6C79AC
	.equiv "nw::snd::internal::driver::MultiVoice::FrameToByte()", _text + 0x6C79DC
	.equiv "nw::snd::internal::driver::MultiVoice::CalcOffsetAdpcmParam()", _text + 0x6C7A2C
	.equiv "nw::snd::internal::driver::MultiVoice::AppendWaveBuffer()", _text + 0x6C7BA4
	.equiv "nw::snd::internal::driver::MultiVoice::SetAdpcmParam()", _text + 0x6C7C00
	.equiv "nw::snd::internal::driver::MultiVoiceManager::MultiVoiceManager()", _text + 0x6C7D10
	.equiv "nw::snd::internal::driver::MultiVoiceManager::GetInstance()", _text + 0x6C7DE0
	.equiv "nw::snd::internal::driver::MultiVoiceManager::Initialize()", _text + 0x6C7E34
	.equiv "nw::snd::internal::driver::MultiVoiceManager::DropLowestPriorityVoice()", _text + 0x6C7FE8
	.equiv "nw::snd::internal::driver::MultiVoiceManager::AppendVoiceList()", _text + 0x6C80A4
	.equiv "nw::snd::internal::driver::MultiVoiceManager::AllocVoice()", _text + 0x6C8130
	.equiv "FUN_0E8481F4:nw::snd::internal::driver::MultiVoiceManager::RemoveVoiceList()", _text + 0x6C81F4
	.equiv "FUN_0E84824C:nw::snd::internal::driver::MultiVoiceManager::RemoveVoiceList()", _text + 0x6C824C
	.equiv "nw::snd::internal::driver::MultiVoiceManager::UpdateAllVoices()", _text + 0x6C8250
	.equiv "nw::snd::internal::driver::MultiVoiceManager::UpdateAllVoiceStatus()", _text + 0x6C8308
	.equiv "nw::snd::internal::driver::MultiVoiceManager::UpdateAllVoicesSync()", _text + 0x6C837C
	.equiv "nw::snd::internal::driver::MultiVoiceManager::ChangeVoicePriority()", _text + 0x6C83D8
	.equiv "nw::snd::internal::WaveArchiveFile::FileHeader::GetReferenceBy()", _text + 0x6C8424
	.equiv "nw::snd::internal::WaveArchiveFile::FileHeader::GetInfoBlockOffset()", _text + 0x6C8454
	.equiv "nw::snd::internal::WaveArchiveFile::FileHeader::GetInfoBlock()", _text + 0x6C847C
	.equiv "nw::snd::internal::WaveArchiveFile::FileHeader::GetFileBlockOffset()", _text + 0x6C84A4
	.equiv "nw::snd::internal::WaveArchiveFile::FileHeader::GetFileBlock()", _text + 0x6C84CC
	.equiv "_nw::snd::internal::<unnamed>::IsValidFileHeader()", _text + 0x6C84F4
	.equiv "nw::snd::internal::WaveArchiveFileReader::HasIndividualLoadTable()", _text + 0x6C852C
	.equiv "nw::snd::internal::WaveArchiveFileReader::Initialize()", _text + 0x6C8598
	.equiv "nw::snd::internal::WaveArchiveFileReader::WaveArchiveFileReader()", _text + 0x6C863C
	.equiv "nw::snd::internal::WaveArchiveFileReader::Finalize()", _text + 0x6C8700
	.equiv "nw::snd::internal::WaveArchiveFileReader::GetWaveFileCount()", _text + 0x6C8724
	.equiv "nw::snd::internal::WaveArchiveFileReader::InitializeFileTable()", _text + 0x6C8744
	.equiv "nw::snd::internal::WaveArchiveFileReader::GetWaveFileSize()", _text + 0x6C879C
	.equiv "nw::snd::internal::WaveArchiveFileReader::GetWaveFileOffsetFromFileHead()", _text + 0x6C87C4
	.equiv "nw::snd::internal::WaveArchiveFileReader::GetWaveFile()", _text + 0x6C8840
	.equiv "nw::snd::internal::WaveArchiveFileReader::SetWaveFile()", _text + 0x6C88E4
	.equiv "nw::snd::internal::WaveFileReader::GetSampleFormat()", _text + 0x6C8944
	.equiv "nw::snd::internal::WaveFileReader::GetWaveDataAddress()", _text + 0x6C8A9C
	.equiv "nw::snd::internal::WaveFileReader::ReadWaveInfo()", _text + 0x6C8AAC
	.equiv "nw::snd::internal::WaveSound::WaveSound()", _text + 0x6C8C18
	.equiv "nw::snd::internal::WaveSound::Prepare()", _text + 0x6C8C90
	.equiv "nw::snd::internal::WaveSound::RegisterDataLoadTask()", _text + 0x6C8D30
	.equiv "nw::snd::internal::WaveSound::InitializeChannelParam()", _text + 0x6C8ED0
	.equiv "nw::snd::internal::WaveSound::SetChannelPriority()", _text + 0x6C8F4C
	.equiv "___nw::snd::internal::<unnamed>::IsValidFileHeader()", _text + 0x6C91C4
	.equiv "nw::snd::internal::WaveSoundFileReader::WaveSoundFileReader()", _text + 0x6C91FC
	.equiv "nw::snd::internal::WaveSoundFileReader::ReadNoteInfo()", _text + 0x6C93A4
	.equiv "FUN_0E8494AC:FID_conflict:nw::snd::StreamSoundHandle::detail_AttachSoundAsTempHandle()", _text + 0x6C94AC
	.equiv "nw::snd::WaveSoundHandle::WaveSoundHandle()", _text + 0x6C9510
	.equiv "nw::snd::WaveSoundHandle::DetachSound()", _text + 0x6C962C
	.equiv "nw::snd::internal::driver::WaveSoundPlayer::FinishPlayer()", _text + 0x6C9654
	.equiv "nw::snd::internal::driver::WaveSoundPlayer::UpdateChannel()", _text + 0x6C96BC
	.equiv "nw::snd::internal::driver::WaveSoundPlayer::WaveSoundPlayer()", _text + 0x6CA5DC
	.equiv "nw::snd::internal::driver::WaveSoundPlayer::Prepare()", _text + 0x6CA7E8
	.equiv "nw::snd::internal::driver::WaveSoundPlayer::RequestLoad()", _text + 0x6CA8B0
	.equiv "nw::snd::internal::RemoteSpeakerManager::RemoteSpeakerManager()", _text + 0x6CAA9C
	.equiv "nw::snd::internal::RemoteSpeakerManager::GetInstance()", _text + 0x6CAB20
	.equiv "nw::snd::internal::RemoteSpeakerManager::GetRemoteSpeaker()", _text + 0x6CAB6C
	.equiv "nw::snd::internal::RemoteSpeakerManager::Initialize()", _text + 0x6CAC28
	.equiv "nw::snd::ProfileReader::Record()", _text + 0x6CAD2C
	.equiv "nw::snd::internal::FsFileStream::FsFileStream()", _text + 0x6CB1C0
	.equiv "nw::snd::internal::FsFileStream::Open()", _text + 0x6CB33C
	.equiv "nw::snd::internal::FsFileStream::Close()", _text + 0x6CB558
	.equiv "nw::snd::internal::FsFileStream::Read()", _text + 0x6CB698
	.equiv "nw::snd::internal::FsFileStream::Seek()", _text + 0x6CB804
	.equiv "nw::snd::internal::driver::Bank::CalcChannelVelocityVolume()", _text + 0x6CBA24
	.equiv "____nw::snd::internal::<unnamed>::IsValidFileHeader()", _text + 0x6CBC98
	.equiv "nw::snd::internal::BankFileReader::Initialize()", _text + 0x6CBCD0
	.equiv "nw::snd::internal::BankFileReader::BankFileReader()", _text + 0x6CBD40
	.equiv "nw::snd::internal::BankFileReader::Finalize()", _text + 0x6CBDA8
	.equiv "nw::snd::internal::BankFileReader::ReadVelocityRegionInfo()", _text + 0x6CBDC8
	.equiv "nw::snd::internal::BankFileReader::GetWaveIdTable()", _text + 0x6CBF90
	.equiv "nw::snd::internal::driver::PlayerParamSet::Initialize()", _text + 0x6CBFAC
	.equiv "nw::snd::internal::driver::BasicSoundPlayer::BasicSoundPlayer()", _text + 0x6CC088
	.equiv "nw::snd::internal::driver::Channel::CallChannelCallback()", _text + 0x6CC4D0
	.equiv "nw::snd::internal::driver::<unnamed>::GetNwInterpolationTypeFromHardwareManager()", _text + 0x6CC5FC
	.equiv "nw::snd::internal::driver::Channel::InitParam()", _text + 0x6CC684
	.equiv "nw::snd::internal::driver::Channel::AllocChannel()", _text + 0x6CC85C
	.equiv "nw::snd::internal::driver::Channel::FreeChannel()", _text + 0x6CC968
	.equiv "nw::snd::internal::driver::Channel::DetachChannel()", _text + 0x6CC99C
	.equiv "nw::snd::internal::driver::Channel::Channel()", _text + 0x6CC9AC
	.equiv "nw::snd::internal::driver::Channel::~Channel()", _text + 0x6CCB0C
	.equiv "nw::snd::internal::driver::Channel::GetSweepValue()", _text + 0x6CCB80
	.equiv "nw::snd::internal::driver::Channel::Stop()", _text + 0x6CCBF4
	.equiv "nw::snd::internal::driver::Channel::UpdateSweep()", _text + 0x6CCC44
	.equiv "nw::snd::internal::driver::Channel::Update()", _text + 0x6CCC64
	.equiv "nw::snd::internal::driver::Channel::AppendWaveBuffer()", _text + 0x6CD21C
	.equiv "nw::snd::internal::driver::Channel::Start()", _text + 0x6CD488
	.equiv "nw::snd::internal::driver::Channel::Release()", _text + 0x6CD534
	.equiv "nw::snd::internal::driver::Channel::SetSweepParam()", _text + 0x6CD5B4
	.equiv "nw::snd::internal::driver::Channel::Disposer::InvalidateData()", _text + 0x6CD5CC
	.equiv "nw::snd::internal::driver::ChannelManager::ChannelManager()", _text + 0x6CD878
	.equiv "nw::snd::internal::driver::ChannelManager::GetInstance()", _text + 0x6CD930
	.equiv "nw::snd::internal::driver::ChannelManager::Initialize()", _text + 0x6CD988
	.equiv "nw::snd::internal::driver::ChannelManager::Free()", _text + 0x6CD9D4
	.equiv "nw::snd::internal::driver::ChannelManager::Alloc()", _text + 0x6CDAF0
	.equiv "nw::snd::internal::driver::ChannelManager::UpdateAllChannel()", _text + 0x6CDB78
	.equiv "nw::snd::internal::CurveAdshr::SetAttack()", _text + 0x6CDC28
	.equiv "nw::snd::internal::CurveAdshr::SetHold()", _text + 0x6CDC40
	.equiv "nw::snd::internal::CurveAdshr::CalcRelease()", _text + 0x6CDC58
	.equiv "nw::snd::internal::CurveAdshr::SetDecay()", _text + 0x6CDD20
	.equiv "nw::snd::internal::CurveAdshr::SetRelease()", _text + 0x6CDD54
	.equiv "nw::snd::internal::CurveAdshr::Reset()", _text + 0x6CDD80
	.equiv "nw::snd::internal::CurveAdshr::Initialize()", _text + 0x6CDD9C
	.equiv "nw::snd::internal::CurveAdshr::CurveAdshr()", _text + 0x6CDDF0
	.equiv "nw::snd::internal::CurveAdshr::CalcDecibelSquare()", _text + 0x6CDE38
	.equiv "nw::snd::internal::CurveAdshr::Update()", _text + 0x6CDE4C
	.equiv "nw::snd::internal::CurveAdshr::GetValue()", _text + 0x6CE050
	.equiv "nw::snd::internal::CurveLfoParam::Initialize()", _text + 0x6CE084
	.equiv "nw::snd::internal::CurveLfo::Reset()", _text + 0x6CE0B8
	.equiv "nw::snd::internal::CurveLfo::Update()", _text + 0x6CE0E4
	.equiv "nw::snd::internal::CurveLfo::GetValue()", _text + 0x6CE20C
	.equiv "nw::snd::internal::CurveLfo::InitializeCurveTable()", _text + 0x6CE5AC
	.equiv "nw::snd::internal::driver::DisposeCallbackManager::DisposeCallbackManager()", _text + 0x6CE624
	.equiv "nw::snd::internal::driver::DisposeCallbackManager::GetInstance()", _text + 0x6CE6A8
	.equiv "nw::snd::internal::driver::DisposeCallbackManager::Dispose()", _text + 0x6CE6F4
	.equiv "nw::snd::internal::driver::DisposeCallbackManager::RegisterDisposeCallback()", _text + 0x6CE798
	.equiv "FUN_0E84E7C8:nw::ut::internal::LinkListImpl::erase()", _text + 0x6CE7C8
	.equiv "nw::snd::internal::DspadpcmReader::ReadWaveInfo()", _text + 0x6CE808
	.equiv "nw::snd::internal::VoiceParam::Initialize()", _text + 0x6CE8A0
	.equiv "nw::snd::internal::VirtualVoiceManager::AllocVirtualVoice()", _text + 0x6CEA18
	.equiv "nw::snd::internal::VirtualVoiceManager::Initialize()", _text + 0x6CEAE8
	.equiv "nw::snd::internal::VirtualVoiceManager::GetInstance()", _text + 0x6CEB38
	.equiv "nw::snd::internal::Voice::Initialize()", _text + 0x6CEB78
	.equiv "nw::snd::internal::Voice::AllocVoice()", _text + 0x6CEBD8
	.equiv "nw::snd::internal::Voice::FreeAllWaveBuffer()", _text + 0x6CED10
	.equiv "nw::snd::internal::VirtualVoiceManager::FreeVirtualVoice()", _text + 0x6CED40
	.equiv "nw::snd::internal::Voice::Free()", _text + 0x6CED5C
	.equiv "nw::snd::internal::Voice::IsAvailable()", _text + 0x6CEE64
	.equiv "nw::snd::internal::Voice::SetState()", _text + 0x6CEE7C
	.equiv "nw::snd::internal::Voice::AppendWaveBuffer()", _text + 0x6CF108
	.equiv "nw::snd::internal::Voice::SetPriority()", _text + 0x6CF2F8
	.equiv "nw::snd::internal::Voice::SetRemoteMix()", _text + 0x6CF3B4
	.equiv "nw::snd::internal::Voice::SetMonoFilter()", _text + 0x6CF3E4
	.equiv "nw::snd::internal::Voice::SetBiquadFilter()", _text + 0x6CF3F8
	.equiv "nw::snd::internal::Voice::SetRemoteFilter()", _text + 0x6CF430
	.equiv "nw::snd::internal::Voice::UpdateParam()", _text + 0x6CF444
	.equiv "nw::snd::internal::Voice::UpdateVoiceStatus()", _text + 0x6CF554
	.equiv "nw::snd::internal::VirtualVoiceManager::UpdateVoiceInfo()", _text + 0x6CF68C
	.equiv "nw::snd::internal::AxVoiceCommand::GetInstance()", _text + 0x6CF74C
	.equiv "nw::snd::internal::<unnamed>::GetFreeWaveBuffer()", _text + 0x6CF7E0
	.equiv "nw::snd::internal::AxVoiceCommand::ProcessCommandList()", _text + 0x6CF814
	.equiv "nw::snd::internal::NwVoiceCommand::GetInstance()", _text + 0x6CFB54
	.equiv "nw::snd::internal::<unnamed>::GetFreeNwVoiceWaveBuffer()", _text + 0x6CFBE8
	.equiv "nw::snd::internal::NwVoiceCommand::ProcessCommandList()", _text + 0x6CFC1C
	.equiv "nw::snd::internal::VoiceReplyCommand::GetInstance()", _text + 0x6CFF58
	.equiv "nw::snd::internal::AxVoice::EraseVoiceList()", _text + 0x6D027C
	.equiv "nw::snd::internal::AxVoice::FreeAllWaveBuffer()", _text + 0x6D02C8
	.equiv "nw::snd::internal::AxVoice::Finalize()", _text + 0x6D0338
	.equiv "nw::snd::internal::AxVoice::Initialize()", _text + 0x6D03B0
	.equiv "nw::snd::internal::AxVoice::AppendVoiceList()", _text + 0x6D03F0
	.equiv "nw::snd::internal::AxVoice::AllocVoice()", _text + 0x6D04A0
	.equiv "nw::snd::internal::AxVoice::Free()", _text + 0x6D0564
	.equiv "nw::snd::internal::AxVoice::AppendWaveBuffer()", _text + 0x6D05BC
	.equiv "nw::snd::internal::AxVoice::SetPriority()", _text + 0x6D0644
	.equiv "nw::snd::internal::AxVoice::CalcVoiceOffsetFromSampleCount()", _text + 0x6D068C
	.equiv "<unnamed>::GetAxRendererType()", _text + 0x6D06C0
	.equiv "nw::snd::internal::AxVoice::SetupNextWaveBuffer()", _text + 0x6D06EC
	.equiv "nw::snd::internal::AxVoice::SetupOffset()", _text + 0x6D0778
	.equiv "nw::snd::internal::AxVoice::SetupAdpcm()", _text + 0x6D0854
	.equiv "<unnamed>::GetVolumeU16()", _text + 0x6D0990
	.equiv "nw::snd::internal::AxVoice::CalcSetupTvMix()", _text + 0x6D09D4
	.equiv "nw::snd::internal::AxVoice::SetupTvMix()", _text + 0x6D0C60
	.equiv "nw::snd::internal::AxVoice::CalcSetupDrcMix()", _text + 0x6D0CB4
	.equiv "nw::snd::internal::AxVoice::SetupDrcMix()", _text + 0x6D0F64
	.equiv "nw::snd::internal::AxVoice::SetupRmtMix()", _text + 0x6D1000
	.equiv "nw::snd::internal::AxVoice::UpdateDelta()", _text + 0x6D10E0
	.equiv "nw::snd::internal::AxVoice::UpdateVe()", _text + 0x6D1170
	.equiv "nw::snd::internal::AxVoice::UpdateSrc()", _text + 0x6D1208
	.equiv "nw::snd::internal::AxVoice::UpdateMonoFilter()", _text + 0x6D1440
	.equiv "nw::snd::internal::AxVoice::UpdateBiquadFilter()", _text + 0x6D14FC
	.equiv "nw::snd::internal::AxVoice::UpdateRemoteFilter()", _text + 0x6D15F0
	.equiv "nw::snd::internal::AxVoice::SetupVoice()", _text + 0x6D16EC
	.equiv "nw::snd::internal::AxVoice::CalcUpdateTvMix()", _text + 0x6D17F0
	.equiv "nw::snd::internal::AxVoice::UpdateTvMix()", _text + 0x6D1C20
	.equiv "nw::snd::internal::AxVoice::CalcUpdateDrcMix()", _text + 0x6D1C7C
	.equiv "nw::snd::internal::AxVoice::UpdateDrcMix()", _text + 0x6D1FB4
	.equiv "nw::snd::internal::AxVoice::UpdateRmtMix()", _text + 0x6D2058
	.equiv "nw::snd::internal::AxVoice::UpdateStatePlay()", _text + 0x6D2158
	.equiv "nw::snd::internal::AxVoice::UpdateStateStop()", _text + 0x6D255C
	.equiv "nw::snd::internal::AxVoice::UpdateStatePause()", _text + 0x6D25A0
	.equiv "nw::snd::internal::AxVoice::UpdatePlayPosition()", _text + 0x6D25F8
	.equiv "nw::snd::internal::AxVoice::UpdateState()", _text + 0x6D2670
	.equiv "nw::snd::internal::AxVoice::detail_UpdateAllVoices()", _text + 0x6D2718
	.equiv "nw::snd::internal::AxVoice::detail_UpdatePriorityList()", _text + 0x6D27E4
	.equiv "nw::snd::internal::AxVoice::UpdateVoiceInfo()", _text + 0x6D2860
	.equiv "nw::snd::internal::NwVoiceSynthesizeBuffer::Initialize()", _text + 0x6D2A3C
	.equiv "nw::snd::internal::NwVoiceManager::EraseVoiceList()", _text + 0x6D2B8C
	.equiv "nw::snd::internal::NwVoiceManager::FreeVoice()", _text + 0x6D2BD0
	.equiv "nw::snd::internal::NwVoice::FreeAllWaveBuffer()", _text + 0x6D2C34
	.equiv "FUN_0E852CA4:nw::snd::internal::NwVoice::Finalize()", _text + 0x6D2CA4
	.equiv "FUN_0E852D18:nw::snd::internal::NwVoice::Finalize()", _text + 0x6D2D18
	.equiv "nw::snd::internal::NwVoice::AppendWaveBuffer()", _text + 0x6D2D1C
	.equiv "nw::snd::internal::NwVoiceManager::AppendVoiceList()", _text + 0x6D2DA4
	.equiv "nw::snd::internal::NwVoice::UpdateVoiceInfo()", _text + 0x6D2EC0
	.equiv "nw::snd::internal::NwVoice::Initialize()", _text + 0x6D2F0C
	.equiv "nw::snd::internal::<unnamed>::GetVolumeU16()", _text + 0x6D2F44
	.equiv "nw::snd::internal::NwVoice::UpdateDelta()", _text + 0x6D2F88
	.equiv "nw::snd::internal::NwVoice::UpdateVe()", _text + 0x6D3030
	.equiv "nw::snd::internal::NwVoice::UpdateNextWaveBuffer()", _text + 0x6D353C
	.equiv "nw::snd::internal::NwVoice::DecodePcm16()", _text + 0x6D3598
	.equiv "nw::snd::internal::NwVoice::DecodePcm8()", _text + 0x6D366C
	.equiv "nw::snd::internal::NwVoice::DecodeAdpcm()", _text + 0x6D3758
	.equiv "nw::snd::internal::NwVoice::MixSample()", _text + 0x6D3864
	.equiv "nw::snd::internal::NwVoice::Synthesize()", _text + 0x6D3A88
	.equiv "nw::snd::internal::NwVoiceManager::Initialize()", _text + 0x6D4060
	.equiv "nw::snd::internal::NwVoiceManager::AllocVoice()", _text + 0x6D4120
	.equiv "nw::snd::internal::NwVoiceManager::detail_UpdateAllVoices()", _text + 0x6D4220
	.equiv "nw::snd::internal::NwVoiceManager::detail_Synthesize()", _text + 0x6D42E0
	.equiv "nw::snd::internal::NwVoiceRenderer::SetSampleRate()", _text + 0x6D43BC
	.equiv "nw::snd::internal::NwVoiceRenderer::Initialize()", _text + 0x6D440C
	.equiv "nw::snd::internal::NwVoiceRenderer::Synthesize()", _text + 0x6D4618
	.equiv "_____nw::snd::internal::<unnamed>::IsValidFileHeader()", _text + 0x6D4D0C
	.equiv "nw::snd::internal::GroupFileReader::GroupFileReader()", _text + 0x6D4D44
	.equiv "nw::snd::internal::GroupFileReader::ReadGroupItemLocationInfo()", _text + 0x6D4E4C
	.equiv "nw::snd::internal::GroupFileReader::GetGroupItemExCount()", _text + 0x6D4EAC
	.equiv "nw::snd::internal::GroupFileReader::ReadGroupItemInfoEx()", _text + 0x6D4EC8
	.equiv "nw::snd::internal::PoolImpl::CreateImpl()", _text + 0x6D4F14
	.equiv "nw::snd::internal::PoolImpl::AllocImpl()", _text + 0x6D4FD8
	.equiv "nw::snd::internal::PoolImpl::FreeImpl()", _text + 0x6D4FFC
	.equiv "nw::snd::internal::driver::MmlParser::GetVariablePtr()", _text + 0x6D500C
	.equiv "nw::snd::internal::driver::MmlParser::Read16()", _text + 0x6D5038
	.equiv "nw::snd::internal::driver::MmlParser::ReadVar()", _text + 0x6D5060
	.equiv "nw::snd::internal::driver::MmlParser::ReadArg()", _text + 0x6D5088
	.equiv "nw::snd::internal::driver::MmlParser::Read24()", _text + 0x6D51A0
	.equiv "nw::snd::internal::driver::MmlParser::Parse()", _text + 0x6D51DC
	.equiv "nw::snd::internal::driver::MmlParser::ParseAllocTrack()", _text + 0x6D58F0
	.equiv "nw::snd::internal::driver::MmlParser::CommandProc()", _text + 0x6D5930
	.equiv "nw::snd::internal::PlayerHeap::PlayerHeap()", _text + 0x6D7F04
	.equiv "nw::snd::internal::PlayerHeap::Create()", _text + 0x6D7F70
	.equiv "nw::snd::internal::PlayerHeapDataManager::Finalize()", _text + 0x6D7FD0
	.equiv "nw::snd::internal::PlayerHeapDataManager::~PlayerHeapDataManager()", _text + 0x6D7FF8
	.equiv "nw::snd::internal::PlayerHeapDataManager::PlayerHeapDataManager()", _text + 0x6D8134
	.equiv "nw::snd::internal::PlayerHeapDataManager::Initialize()", _text + 0x6D81D8
	.equiv "______nw::snd::internal::<unnamed>::IsValidFileHeader()", _text + 0x6D823C
	.equiv "nw::snd::internal::SequenceSoundFileReader::SequenceSoundFileReader()", _text + 0x6D827C
	.equiv "nw::snd::Sound3DCalculator::CalcAngleAndDistance()", _text + 0x6D84FC
	.equiv "nw::snd::Sound3DCalculator::CalcPan()", _text + 0x6D8C6C
	.equiv "nw::snd::Sound3DCalculator::CalcPitch()", _text + 0x6D8D34
	.equiv "nw::snd::Sound3DCalculator::CalcBiquadFilterValue()", _text + 0x6D8EFC
	.equiv "nw::snd::internal::StreamSoundPrefetchFileReader::StreamSoundPrefetchFileReader()", _text + 0x6D8F3C
	.equiv "nw::snd::internal::StreamSoundPrefetchFileReader::IsValidFileHeader()", _text + 0x6D8F80
	.equiv "nw::snd::internal::StreamSoundPrefetchFileReader::Initialize()", _text + 0x6D8FB8
	.equiv "nw::snd::internal::StreamSoundPrefetchFileReader::ReadStreamSoundInfo()", _text + 0x6D9044
	.equiv "nw::snd::internal::StreamSoundPrefetchFileReader::ReadDspAdpcmChannelInfo()", _text + 0x6D9094
	.equiv "nw::snd::internal::StreamSoundPrefetchFileReader::ReadPrefetchDataInfo()", _text + 0x6D9148
	.equiv "nw::snd::internal::WaveFile::InfoBlockBody::GetChannelInfo()", _text + 0x6D9254
	.equiv "nw::snd::internal::WaveSoundFile::FileHeader::GetInfoBlock()", _text + 0x6D9294
	.equiv "nw::snd::internal::WaveSoundFile::InfoBlockBody::GetWaveSoundData()", _text + 0x6D9308
	.equiv "nw::snd::internal::WaveSoundFile::WaveSoundData::GetNoteInfo()", _text + 0x6D9370
	.equiv "nw::snd::internal::WaveSoundFile::NoteInfo::GetOriginalKey()", _text + 0x6D96E0
	.equiv "nw::snd::internal::WaveSoundFile::NoteInfo::GetVolume()", _text + 0x6D9700
	.equiv "nw::snd::internal::WaveSoundFile::NoteInfo::GetPan()", _text + 0x6D976C
	.equiv "nw::snd::internal::WaveSoundFile::NoteInfo::GetSurroundPan()", _text + 0x6D97D8
	.equiv "nw::snd::internal::WaveSoundFile::NoteInfo::GetPitch()", _text + 0x6D9844
	.equiv "nw::snd::internal::WaveSoundFile::NoteInfo::GetAdshrCurve()", _text + 0x6D98B0
	.equiv "nw::snd::RemoteSpeaker::ClearParam()", _text + 0x6D9948
	.equiv "nw::snd::RemoteSpeaker::InitParam()", _text + 0x6D999C
	.equiv "nw::snd::RemoteSpeaker::IsEnabledOutput()", _text + 0x6D9AC4
	.equiv "nw::snd::RemoteSpeaker::IsAllSampleZero()", _text + 0x6D9B74
	.equiv "nw::snd::RemoteSpeaker::UpdateStreamData()", _text + 0x6D9BF8
	.equiv "nw::snd::RemoteSpeaker::Update()", _text + 0x6DA0D8
	.equiv "nw::snd::internal::BankFile::FileHeader::GetInfoBlock()", _text + 0x6DA104
	.equiv "nw::snd::internal::BankFile::InfoBlockBody::GetInstrument()", _text + 0x6DA178
	.equiv "FID_conflict:nw::snd::internal::BankFile::KeyRegion::GetVelocityRegion()", _text + 0x6DA2F8
	.equiv "nw::snd::internal::BankFile::VelocityRegion::GetOriginalKey()", _text + 0x6DA308
	.equiv "nw::snd::internal::BankFile::VelocityRegion::GetVolume()", _text + 0x6DA328
	.equiv "nw::snd::internal::BankFile::VelocityRegion::GetPan()", _text + 0x6DA394
	.equiv "nw::snd::internal::BankFile::VelocityRegion::GetPitch()", _text + 0x6DA400
	.equiv "nw::snd::internal::BankFile::VelocityRegion::IsIgnoreNoteOff()", _text + 0x6DA46C
	.equiv "nw::snd::internal::BankFile::VelocityRegion::GetKeyGroup()", _text + 0x6DA4E0
	.equiv "nw::snd::internal::BankFile::VelocityRegion::GetInterpolationType()", _text + 0x6DA54C
	.equiv "nw::snd::internal::BankFile::VelocityRegion::GetAdshrCurve()", _text + 0x6DA5B8
	.equiv "nw::snd::internal::BankFile::VelocityRegion::GetRegionParameter()", _text + 0x6DA630
	.equiv "nw::snd::internal::DecodeDspAdpcm()", _text + 0x6DA66C
	.equiv "nw::snd::internal::GroupFile::FileHeader::GetInfoBlock()", _text + 0x6DA7EC
	.equiv "nw::snd::internal::GroupFile::FileHeader::GetFileBlock()", _text + 0x6DA848
	.equiv "nw::snd::internal::GroupFile::FileHeader::GetInfoExBlock()", _text + 0x6DA8A4
	.equiv "nw::snd::internal::SequenceSoundFile::FileHeader::GetDataBlock()", _text + 0x6DA9BC
	.equiv "nw::snd::internal::SequenceSoundFile::FileHeader::GetLabelBlock()", _text + 0x6DAA18
	.equiv "nw::snd::internal::SequenceSoundFile::LabelBlockBody::GetLabelInfo()", _text + 0x6DAA74
	.equiv "nw::snd::internal::StreamSoundPrefetchFile::FileHeader::GetInfoBlock()", _text + 0x6DABB4
	.equiv "nw::snd::internal::StreamSoundPrefetchFile::FileHeader::GetPrefetchDataBlock()", _text + 0x6DAC10
	.equiv "nw::scfont::ScalableFont::ScalableFont()", _text + 0x6DAC7C
	.equiv "nw::scfont::ScalableFont::RegisterAlternateCharGlyph()", _text + 0x6DAD14
	.equiv "nw::scfont::ScalableFont::Initialize()", _text + 0x6DADC0
	.equiv "nw::scfont::ScalableFont::InitializeArg::InitializeArg()", _text + 0x6DB2D8
	.equiv "nw::scfont::TextureCache::TextureCache()", _text + 0x6DB330
	.equiv "<unnamed>::IsPos2()", _text + 0x6DB4E0
	.equiv "nw::scfont::TextureCache::SetFontFace()", _text + 0x6DB4F4
	.equiv "nw::scfont::TextureCache::Initialize()", _text + 0x6DB598
	.equiv "nw::scfont::TextureCache::EraseNotInFontGlyphs()", _text + 0x6DBB58
	.equiv "nw::scfont::TextureCache::RegisterGlyph()", _text + 0x6DBC00
	.equiv "nw::scfont::TextureCache::RegisterGlyphsWithLength()", _text + 0x6DBD48
	.equiv "nw::scfont::TextureCache::CreateNewLineImpl()", _text + 0x6DBDC4
	.equiv "nw::scfont::TextureCache::FindAndReserveEraseGlyph()", _text + 0x6DBE48
	.equiv "nw::scfont::TextureCache::UpdateTextureCache()", _text + 0x6DC08C
	.equiv "nw::scfont::TextureCache::CompleteTextureCache()", _text + 0x6DC778
	.equiv "nw::scfont::TextureCache::SetFontFaceNoPlot()", _text + 0x6DC8A0
	.equiv "nw::scfont::TextureCache::GetFontMetrics()", _text + 0x6DC9E0
	.equiv "nw::scfont::TextureCache::CalcCharWidth()", _text + 0x6DC9F0
	.equiv "nw::scfont::TextureCache::CalcKerning()", _text + 0x6DCAA4
	.equiv "nw::scfont::TextureCache::InitializeArg::InitializeArg()", _text + 0x6DCB58
	.equiv "FUN_0E85CC5C:FS_init_ex", _text + 0x6DCC5C
	.equiv "scffnd::ScalableFontEngine::SetFont()", _text + 0x6DCC64
	.equiv "FUN_0E85CCA8:FSS_set_scale", _text + 0x6DCCA8
	.equiv "FUN_0E85CCAC:FS_set_bold_pct", _text + 0x6DCCAC
	.equiv "scffnd::ScalableFontEngine::SetFlags()", _text + 0x6DCCB0
	.equiv "FUN_0E85CCC4:FS_set_outline_width", _text + 0x6DCCC4
	.equiv "FUN_0E85CCC8:FSS_get_glyphmap", _text + 0x6DCCC8
	.equiv "scffnd::ScalableFontEngine::CheckGlyphExist()", _text + 0x6DCCCC
	.equiv "FUN_0E85CCF4:FSS_free_char", _text + 0x6DCCF4
	.equiv "FUN_0E85CCF8:FSS_font_metrics", _text + 0x6DCCF8
	.equiv "FUN_0E85CCFC:FSS_get_advance", _text + 0x6DCCFC
	.equiv "FUN_0E85CD00:FSS_get_kerning", _text + 0x6DCD00
	.equiv "scffnd::ScalableFontEngineHelper::Decode()", _text + 0x6DCD04
	.equiv "FS_strdup", _text + 0x6DCD94
	.equiv "FS_set_flags", _text + 0x6DCE30
	.equiv "FSS_set_cmap", _text + 0x6DD2A0
	.equiv "FUN_0E85D344:FSS_free_char", _text + 0x6DD344
	.equiv "get_ref_lines", _text + 0x6DD3A0
	.equiv "FS_streq", _text + 0x6DE0CC
	.equiv "FUN_0E85E15C:FS_init_ex", _text + 0x6DE15C
	.equiv "FUN_0E85E51C:FSS_set_scale", _text + 0x6DE51C
	.equiv "FUN_0E85E9A0:FS_set_bold_pct", _text + 0x6DE9A0
	.equiv "FUN_0E85E9D0:FS_set_outline_width", _text + 0x6DE9D0
	.equiv "FUN_0E85EA00:FSS_get_glyphmap", _text + 0x6DEA00
	.equiv "unload_cmap_cache", _text + 0x6DEC04
	.equiv "unload_fnt", _text + 0x6DEC44
	.equiv "load_fnt", _text + 0x6DEF70
	.equiv "fontfile_type", _text + 0x6DF328
	.equiv "fix_fnt", _text + 0x6E0988
	.equiv "FSS_set_font", _text + 0x6E0998
	.equiv "FSS_get_table_structure", _text + 0x6E13A8
	.equiv "FUN_0E861B44:FSS_font_metrics", _text + 0x6E1B44
	.equiv "FUN_0E861DC8:FSS_get_advance", _text + 0x6E1DC8
	.equiv "FSS_map_char", _text + 0x6E2460
	.equiv "scale_font", _text + 0x6E24D0
	.equiv "trim_bitmap", _text + 0x6E251C
	.equiv "delete_fs_cache", _text + 0x6E2F20
	.equiv "find_graymap_in_cache", _text + 0x6E31B4
	.equiv "save_graymap_to_cache", _text + 0x6E31C4
	.equiv "CFS_malloc", _text + 0x6E31E0
	.equiv "CFS_open_file", _text + 0x6E31F0
	.equiv "CFS_close_file", _text + 0x6E3200
	.equiv "FUN_0E863210:FID_conflict:CFS_error_file", _text + 0x6E3210
	.equiv "CFS_seek_file", _text + 0x6E3220
	.equiv "FUN_0E863230:FID_conflict:CFS_error_file", _text + 0x6E3230
	.equiv "map_font", _text + 0x6E345C
	.equiv "LFNT_map_char", _text + 0x6E371C
	.equiv "map_char", _text + 0x6E4A7C
	.equiv "inverse_map_char", _text + 0x6E4E9C
	.equiv "FS_open", _text + 0x6E566C
	.equiv "FS_close", _text + 0x6E56B8
	.equiv "FS_seek", _text + 0x6E56F8
	.equiv "FS_read", _text + 0x6E5758
	.equiv "FracSqrt", _text + 0x6E57DC
	.equiv "FixSqrt", _text + 0x6E5878
	.equiv "norm", _text + 0x6E5908
	.equiv "vardiv_64", _text + 0x6E5960
	.equiv "muldiv_64", _text + 0x6E5AAC
	.equiv "varmul_64", _text + 0x6E5C48
	.equiv "fixed_norm", _text + 0x6E5D84
	.equiv "ScaleFuncCall", _text + 0x6E5F78
	.equiv "get_glyph_parms", _text + 0x6E5FFC
	.equiv "fsg_PrivateFontSpaceSize", _text + 0x6E6450
	.equiv "fsg_WorkSpaceSetOffsets", _text + 0x6E652C
	.equiv "fs_NewSfnt", _text + 0x6E6624
	.equiv "fsg_InitInterpreterTrans", _text + 0x6E673C
	.equiv "fsg_SetDefaults", _text + 0x6E6914
	.equiv "fsg_RunFontProgram", _text + 0x6E6A3C
	.equiv "fs_NewTransformation", _text + 0x6E6B04
	.equiv "compose_trans", _text + 0x6E6E5C
	.equiv "init_phantom_points", _text + 0x6E70CC
	.equiv "comp_phantom_points", _text + 0x6E744C
	.equiv "scale_char", _text + 0x6E75D4
	.equiv "apply_transformation", _text + 0x6E761C
	.equiv "apply_offsets", _text + 0x6E7F34
	.equiv "do_hints", _text + 0x6E812C
	.equiv "update_sp_ep", _text + 0x6E86C0
	.equiv "fsg_IncrementElement", _text + 0x6E8710
	.equiv "advance_elementPtr", _text + 0x6E87C4
	.equiv "get_glyph_metrics", _text + 0x6E882C
	.equiv "get_glyph_advance", _text + 0x6E8A58
	.equiv "get_charData", _text + 0x6E8BD8
	.equiv "apply_transMatrix", _text + 0x6E8BE4
	.equiv "which_script", _text + 0x6E9074
	.equiv "sfnt_UnfoldCurve", _text + 0x6E9580
	.equiv "fsg_CopyElementBackwards", _text + 0x6E983C
	.equiv "fsg_SetUpElement", _text + 0x6E98DC
	.equiv "get_comp", _text + 0x6E9A0C
	.equiv "fsg_RunPreProgram", _text + 0x6EA294
	.equiv "fsg_GridFit", _text + 0x6EA680
	.equiv "delete_key", _text + 0x6EA818
	.equiv "get_dropout_control", _text + 0x6EA878
	.equiv "FsLttComponent_init", _text + 0x6EA918
	.equiv "FsLttComponent_done", _text + 0x6EA9A8
	.equiv "FsLtt_init", _text + 0x6EAA68
	.equiv "FsLtt_done", _text + 0x6EAB14
	.equiv "FsLtt_read", _text + 0x6ECC20
	.equiv "FsLtt_load", _text + 0x6ED010
	.equiv "trim_convert", _text + 0x6ED9E8
	.equiv "make_graymap", _text + 0x6EDFDC
	.equiv "copy_graymap", _text + 0x6EF0D0
	.equiv "get_graymap", _text + 0x6EF150
	.equiv "load_kerning", _text + 0x6EF594
	.equiv "delete_kern", _text + 0x6EF790
	.equiv "FUN_0E86F7DC:FSS_get_kerning", _text + 0x6EF7DC
	.equiv "count_points_cff", _text + 0x6EFAD0
	.equiv "count_points", _text + 0x6EFB7C
	.equiv "setup_outline", _text + 0x6EFCF0
	.equiv "fill_outline_cff", _text + 0x6EFD94
	.equiv "fill_outline", _text + 0x6EFFC4
	.equiv "embolden_outline", _text + 0x6F041C
	.equiv "extract_outline", _text + 0x6F10FC
	.equiv "find_or_make_outline", _text + 0x6F17A0
	.equiv "get_embedded_graymap", _text + 0x6F2A48
	.equiv "get_EBLC_partial", _text + 0x6F2A80
	.equiv "get_scale_inputs", _text + 0x6F2C5C
	.equiv "check_scale", _text + 0x6F2EB4
	.equiv "scale_font_ttf", _text + 0x6F3220
	.equiv "check_sfnt", _text + 0x6F3768
	.equiv "modify_scale", _text + 0x6F38CC
	.equiv "FsScratchSpace_init", _text + 0x6F3A10
	.equiv "FsScratchSpace_reserve", _text + 0x6F3A9C
	.equiv "FsScratchSpace_release", _text + 0x6F3B54
	.equiv "FSS_get_table", _text + 0x6F3E38
	.equiv "FSS_free_table", _text + 0x6F44C8
	.equiv "squeeze_table_ptrs", _text + 0x6F4604
	.equiv "any_used_lfnt_table_ptrs", _text + 0x6F46F8
	.equiv "ptrs_to_offsets", _text + 0x6F479C
	.equiv "ttf_read_buf", _text + 0x6F47B4
	.equiv "ttf_read", _text + 0x6F489C
	.equiv "get_ttf_table_info", _text + 0x6F4B8C
	.equiv "get_ttf_table", _text + 0x6F4C0C
	.equiv "get_os2", _text + 0x6F4C70
	.equiv "get_os2_table", _text + 0x6F4FCC
	.equiv "unload_ttf", _text + 0x6F5380
	.equiv "get_abbreviated_name", _text + 0x6F5594
	.equiv "get_name", _text + 0x6F5BD8
	.equiv "load_ttf", _text + 0x6F5C70
	.equiv "TYPESET_init", _text + 0x6F6914
	.equiv "TYPESET_clear", _text + 0x6F6A84
	.equiv "FSS_free", _text + 0x6F6B18
	.equiv "CACHE_ENTRY_free", _text + 0x6F6B30
	.equiv "delete_lfnt", _text + 0x6F6D14
	.equiv "kill_fntset", _text + 0x6F6E40
	.equiv "get_some_back", _text + 0x6F7238
	.equiv "FSS_malloc", _text + 0x6F75AC
	.equiv "FSS_calloc", _text + 0x6F765C
	.equiv "CACHE_ENTRY_calloc", _text + 0x6F76AC
	.equiv "__init_heap", _text + 0x6F7A04
	.equiv "fs__free", _text + 0x6F7D84
	.equiv "fs__malloc", _text + 0x6F7EA4
	.equiv "getFDindex", _text + 0x6F8740
	.equiv "int_arg", _text + 0x6F8D38
	.equiv "fract_arg", _text + 0x6F8D68
	.equiv "resetCIDdicts", _text + 0x6F9258
	.equiv "loadGlyph", _text + 0x6FBD38
	.equiv "cff_GridFit", _text + 0x6FC0FC
	.equiv "unload_cff", _text + 0x6FC454
	.equiv "load_cff", _text + 0x6FC4D4
	.equiv "engrave_graymap", _text + 0x6FCB04
	.equiv "emboss_graymap", _text + 0x6FCDCC
	.equiv "outline_graymap", _text + 0x6FD06C
	.equiv "Soften", _text + 0x6FDD38
	.equiv "soft_outline_graymap", _text + 0x6FF024
	.equiv "pixelbold_graymap2", _text + 0x6FF20C
	.equiv "pixelbold_graymap4", _text + 0x6FFC94
	.equiv "pixelbold_graymap8", _text + 0x7006E0
	.equiv "pixelbold_embedded_graymap", _text + 0x700BF8
	.equiv "fnt_RoundOff", _text + 0x7011A0
	.equiv "fnt_Execute", _text + 0x701818
	.equiv "fnt_IUP", _text + 0x702A3C
	.equiv "rtgah", _text + 0x70C47C
	.equiv "nw::scfont::GlyphNode::CalcLineKind()", _text + 0x70F2A0
	.equiv "nw::scfont::GlyphTreeMap::GlyphTreeMap()", _text + 0x70F2F4
	.equiv "nw::scfont::GlyphTreeMap::Initialize()", _text + 0x70F33C
	.equiv "FUN_0E88F3CC:nw::scfont::GlyphTreeMap::Find()", _text + 0x70F3CC
	.equiv "FUN_0E88F404:nw::scfont::GlyphTreeMap::Find()", _text + 0x70F404
	.equiv "FUN_0E88F420:nw::scfont::GlyphTreeMap::Insert()", _text + 0x70F420
	.equiv "FUN_0E88F634:nw::scfont::GlyphTreeMap::Insert()", _text + 0x70F634
	.equiv "FUN_0E88F76C:nw::scfont::GlyphTreeMap::Erase()", _text + 0x70F76C
	.equiv "FUN_0E88FE94:nw::scfont::GlyphTreeMap::Erase()", _text + 0x70FE94
	.equiv "nw::scfont::GlyphTreeMap::UpdateFlagsForCompleteTextureCacheRecursive()", _text + 0x70FEEC
	.equiv "FFLiSetCoordinat()", _text + 0x710240
	.equiv "FFLiGetStoreData", _text + 0x710294
	.equiv "FFLGetAdditionalInfo", _text + 0x7103E0
	.equiv "FFLiEnableSpecialMii", _text + 0x71047C
	.equiv "FUN_0E8904C0:<unnamed>::InitResImpl()", _text + 0x7104C0
	.equiv "FUN_0E8904C4:FFLiInitResGPUStep()", _text + 0x7104C4
	.equiv "FUN_0E8904C8:FFLiManager::GetBufferSize()", _text + 0x7104C8
	.equiv "FFLGetFavoriteColor", _text + 0x7104CC
	.equiv "FFLGetExpandedResourceBufferSize", _text + 0x71051C
	.equiv "FFLExpandResourceBuffer", _text + 0x710598
	.equiv "<unnamed>::ReplaceInvalidNameChar()", _text + 0x710614
	.equiv "<unnamed>::IsAvailableFontRegion()", _text + 0x710658
	.equiv "<unnamed>::ReplaceNonAsciiNameChar()", _text + 0x710668
	.equiv "FFLiGetAdditionalInfo()", _text + 0x7106A4
	.equiv "FFLiIsSameAuthorID()", _text + 0x7108DC
	.equiv "FFLiIsHomeAuthorID()", _text + 0x71092C
	.equiv "FFLiUseOffScreenSrgbFetch()", _text + 0x710970
	.equiv "<unnamed>::SetupColorContainer()", _text + 0x7109AC
	.equiv "<unnamed>::SrgbFetchValue()", _text + 0x710C6C
	.equiv "<unnamed>::DegammaColorContainer()", _text + 0x710CE0
	.equiv "<unnamed>::InitializeColorContainerIfUninitialized()", _text + 0x710D3C
	.equiv "<unnamed>::GetColorContainer()", _text + 0x710DA0
	.equiv "<unnamed>::GetSrgbFetchColorContainer()", _text + 0x710DD8
	.equiv "FFLiGetSrgbFetchFacelineColor()", _text + 0x710E14
	.equiv "FUN_0E890E58:FID_conflict:FFLiGetSrgbFetchMustacheColor()", _text + 0x710E58
	.equiv "FUN_0E890E9C:FID_conflict:FFLiGetSrgbFetchMustacheColor()", _text + 0x710E9C
	.equiv "FUN_0E890EE0:FID_conflict:FFLiGetSrgbFetchMustacheColor()", _text + 0x710EE0
	.equiv "FUN_0E890F2C:FID_conflict:FFLiGetSrgbFetchEyeColorG()", _text + 0x710F2C
	.equiv "FUN_0E890F68:FID_conflict:FFLiGetSrgbFetchEyeColorG()", _text + 0x710F68
	.equiv "<unnamed>::GetEyeColorB()", _text + 0x710F9C
	.equiv "FFLiGetSrgbFetchEyeColorB()", _text + 0x710FAC
	.equiv "<unnamed>::GetGlassColor()", _text + 0x710FE0
	.equiv "<unnamed>::GetMouthColorR()", _text + 0x710FF0
	.equiv "FUN_0E891000:FID_conflict:FFLiGetSrgbFetchMouthColorG()", _text + 0x711000
	.equiv "<unnamed>::GetMouthColorG()", _text + 0x711034
	.equiv "FUN_0E891044:FID_conflict:FFLiGetSrgbFetchMouthColorG()", _text + 0x711044
	.equiv "FUN_0E891080:FID_conflict:FFLiGetSrgbFetchMouthColorG()", _text + 0x711080
	.equiv "FFLiGetSrgbFetchMoleColor()", _text + 0x7110BC
	.equiv "FFLiGetFacelineColor()", _text + 0x711110
	.equiv "FFLiGetHairColor()", _text + 0x711144
	.equiv "FFLiGetGlassColor()", _text + 0x711178
	.equiv "FFLiGetFavoriteColor()", _text + 0x7111AC
	.equiv "FUN_0E8911E0:FID_conflict:FFLiGetNoselineColor()", _text + 0x7111E0
	.equiv "FFLiGetCapColor()", _text + 0x711204
	.equiv "FUN_0E891238:FID_conflict:FFLiGetNoselineColor()", _text + 0x711238
	.equiv "FFLiIsNullMiiID", _text + 0x71125C
	.equiv "FFLiGetTemporaryMiiID", _text + 0x7112B0
	.equiv "FID_conflict:FFLiIsSpecialMiiID", _text + 0x7112E0
	.equiv "FFLiIsNTRMiiID", _text + 0x711308
	.equiv "FFLiIsValidMiiID", _text + 0x711334
	.equiv "FFLiIsSameMiiID", _text + 0x71137C
	.equiv "<unnamed>::GetDefaultCreateID()", _text + 0x711424
	.equiv "FFLiDatabaseDefault::InitElement()", _text + 0x71144C
	.equiv "FFLiDatabaseDefault::FFLiDatabaseDefault()", _text + 0x7114B0
	.equiv "FUN_0E891528:FID_conflict:FFLiDatabaseRandom::~FFLiDatabaseRandom()", _text + 0x711528
	.equiv "FFLiDatabaseDefault::Get()", _text + 0x71153C
	.equiv "FFLiDatabaseFileAccessor::FFLiDatabaseFileAccessor()", _text + 0x711634
	.equiv "FFLiDatabaseFileAccessor::~FFLiDatabaseFileAccessor()", _text + 0x7116E8
	.equiv "FFLiDatabaseFileAccessor::Init()", _text + 0x71173C
	.equiv "<unnamed>::GetDatabasePath()", _text + 0x71177C
	.equiv "FFLiDatabaseFileAccessor::AfterConstruct()", _text + 0x7117A0
	.equiv "<unnamed>::ReadFile()", _text + 0x711850
	.equiv "<unnamed>::LoadDatabaseHidden()", _text + 0x711A68
	.equiv "<unnamed>::WriteFileImpl()", _text + 0x711AD8
	.equiv "<unnamed>::WriteFile()", _text + 0x711B7C
	.equiv "<unnamed>::SaveDatabaseHidden()", _text + 0x711E08
	.equiv "<unnamed>::LoadDatabaseOfficial()", _text + 0x711E5C
	.equiv "FFLiDatabaseFileAccessor::IsExistFile()", _text + 0x711ECC
	.equiv "<unnamed>::SaveDatabaseOfficial()", _text + 0x711F70
	.equiv "FFLiDatabaseFileAccessor::BootLoadImpl()", _text + 0x711FC4
	.equiv "FFLiDatabaseFileAccessor::AdjustRegularListOfficial()", _text + 0x712334
	.equiv "FFLiDatabaseFileAccessor::BootLoad()", _text + 0x7123B4
	.equiv "FFLiDatabaseFileAccessor::SaveHidden()", _text + 0x71240C
	.equiv "<unnamed>::CopyDatabaseOfficial()", _text + 0x712500
	.equiv "FFLiDatabaseFileAccessor::BackupOfficial()", _text + 0x7125E8
	.equiv "FFLiDatabaseFileAccessor::BeforeFlushQuota()", _text + 0x7126AC
	.equiv "FFLiDatabaseFileAccessor::FlushQuota()", _text + 0x712710
	.equiv "FFLiDatabaseFileAccessor::GetPath()", _text + 0x7127B4
	.equiv "FUN_0E8927F4:FFLiDatabaseFileAccessor::IsExistFiles()", _text + 0x7127F4
	.equiv "FFLiMin()", _text + 0x7128CC
	.equiv "FFLiOrderData::Init()", _text + 0x7128E4
	.equiv "FFLiDatabaseFileHidden::GetImpl()", _text + 0x712908
	.equiv "FFLiDatabaseFileHidden::NumOfGenderWithIndex()", _text + 0x712918
	.equiv "<unnamed>::ShuffleIndices()", _text + 0x7129B0
	.equiv "FFLiDatabaseFileHidden::UpdateMiddleDBRandom()", _text + 0x712A60
	.equiv "FFLiDatabaseFileHidden::UpdateMiddleDBTime()", _text + 0x712C0C
	.equiv "FFLiDatabaseFileHidden::Init()", _text + 0x712D4C
	.equiv "FFLiDatabaseFileHidden::IsValidIdentifier()", _text + 0x712DEC
	.equiv "FUN_0E892E08:FID_conflict:FFLiDatabaseFileOfficial::IsValid()", _text + 0x712E08
	.equiv "FFLiDatabaseFileHidden::UpdateMiddleDB()", _text + 0x712E58
	.equiv "FUN_0E892F00:FFLiSwapEndianImpl()", _text + 0x712F00
	.equiv "FUN_0E892F24:FFLiSwapEndianImpl()", _text + 0x712F24
	.equiv "FUN_0E892F60:void_FFLiSwapEndianArrayImpl()", _text + 0x712F60
	.equiv "FFLiDatabaseFileOfficial::GetImpl()", _text + 0x712FCC
	.equiv "FFLiDatabaseFileOfficial::UpdateCrc()", _text + 0x713094
	.equiv "FFLiDatabaseFileOfficial::Init()", _text + 0x7130A8
	.equiv "FFLiDatabaseFileOfficial::IsValidIdentifier()", _text + 0x713134
	.equiv "FUN_0E893150:FID_conflict:FFLiDatabaseFileOfficial::IsValid()", _text + 0x713150
	.equiv "FFLiDatabaseFileOfficial::Get()", _text + 0x7131A0
	.equiv "FFLiDatabaseFileOfficial::Search()", _text + 0x713294
	.equiv "<unnamed>::IsExistCreateID()", _text + 0x7133C8
	.equiv "FFLiDatabaseFileOfficial::AdjustRegularList()", _text + 0x713464
	.equiv "FFLiDatabaseManager::~FFLiDatabaseManager()", _text + 0x7135E4
	.equiv "FFLiDatabaseManager::AfterConstruct()", _text + 0x713650
	.equiv "FFLiDatabaseManager::BeforeDestruct()", _text + 0x7136A0
	.equiv "FFLiDatabaseManager::EnableSpecialMii()", _text + 0x7136F8
	.equiv "FFLiDatabaseManager::GetCharInfoFromOfficial()", _text + 0x71371C
	.equiv "FFLiDatabaseManager::GetCharInfoFromDefault()", _text + 0x71376C
	.equiv "FFLiDatabaseManager::GetCharInfoFromStoreData()", _text + 0x7137AC
	.equiv "<unnamed>::ReplaceNameIfAccord()", _text + 0x713844
	.equiv "<unnamed>::ReplaceNameAndCreatorIfAccord()", _text + 0x713888
	.equiv "FFLiDatabaseManager::PickupCharInfo()", _text + 0x7138C8
	.equiv "FFLiDatabaseManager::GetStoreData()", _text + 0x713A5C
	.equiv "FFLiDatabaseManager::UpdateMiddleDB()", _text + 0x713AD0
	.equiv "FID_conflict:al::ByamlBinaryTableIter::ByamlBinaryTableIter()", _text + 0x713B64
	.equiv "FUN_0E893BA8:FID_conflict:FFLiDatabaseRandom::~FFLiDatabaseRandom()", _text + 0x713BA8
	.equiv "FFLiDatabaseRandom::DetermineParam()", _text + 0x713BBC
	.equiv "<unnamed>::GetRandomParts()", _text + 0x713CA0
	.equiv "<unnamed>::GetRandomGlassType()", _text + 0x713CDC
	.equiv "FFLiDatabaseRandom::Get()", _text + 0x713D58
	.equiv "FFLiDatabaseRandom::UpdateMiddleDB()", _text + 0x7144BC
	.equiv "FFLiGetDateTimeNow()", _text + 0x7145C8
	.equiv "FFLiGetNowDateTime()", _text + 0x714630
	.equiv "FFLiIsLeapYear()", _text + 0x7146A4
	.equiv "FFLiGetMonthOfDay()", _text + 0x714704
	.equiv "FFLiDateToDays()", _text + 0x714728
	.equiv "FFLiGetSecondsFrom_2000_01_01()", _text + 0x7147F4
	.equiv "FFLiFsClient::FFLiFsClient()", _text + 0x714860
	.equiv "FUN_0E89489C:FID_conflict:FFLiSystemContext::~FFLiSystemContext()", _text + 0x71489C
	.equiv "FFLiFsClient::Init()", _text + 0x7148B4
	.equiv "FFLiFsClient::Shutdown()", _text + 0x714930
	.equiv "FFLiFsClient::ShutdownIfValid()", _text + 0x714964
	.equiv "FFLiFsCommand::FFLiFsCommand()", _text + 0x714A08
	.equiv "FUN_0E894A74:FFLiFsCommand::PlacementNew()", _text + 0x714A74
	.equiv "FFLiFsFile::FFLiFsFile()", _text + 0x714AA4
	.equiv "FFLiFsFile::~FFLiFsFile()", _text + 0x714AF0
	.equiv "FFLiFsFile::Open()", _text + 0x714B04
	.equiv "FFLiFsFile::Close()", _text + 0x714B24
	.equiv "FFLiFsFile::Read()", _text + 0x714B70
	.equiv "FFLiFsFile::ReadWithPos()", _text + 0x714B9C
	.equiv "FFLiFsFile::Write()", _text + 0x714BF4
	.equiv "FFLiFsFile::IsOpened()", _text + 0x714C20
	.equiv "FFLiFsFile::FlushQuota()", _text + 0x714C34
	.equiv "FFLiManager::IsConstruct()", _text + 0x714C4C
	.equiv "FFLiManager::AfterConstruct()", _text + 0x714C60
	.equiv "<unnamed>::TempMemorySize()", _text + 0x714E24
	.equiv "FUN_0E894E38:FFLiManager::GetBufferSize()", _text + 0x714E38
	.equiv "<unnamed>::CreateCompressor()", _text + 0x714EC4
	.equiv "FFLiManager::FFLiManager()", _text + 0x714F3C
	.equiv "FFLiManager::BeforeDestruct()", _text + 0x7150E8
	.equiv "FFLiManager::~FFLiManager()", _text + 0x715164
	.equiv "FFLiManager::Destroy()", _text + 0x71520C
	.equiv "FFLiManager::Create()", _text + 0x715298
	.equiv "FUN_0E895394:<unnamed>::InitResImpl()", _text + 0x715394
	.equiv "FUN_0E89540C:<unnamed>::InitResImpl()", _text + 0x71540C
	.equiv "FFLiManager::SetupGPU()", _text + 0x715410
	.equiv "FUN_0E895458:FFLiInitResGPUStep()", _text + 0x715458
	.equiv "FUN_0E895488:FFLiManager::GetBufferSize()", _text + 0x715488
	.equiv "FFLiManager::CanInitCharModel()", _text + 0x71548C
	.equiv "FUN_0E8954AC:thunk_FUN_0e8954a4", _text + 0x7154AC
	.equiv "FFLiMiddleDBRandomParam::Init()", _text + 0x7154BC
	.equiv "FUN_0E8954E0:FFLiMiddleDB::Init()", _text + 0x7154E0
	.equiv "FUN_0E8955D8:FFLiMiddleDB::Init()", _text + 0x7155D8
	.equiv "FFLiUpdateMiddleDB()", _text + 0x7155DC
	.equiv "FUN_0E895648:FFLiMiddleDB::SetRandomParam()", _text + 0x715648
	.equiv "FUN_0E895650:FFLiMiddleDB::SetRandomParam()", _text + 0x715650
	.equiv "FFLiMiddleDB::ClearData()", _text + 0x71566C
	.equiv "FFLiMiddleDB::IsFull()", _text + 0x7156B8
	.equiv "FUN_0E8956F4:FFLiMiddleDB::Add()", _text + 0x7156F4
	.equiv "FUN_0E895740:FFLiMiddleDB::Add()", _text + 0x715740
	.equiv "FUN_0E8957B0:FFLiMiddleDB::Get()", _text + 0x7157B0
	.equiv "FUN_0E8957C0:FFLiMiddleDB::Get()", _text + 0x7157C0
	.equiv "FFLiMiddleDB::GetCharInfo()", _text + 0x7157D0
	.equiv "<unnamed>::RflToFaceLineAndMake()", _text + 0x715830
	.equiv "<unnamed>::VerifyNameFromRFL()", _text + 0x715844
	.equiv "<unnamed>::ReplaceNameFromRFL()", _text + 0x715924
	.equiv "FFLiMiiDataCoreRFL2CharInfo()", _text + 0x715998
	.equiv "FFLiCharInfo2MiiDataCore()", _text + 0x715D20
	.equiv "FFLiMiiDataCoreRFL2MiiDataCore()", _text + 0x716088
	.equiv "FFLiClearCreatorNameFromOfficial()", _text + 0x7160E0
	.equiv "FFLiCharInfo2MiiDataOfficial()", _text + 0x716468
	.equiv "FFLiStoreDataCFLToCharInfo()", _text + 0x7164B0
	.equiv "FFLiMiiDataOfficialToStoreDataCFL()", _text + 0x71653C
	.equiv "FFLiCharInfoToStoreDataCFL()", _text + 0x7165B8
	.equiv "FFLiMiiDataOfficial::SwapEndian()", _text + 0x716660
	.equiv "FFLiStoreData::SetCRC()", _text + 0x716698
	.equiv "FFLiStoreData::SwapEndian()", _text + 0x7166A8
	.equiv "FFLiVerifyBirthday()", _text + 0x7166F8
	.equiv "FFLiGetResourcePath()", _text + 0x716770
	.equiv "FFLiGetDatabasePath()", _text + 0x71678C
	.equiv "FFLiConvertFSStatusToFFLResult()", _text + 0x7167A8
	.equiv "FFLiRandomContext::Init()", _text + 0x7167B8
	.equiv "FFLiRandomContext::Random()", _text + 0x7167D8
	.equiv "FFLiGetTextureResourceNum()", _text + 0x71680C
	.equiv "FFLiGetShapeResourceNum()", _text + 0x716828
	.equiv "FFLiGetTextureResoucePartsInfos()", _text + 0x716844
	.equiv "FFLiGetShapeResoucePartsInfos()", _text + 0x71699C
	.equiv "FFLiResourceWindowBitsToZlibWindowBits()", _text + 0x716B0C
	.equiv "FUN_0E896B54:FFLiResourceHeader::GetResult()", _text + 0x716B54
	.equiv "FFLiResourceHeader::GetExpandedBufferSize()", _text + 0x716BE4
	.equiv "FUN_0E896C2C:<unnamed>::Uncompress()", _text + 0x716C2C
	.equiv "<unnamed>::ExpandPartsInfoAndData()", _text + 0x716C98
	.equiv "FFLiResourceHeader::Expand()", _text + 0x716DAC
	.equiv "FUN_0E896EDC:void_FFLiSwapEndianArrayImpl()", _text + 0x716EDC
	.equiv "FUN_0E896F48:FFLResult_::ExpandHeaderAndData()", _text + 0x716F48
	.equiv "FUN_0E89700C:FFLResult_::ExpandHeaderAndData()", _text + 0x71700C
	.equiv "FFLiResourceManager::FFLiResourceManager()", _text + 0x7170D0
	.equiv "FFLiResourceManager::~FFLiResourceManager()", _text + 0x717154
	.equiv "FFLiResourceManager::GetRelativeResourcePath()", _text + 0x7171A8
	.equiv "FFLiResourceManager::GetResourcePath()", _text + 0x7171C0
	.equiv "FFLiResourceManager::AfterConstruct()", _text + 0x717204
	.equiv "FFLiResourceManager::GetPath()", _text + 0x71726C
	.equiv "FFLiResourceManager::LoadResourceHeaderImpl()", _text + 0x71727C
	.equiv "FFLiResourceManager::LoadResourceHeader()", _text + 0x7173E8
	.equiv "FFLiResourceManager::HeaderFromFile()", _text + 0x71745C
	.equiv "FFLiResourceManager::Header()", _text + 0x71746C
	.equiv "FFLiResourceManager::GetTextureAlignedMaxSize()", _text + 0x7174D4
	.equiv "FFLiResourceManager::GetShapeAlignedMaxSize()", _text + 0x717514
	.equiv "FFLiResourceManager::IsValid()", _text + 0x717554
	.equiv "FFLiResourceManager::IsExpand()", _text + 0x7175B4
	.equiv "FFLiResourceManager::GetUncompressBufferSize()", _text + 0x71763C
	.equiv "FUN_0E89766C:FFLiResourceHeader::GetResult()", _text + 0x71766C
	.equiv "FFLiShaderCallback::FFLiShaderCallback()", _text + 0x717670
	.equiv "FFLiShaderCallback::~FFLiShaderCallback()", _text + 0x7176AC
	.equiv "FFLiShaderCallback::IsExist()", _text + 0x7176C0
	.equiv "FFLiShaderCallback::CallSetMatrix()", _text + 0x7176D8
	.equiv "FFLiShaderCallback::CallDraw()", _text + 0x717718
	.equiv "FFLiShaderCallback::CallSetContextState()", _text + 0x717758
	.equiv "FUN_0E8978AC:void_FFLiSwapEndianArrayImpl()", _text + 0x7178AC
	.equiv "FFLiGetUserID", _text + 0x71790C
	.equiv "FFLiSystemContext::Init()", _text + 0x717940
	.equiv "FFLiSystemContext::FFLiSystemContext()", _text + 0x7179B8
	.equiv "FUN_0E897A08:FID_conflict:FFLiSystemContext::~FFLiSystemContext()", _text + 0x717A08
	.equiv "FFLiSystemContext::AfterConstruct()", _text + 0x717A30
	.equiv "<unnamed>::Invalidate()", _text + 0x717ADC
	.equiv "FFLiTempSetContextState()", _text + 0x717AEC
	.equiv "FFLiTempSetShaderMode()", _text + 0x717B1C
	.equiv "FUN_0E897BB4:FFLiRoundUp()", _text + 0x717BB4
	.equiv "FUN_0E897BC8:FFLiRoundUp()", _text + 0x717BC8
	.equiv "FUN_0E897BCC:FFLiCheckAlign()", _text + 0x717BCC
	.equiv "FUN_0E897BE0:FFLiCheckAlign()", _text + 0x717BE0
	.equiv "FFLiCopyWcharT2U16()", _text + 0x717BE4
	.equiv "FFLiCompareString16()", _text + 0x717C20
	.equiv "FFLiIsNumberCharCode()", _text + 0x717C60
	.equiv "FFLiZlibInflator::FFLiZlibInflator()", _text + 0x717CBC
	.equiv "FFLiZlibInflator::~FFLiZlibInflator()", _text + 0x717D78
	.equiv "FFLiZlibInflator::Process()", _text + 0x717DD4
	.equiv "FFLiZlibInflator::Inflate()", _text + 0x717E6C
	.equiv "FUN_0E897FBC:thunk_FUN_0e8954a4", _text + 0x717FBC
	.equiv "FFLInitMiddleDB", _text + 0x717FC4
	.equiv "FFLUpdateMiddleDB", _text + 0x717FE8
	.equiv "FFLSetMiddleDBRandomMask", _text + 0x71800C
	.equiv "FUN_0E898034:FFLiInitNetPacket()", _text + 0x718034
	.equiv "FUN_0E898038:FFLiGetNetInfoBufferSize()", _text + 0x718038
	.equiv "FFLiAllocator::FFLiAllocator()", _text + 0x71803C
	.equiv "FFLiAllocator::IsValid()", _text + 0x718078
	.equiv "FFLiAllocator::~FFLiAllocator()", _text + 0x718088
	.equiv "FFLiAllocator::Init()", _text + 0x7180E8
	.equiv "FUN_0E898144:FFLiBufferAllocator::Allocate()", _text + 0x718144
	.equiv "FUN_0E89817C:FFLiBufferAllocator::Allocate()", _text + 0x71817C
	.equiv "FFLiBufferAllocator::CanAllocate()", _text + 0x718194
	.equiv "FFLiIsValidCharacterForName()", _text + 0x7181FC
	.equiv "<unnamed>::VerifyName()", _text + 0x71821C
	.equiv "FFLiVerifyCharInfoWithReason", _text + 0x718284
	.equiv "FUN_0E898D9C:FFLiiVerifyCharInfo()", _text + 0x718D9C
	.equiv "FUN_0E898DC4:FFLiiVerifyCharInfo()", _text + 0x718DC4
	.equiv "FFLiiGetEyeRotateOffset()", _text + 0x718DC8
	.equiv "FFLiiGetEyebrowRotateOffset()", _text + 0x718DD8
	.equiv "FFLiiGetAdjustedMouthH()", _text + 0x718DE8
	.equiv "FFLiiGetAdjustedEyeH()", _text + 0x718E3C
	.equiv "<unnamed>::CompareMiiVersion()", _text + 0x718E68
	.equiv "<unnamed>::CompareCopyable()", _text + 0x718E80
	.equiv "<unnamed>::CompareLocalOnly()", _text + 0x718E98
	.equiv "<unnamed>::CompareRegionMove()", _text + 0x718EB0
	.equiv "<unnamed>::CompareBirthPlatform()", _text + 0x718EC8
	.equiv "FFLiCompareCharInfoWithAdditionalInfo()", _text + 0x718EE0
	.equiv "FUN_0E899444:bool_FFLiRange()", _text + 0x719444
	.equiv "FFLiCharModelCreateParam::FFLiCharModelCreateParam()", _text + 0x719464
	.equiv "FFLiCharModelCreateParam::~FFLiCharModelCreateParam()", _text + 0x7194CC
	.equiv "FUN_0E8999C8:FFLiCopySurface::SetupGPU()", _text + 0x7199C8
	.equiv "FUN_0E89A208:FFLiCopySurfaceShader::SetupGPU()", _text + 0x71A208
	.equiv "FUN_0E89A25C:FFLiCopySurfaceShader::Bind()", _text + 0x71A25C
	.equiv "FUN_0E89A778:FFLiCoordinate::Transform()", _text + 0x71A778
	.equiv "FUN_0E89A7C4:FFLiCoordinate::Transform()", _text + 0x71A7C4
	.equiv "FUN_0E89A7D4:FFLiCoordinate::FlipValue()", _text + 0x71A7D4
	.equiv "FUN_0E89A8E4:FFLiCoordinate::FlipValue()", _text + 0x71A8E4
	.equiv "FFLiCoordinate::IsDefault()", _text + 0x71AA10
	.equiv "FFLiCopySurface::GetBufferSize()", _text + 0x71AAF4
	.equiv "FFLiCopySurface::FFLiCopySurface()", _text + 0x71AB28
	.equiv "FFLiCopySurface::~FFLiCopySurface()", _text + 0x71ABC8
	.equiv "FUN_0E89AC28:FFLiCopySurface::SetupGPU()", _text + 0x71AC28
	.equiv "FFLiCopySurface::Begin()", _text + 0x71AC5C
	.equiv "FFLiCopySurface::SetupSrcSurface()", _text + 0x71ACDC
	.equiv "FFLiCopySurface::SetupDstSurface()", _text + 0x71ADF0
	.equiv "FFLiCopySurface::Execute()", _text + 0x71B03C
	.equiv "FFLiCopySurfaceDrawer::FFLiCopySurfaceDrawer()", _text + 0x71B0C0
	.equiv "FFLiCopySurfaceDrawer::SetupCPU()", _text + 0x71B114
	.equiv "FFLiCopySurfaceDrawer::SetupGPU()", _text + 0x71B198
	.equiv "FFLiCopySurfaceDrawer::SetAttributeBuffer()", _text + 0x71B1E0
	.equiv "FFLiCopySurfaceDrawer::Draw()", _text + 0x71B23C
	.equiv "FFLiCopySurfaceShader::FFLiCopySurfaceShader()", _text + 0x71B258
	.equiv "FFLiCopySurfaceShader::SetupCPU()", _text + 0x71B2E4
	.equiv "FUN_0E89B388:FFLiCopySurfaceShader::SetupGPU()", _text + 0x71B388
	.equiv "FUN_0E89B3DC:FFLiCopySurfaceShader::Bind()", _text + 0x71B3DC
	.equiv "FFLiCopySurfaceShader::SetTexture()", _text + 0x71B424
	.equiv "FFLiGetCRC16()", _text + 0x71B4AC
	.equiv "FFLiIsValidCRC16()", _text + 0x71B53C
	.equiv "<unnamed>::GetNumMips()", _text + 0x71B578
	.equiv "FUN_0E89B5AC:<unnamed>::GetTextureBufferSize()", _text + 0x71B5AC
	.equiv "FFLiGetBufferSizeFacelineTexture()", _text + 0x71B5E4
	.equiv "FUN_0E89B648:<unnamed>::GetDrawParamBufferSize()", _text + 0x71B648
	.equiv "FFLiGetTempBufferSizeFacelineTexture()", _text + 0x71B6AC
	.equiv "FFLiGetCompressBufferSizeFacelineTexture()", _text + 0x71B758
	.equiv "<unnamed>::GetTextureFormat()", _text + 0x71B7B0
	.equiv "FFLiInitFacelineTexture()", _text + 0x71B7E0
	.equiv "FUN_0E89B854:FFLiBufferAllocator::Allocate()", _text + 0x71B854
	.equiv "FUN_0E89B858:thunk_FUN_0e8a03c8", _text + 0x71B858
	.equiv "<unnamed>::InitPrimitive()", _text + 0x71B85C
	.equiv "FUN_0E89B8E4:<unnamed>::InitAttributes()", _text + 0x71B8E4
	.equiv "<unnamed>::InitDrawParamWithoutModulate()", _text + 0x71B9F4
	.equiv "FFLiInitTempObjectFacelineTexture()", _text + 0x71BA58
	.equiv "FUN_0E89BBEC:<unnamed>::InvalidatePrimitive()", _text + 0x71BBEC
	.equiv "FUN_0E89BC00:<unnamed>::InvalidateAttributes()", _text + 0x71BC00
	.equiv "<unnamed>::InvalidateDrawParam()", _text + 0x71BC60
	.equiv "FFLiRenderFacelineTexture()", _text + 0x71BC98
	.equiv "FUN_0E89BF1C:unsigned_int_FFLiCompressorImpl::GetTextureBufferSize()", _text + 0x71BF1C
	.equiv "FUN_0E89BFCC:void_FFLiCompressorImpl::CompressImpl()", _text + 0x71BFCC
	.equiv "FFLiInvalidateSurface()", _text + 0x71C138
	.equiv "FFLiInvalidateShader()", _text + 0x71C1A4
	.equiv "<unnamed>::ExpressionFlagCount()", _text + 0x71C1B4
	.equiv "FUN_0E89C1E4:<unnamed>::GetTextureBufferSize()", _text + 0x71C1E4
	.equiv "FFLiGetBufferSizeMaskTextures()", _text + 0x71C224
	.equiv "FFLiGetTempBufferSizeMaskTextures()", _text + 0x71C2B4
	.equiv "FFLiGetCompressBufferSizeMaskTexture()", _text + 0x71C3D4
	.equiv "_::GetTextureFormat()", _text + 0x71C424
	.equiv "FFLiInitMaskTextures()", _text + 0x71C460
	.equiv "<unnamed>::CanUseExpression()", _text + 0x71C53C
	.equiv "<unnamed>::InitRawMask()", _text + 0x71C554
	.equiv "<unnamed>::GetCorrectParam()", _text + 0x71C5C0
	.equiv "<unnamed>::SetupExpressionCharInfo()", _text + 0x71C5D4
	.equiv "FFLiInitTempObjectMaskTextures()", _text + 0x71C6CC
	.equiv "FFLiRenderMaskTextures()", _text + 0x71C8AC
	.equiv "FUN_0E89CA64:unsigned_int_FFLiCompressorImpl::GetTextureBufferSize()", _text + 0x71CA64
	.equiv "FUN_0E89CB14:void_FFLiCompressorImpl::CompressImpl()", _text + 0x71CB14
	.equiv "FFLiGetMipMapNum()", _text + 0x71CC7C
	.equiv "FFLiGetMipMapLevelSize()", _text + 0x71CCB0
	.equiv "FFLiInitModulateMustache()", _text + 0x71CCC4
	.equiv "FFLiInitModulateMouth()", _text + 0x71CD24
	.equiv "FFLiInitModulateEyebrow()", _text + 0x71CD9C
	.equiv "FFLiInitModulateEye()", _text + 0x71CDFC
	.equiv "FFLiInitModulateMole()", _text + 0x71CE74
	.equiv "FFLiInitModulateFaceMake()", _text + 0x71CED0
	.equiv "FFLiInitModulateFaceLine()", _text + 0x71CEF8
	.equiv "FFLiInitModulateFaceBeard()", _text + 0x71CF54
	.equiv "FFLiInitModulateShapeFaceline()", _text + 0x71CFB4
	.equiv "FFLiInitModulateShapeBeard()", _text + 0x71CFD8
	.equiv "FFLiInitModulateShapeNose()", _text + 0x71D030
	.equiv "FFLiInitModulateShapeForehead()", _text + 0x71D088
	.equiv "FFLiInitModulateShapeHair()", _text + 0x71D0E0
	.equiv "FFLiInitModulateShapeCap()", _text + 0x71D138
	.equiv "FFLiInitModulateShapeMask()", _text + 0x71D194
	.equiv "FFLiInitModulateShapeNoseline()", _text + 0x71D1BC
	.equiv "FFLiInitModulateShapeGlass()", _text + 0x71D218
	.equiv "FFLiInitModulateFill()", _text + 0x71D278
	.equiv "FUN_0E89D2B0:FFLiInitNetPacket()", _text + 0x71D2B0
	.equiv "FUN_0E89D38C:FFLiGetNetInfoBufferSize()", _text + 0x71D38C
	.equiv "FUN_0E89D3B8:bool_FFLiRange()", _text + 0x71D3B8
	.equiv "FFLiCharInfoAndTypeToEyeIndex()", _text + 0x71D3D8
	.equiv "FFLiCharInfoAndTypeToMouthIndex()", _text + 0x71D418
	.equiv "<unnamed>::ExpressionToEyeUseFlag()", _text + 0x71D444
	.equiv "<unnamed>::ExpressionToMouthUseFlag()", _text + 0x71D4C8
	.equiv "FFLiLoadPartsTextures()", _text + 0x71D540
	.equiv "FUN_0E89D694:<unnamed>::InvalidateTextures()", _text + 0x71D694
	.equiv "FFLiInvalidatePartsTextures()", _text + 0x71D6FC
	.equiv "FFLiGetEyeMouthTypeElement()", _text + 0x71D768
	.equiv "FFLiGetBufferRawMask()", _text + 0x71D790
	.equiv "<unnamed>::CalcRawMask()", _text + 0x71D7B4
	.equiv "FFLiInitDrawParamRawMask()", _text + 0x71E054
	.equiv "FFLiInvalidateRawMask()", _text + 0x71E238
	.equiv "FFLiDrawRawMask()", _text + 0x71E2A8
	.equiv "FFLiGetBufferRawMaskParts()", _text + 0x71E4F0
	.equiv "<unnamed>::CalcMVMatrix()", _text + 0x71E554
	.equiv "FUN_0E89E638:FFLiBufferAllocator::Allocate()", _text + 0x71E638
	.equiv "FUN_0E89E63C:thunk_FUN_0e8a03c8", _text + 0x71E63C
	.equiv "_::InitPrimitive()", _text + 0x71E640
	.equiv "<unnamed>::CalcAttribute()", _text + 0x71E6C8
	.equiv "FUN_0E89E9E8:<unnamed>::InitAttributes()", _text + 0x71E9E8
	.equiv "FFLiInitDrawParamRawMaskParts()", _text + 0x71EAA8
	.equiv "FUN_0E89EB40:<unnamed>::InvalidatePrimitive()", _text + 0x71EB40
	.equiv "FUN_0E89EB54:<unnamed>::InvalidateAttributes()", _text + 0x71EB54
	.equiv "FFLiInvalidateDrawParamRawMaskParts()", _text + 0x71EBB4
	.equiv "<unnamed>::InitAttributesForFill()", _text + 0x71EBEC
	.equiv "FFLiInitDrawParamRawMaskPartsFill()", _text + 0x71EC68
	.equiv "FFLiDrawRawMaskParts()", _text + 0x71ECB8
	.equiv "FFLiGetBufferRenderTexture()", _text + 0x71EED4
	.equiv "FFLiGetDepthBufferSizeRenderTexture()", _text + 0x71EF3C
	.equiv "FFLiInitRenderTexture()", _text + 0x71EF7C
	.equiv "FFLiInitByBufferRenderTexture()", _text + 0x71F034
	.equiv "FUN_0E89F098:FFLiInvalidateTexture()", _text + 0x71F098
	.equiv "FUN_0E89F09C:FFLiSetupRenderTexture()", _text + 0x71F09C
	.equiv "FUN_0E89F444:FFLiSetupRenderTexture()", _text + 0x71F444
	.equiv "FFLiFlushRenderTexture()", _text + 0x71F448
	.equiv "FFLiResourceCache::FFLiResourceCache()", _text + 0x71F498
	.equiv "FFLiResourceCache::IsValid()", _text + 0x71F568
	.equiv "FFLiResourceUncompressBuffer::FFLiResourceUncompressBuffer()", _text + 0x71F5E0
	.equiv "FFLiResourceUncompressBuffer::GetBufferSize()", _text + 0x71F6A8
	.equiv "FFLiGetTextureMaxSizeWithAlign()", _text + 0x71F6D0
	.equiv "FFLiLoadTextureWithAllocate()", _text + 0x71F740
	.equiv "FUN_0E89F8F4:FFLiInvalidateTexture()", _text + 0x71F8F4
	.equiv "FFLiUtilShader::GetProgramBufferSizeForFetch()", _text + 0x71F950
	.equiv "FFLiUtilShader::GetProgramBufferSize()", _text + 0x71F980
	.equiv "FFLiUtilShader::GetHeaderBufferSize()", _text + 0x71FA00
	.equiv "FFLiUtilShader::GetBufferSize()", _text + 0x71FA74
	.equiv "FFLiUtilShader::BuildShader()", _text + 0x71FB1C
	.equiv "FUN_0E89FEF4:FFLiUtilShader::GetUniformLocation()", _text + 0x71FEF4
	.equiv "FUN_0E89FF88:FFLiUtilShader::GetUniformLocation()", _text + 0x71FF88
	.equiv "FUN_0E8A001C:FFLiUtilShader::GetUniformBlockLocation()", _text + 0x72001C
	.equiv "FUN_0E8A00B8:FFLiUtilShader::GetUniformBlockLocation()", _text + 0x7200B8
	.equiv "FFLiUtilShader::GetSamplerLocation()", _text + 0x720154
	.equiv "FUN_0E8A01E8:FFLiUtilShaderAllocator::FFLiUtilShaderAllocator()", _text + 0x7201E8
	.equiv "FUN_0E8A02A0:FFLiUtilShaderAllocator::FFLiUtilShaderAllocator()", _text + 0x7202A0
	.equiv "FFLiZlibAllocator::FFLiZlibAllocator()", _text + 0x720358
	.equiv "FID_conflict:nw::snd::internal::StreamSoundFileReader::StreamSoundFileReader()", _text + 0x7203E8
	.equiv "FFLiCompressDrawer::SetupCPU()", _text + 0x720428
	.equiv "FFLiCompressDrawer::SetupGPU()", _text + 0x7204AC
	.equiv "FFLiCompressDrawer::SetAttributeBuffer()", _text + 0x7204F4
	.equiv "FFLiCompressDrawer::Draw()", _text + 0x720550
	.equiv "FFLiCompressorParam::FFLiCompressorParam()", _text + 0x72056C
	.equiv "FFLiCompressorParam::GetBufferSize()", _text + 0x7205AC
	.equiv "FFLiCompressorParam::Setup()", _text + 0x7205EC
	.equiv "FFLiCompressorParam::SetTexture()", _text + 0x7206A8
	.equiv "FFLiCompressorParam::GetUniform()", _text + 0x720738
	.equiv "FFLiCompressorParam::Create()", _text + 0x720748
	.equiv "FFLiCompressUniform::FFLiCompressUniform()", _text + 0x7207CC
	.equiv "FFLiCompressUniform::Setup()", _text + 0x720810
	.equiv "FFLiCompressUniform::SetResolution()", _text + 0x720884
	.equiv "FFLiCompressUniform::SetMipLevel()", _text + 0x72095C
	.equiv "FUN_0E8A09D8:FFLiSwapEndianImpl()", _text + 0x7209D8
	.equiv "FUN_0E8A0A14:void_FFLiSwapEndianArrayImpl()", _text + 0x720A14
	.equiv "void_::SetupUniformBlock()", _text + 0x720A80
	.equiv "FFLiCalculateUnitTextureResolution()", _text + 0x720B38
	.equiv "FFLiResourceLoader::FFLiResourceLoader()", _text + 0x720C24
	.equiv "FFLiResourceLoader::Close()", _text + 0x720CB0
	.equiv "FFLiResourceLoader::~FFLiResourceLoader()", _text + 0x720D08
	.equiv "FFLiResourceLoader::GetTextureAlignedMaxSize()", _text + 0x720D84
	.equiv "FFLiResourceLoader::GetShapeAlignedMaxSize()", _text + 0x720DC4
	.equiv "FFLiResourceLoader::GetPointerFromCache()", _text + 0x720E0C
	.equiv "FUN_0E8A0E98:<unnamed>::Uncompress()", _text + 0x720E98
	.equiv "FFLiResourceLoader::LoadFromCache()", _text + 0x720F64
	.equiv "FFLiResourceLoader::OpenIfClosed()", _text + 0x721018
	.equiv "FFLiResourceLoader::ReadWithPos()", _text + 0x721088
	.equiv "FFLiResourceLoader::LoadFromFile()", _text + 0x7210F4
	.equiv "FFLiResourceLoader::Load()", _text + 0x7211F8
	.equiv "FFLiResourceLoader::LoadTexture()", _text + 0x72128C
	.equiv "FFLiResourceLoader::LoadShape()", _text + 0x72131C
	.equiv "FFLiResourceLoader::GetPointerTextureByExpandCache()", _text + 0x7213AC
	.equiv "FFLiResourceTextureFooter::SurfaceFormat()", _text + 0x721490
	.equiv "FFLiResourceTextureFooter::GetMipPtrImpl()", _text + 0x7214B0
	.equiv "FFLiBufferAllocatorForZlib::FFLiBufferAllocatorForZlib()", _text + 0x7214D0
	.equiv "FFLiBufferAllocatorForZlib::~FFLiBufferAllocatorForZlib()", _text + 0x721544
	.equiv "LMS_GetText", _text + 0x721670
	.equiv "FID_conflict:operator_new", _text + 0x7216B4
	.equiv "FUN_0E8A1750:operator_new", _text + 0x721750
	.equiv "FID_conflict:operator_new()", _text + 0x7217EC
	.equiv "FUN_0E8A1868:operator_new", _text + 0x721868
	.equiv "operator_delete()", _text + 0x7218E4
	.equiv "operator_delete", _text + 0x72196C
	.equiv "operator_new()", _text + 0x7219F4
	.equiv "FUN_0E8A1A78:operator_new", _text + 0x721A78
	.equiv "sead::HashCRC32::initialize()", _text + 0x721AFC
	.equiv "sead::HashCRC32::calcHash()", _text + 0x721B60
	.equiv "sead::ListNode::insertBack_()", _text + 0x721BCC
	.equiv "sead::ListNode::insertFront_()", _text + 0x721BEC
	.equiv "FUN_0E8A1C0C:sead::ListNode::erase_()", _text + 0x721C0C
	.equiv "sead::ListImpl::nth()", _text + 0x721C44
	.equiv "sead::ListImpl::sort()", _text + 0x721C74
	.equiv "sead::ListImpl::popBack()", _text + 0x721D3C
	.equiv "sead::ListImpl::popFront()", _text + 0x721D90
	.equiv "sead::ListImpl::indexOf()", _text + 0x721DE4
	.equiv "sead::ListImpl::find()", _text + 0x721E54
	.equiv "sead::ListImpl::clear()", _text + 0x721EC0
	.equiv "sead::PtrArrayImpl::setBuffer()", _text + 0x721EFC
	.equiv "sead::PtrArrayImpl::allocBuffer()", _text + 0x721F20
	.equiv "sead::PtrArrayImpl::freeBuffer()", _text + 0x721F78
	.equiv "sead::PtrArrayImpl::erase()", _text + 0x721FC0
	.equiv "sead::PtrArrayImpl::reverse()", _text + 0x722048
	.equiv "sead::PtrArrayImpl::shuffle()", _text + 0x72209C
	.equiv "sead::PtrArrayImpl::checkInsert()", _text + 0x722128
	.equiv "sead::PtrArrayImpl::insert()", _text + 0x72215C
	.equiv "FUN_0E8A21E8:sead::PtrArrayImpl::sort()", _text + 0x7221E8
	.equiv "sead::PtrArrayImpl::heapSort()", _text + 0x7222F0
	.equiv "sead::PtrArrayImpl::uniq()", _text + 0x722488
	.equiv "sead::PtrArrayImpl::binarySearch()", _text + 0x722540
	.equiv "sead::TreeNode::clearLinks()", _text + 0x72262C
	.equiv "sead::TreeNode::TreeNode()", _text + 0x722644
	.equiv "sead::TreeNode::detachSubTree()", _text + 0x72267C
	.equiv "sead::TreeNode::clearChildLinksRecursively_()", _text + 0x7226F0
	.equiv "sead::TreeNode::detachAll()", _text + 0x722748
	.equiv "sead::TreeNode::pushBackSibling()", _text + 0x722780
	.equiv "sead::TreeNode::pushBackChild()", _text + 0x7227D4
	.equiv "sead::TreeNode::pushFrontChild()", _text + 0x722824
	.equiv "sead::Controller::Controller()", _text + 0x72286C
	.equiv "sead::Controller::calc()", _text + 0x722984
	.equiv "sead::ControllerBase::ControllerBase()", _text + 0x722B28
	.equiv "sead::ControllerBase::setPointerWithBound_()", _text + 0x722D8C
	.equiv "sead::ControllerBase::getStickHold_()", _text + 0x722ED4
	.equiv "sead::ControllerBase::createStickCrossMask_()", _text + 0x72325C
	.equiv "sead::ControllerBase::updateDerivativeParams_()", _text + 0x7232DC
	.equiv "sead::ControllerBase::setIdleBase_()", _text + 0x723584
	.equiv "sead::ControllerMgr::initializeDefault()", _text + 0x7237A4
	.equiv "sead::ControllerMgr::getControlDevice()", _text + 0x723B1C
	.equiv "sead::ControllerMgr::findControllerPort()", _text + 0x723C34
	.equiv "sead::ControllerWrapper::ControllerWrapper()", _text + 0x723D60
	.equiv "sead::ControllerWrapperBase::ControllerWrapperBase()", _text + 0x7240E8
	.equiv "sead::PatternRumbleAddon::PatternRumbleAddon()", _text + 0x72425C
	.equiv "sead::PatternRumbleAddon::isPatternEnable()", _text + 0x724308
	.equiv "sead::PatternRumbleAddon::startPattern()", _text + 0x724318
	.equiv "sead::PatternRumbleAddon::stopPattern()", _text + 0x72432C
	.equiv "sead::CafeDebugController::CafeDebugController()", _text + 0x7246BC
	.equiv "sead::CafeWPadDevice::CafeWPadDevice()", _text + 0x724838
	.equiv "sead::CafeRemoteController::CafeRemoteController()", _text + 0x724A50
	.equiv "sead::CafeRemotePatternRumbleAddon::CafeRemotePatternRumbleAddon()", _text + 0x72530C
	.equiv "sead::CafeVPadDevice::VPadInfo::VPadInfo()", _text + 0x72544C
	.equiv "sead::CafeVPadDevice::CafeVPadDevice()", _text + 0x7254A8
	.equiv "sead::CafeDRCController::CafeDRCController()", _text + 0x72563C
	.equiv "sead::CafeDRCController::updateTouchPanelInfo_()", _text + 0x7256D4
	.equiv "sead::CafeDRCController::calcImpl_()", _text + 0x72575C
	.equiv "sead::CafeDRCPatternRumbleAddon::CafeDRCPatternRumbleAddon()", _text + 0x725C30
	.equiv "sead::CafeDRCPatternRumbleAddon::calc()", _text + 0x725CA8
	.equiv "sead::AssertConfig::registerCallback()", _text + 0x725F70
	.equiv "sead::AliasFileDevice::AliasFileDevice()", _text + 0x726168
	.equiv "FUN_0E8A66A4:FID_conflict:sead::AliasFileDevice::doGetFileSize_()", _text + 0x7266A4
	.equiv "FUN_0E8A68A8:FID_conflict:sead::AliasFileDevice::doGetFileSize_()", _text + 0x7268A8
	.equiv "sead::AliasFileDevice::doOpenDirectory_()", _text + 0x726AA4
	.equiv "sead::AnyFileDevice::AnyFileDevice()", _text + 0x726E7C
	.equiv "sead::AnyFileDevice::pushFront()", _text + 0x7270D0
	.equiv "sead::AnyFileDevice::findFileDeviceByFile_()", _text + 0x7271B4
	.equiv "sead::AnyFileDevice::doOpenDirectory_()", _text + 0x727518
	.equiv "sead::AnyFileDevice::doReadDirectory_()", _text + 0x727698
	.equiv "sead::FileDevice::~FileDevice()", _text + 0x72820C
	.equiv "sead::FileDevice::tryClose()", _text + 0x7282A8
	.equiv "sead::FileDevice::tryCloseDirectory()", _text + 0x728364
	.equiv "sead::FileDevice::isAvailable()", _text + 0x728420
	.equiv "sead::FileDevice::tryLoad()", _text + 0x728444
	.equiv "sead::FileDevice::tryOpen()", _text + 0x728470
	.equiv "sead::FileDevice::tryRead()", _text + 0x72852C
	.equiv "sead::FileDevice::tryWrite()", _text + 0x728698
	.equiv "sead::FileDevice::tryGetCurrentSeekPos()", _text + 0x72880C
	.equiv "FUN_0E8A88C4:sead::FileDevice::tryGetFileSize()", _text + 0x7288C4
	.equiv "FUN_0E8A88F0:sead::FileDevice::tryGetFileSize()", _text + 0x7288F0
	.equiv "sead::FileDevice::tryIsExistFile()", _text + 0x728924
	.equiv "sead::FileDevice::tryOpenDirectory()", _text + 0x728950
	.equiv "sead::FileDevice::tryReadDirectory()", _text + 0x7289FC
	.equiv "sead::FileDevice::getLastRawError()", _text + 0x728AB0
	.equiv "sead::FileDevice::doLoad_()", _text + 0x728AD4
	.equiv "sead::FileHandle::close()", _text + 0x728CC4
	.equiv "sead::FileHandle::read()", _text + 0x728CE4
	.equiv "sead::FileHandle::write()", _text + 0x728D44
	.equiv "sead::FileHandle::getCurrentSeekPos()", _text + 0x728DD0
	.equiv "sead::FileHandle::getFileSize()", _text + 0x728E24
	.equiv "sead::FileDeviceMgr::mount()", _text + 0x728F4C
	.equiv "sead::FileDeviceMgr::FileDeviceMgr()", _text + 0x7290DC
	.equiv "sead::FileDeviceMgr::createInstance()", _text + 0x729214
	.equiv "sead::FileDeviceMgr::findDevice()", _text + 0x72932C
	.equiv "sead::FileDeviceMgr::findDeviceFromPath()", _text + 0x72941C
	.equiv "sead::FileDeviceMgr::tryOpen()", _text + 0x7294F4
	.equiv "sead::FileDeviceMgr::unmount()", _text + 0x7296C8
	.equiv "sead::FileDeviceMgr::mountSDCard()", _text + 0x72973C
	.equiv "sead::FileDeviceMgr::unmountSDCard()", _text + 0x7297F0
	.equiv "sead::MainFileDevice::MainFileDevice()", _text + 0x729A2C
	.equiv "sead::Path::getDriveName()", _text + 0x729DB4
	.equiv "sead::Path::getExt()", _text + 0x72A0C0
	.equiv "sead::Path::getPathExceptDrive()", _text + 0x72A67C
	.equiv "sead::Path::getFileName()", _text + 0x72ABE8
	.equiv "sead::CafeFSAFileDevice::CafeFSAFileDevice()", _text + 0x72B150
	.equiv "sead::CafeFSAFileDevice::getUsableFSClient_()", _text + 0x72B368
	.equiv "FUN_0E8AB384:thunk_FUN_0e8a8cbc", _text + 0x72B384
	.equiv "sead::CafeFSAFileDevice::doOpen_()", _text + 0x72B388
	.equiv "sead::CafeFSAFileDevice::doRead_()", _text + 0x72B5A4
	.equiv "sead::CafeFSAFileDevice::doWrite_()", _text + 0x72B66C
	.equiv "sead::CafeFSAFileDevice::doSeek_()", _text + 0x72B734
	.equiv "sead::CafeContentFileDevice::CafeContentFileDevice()", _text + 0x72BEE8
	.equiv "sead::CafeHostIOFileDevice::CafeHostIOFileDevice()", _text + 0x72BF78
	.equiv "sead::CafeHostIOFileDevice::convertPathWinToFSA_()", _text + 0x72C00C
	.equiv "sead::CafeHostIOFileDevice::formatPathForFSA_()", _text + 0x72C08C
	.equiv "sead::CafeFSNativePathFileDevice::CafeFSNativePathFileDevice()", _text + 0x72C6B8
	.equiv "sead::CafeSaveFileDevice::CafeSaveFileDevice()", _text + 0x72CD50
	.equiv "sead::CafeSaveFileDevice::tryInitSaveDir()", _text + 0x72CF64
	.equiv "sead::CafeSaveFileDevice::getUsableFSClient_()", _text + 0x72CFA0
	.equiv "sead::CafeSaveFileDevice::tryGetFreeSpaceSize()", _text + 0x72CFBC
	.equiv "sead::CafeSaveFileDevice::tryDelete()", _text + 0x72D020
	.equiv "sead::CafeSaveFileDevice::tryFlush()", _text + 0x72D0A8
	.equiv "FUN_0E8AD0FC:thunk_FUN_0e8a8cbc", _text + 0x72D0FC
	.equiv "sead::CafeSaveFileDevice::doOpen_()", _text + 0x72D100
	.equiv "sead::CafeSaveFileDevice::doRead_()", _text + 0x72D290
	.equiv "sead::CafeSaveFileDevice::doWrite_()", _text + 0x72D358
	.equiv "sead::CafeSaveFileDevice::doSeek_()", _text + 0x72D420
	.equiv "FUN_0E8ADF90:sead::CalculateTask::CalculateTask()", _text + 0x72DF90
	.equiv "FUN_0E8AE1B8:sead::CalculateTask::CalculateTask()", _text + 0x72E1B8
	.equiv "sead::FaderTaskBase::FaderTaskBase()", _text + 0x72E5C0
	.equiv "sead::FaderTaskBase::setFrames()", _text + 0x72EA64
	.equiv "sead::FaderTaskBase::startCreate_()", _text + 0x72EBD8
	.equiv "sead::FaderTaskBase::setFaderState_()", _text + 0x72EC80
	.equiv "sead::FaderTaskBase::calcCore_()", _text + 0x72EECC
	.equiv "sead::FaderTaskBase::startAsCreate_()", _text + 0x72F35C
	.equiv "sead::NullFaderTask::NullFaderTask()", _text + 0x72F5C8
	.equiv "sead::Framework::Framework()", _text + 0x72FB10
	.equiv "sead::Framework::initialize()", _text + 0x72FBC4
	.equiv "sead::Framework::run()", _text + 0x72FCA8
	.equiv "sead::Framework::InitializeArg::InitializeArg()", _text + 0x72FE94
	.equiv "sead::Framework::RunArg::RunArg()", _text + 0x72FED8
	.equiv "sead::MethodTreeNode::attachMutexRec_()", _text + 0x72FFF0
	.equiv "FUN_0E8B0060:FID_conflict:sead::MethodTreeNode::lock_()", _text + 0x730060
	.equiv "FUN_0E8B0070:FID_conflict:sead::MethodTreeNode::lock_()", _text + 0x730070
	.equiv "sead::MethodTreeNode::detachAll()", _text + 0x730080
	.equiv "sead::MethodTreeNode::pushBackChild()", _text + 0x7300E0
	.equiv "sead::MethodTreeNode::pushFrontChild()", _text + 0x73015C
	.equiv "sead::MethodTreeNode::callRec_()", _text + 0x7301D8
	.equiv "sead::MethodTreeNode::call()", _text + 0x730268
	.equiv "sead::MethodTreeMgr::MethodTreeMgr()", _text + 0x7302A4
	.equiv "sead::TaskBase::~TaskBase()", _text + 0x730334
	.equiv "sead::TaskBase::attachCalcDraw()", _text + 0x73041C
	.equiv "sead::TaskBase::getMethodTreeMgr()", _text + 0x7304D8
	.equiv "sead::TaskBase::adjustHeapWithSlackWithoutLock_()", _text + 0x730598
	.equiv "sead::TaskBase::adjustHeapAll()", _text + 0x7306A4
	.equiv "FUN_0E8B073C:sead::TaskBase::TaskBase()", _text + 0x73073C
	.equiv "FUN_0E8B08B4:sead::TaskBase::TaskBase()", _text + 0x7308B4
	.equiv "FUN_0E8B0A30:sead::TaskBase::CreateArg::CreateArg()", _text + 0x730A30
	.equiv "FUN_0E8B0ACC:sead::TaskBase::CreateArg::CreateArg()", _text + 0x730ACC
	.equiv "sead::TaskBase::MgrTaskArg::MgrTaskArg()", _text + 0x730B74
	.equiv "sead::TaskBase::SystemMgrTaskArg::SystemMgrTaskArg()", _text + 0x730C30
	.equiv "sead::TaskClassID::create()", _text + 0x730DB8
	.equiv "sead::TaskMgr::doInit_()", _text + 0x730E54
	.equiv "sead::TaskMgr::doRequestCreateTask_()", _text + 0x731108
	.equiv "sead::TaskMgr::TaskMgr()", _text + 0x731488
	.equiv "sead::TaskMgr::initialize()", _text + 0x731894
	.equiv "sead::TaskMgr::appendToList_()", _text + 0x7318DC
	.equiv "sead::TaskMgr::changeTaskState_()", _text + 0x731A00
	.equiv "sead::TaskMgr::doDestroyTask_()", _text + 0x731CA8
	.equiv "sead::TaskMgr::destroyTaskSync()", _text + 0x731DA4
	.equiv "sead::TaskMgr::createHeap_()", _text + 0x731E04
	.equiv "sead::TaskMgr::doCreateTask_()", _text + 0x731FE0
	.equiv "sead::TaskMgr::createTaskSync()", _text + 0x7320C0
	.equiv "sead::TaskMgr::calcCreation_()", _text + 0x73247C
	.equiv "sead::TaskMgr::destroyAllAndCreateRoot()", _text + 0x73288C
	.equiv "sead::TaskMgr::prepare_()", _text + 0x732A40
	.equiv "FUN_0E8B2D10:sead::GameFramework::initialize()", _text + 0x732D10
	.equiv "sead::GameFramework::GameFramework()", _text + 0x732EC0
	.equiv "FUN_0E8B34F0:sead::GameFramework::initialize()", _text + 0x7334F0
	.equiv "sead::GameFrameworkCafe::GameFrameworkCafe()", _text + 0x7334F4
	.equiv "<unnamed>::allocFromMem1FrmHeap()", _text + 0x7336F0
	.equiv "sead::GameFrameworkCafe::gpuMeasureEnd_()", _text + 0x734314
	.equiv "sead::GameFrameworkCafe::waitForNextFrame_()", _text + 0x734A38
	.equiv "FUN_0E8B4CE8:T1::ValueType_sead::Geometry::<unnamed>::calcSquaredDistanceImpl_()", _text + 0x734CE8
	.equiv "FUN_0E8B4CEC:T1::ValueType_sead::Geometry::<unnamed>::calcSquaredDistanceImpl_()", _text + 0x734CEC
	.equiv "FUN_0E8B4CF4:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x734CF4
	.equiv "FUN_0E8B4CF8:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x734CF8
	.equiv "FUN_0E8B4CFC:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x734CFC
	.equiv "FUN_0E8B4D00:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x734D00
	.equiv "FUN_0E8B4D04:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x734D04
	.equiv "FUN_0E8B4D08:bool_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x734D08
	.equiv "FUN_0E8B4D0C:T1::ValueType_sead::Geometry::<unnamed>::calcSquaredDistanceImpl_()", _text + 0x734D0C
	.equiv "FUN_0E8B4DA4:T1::ValueType_sead::Geometry::<unnamed>::calcSquaredDistanceImpl_()", _text + 0x734DA4
	.equiv "FUN_0E8B4EF8:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x734EF8
	.equiv "FUN_0E8B4FC0:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x734FC0
	.equiv "FUN_0E8B5058:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x735058
	.equiv "FUN_0E8B511C:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x73511C
	.equiv "FUN_0E8B5294:sead::Geometry::IntersectionResult_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x735294
	.equiv "FUN_0E8B5624:bool_sead::Geometry::<unnamed>::calcIntersectionImpl_()", _text + 0x735624
	.equiv "sead::Camera::getWorldPosByMatrix()", _text + 0x73567C
	.equiv "sead::Camera::getLookVectorByMatrix()", _text + 0x7356EC
	.equiv "sead::Camera::getRightVectorByMatrix()", _text + 0x735708
	.equiv "sead::Camera::getUpVectorByMatrix()", _text + 0x735724
	.equiv "sead::Camera::worldPosToCameraPosByMatrix()", _text + 0x735740
	.equiv "sead::Camera::cameraPosToWorldPosByMatrix()", _text + 0x735750
	.equiv "sead::Camera::projectByMatrix()", _text + 0x735824
	.equiv "sead::LookAtCamera::LookAtCamera()", _text + 0x735880
	.equiv "sead::LookAtCamera::~LookAtCamera()", _text + 0x7359D4
	.equiv "sead::LookAtCamera::doUpdateMatrix()", _text + 0x7359E8
	.equiv "FUN_0E8B5C2C:sead::OrthoCamera::OrthoCamera()", _text + 0x735C2C
	.equiv "FUN_0E8B5CC0:sead::OrthoCamera::OrthoCamera()", _text + 0x735CC0
	.equiv "sead::DirectCamera::~DirectCamera()", _text + 0x735D88
	.equiv "sead::Color4f::setLerp()", _text + 0x735F8C
	.equiv "sead::Color4f::operator_", _text + 0x73605C
	.equiv "FUN_0E8B60A0:sead::Color4f::operator_*=()", _text + 0x7360A0
	.equiv "FUN_0E8B60E4:sead::Color4f::operator_*=()", _text + 0x7360E4
	.equiv "sead::operator_", _text + 0x736118
	.equiv "FUN_0E8B6184:sead::operator_*()", _text + 0x736184
	.equiv "FUN_0E8B61F0:sead::operator_*()", _text + 0x7361F0
	.equiv "sead::operator_==()", _text + 0x736258
	.equiv "sead::FrameBuffer::~FrameBuffer()", _text + 0x736414
	.equiv "sead::FrameBuffer::bind()", _text + 0x736428
	.equiv "sead::Projection::Projection()", _text + 0x736438
	.equiv "sead::Projection::updateMatrixImpl_()", _text + 0x7364D4
	.equiv "sead::Projection::getProjectionMatrix()", _text + 0x736590
	.equiv "sead::Projection::getDeviceProjectionMatrix()", _text + 0x7365C0
	.equiv "sead::Projection::cameraPosToScreenPos()", _text + 0x7365F0
	.equiv "sead::Projection::project()", _text + 0x7366D8
	.equiv "sead::<unnamed>::swapMatrixXY()", _text + 0x736724
	.equiv "sead::PerspectiveProjection::setFovy_()", _text + 0x736BB0
	.equiv "FUN_0E8B6C2C:sead::PerspectiveProjection::PerspectiveProjection()", _text + 0x736C2C
	.equiv "FUN_0E8B6CD0:sead::PerspectiveProjection::PerspectiveProjection()", _text + 0x736CD0
	.equiv "sead::PerspectiveProjection::~PerspectiveProjection()", _text + 0x736DBC
	.equiv "sead::PerspectiveProjection::set()", _text + 0x736DD0
	.equiv "FUN_0E8B6F4C:sead::OrthoProjection::OrthoProjection()", _text + 0x736F4C
	.equiv "FUN_0E8B6FE0:sead::OrthoProjection::OrthoProjection()", _text + 0x736FE0
	.equiv "FUN_0E8B70E8:sead::OrthoProjection::OrthoProjection()", _text + 0x7370E8
	.equiv "sead::OrthoProjection::~OrthoProjection()", _text + 0x7371F8
	.equiv "sead::OrthoProjection::setTBLR()", _text + 0x73720C
	.equiv "sead::OrthoProjection::setByViewport()", _text + 0x737228
	.equiv "sead::OrthoProjection::setBoundBox()", _text + 0x73725C
	.equiv "sead::FrustumProjection::FrustumProjection()", _text + 0x73734C
	.equiv "sead::FrustumProjection::~FrustumProjection()", _text + 0x737454
	.equiv "sead::FrustumProjection::getFovy()", _text + 0x737558
	.equiv "sead::FrustumProjection::getAspect()", _text + 0x737598
	.equiv "sead::FrustumProjection::getOffsetX()", _text + 0x7375B8
	.equiv "sead::FrustumProjection::getOffsetY()", _text + 0x7375DC
	.equiv "sead::FrustumProjection::getOffset()", _text + 0x737600
	.equiv "FUN_0E8B7634:sead::DirectProjection::DirectProjection()", _text + 0x737634
	.equiv "sead::DirectProjection::setProjectionMatrix()", _text + 0x7376C8
	.equiv "FUN_0E8B78A8:sead::DirectProjection::DirectProjection()", _text + 0x7378A8
	.equiv "sead::DirectProjection::~DirectProjection()", _text + 0x737934
	.equiv "void_sead::Matrix44CalcCommon::inverse()", _text + 0x737B8C
	.equiv "void_sead::Matrix44CalcCommon::getRow()", _text + 0x7380B8
	.equiv "void_sead::Matrix44CalcCommon::setRow()", _text + 0x7380E4
	.equiv "FUN_0E8B8110:sead::Viewport::Viewport()", _text + 0x738110
	.equiv "FUN_0E8B81DC:sead::Viewport::Viewport()", _text + 0x7381DC
	.equiv "FUN_0E8B82F4:sead::Viewport::Viewport()", _text + 0x7382F4
	.equiv "sead::Viewport::setByFrameBuffer()", _text + 0x73836C
	.equiv "FUN_0E8B8420:sead::Viewport::Viewport()", _text + 0x738420
	.equiv "sead::Viewport::getOnFrameBufferPos()", _text + 0x7384C8
	.equiv "sead::Viewport::getOnFrameBufferSize()", _text + 0x7386D8
	.equiv "sead::Viewport::apply()", _text + 0x73875C
	.equiv "sead::Viewport::applyViewport()", _text + 0x7387F8
	.equiv "sead::Viewport::applyScissor()", _text + 0x738868
	.equiv "sead::Viewport::project()", _text + 0x7388D8
	.equiv "sead::Graphics::Graphics()", _text + 0x73891C
	.equiv "sead::Graphics::lockDrawContext()", _text + 0x7389F0
	.equiv "sead::Graphics::unlockDrawContext()", _text + 0x738AC4
	.equiv "sead::Graphics::initialize()", _text + 0x738B5C
	.equiv "sead::GraphicsContext::GraphicsContext()", _text + 0x738BB4
	.equiv "sead::GraphicsContext::apply()", _text + 0x738CE0
	.equiv "sead::GraphicsContext::applyDepthAndStencilTest()", _text + 0x738EA0
	.equiv "sead::GraphicsContext::applyColorMask()", _text + 0x738F20
	.equiv "sead::GraphicsContext::applyBlendAndFastZ()", _text + 0x738F68
	.equiv "sead::DisplayBufferCafe::DisplayBufferCafe()", _text + 0x7393C0
	.equiv "sead::DisplayBufferCafe::reconfigure()", _text + 0x7396F4
	.equiv "FUN_0E8B9B64:sead::IDisposer::IDisposer()", _text + 0x739B64
	.equiv "FUN_0E8B9BEC:sead::IDisposer::IDisposer()", _text + 0x739BEC
	.equiv "sead::IDisposer::~IDisposer()", _text + 0x739CCC
	.equiv "FUN_0E8B9D54:sead::ExpHeap::ExpHeap()", _text + 0x739D54
	.equiv "FUN_0E8B9E9C:sead::ExpHeap::mergeFreeList_()", _text + 0x739E9C
	.equiv "FUN_0E8B9F74:sead::ExpHeap::pushToFreeList_()", _text + 0x739F74
	.equiv "FUN_0E8BA024:sead::ExpHeap::createMaxSizeFreeMemBlock_()", _text + 0x73A024
	.equiv "FUN_0E8BA124:sead::ExpHeap::createMaxSizeFreeMemBlock_()", _text + 0x73A124
	.equiv "FUN_0E8BA128:sead::ExpHeap::tryCreate()", _text + 0x73A128
	.equiv "FUN_0E8BA260:sead::ExpHeap::tryCreate()", _text + 0x73A260
	.equiv "FUN_0E8BA708:sead::ExpHeap::findFreeMemBlockFromHead_()", _text + 0x73A708
	.equiv "FUN_0E8BA790:sead::ExpHeap::pushToUseList_()", _text + 0x73A790
	.equiv "FUN_0E8BA7D4:sead::ExpHeap::allocFromHead_()", _text + 0x73A7D4
	.equiv "FUN_0E8BA8AC:sead::ExpHeap::findFreeMemBlockFromHead_()", _text + 0x73A8AC
	.equiv "FUN_0E8BA970:sead::ExpHeap::allocFromHead_()", _text + 0x73A970
	.equiv "FUN_0E8BAA98:sead::ExpHeap::findFreeMemBlockFromTail_()", _text + 0x73AA98
	.equiv "FUN_0E8BAB34:sead::ExpHeap::allocFromTail_()", _text + 0x73AB34
	.equiv "FUN_0E8BAC78:sead::ExpHeap::findFreeMemBlockFromTail_()", _text + 0x73AC78
	.equiv "FUN_0E8BAD58:sead::ExpHeap::allocFromTail_()", _text + 0x73AD58
	.equiv "sead::ExpHeap::tryAlloc()", _text + 0x73AEC8
	.equiv "sead::ExpHeap::resizeFront()", _text + 0x73B31C
	.equiv "sead::ExpHeap::resizeBack()", _text + 0x73B574
	.equiv "sead::ExpHeap::getAllocatedSize()", _text + 0x73BA98
	.equiv "sead::FrameHeap::FrameHeap()", _text + 0x73BC00
	.equiv "sead::FrameHeap::getAreaStart_()", _text + 0x73BC90
	.equiv "sead::FrameHeap::getAreaEnd_()", _text + 0x73BCA8
	.equiv "sead::FrameHeap::initialize_()", _text + 0x73BCC8
	.equiv "sead::FrameHeap::tryCreate()", _text + 0x73BD3C
	.equiv "sead::FrameHeap::tryAlloc()", _text + 0x73C124
	.equiv "sead::Heap::findContainHeap_()", _text + 0x73C6F0
	.equiv "sead::Heap::pushBackChild_()", _text + 0x73C80C
	.equiv "sead::Heap::Heap()", _text + 0x73C8AC
	.equiv "sead::Heap::appendDisposer_()", _text + 0x73CD24
	.equiv "sead::Heap::removeDisposer_()", _text + 0x73CDA8
	.equiv "sead::HeapMgr::createRootHeap_()", _text + 0x73CF04
	.equiv "sead::HeapMgr::initializeImpl_()", _text + 0x73CF80
	.equiv "sead::HeapMgr::initialize()", _text + 0x73CFC0
	.equiv "sead::HeapMgr::findContainHeap()", _text + 0x73D02C
	.equiv "sead::HeapMgr::getCurrentHeap()", _text + 0x73D1AC
	.equiv "sead::HeapMgr::setCurrentHeap_()", _text + 0x73D294
	.equiv "sead::FindContainHeapCache::FindContainHeapCache()", _text + 0x73D2D8
	.equiv "sead::UnitHeap::UnitHeap()", _text + 0x73D420
	.equiv "sead::UnitHeap::resetFreeList_()", _text + 0x73D4C0
	.equiv "sead::UnitHeap::doCreate()", _text + 0x73D51C
	.equiv "sead::UnitHeap::tryCreateWithBlockNum()", _text + 0x73D5F8
	.equiv "sead::UnitHeap::tryAlloc()", _text + 0x73D7D0
	.equiv "sead::Arena::initialize()", _text + 0x73DC18
	.equiv "sead::MathCalcCommon::gcd()", _text + 0x73DC88
	.equiv "sead::MathCalcCommon::lcm()", _text + 0x73DCCC
	.equiv "sead::MathCalcCommon::expTable()", _text + 0x73DD3C
	.equiv "sead::MathCalcCommon::logTable()", _text + 0x73DE08
	.equiv "unsigned_int_sead::MathCalcCommon::atanIdx_()", _text + 0x73DEC8
	.equiv "`global_constructor_keyed_to'_14_seadVector_cpp_773a33d1", _text + 0x73E2D0
	.equiv "sead::CoreInfo::configure()", _text + 0x73E870
	.equiv "FUN_0E8BE8C0:sead::CoreInfo::getPlatformMask()", _text + 0x73E8C0
	.equiv "sead::PerfJobQueue::initialize()", _text + 0x73E938
	.equiv "sead::PerfJobQueue::reset()", _text + 0x73EAF4
	.equiv "sead::PerfJobQueue::measureBeginDeque()", _text + 0x73EB34
	.equiv "FUN_0E8BEB78:FID_conflict:sead::PerfJobQueue::measureEndDeque()", _text + 0x73EB78
	.equiv "sead::PerfJobQueue::getBarColor()", _text + 0x73EBA8
	.equiv "sead::PerfJobQueue::measureBeginRun()", _text + 0x73EE54
	.equiv "FUN_0E8BEEEC:FID_conflict:sead::PerfJobQueue::measureEndDeque()", _text + 0x73EEEC
	.equiv "sead::JobQueue::JobQueue()", _text + 0x73EF1C
	.equiv "sead::JobQueue::setCoreMaskAndWaitType()", _text + 0x73F120
	.equiv "FUN_0E8BF1EC:sead::JobQueue::setGranularity()", _text + 0x73F1EC
	.equiv "FUN_0E8BF218:sead::JobQueue::setGranularity()", _text + 0x73F218
	.equiv "sead::JobQueue::runAll()", _text + 0x73F264
	.equiv "sead::JobQueue::wait_AT_WORKER()", _text + 0x73F38C
	.equiv "sead::JobQueue::FINISH()", _text + 0x73F41C
	.equiv "sead::FixedSizeJQ::FixedSizeJQ()", _text + 0x73F47C
	.equiv "sead::FixedSizeJQ::initialize()", _text + 0x73F50C
	.equiv "sead::FixedSizeJQ::run()", _text + 0x73F634
	.equiv "sead::FixedSizeJQ::enque()", _text + 0x73F810
	.equiv "sead::FixedSizeJQ::rewind()", _text + 0x73F864
	.equiv "sead::FixedSizeJQ::clear()", _text + 0x73F898
	.equiv "sead::WorkerMgr::WorkerMgr()", _text + 0x73F920
	.equiv "sead::WorkerMgr::initialize()", _text + 0x73FA94
	.equiv "sead::WorkerMgr::dump()", _text + 0x73FF34
	.equiv "sead::WorkerMgr::pushJobQueue()", _text + 0x73FFBC
	.equiv "sead::WorkerMgr::run()", _text + 0x7400EC
	.equiv "sead::WorkerMgr::isAllWorkerSleep()", _text + 0x7402C4
	.equiv "sead::WorkerMgr::sync()", _text + 0x74032C
	.equiv "sead::WorkerMgr::InitializeArg::InitializeArg()", _text + 0x7405D0
	.equiv "sead::BitFlagUtil::countOnBit()", _text + 0x7407F0
	.equiv "sead::BitFlagUtil::countRightOnBit()", _text + 0x740848
	.equiv "sead::BitFlagUtil::findOnBitFromRight()", _text + 0x740860
	.equiv "sead::EnumUtil::skipToWordStart_()", _text + 0x74099C
	.equiv "sead::EnumUtil::skipToWordEnd_()", _text + 0x7409D4
	.equiv "sead::EnumUtil::parseText_()", _text + 0x740A40
	.equiv "int_sead::BufferedSafeStringBase::formatImpl_()", _text + 0x740BF8
	.equiv "int_sead::BufferedSafeStringBase::formatV()", _text + 0x740C50
	.equiv "FUN_0E8C0C68:int_sead::BufferedSafeStringBase::format()", _text + 0x740C68
	.equiv "int_sead::BufferedSafeStringBase::appendWithFormatV()", _text + 0x740CF0
	.equiv "int_sead::BufferedSafeStringBase::appendWithFormat()", _text + 0x740D8C
	.equiv "FUN_0E8C0E88:int_sead::BufferedSafeStringBase::format()", _text + 0x740E88
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::clear_()", _text + 0x740F10
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::FormatParser16()", _text + 0x740F30
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::parseFlag_()", _text + 0x740F8C
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::parseWidth_()", _text + 0x741034
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::parsePrecision_()", _text + 0x7410C8
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::parseSize_()", _text + 0x741170
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::printInteger_()", _text + 0x7411E0
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::printCharacter_()", _text + 0x7416F8
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::printString_()", _text + 0x741908
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::printFloat_()", _text + 0x7419B8
	.equiv "sead::StringUtil::<unnamed>::FormatParser16::execute()", _text + 0x742718
	.equiv "sead::StringUtil::<unnamed>::checkAndConvertDecChar_()", _text + 0x742AAC
	.equiv "sead::StringUtil::<unnamed>::checkAndConvertHexChar_()", _text + 0x742AC4
	.equiv "sead::StringUtil::<unnamed>::tryParseSignImpl_()", _text + 0x742B08
	.equiv "sead::StringUtil::<unnamed>::tryParsePrefixImpl_()", _text + 0x742BFC
	.equiv "FUN_0E8C2DBC:bool_sead::StringUtil::<unnamed>::tryParseImpl_()", _text + 0x742DBC
	.equiv "FUN_0E8C2DC0:bool_sead::StringUtil::<unnamed>::tryParseImpl_()", _text + 0x742DC0
	.equiv "FUN_0E8C2DC4:bool_sead::StringUtil::<unnamed>::tryParseImpl_()", _text + 0x742DC4
	.equiv "FUN_0E8C2DC8:bool_sead::StringUtil::<unnamed>::tryParseImpl_()", _text + 0x742DC8
	.equiv "sead::StringUtil::wcs16cpy()", _text + 0x742DCC
	.equiv "sead::StringUtil::vsw16printf()", _text + 0x742E14
	.equiv "sead::StringUtil::convertSjisToUtf16()", _text + 0x742F54
	.equiv "sead::StringUtil::convertUtf16ToSjis()", _text + 0x743140
	.equiv "sead::StringUtil::convertUtf16ToUtf8()", _text + 0x7434F8
	.equiv "FUN_0E8C3688:void_sead::StringUtil::<unnamed>::FormatParser16::printIntegerInverseString_()", _text + 0x743688
	.equiv "FUN_0E8C3848:void_sead::StringUtil::<unnamed>::FormatParser16::printIntegerInverseStringFromArg_()", _text + 0x743848
	.equiv "FUN_0E8C3928:void_sead::StringUtil::<unnamed>::FormatParser16::printIntegerInverseStringFromArg_()", _text + 0x743928
	.equiv "FUN_0E8C3A08:void_sead::StringUtil::<unnamed>::FormatParser16::printIntegerInverseStringFromArg_()", _text + 0x743A08
	.equiv "FUN_0E8C3AE8:void_sead::StringUtil::<unnamed>::FormatParser16::printIntegerInverseString_()", _text + 0x743AE8
	.equiv "FUN_0E8C3DC0:void_sead::StringUtil::<unnamed>::FormatParser16::printIntegerInverseStringFromArg_()", _text + 0x743DC0
	.equiv "FUN_0E8C3EB8:void_sead::StringUtil::<unnamed>::FormatParser16::printStringCore_()", _text + 0x743EB8
	.equiv "FUN_0E8C4130:void_sead::StringUtil::<unnamed>::FormatParser16::printStringCore_()", _text + 0x744130
	.equiv "FUN_0E8C43A4:bool_sead::StringUtil::<unnamed>::tryParseNumberImpl_()", _text + 0x7443A4
	.equiv "FUN_0E8C44E0:bool_sead::StringUtil::<unnamed>::tryParseDecImpl_()", _text + 0x7444E0
	.equiv "FUN_0E8C462C:bool_sead::StringUtil::<unnamed>::tryParseImpl_()", _text + 0x74462C
	.equiv "FUN_0E8C4724:bool_sead::StringUtil::<unnamed>::tryParseDecImpl_()", _text + 0x744724
	.equiv "FUN_0E8C488C:bool_sead::StringUtil::<unnamed>::tryParseImpl_()", _text + 0x74488C
	.equiv "FUN_0E8C4984:bool_sead::StringUtil::<unnamed>::tryParseNumberImpl_()", _text + 0x744984
	.equiv "FUN_0E8C4AD0:bool_sead::StringUtil::<unnamed>::tryParseDecImpl_()", _text + 0x744AD0
	.equiv "FUN_0E8C4C24:bool_sead::StringUtil::<unnamed>::tryParseImpl_()", _text + 0x744C24
	.equiv "FUN_0E8C4D1C:bool_sead::StringUtil::<unnamed>::tryParseNumberImpl_()", _text + 0x744D1C
	.equiv "FUN_0E8C4E64:bool_sead::StringUtil::<unnamed>::tryParseDecImpl_()", _text + 0x744E64
	.equiv "FUN_0E8C4FB0:bool_sead::StringUtil::<unnamed>::tryParseImpl_()", _text + 0x744FB0
	.equiv "sead::GlobalRandom::createInstance()", _text + 0x74513C
	.equiv "FUN_0E8C5264:sead::Random::init()", _text + 0x745264
	.equiv "FUN_0E8C52C0:sead::Random::init()", _text + 0x7452C0
	.equiv "sead::Random::getU32()", _text + 0x7452F8
	.equiv "sead::Random::getContext()", _text + 0x74533C
	.equiv "sead::ResourceFactory::~ResourceFactory()", _text + 0x745520
	.equiv "sead::Resource::Resource()", _text + 0x7455D8
	.equiv "sead::DirectResource::DirectResource()", _text + 0x74562C
	.equiv "sead::DirectResource::create()", _text + 0x74571C
	.equiv "sead::DirectResourceFactoryBase::create()", _text + 0x7459C4
	.equiv "sead::ResourceMgr::unregisterDecompressor()", _text + 0x745BD0
	.equiv "sead::ResourceMgr::registerFactory()", _text + 0x745C28
	.equiv "sead::ResourceMgr::ResourceMgr()", _text + 0x745D2C
	.equiv "sead::ResourceMgr::createInstance()", _text + 0x746014
	.equiv "sead::ResourceMgr::findFactory()", _text + 0x746118
	.equiv "sead::ResourceMgr::tryLoadWithoutDecomp()", _text + 0x74620C
	.equiv "sead::ResourceMgr::findDecompressor()", _text + 0x7462C4
	.equiv "sead::ResourceMgr::tryLoad()", _text + 0x7463B4
	.equiv "sead::ResourceMgr::unload()", _text + 0x746518
	.equiv "sead::ResourceMgr::unregisterFactory()", _text + 0x746534
	.equiv "sead::ResourceMgr::setDefaultFactory()", _text + 0x746584
	.equiv "sead::ResourceMgr::create()", _text + 0x7465E0
	.equiv "sead::SharcArchiveRes::SharcArchiveRes()", _text + 0x74687C
	.equiv "<unnamed>::calcHash32()", _text + 0x746A6C
	.equiv "<unnamed>::binarySearch_()", _text + 0x746AE0
	.equiv "sead::SharcArchiveRes::convertPathToEntryIDImpl_()", _text + 0x746B2C
	.equiv "sead::SharcArchiveRes::readDirectoryImpl_()", _text + 0x746DEC
	.equiv "sead::SZSDecompressor::SZSDecompressor()", _text + 0x747270
	.equiv "sead::SZSDecompressor::getDecompSize()", _text + 0x747484
	.equiv "<unnamed>::decodeSZSCafeAsm_()", _text + 0x7474C0
	.equiv "sead::SZSDecompressor::decomp()", _text + 0x747614
	.equiv "sead::SZSDecompressor::readHeader_()", _text + 0x7476C8
	.equiv "sead::SZSDecompressor::streamDecomp()", _text + 0x7477BC
	.equiv "sead::SZSDecompressor::getDecompAlignment()", _text + 0x747A54
	.equiv "sead::SZSDecompressor::DecompContext::initialize()", _text + 0x747A78
	.equiv "sead::SZSDecompressor::DecompContext::DecompContext()", _text + 0x747AA8
	.equiv "sead::SZSDecompressor::tryDecompFromDevice()", _text + 0x747AF0
	.equiv "sead::BinaryStreamFormat::readString()", _text + 0x7482C4
	.equiv "sead::BinaryStreamFormat::writeString()", _text + 0x748704
	.equiv "sead::BitStreamFormat::readBitBufferImpl_()", _text + 0x748848
	.equiv "sead::BitStreamFormat::readBitImpl_()", _text + 0x748918
	.equiv "sead::BitStreamFormat::writeBitBufferImpl_()", _text + 0x748B84
	.equiv "sead::BitStreamFormat::writeBitImpl_()", _text + 0x748C50
	.equiv "sead::BitStreamFormat::writeString()", _text + 0x748ECC
	.equiv "sead::FileDeviceStreamSrc::FileDeviceStreamSrc()", _text + 0x74906C
	.equiv "sead::FileDeviceStreamSrc::~FileDeviceStreamSrc()", _text + 0x74913C
	.equiv "sead::FileDeviceStreamSrc::setFileHandle()", _text + 0x74923C
	.equiv "sead::FileDeviceWriteStream::FileDeviceWriteStream()", _text + 0x749290
	.equiv "sead::FileDeviceReadStream::FileDeviceReadStream()", _text + 0x749338
	.equiv "sead::FileDeviceReadStream::setFileHandle()", _text + 0x7493B4
	.equiv "sead::RamStreamSrc::RamStreamSrc()", _text + 0x749448
	.equiv "FUN_0E8C94B0:sead::RamStreamSrc::~RamStreamSrc()", _text + 0x7494B0
	.equiv "FUN_0E8C95F8:sead::RamWriteStream::RamWriteStream()", _text + 0x7495F8
	.equiv "FUN_0E8C96A0:sead::RamWriteStream::RamWriteStream()", _text + 0x7496A0
	.equiv "FUN_0E8C9748:sead::RamReadStream::RamReadStream()", _text + 0x749748
	.equiv "FUN_0E8C97E4:sead::RamReadStream::RamReadStream()", _text + 0x7497E4
	.equiv "sead::Stream::Stream()", _text + 0x749894
	.equiv "sead::Stream::setMode()", _text + 0x7498F4
	.equiv "sead::Stream::skip()", _text + 0x749908
	.equiv "sead::Stream::rewind()", _text + 0x749928
	.equiv "FUN_0E8C9944:sead::ReadStream::readU8()", _text + 0x749944
	.equiv "FUN_0E8C9964:sead::ReadStream::readU16()", _text + 0x749964
	.equiv "FUN_0E8C9984:sead::ReadStream::readU32()", _text + 0x749984
	.equiv "FUN_0E8C99A4:sead::ReadStream::readU8()", _text + 0x7499A4
	.equiv "FUN_0E8C99D4:sead::ReadStream::readU16()", _text + 0x7499D4
	.equiv "FUN_0E8C9A04:sead::ReadStream::readU32()", _text + 0x749A04
	.equiv "sead::ReadStream::readBit()", _text + 0x749A34
	.equiv "sead::ReadStream::readString()", _text + 0x749A58
	.equiv "sead::ReadStream::readMemBlock()", _text + 0x749A7C
	.equiv "sead::WriteStream::flush()", _text + 0x749AA0
	.equiv "sead::WriteStream::writeU8()", _text + 0x749AF4
	.equiv "sead::WriteStream::writeU16()", _text + 0x749B18
	.equiv "sead::WriteStream::writeU32()", _text + 0x749B3C
	.equiv "sead::WriteStream::writeU64()", _text + 0x749B60
	.equiv "sead::WriteStream::writeBit()", _text + 0x749B88
	.equiv "sead::WriteStream::writeString()", _text + 0x749BAC
	.equiv "sead::WriteStream::writeMemBlock()", _text + 0x749BD0
	.equiv "FUN_0E8C9C64:sead::TextStreamFormat::TextStreamFormat()", _text + 0x749C64
	.equiv "sead::<unnamed>::isSJISCode_()", _text + 0x749DDC
	.equiv "sead::TextStreamFormat::getNextData_()", _text + 0x749E04
	.equiv "sead::TextStreamFormat::readBit()", _text + 0x74A848
	.equiv "sead::TextStreamFormat::readString()", _text + 0x74AB24
	.equiv "sead::TextStreamFormat::readMemBlock()", _text + 0x74AC10
	.equiv "sead::TextStreamFormat::writeBit()", _text + 0x74B1BC
	.equiv "sead::TextStreamFormat::writeString()", _text + 0x74B43C
	.equiv "sead::TextStreamFormat::writeMemBlock()", _text + 0x74B6F8
	.equiv "sead::DelegateThread::DelegateThread()", _text + 0x74BA6C
	.equiv "sead::ThreadMgr::ThreadMgr()", _text + 0x74BB80
	.equiv "sead::ThreadMgr::~ThreadMgr()", _text + 0x74BC8C
	.equiv "FUN_0E8CBDDC:sead::ThreadMgr::initMainThread_()", _text + 0x74BDDC
	.equiv "sead::Thread::quitAndWaitDoneSingleThread()", _text + 0x74BE60
	.equiv "sead::Thread::run_()", _text + 0x74BEAC
	.equiv "sead::SpinLock::SpinLock()", _text + 0x74BF64
	.equiv "sead::SpinLock::~SpinLock()", _text + 0x74BFD0
	.equiv "sead::SpinLock::lock()", _text + 0x74BFE4
	.equiv "sead::SpinLock::unlock()", _text + 0x74C068
	.equiv "FUN_0E8CC0D0:sead::CriticalSection::CriticalSection()", _text + 0x74C0D0
	.equiv "FUN_0E8CC13C:sead::CriticalSection::CriticalSection()", _text + 0x74C13C
	.equiv "sead::CriticalSection::~CriticalSection()", _text + 0x74C1BC
	.equiv "sead::CriticalSection::tryLock()", _text + 0x74C218
	.equiv "sead::Event::Event()", _text + 0x74C24C
	.equiv "sead::Event::initialize()", _text + 0x74C2AC
	.equiv "sead::Event::wait()", _text + 0x74C390
	.equiv "sead::MessageQueue::MessageQueue()", _text + 0x74C3E8
	.equiv "sead::MessageQueue::free()", _text + 0x74C43C
	.equiv "sead::MessageQueue::~MessageQueue()", _text + 0x74C47C
	.equiv "sead::MessageQueue::allocate()", _text + 0x74C4CC
	.equiv "FUN_0E8CC564:FID_conflict:sead::MessageQueue::pop()", _text + 0x74C564
	.equiv "sead::Mutex::Mutex()", _text + 0x74C5E0
	.equiv "sead::ThreadMgr::createInstance()", _text + 0x74C6B0
	.equiv "FUN_0E8CC750:sead::Thread::Thread()", _text + 0x74C750
	.equiv "FUN_0E8CC8B4:sead::ThreadMgr::initMainThread_()", _text + 0x74C8B4
	.equiv "FUN_0E8CC9F4:sead::Thread::Thread()", _text + 0x74C9F4
	.equiv "sead::Thread::waitDone()", _text + 0x74CBDC
	.equiv "sead::Thread::~Thread()", _text + 0x74CC30
	.equiv "FUN_0E8CCDBC:sead::Thread::start()", _text + 0x74CDBC
	.equiv "sead::Thread::setAffinity()", _text + 0x74CF14
	.equiv "sead::CalendarTime::Date::calcWeek()", _text + 0x74D048
	.equiv "sead::CalendarTime::setDate()", _text + 0x74D080
	.equiv "FUN_0E8CD0A4:<unnamed>::calcDaysFromNewYearsDay()", _text + 0x74D0A4
	.equiv "FUN_0E8CD104:<unnamed>::calcDaysFromNewYearsDay()", _text + 0x74D104
	.equiv "FUN_0E8CD108:sead::CalendarTime::CalendarTime()", _text + 0x74D108
	.equiv "sead::CalendarTime::Date::Date()", _text + 0x74D1A0
	.equiv "sead::CalendarTime::Time::Time()", _text + 0x74D230
	.equiv "FUN_0E8CD2A0:sead::CalendarTime::CalendarTime()", _text + 0x74D2A0
	.equiv "sead::CalendarTime::Month::Month()", _text + 0x74D330
	.equiv "sead::CalendarTime::Month::makeFromValueOneOrigin()", _text + 0x74D378
	.equiv "sead::DateSpan::setTimeImpl_()", _text + 0x74D514
	.equiv "FUN_0E8CD58C:sead::DateSpan::DateSpan()", _text + 0x74D58C
	.equiv "FUN_0E8CD5E0:sead::DateSpan::DateSpan()", _text + 0x74D5E0
	.equiv "<unnamed>::calcDateToDays()", _text + 0x74D63C
	.equiv "<unnamed>::calcDateTimeToSeconds()", _text + 0x74D6F4
	.equiv "FUN_0E8CD754:sead::DateTime::setUnixTime()", _text + 0x74D754
	.equiv "sead::DateTime::setNow()", _text + 0x74D7D0
	.equiv "FUN_0E8CD87C:sead::DateTime::DateTime()", _text + 0x74D87C
	.equiv "FUN_0E8CD8D0:sead::DateTime::setUnixTime()", _text + 0x74D8D0
	.equiv "<unnamed>::calcDaysToYear()", _text + 0x74D90C
	.equiv "<unnamed>::calcDaysToMonth()", _text + 0x74D9A0
	.equiv "sead::DateTime::getCalendarTime()", _text + 0x74DA40
	.equiv "FUN_0E8CDBB8:sead::DateTime::DateTime()", _text + 0x74DBB8
	.equiv "sead::operator_-()", _text + 0x74DC10
	.equiv "sead::DateUtil::isLeapYear()", _text + 0x74DCDC
	.equiv "sead::DateUtil::calcWeekDay()", _text + 0x74DD2C
	.equiv "FUN_0E8CDDCC:FID_conflict:pead::TickSpan::toNanoSeconds()", _text + 0x74DDCC
	.equiv "sead::AudioTask::AudioTask()", _text + 0x74E6C4
	.equiv "sead::AudioMgr::prepare()", _text + 0x74ED20
	.equiv "sead::AudioResetter::AudioResetter()", _text + 0x74F188
	.equiv "sead::AudioSettingParameter::AudioSettingParameter()", _text + 0x74F2B4
	.equiv "sead::AudioSettingParameter::appendSubset()", _text + 0x74F390
	.equiv "sead::SoundHandle::stop()", _text + 0x74F488
	.equiv "sead::SoundHandle::setVolume()", _text + 0x74F4C8
	.equiv "sead::SoundHandle::setPan()", _text + 0x74F4E8
	.equiv "sead::SoundHandle::isAttachedSound()", _text + 0x74F4F8
	.equiv "sead::SoundHandle::getSoundId()", _text + 0x74F508
	.equiv "sead::SoundHandleSet::SoundHandleSet()", _text + 0x74F528
	.equiv "sead::SoundHandleSet::getFreeHandle()", _text + 0x74F734
	.equiv "sead::SoundHandleSet::getHandleById()", _text + 0x74F7D0
	.equiv "sead::SoundHandleSet::getHandleByIdOrFree()", _text + 0x74F888
	.equiv "sead::Audio3DActor::~Audio3DActor()", _text + 0x74F964
	.equiv "sead::AudioFader::AudioFader()", _text + 0x74F978
	.equiv "sead::AudioFader::calc()", _text + 0x74F9F4
	.equiv "sead::AudioFader::moveTo()", _text + 0x74FA60
	.equiv "sead::AudioFader::moveToWithDelta()", _text + 0x74FB24
	.equiv "sead::AudioTreeFader::AudioTreeFader()", _text + 0x74FBC8
	.equiv "sead::AudioTreeFader::addLeaf()", _text + 0x74FD38
	.equiv "sead::AudioTreeFader::getInitTotalValue_()", _text + 0x74FD8C
	.equiv "sead::AudioTreeFader::calcNodeTotalValue_()", _text + 0x74FDD4
	.equiv "sead::AudioTreeFader::getTotalValue()", _text + 0x74FE18
	.equiv "sead::AudioRandomId::fillByEmptyId_()", _text + 0x74FF24
	.equiv "sead::AudioRandomId::reset()", _text + 0x74FF60
	.equiv "sead::AudioRandomId::initialize()", _text + 0x74FF78
	.equiv "sead::AudioRandomId::AudioRandomId()", _text + 0x75001C
	.equiv "sead::AudioRandomId::setId()", _text + 0x750160
	.equiv "sead::AudioRandomId::comparePrioWithLast_()", _text + 0x7501C4
	.equiv "sead::AudioRandomId::makeSelectableList_()", _text + 0x750298
	.equiv "sead::AudioRandomId::getId()", _text + 0x75030C
	.equiv "sead::AudioRandomId::getLastGetGroup()", _text + 0x7504C4
	.equiv "sead::AudioRandomId::getLastGetGroupPrio()", _text + 0x7504F8
	.equiv "sead::AudioRandomIdSet::AudioRandomIdSet()", _text + 0x75052C
	.equiv "sead::AudioRandomIdSet::~AudioRandomIdSet()", _text + 0x750584
	.equiv "sead::AudioRandomIdSet::initialize()", _text + 0x750674
	.equiv "sead::AudioRandomIdSet::setupRandomId()", _text + 0x750724
	.equiv "sead::AudioRandomIdSet::searchRandomIdByName_()", _text + 0x7509C0
	.equiv "sead::AudioRandomIdSet::getId()", _text + 0x750AD0
	.equiv "sead::AudioRandomIdSet::getRandomId()", _text + 0x750B70
	.equiv "sead::AudioRandomIdSet::getRandomIdNum()", _text + 0x750B80
	.equiv "FUN_0E8D0C90:sead::AudioFxObject::AudioFxObject()", _text + 0x750C90
	.equiv "sead::AudioFxObject::WorkBuffer::release()", _text + 0x750CE8
	.equiv "sead::AudioFxObject::releaseWorkBuffer()", _text + 0x750D50
	.equiv "sead::AudioFxObject::getRequiredMemSize()", _text + 0x750E4C
	.equiv "sead::AudioFxObject::WorkBuffer::assign()", _text + 0x750E60
	.equiv "sead::AudioFxObject::WorkBuffer::WorkBuffer()", _text + 0x750F2C
	.equiv "sead::AudioFxObject::assignWorkBuffer()", _text + 0x750FB4
	.equiv "sead::AudioFxSocket::AudioFxSocket()", _text + 0x751180
	.equiv "sead::AudioFxSocket::AuxBusPart::finalize()", _text + 0x751224
	.equiv "sead::AudioFxSocket::finalize()", _text + 0x751290
	.equiv "sead::AudioFxSocket::~AudioFxSocket()", _text + 0x751310
	.equiv "sead::AudioFxSocket::AuxBusPart::AuxBusPart()", _text + 0x7513D8
	.equiv "sead::AudioFxSocket::initialize()", _text + 0x751530
	.equiv "sead::AudioFxSocket::AuxBusPart::isDetachedFromBus_()", _text + 0x75163C
	.equiv "sead::AudioFxSocket::AuxBusPart::calcBefore()", _text + 0x751674
	.equiv "sead::AudioFxSocket::AuxBusPart::appendInner_()", _text + 0x751708
	.equiv "sead::AudioFxSocket::AuxBusPart::appendReservedFxIfExist_()", _text + 0x7517D4
	.equiv "sead::AudioFxSocket::AuxBusPart::calcAfter()", _text + 0x751874
	.equiv "sead::AudioFxSocket::calc()", _text + 0x7518CC
	.equiv "sead::AudioFxSocket::AuxBusPart::moveListObjects_()", _text + 0x751A6C
	.equiv "sead::AudioFxSocket::resume()", _text + 0x751C38
	.equiv "sead::AudioSystemCafe::AudioSystemCafe()", _text + 0x751D84
	.equiv "sead::AudioSystemCafe::setThreadPriority()", _text + 0x7528CC
	.equiv "sead::AudioSystemCafe::enableTaskThread()", _text + 0x752A04
	.equiv "sead::AudioPlayerCafe::detail_SetupSound()", _text + 0x752F34
	.equiv "sead::AudioPlayerCafe::AudioPlayerCafe()", _text + 0x753038
	.equiv "sead::AudioPlayerCafe::setupDataManagementInner_()", _text + 0x753354
	.equiv "sead::AudioPlayerCafe::setupDataManagement()", _text + 0x7534E8
	.equiv "sead::AudioResetterCafe::AudioResetterCafe()", _text + 0x753728
	.equiv "sead::AudioFsSoundArchiveCafe::AudioFsSoundArchiveCafe()", _text + 0x753C40
	.equiv "sead::AudioFsSoundArchiveCafe::open()", _text + 0x753D08
	.equiv "sead::AudioSoundDataMgrCafe::AudioSoundDataMgrCafe()", _text + 0x7541B8
	.equiv "sead::AudioSoundDataMgrCafe::getSoundArchive()", _text + 0x754230
	.equiv "sead::AudioSoundDataMgrCafe::setupManager_()", _text + 0x7543A0
	.equiv "sead::AudioSoundDataMgrCafe::mountSoundArchiveFromFs()", _text + 0x754424
	.equiv "sead::AudioSoundDataMgrCafe::tryGetDefaultSoundHeapAndCheckReady_()", _text + 0x7545EC
	.equiv "sead::AudioSoundDataMgrCafe::loadData()", _text + 0x75464C
	.equiv "sead::AudioResourceLoaderCafe::AudioResourceLoaderCafe()", _text + 0x754B70
	.equiv "sead::AudioResourceLoaderCafe::setArchiveOnFs()", _text + 0x754EF0
	.equiv "sead::Audio3DMgrCafe::Audio3DMgrCafe()", _text + 0x754F2C
	.equiv "sead::Audio3DMgrCafe::isListenerAddedToNw()", _text + 0x7551A4
	.equiv "sead::Audio3DMgrCafe::setBiquadFilterType()", _text + 0x7553A4
	.equiv "sead::Audio3DMgrCafe::setDefaultListenerParameter()", _text + 0x7553AC
	.equiv "sead::Audio3DMgrCafe::appendListenerGroup()", _text + 0x755428
	.equiv "sead::Audio3DMgrCafe::removeListenerGroup()", _text + 0x7554E8
	.equiv "sead::Audio3DActorCafe::SetupSound()", _text + 0x7556E4
	.equiv "sead::Audio3DActorCafe::Audio3DActorCafe()", _text + 0x7557E8
	.equiv "sead::Audio3DActorCafe::initialize()", _text + 0x755868
	.equiv "sead::Audio3DListenerCafe::Audio3DListenerCafe()", _text + 0x755A7C
	.equiv "sead::Audio3DListenerCafe::setMatrix()", _text + 0x755B14
	.equiv "FUN_0E8D5B98:nw::snd::Sound3DListener::ResetMatrix()", _text + 0x755B98
	.equiv "sead::Audio3DListenerCafe::setVelocity()", _text + 0x755B9C
	.equiv "sead::Audio3DListenerGroupCafe::Audio3DListenerGroupCafe()", _text + 0x755BFC
	.equiv "sead::Audio3DListenerGroupCafe::reflectGroupParamToListener_()", _text + 0x755D1C
	.equiv "sead::Audio3DListenerGroupCafe::append()", _text + 0x755DF8
	.equiv "sead::Audio3DListenerGroupCafe::removeAll()", _text + 0x755E88
	.equiv "sead::AudioRmtSpeakerMgrCafe::AudioRmtSpeakerMgrCafe()", _text + 0x756348
	.equiv "sead::AudioRmtSpeakerMgrCafe::isControllerExist_()", _text + 0x75646C
	.equiv "sead::AudioRmtSpeakerMgrCafe::ConnectTask::init()", _text + 0x75677C
	.equiv "sead::AudioRmtSpeakerMgrCafe::ConnectTask::ConnectTask()", _text + 0x75679C
	.equiv "sead::AudioRmtSpeakerMgrCafe::ConnectTask::setup()", _text + 0x7567D4
	.equiv "sead::AudioRmtSpeakerMgrCafe::addTask_()", _text + 0x7567F0
	.equiv "sead::AudioRmtSpeakerMgrCafe::copyRemoteVolume_()", _text + 0x7568C8
	.equiv "FUN_0E8D6A28:FID_conflict:sead::AudioRmtSpeakerMgrCafe::connectAll()", _text + 0x756A28
	.equiv "FUN_0E8D6A90:FID_conflict:sead::AudioRmtSpeakerMgrCafe::connectAll()", _text + 0x756A90
	.equiv "sead::AudioTaskThreadCafe::AudioTaskThreadCafe()", _text + 0x756B34
	.equiv "sead::AudioTaskThreadCafe::addTask()", _text + 0x756CB0
	.equiv "sead::AudioDrcVsCtrlCafe::isHeadphoneInserted_()", _text + 0x756DDC
	.equiv "sead::AudioDrcVsCtrlCafe::applyCompForSample_()", _text + 0x756E68
	.equiv "sead::AudioDrcVsCtrlCafe::Settings::init()", _text + 0x757108
	.equiv "sead::AudioDrcVsCtrlCafe::initCompVar_()", _text + 0x75717C
	.equiv "sead::AudioDrcVsCtrlCafe::AudioDrcVsCtrlCafe()", _text + 0x757198
	.equiv "sead::AudioDrcVsCtrlCafe::removeFinalMixCallback_()", _text + 0x7572F0
	.equiv "FUN_0E8D732C:FID_conflict:sead::AudioDrcVsCtrlCafe::getSubCoreMask_()", _text + 0x75732C
	.equiv "FUN_0E8D7350:FID_conflict:sead::AudioDrcVsCtrlCafe::getSubCoreMask_()", _text + 0x757350
	.equiv "sead::AudioDrcVsCtrlCafe::finalizeOnSubCore_()", _text + 0x7573B0
	.equiv "sead::AudioDrcVsCtrlCafe::finalize()", _text + 0x75747C
	.equiv "sead::AudioDrcVsCtrlCafe::~AudioDrcVsCtrlCafe()", _text + 0x75754C
	.equiv "<unnamed>::getTaskThread()", _text + 0x757610
	.equiv "sead::AudioDrcVsCtrlCafe::setSurroundMode_()", _text + 0x7576BC
	.equiv "sead::AudioDrcVsCtrlCafe::setSpeakerPosition_()", _text + 0x757798
	.equiv "sead::AudioDrcVsCtrlCafe::setSurroundDepth_()", _text + 0x7577AC
	.equiv "sead::AudioDrcVsCtrlCafe::setDownmixBalance_()", _text + 0x7577C0
	.equiv "sead::AudioDrcVsCtrlCafe::setOutputGain_()", _text + 0x7577DC
	.equiv "FUN_0E8D77F0:sead::AudioDrcVsCtrlCafe::initSettings_()", _text + 0x7577F0
	.equiv "FUN_0E8D788C:sead::AudioDrcVsCtrlCafe::initSettings_()", _text + 0x75788C
	.equiv "sead::AudioDrcVsCtrlCafe::initializeOnSubCore_()", _text + 0x7578DC
	.equiv "sead::AudioDrcVsCtrlCafe::initHeadphoneStatus_()", _text + 0x7579A8
	.equiv "sead::AudioDrcVsCtrlCafe::getDrcDeviceMode_()", _text + 0x7579F0
	.equiv "sead::AudioDrcVsCtrlCafe::swapFinalMixBuffer_()", _text + 0x757A1C
	.equiv "sead::AudioDrcVsCtrlCafe::finalMixCbProc()", _text + 0x757CA0
	.equiv "sead::AudioDrcVsCtrlCafe::registerFinalMixCallback_()", _text + 0x757D68
	.equiv "sead::AudioDrcVsCtrlCafe::initialize()", _text + 0x757DA4
	.equiv "FUN_0E8D7ED4:sead::AudioDrcVsCtrlCafe::updateSettings_()", _text + 0x757ED4
	.equiv "FUN_0E8D8018:sead::AudioDrcVsCtrlCafe::updateSettings_()", _text + 0x758018
	.equiv "sead::AudioDrcVsCtrlCafe::updateSettingsOnSubCore_()", _text + 0x758068
	.equiv "sead::AudioDrcVsCtrlCafe::setParam()", _text + 0x758134
	.equiv "sead::AudioFxReverbStdCafe::updateFx2ch_()", _text + 0x758254
	.equiv "sead::AudioFxReverbStdCafe::updateFx4ch_()", _text + 0x758628
	.equiv "sead::AudioFxReverbStdCafe::updateFx6ch_()", _text + 0x758AA4
	.equiv "sead::AudioFxReverbStdParamCafe::AudioFxReverbStdParamCafe()", _text + 0x7590D0
	.equiv "sead::AudioFxReverbStdCafe::initVars_()", _text + 0x7591A0
	.equiv "sead::AudioFxReverbStdCafe::AudioFxReverbStdCafe()", _text + 0x75926C
	.equiv "sead::AudioFxReverbStdCafe::initBufferPos_()", _text + 0x75954C
	.equiv "sead::AudioFxReverbStdCafe::clearBuffer_()", _text + 0x759598
	.equiv "sead::AudioFxReverbStdCafe::swapAuxBuffer2ch_()", _text + 0x7597C8
	.equiv "sead::AudioFxReverbStdCafe::swapAuxBuffer4ch_()", _text + 0x759968
	.equiv "sead::AudioFxReverbStdCafe::swapAuxBuffer6ch_()", _text + 0x759BD8
	.equiv "sead::AudioFxReverbStdCafe::getSampleRate_()", _text + 0x75A0B8
	.equiv "sead::AudioFxReverbStdCafe::setupDelaySizes_()", _text + 0x75A0EC
	.equiv "sead::AudioFxReverbStdCafe::setupGains_()", _text + 0x75A260
	.equiv "sead::AudioFxReverbStdCafe::SetParam()", _text + 0x75A398
	.equiv "sead::AudioFxReverbStdCafe::GetRequiredMemSize()", _text + 0x75A414
	.equiv "sead::AudioFxReverbStdCafe::AssignWorkBuffer()", _text + 0x75A4F4
	.equiv "sead::AudioFxDelayCafe::updateFx4ch_()", _text + 0x75AA9C
	.equiv "sead::AudioFxDelayCafe::updateFx6ch_()", _text + 0x75ACB4
	.equiv "sead::AudioFxDelayParamCafe::AudioFxDelayParamCafe()", _text + 0x75AFC8
	.equiv "sead::AudioFxDelayCafe::initVars_()", _text + 0x75B068
	.equiv "sead::AudioFxDelayCafe::AudioFxDelayCafe()", _text + 0x75B0C4
	.equiv "sead::AudioFxDelayCafe::swapAuxBuffer2ch_()", _text + 0x75B51C
	.equiv "sead::AudioFxDelayCafe::swapAuxBuffer4ch_()", _text + 0x75B6BC
	.equiv "sead::AudioFxDelayCafe::swapAuxBuffer6ch_()", _text + 0x75B92C
	.equiv "sead::AudioFxDelayCafe::getSampleRate_()", _text + 0x75BE0C
	.equiv "sead::AudioFxDelayCafe::setupDelaySizes_()", _text + 0x75BE40
	.equiv "sead::AudioFxDelayCafe::setupGains_()", _text + 0x75BEC4
	.equiv "sead::AudioFxDelayCafe::SetParam()", _text + 0x75BF08
	.equiv "sead::Base64::encode()", _text + 0x75C4F4
	.equiv "sead::Base64::decode()", _text + 0x75C630
	.equiv "sead::DualScreenMethodTreeMgr::DualScreenMethodTreeMgr()", _text + 0x75CA70
	.equiv "sead::Worker::Worker()", _text + 0x75DCF8
	.equiv "sead::Worker::pushJobQueue()", _text + 0x75DE54
	.equiv "sead::Worker::clearJobQQ()", _text + 0x75DF88
	.equiv "sead::Worker::wakeup_()", _text + 0x75E004
	.equiv "sead::Worker::getNextJQ_()", _text + 0x75E044
	.equiv "sead::Worker::proc_()", _text + 0x75E11C
	.equiv "sead::AudioFxParam::AudioFxParam()", _text + 0x75E2F0
	.equiv "agl::driver::GX2Resource::GX2Resource()", _text + 0x75E3B0
	.equiv "agl::driver::GX2Resource::createInstance()", _text + 0x75E450
	.equiv "agl::driver::GX2Resource::initialize()", _text + 0x75E624
	.equiv "agl::driver::GX2Resource::setGeometryShaderRingBuffer()", _text + 0x75E874
	.equiv "agl::driver::GX2Resource::restoreContextState()", _text + 0x75E8B4
	.equiv "agl::env::Fog::Fog()", _text + 0x75EA48
	.equiv "agl::env::EnvObjSetMgr::EnvObjSetMgr()", _text + 0x75EFA4
	.equiv "agl::env::EnvObjSetMgr::~EnvObjSetMgr()", _text + 0x75F0B4
	.equiv "agl::env::EnvObjSetMgr::Template::Template()", _text + 0x75F1A0
	.equiv "agl::env::EnvObjSetMgr::initialize()", _text + 0x75F310
	.equiv "agl::env::EnvObjSetMgr::Template::initialize()", _text + 0x75F3D8
	.equiv "agl::env::EnvObjSetMgr::createTemplate()", _text + 0x75F7FC
	.equiv "agl::env::EnvObjSetMgr::searchEnvObjSet()", _text + 0x75F94C
	.equiv "agl::env::EnvObjSetMgr::searchEnvObjSetIndex()", _text + 0x75FA44
	.equiv "agl::env::EnvObjSetMgr::InitArg::InitArg()", _text + 0x75FA84
	.equiv "agl::env::EnvObjBuffer::EnvObjBuffer()", _text + 0x75FEC0
	.equiv "agl::env::EnvObjBuffer::freeBuffer()", _text + 0x75FF60
	.equiv "agl::env::EnvObjBuffer::~EnvObjBuffer()", _text + 0x760010
	.equiv "agl::env::EnvObjBuffer::allocBuffer()", _text + 0x76006C
	.equiv "<unnamed>::compare()", _text + 0x760210
	.equiv "agl::env::EnvObjBuffer::searchBufferIndex()", _text + 0x7603E8
	.equiv "agl::env::EnvObjBuffer::searchTypeIndex()", _text + 0x7605C8
	.equiv "agl::env::EnvObjBuffer::searchType()", _text + 0x760644
	.equiv "agl::env::EnvObjBuffer::AllocateArg::AllocateArg()", _text + 0x7606F8
	.equiv "agl::env::EnvObjBuffer::AllocateArg::setContainMax()", _text + 0x760764
	.equiv "agl::env::EnvObj::EnvObj()", _text + 0x760A14
	.equiv "agl::env::EnvObj::setEnvObjNameCopy()", _text + 0x760F48
	.equiv "agl::env::EnvObj::setGroupNameCopy()", _text + 0x761030
	.equiv "agl::env::EnvObj::setEnable()", _text + 0x761118
	.equiv "agl::env::EnvObj::setEditable()", _text + 0x761150
	.equiv "agl::env::EnvObj::becomeDefaultName_()", _text + 0x76119C
	.equiv "agl::env::EnvObj::registClass()", _text + 0x761218
	.equiv "agl::env::EnvObj::clear_()", _text + 0x76146C
	.equiv "agl::env::EnvObj::initialize_()", _text + 0x7614B4
	.equiv "agl::env::EnvObj::update_()", _text + 0x761588
	.equiv "agl::env::HemisphereLight::HemisphereLight()", _text + 0x761E50
	.equiv "agl::env::DirectionalLight::syncFromDirection_()", _text + 0x762334
	.equiv "agl::env::DirectionalLight::DirectionalLight()", _text + 0x762478
	.equiv "agl::env::PointLight::PointLight()", _text + 0x762B64
	.equiv "agl::env::SpotLight::SpotLight()", _text + 0x76303C
	.equiv "agl::g3d::ShapeUtilG3D::setUpVertexBufferWithResVertex()", _text + 0x763F4C
	.equiv "<unnamed>::GetAglTexCompSel()", _text + 0x764028
	.equiv "agl::g3d::TextureDataInitializerG3D::initialize()", _text + 0x764054
	.equiv "agl::pfx::HDRCompose::HDRCompose()", _text + 0x7641A8
	.equiv "agl::pfx::HDRCompose::~HDRCompose()", _text + 0x76427C
	.equiv "agl::pfx::HDRCompose::initialize()", _text + 0x764380
	.equiv "agl::pfx::HDRCompose::draw()", _text + 0x7644EC
	.equiv "agl::pfx::HDRCompose::setTexCoordCoeff()", _text + 0x764B00
	.equiv "agl::pfx::DepthOfField::~DepthOfField()", _text + 0x764C3C
	.equiv "agl::pfx::DepthOfFieldParameter::enableDepthBlur_()", _text + 0x764D08
	.equiv "agl::pfx::DepthOfFieldParameter::enableDifferntShape_()", _text + 0x764D44
	.equiv "agl::pfx::DepthOfFieldParameter::enableSeparateVignettingPass_()", _text + 0x764D78
	.equiv "agl::pfx::DepthOfFieldParameter::enableIndirect_()", _text + 0x764DF8
	.equiv "agl::pfx::DepthOfFieldParameter::enableMipFromZeroLevel_()", _text + 0x764E2C
	.equiv "agl::pfx::DepthOfFieldParameter::assignShaderProgram_()", _text + 0x764ECC
	.equiv "agl::pfx::DepthOfFieldParameter::updateIndirectMatrix_()", _text + 0x765638
	.equiv "agl::pfx::DepthOfFieldParameter::DepthOfFieldParameter()", _text + 0x765760
	.equiv "agl::pfx::DepthOfField::initializeContext()", _text + 0x765EB4
	.equiv "agl::pfx::DepthOfFieldParameter::VignettingShapeParam::initialize()", _text + 0x765F40
	.equiv "agl::pfx::DepthOfFieldParameter::initialize()", _text + 0x766148
	.equiv "agl::pfx::DepthOfFieldParameter::setEnableDofFar()", _text + 0x766B2C
	.equiv "agl::pfx::DepthOfFieldParameter::setBlurParam()", _text + 0x766B4C
	.equiv "agl::pfx::DepthOfFieldParameter::setEnableDofNear()", _text + 0x766B94
	.equiv "agl::pfx::DepthOfFieldParameter::enableDepthOfField_()", _text + 0x766BB4
	.equiv "agl::pfx::DepthOfFieldParameter::enableBlurMipMapPass_()", _text + 0x766C14
	.equiv "agl::pfx::DepthOfField::TempVignetting::TempVignetting()", _text + 0x766C7C
	.equiv "agl::pfx::DepthOfField::DepthOfField()", _text + 0x766EFC
	.equiv "agl::pfx::DepthOfField::initVertex_()", _text + 0x767080
	.equiv "agl::pfx::DepthOfField::initIndex_()", _text + 0x76757C
	.equiv "agl::pfx::DepthOfField::initialize()", _text + 0x7677B8
	.equiv "agl::pfx::DepthOfField::DrawArg::DrawArg()", _text + 0x7678DC
	.equiv "agl::pfx::DepthOfField::bindRenderBuffer_()", _text + 0x768068
	.equiv "agl::pfx::DepthOfField::drawKick_()", _text + 0x768258
	.equiv "agl::pfx::DepthOfField::drawColorMipMap_()", _text + 0x768444
	.equiv "agl::pfx::DepthOfField::drawDepthMipMap_()", _text + 0x768A94
	.equiv "agl::pfx::DepthOfField::drawDebugBlur_()", _text + 0x769148
	.equiv "agl::pfx::DepthOfField::uniformComposeParam_()", _text + 0x769230
	.equiv "agl::pfx::DepthOfField::uniformVignettingParam_()", _text + 0x769A4C
	.equiv "agl::pfx::DepthOfField::uniformExpandReduceParam_()", _text + 0x769F34
	.equiv "agl::pfx::DepthOfField::drawCompose_()", _text + 0x76A058
	.equiv "agl::pfx::DepthOfField::freeBuffer()", _text + 0x76A6F8
	.equiv "agl::pfx::DepthOfField::drawVignetting_()", _text + 0x76A780
	.equiv "FUN_0E8EA98C:agl::pfx::DepthOfField::draw()", _text + 0x76A98C
	.equiv "FUN_0E8EAB44:agl::pfx::DepthOfField::draw()", _text + 0x76AB44
	.equiv "agl::pfx::DepthOfField::setIndirectTextureData()", _text + 0x76AB54
	.equiv "FUN_0E8EB2F4:agl::utl::ContextParameterBuffer::~ContextParameterBuffer()", _text + 0x76B2F4
	.equiv "void_sead::Matrix34CalcCommon::multTranslationLocal()", _text + 0x76B478
	.equiv "FUN_0E8EB554:agl::utl::ContextParameterBuffer::ContextParameterBuffer()", _text + 0x76B554
	.equiv "FUN_0E8EB5C0:void_agl::utl::ContextParameterBuffer::initializeContextParameterBuffer()", _text + 0x76B5C0
	.equiv "agl::pfx::ColorCorrection::destroy_()", _text + 0x76B8D0
	.equiv "agl::pfx::ColorCorrection::~ColorCorrection()", _text + 0x76B94C
	.equiv "agl::pfx::ColorCorrection::updateCurves_()", _text + 0x76B9E4
	.equiv "FUN_0E8EBBBC:FID_conflict:agl::pfx::ColorCorrection::enablePassGamma_()", _text + 0x76BBBC
	.equiv "FUN_0E8EBBDC:FID_conflict:agl::pfx::ColorCorrection::enablePassGamma_()", _text + 0x76BBDC
	.equiv "FUN_0E8EBBFC:FID_conflict:agl::pfx::ColorCorrection::enablePassGamma_()", _text + 0x76BBFC
	.equiv "FUN_0E8EBC1C:FID_conflict:agl::pfx::ColorCorrection::enablePassGamma_()", _text + 0x76BC1C
	.equiv "agl::pfx::ColorCorrection::resetAll()", _text + 0x76BD90
	.equiv "agl::pfx::ColorCorrection::ColorCorrection()", _text + 0x76BF68
	.equiv "agl::pfx::ColorCorrection::initialize()", _text + 0x76C970
	.equiv "agl::pfx::ColorCorrection::updateProgram_()", _text + 0x76CBE0
	.equiv "agl::pfx::ColorCorrection::drawMap()", _text + 0x76CCE8
	.equiv "FUN_0E8ED438:agl::pfx::ColorCorrection::draw()", _text + 0x76D438
	.equiv "FUN_0E8ED624:agl::pfx::ColorCorrection::draw()", _text + 0x76D624
	.equiv "agl::pfx::ColorCorrection::setHue()", _text + 0x76D77C
	.equiv "agl::pfx::ColorCorrection::setSaturation()", _text + 0x76D7E4
	.equiv "agl::pfx::ColorCorrection::setBrightness()", _text + 0x76D84C
	.equiv "agl::pfx::ColorCorrection::setGamma()", _text + 0x76D8B4
	.equiv "agl::pfx::ColorCorrection::setLevelCurve_()", _text + 0x76D91C
	.equiv "FUN_0E8EDA7C:float_agl::utl::ParameterCurve::evaluateUnit()", _text + 0x76DA7C
	.equiv "void_agl::utl::ParameterCurve::evaluate()", _text + 0x76DAA8
	.equiv "FUN_0E8EDB30:void_agl::utl::ParameterCurve::reset()", _text + 0x76DB30
	.equiv "FUN_0E8EDC00:void_agl::utl::ParameterCurve::setCurve()", _text + 0x76DC00
	.equiv "agl::detail::RootNode::RootNode()", _text + 0x76DC4C
	.equiv "agl::detail::RootNode::createInstance()", _text + 0x76DDC0
	.equiv "agl::detail::RootNode::setNodeMeta()", _text + 0x76DF34
	.equiv "agl::detail::RootNode::initialize()", _text + 0x76DFD4
	.equiv "agl::detail::RootNode::appendChildAGL()", _text + 0x76E308
	.equiv "agl::detail::TextureDataUtil::convFormatGX2ToAGL()", _text + 0x76E5D8
	.equiv "agl::detail::TextureDataUtil::convFormatAGLToGX2()", _text + 0x76E60C
	.equiv "FUN_0E8EE624:agl::TextureData::initializeFromSurface()", _text + 0x76E624
	.equiv "agl::detail::ShaderHolder::ShaderHolder()", _text + 0x76E628
	.equiv "agl::detail::ShaderHolder::createInstance()", _text + 0x76E6EC
	.equiv "agl::detail::ShaderHolder::initialize()", _text + 0x76E874
	.equiv "agl::lut::LUT::LUT()", _text + 0x77437C
	.equiv "FID_conflict:agl::lut::LUT::~LUT()", _text + 0x774430
	.equiv "FUN_0E8F4854:agl::cull::ViewFrustumCulling::updateProjection_()", _text + 0x774854
	.equiv "agl::cull::ViewFrustumCulling::update_()", _text + 0x77493C
	.equiv "agl::cull::ViewFrustumCulling::update()", _text + 0x774ED4
	.equiv "agl::cull::ViewFrustumCulling::ViewFrustumCulling()", _text + 0x774F28
	.equiv "FUN_0E8F5064:agl::cull::ViewFrustumCulling::updateProjection_()", _text + 0x775064
	.equiv "agl::fx::OfxBase::OfxBase()", _text + 0x775630
	.equiv "agl::fx::OfxBase::getOfxTypeID()", _text + 0x7759B4
	.equiv "agl::fx::OfxBase::PresetBase::copy()", _text + 0x775A64
	.equiv "agl::fx::OfxBase::loadPresetByName()", _text + 0x775BF0
	.equiv "agl::fx::OfxBase::loadPresetByIndex()", _text + 0x7760B4
	.equiv "agl::fx::OfxBase::calc()", _text + 0x77625C
	.equiv "agl::fx::OfxBase::calcContext()", _text + 0x7764F4
	.equiv "agl::fx::OfxBase::updateViewGPU()", _text + 0x777130
	.equiv "agl::fx::OfxBase::draw()", _text + 0x7771E8
	.equiv "agl::fx::OfxBase::setEnable()", _text + 0x7772BC
	.equiv "agl::fx::OfxBase::initializeOfx()", _text + 0x7772F0
	.equiv "agl::fx::OfxBase::PresetBase::initializeOfx()", _text + 0x77776C
	.equiv "agl::fx::OfxBase::initializePreset()", _text + 0x777980
	.equiv "agl::fx::OfxBase::PresetBase::PresetBase()", _text + 0x777A18
	.equiv "agl::fx::OfxLensFlare::ContextLensFlare::ContextLensFlare()", _text + 0x778190
	.equiv "agl::fx::OfxLensFlare::Element::Element()", _text + 0x77822C
	.equiv "agl::fx::OfxLensFlare::initializeImpl_()", _text + 0x77827C
	.equiv "agl::fx::OfxLensFlare::updateImpl_()", _text + 0x778774
	.equiv "agl::fx::OfxLensFlare::calcContextImpl_()", _text + 0x77885C
	.equiv "agl::fx::OfxLensFlare::updateViewGPUImpl_()", _text + 0x779798
	.equiv "<unnamed>::ChangeShaderVariation_LensFlare()", _text + 0x779A1C
	.equiv "agl::fx::OfxLensFlare::drawImpl_()", _text + 0x779A88
	.equiv "agl::fx::OfxLensFlare::Preset::Preset()", _text + 0x77A230
	.equiv "agl::fx::OfxLensFlare::Preset::PresetElement::PresetElement()", _text + 0x77A558
	.equiv "agl::fx::OfxLensFlare::Preset::PresetContext::PresetContext()", _text + 0x77B324
	.equiv "agl::fx::OfxLensFlare::Preset::initializeOfxImpl_()", _text + 0x77B49C
	.equiv "agl::fx::OfxLensFlareDynamic::loadPresetByParentIndex()", _text + 0x77B674
	.equiv "agl::fx::OfxLensFlareDynamic::setParam()", _text + 0x77B758
	.equiv "void_sead::Matrix22CalcCommon::multiply()", _text + 0x77C4F8
	.equiv "void_sead::Matrix22CalcCommon::makeS()", _text + 0x77C54C
	.equiv "void_sead::Matrix22CalcCommon::makeR()", _text + 0x77C570
	.equiv "void_sead::Matrix34CalcCommon::getRow()", _text + 0x77C5EC
	.equiv "agl::fx::RadialBlur::RadialBlur()", _text + 0x77C618
	.equiv "agl::fx::RadialBlur::Context::Context()", _text + 0x77C754
	.equiv "agl::fx::RadialBlur::Context::initialize()", _text + 0x77C810
	.equiv "agl::fx::RadialBlur::initVertex_()", _text + 0x77C928
	.equiv "agl::fx::RadialBlur::initIndex_()", _text + 0x77CC1C
	.equiv "agl::fx::RadialBlur::BlurParameter::BlurParameter()", _text + 0x77CEB8
	.equiv "agl::fx::RadialBlur::initialize()", _text + 0x77D008
	.equiv "agl::fx::RadialBlur::Context::freeReduceTexture()", _text + 0x77D9EC
	.equiv "agl::fx::RadialBlur::freeReduceTexture()", _text + 0x77DB00
	.equiv "agl::fx::RadialBlur::Context::drawToReduceTexture_()", _text + 0x77DB1C
	.equiv "agl::fx::RadialBlur::Context::drawToRenderBuffer_()", _text + 0x77E304
	.equiv "agl::fx::OccludedEffectMgr::Resource::release()", _text + 0x77EAAC
	.equiv "agl::fx::OccludedEffectMgr::OccludedEffectMgr()", _text + 0x77EABC
	.equiv "agl::fx::OccludedEffectMgr::createVtxStream_()", _text + 0x77F464
	.equiv "agl::fx::OccludedEffectMgr::Resource::initialize()", _text + 0x77FF14
	.equiv "agl::fx::OccludedEffectMgr::initialize()", _text + 0x7800F0
	.equiv "agl::fx::OccludedEffectMgr::Resource::setupWithBinary()", _text + 0x781144
	.equiv "agl::fx::OccludedEffectMgr::initTexturePlacement_()", _text + 0x781A78
	.equiv "agl::fx::OccludedEffectMgr::getCurrRes_()", _text + 0x781B70
	.equiv "agl::fx::OccludedEffectMgr::updateTexturePlacement_()", _text + 0x781B8C
	.equiv "agl::fx::OccludedEffectMgr::constructHostIO_()", _text + 0x782624
	.equiv "agl::fx::OccludedEffectMgr::calc()", _text + 0x782B1C
	.equiv "agl::fx::OccludedEffectMgr::calcView()", _text + 0x782E58
	.equiv "agl::fx::OccludedEffectMgr::updateViewGPU()", _text + 0x782FA4
	.equiv "agl::fx::OccludedEffectMgr::draw()", _text + 0x78300C
	.equiv "agl::fx::OccludedEffectMgr::searchPresetByName()", _text + 0x783084
	.equiv "agl::fx::OccludedEffectMgr::getPresetByIndex()", _text + 0x783294
	.equiv "agl::fx::OccludedEffectMgr::getVertexAttrQuad()", _text + 0x7833C0
	.equiv "agl::fx::OccludedEffectMgr::getVertexAttrQuadDouble()", _text + 0x783430
	.equiv "agl::fx::OccludedEffectMgr::getVertexAttrOctagon()", _text + 0x7834A0
	.equiv "agl::fx::OccludedEffectMgr::getVertexAttrOctagonDouble()", _text + 0x783510
	.equiv "agl::fx::DecalTrailMgr::DecalTrailMgr()", _text + 0x783C0C
	.equiv "agl::fx::DecalTrailMgr::initialize()", _text + 0x783E5C
	.equiv "agl::fx::DecalTrailMgr::createTrail()", _text + 0x784068
	.equiv "agl::fx::DecalTrailMgr::calcGPU()", _text + 0x7844AC
	.equiv "agl::fx::DecalTrail::~DecalTrail()", _text + 0x7848B8
	.equiv "agl::fx::DecalTrail::clearAllPrim()", _text + 0x784B8C
	.equiv "agl::fx::DecalTrail::DecalTrail()", _text + 0x784BC8
	.equiv "agl::fx::DecalTrail::initialize()", _text + 0x784F58
	.equiv "agl::fx::DecalTrail::getShaderType()", _text + 0x7857E8
	.equiv "agl::fx::DecalTrail::drawTrail()", _text + 0x78585C
	.equiv "agl::fx::setVertex()", _text + 0x78619C
	.equiv "agl::fx::DecalTrail::addTrail_core()", _text + 0x786470
	.equiv "agl::fx::DecalTrail::startSkipTrail()", _text + 0x786724
	.equiv "agl::fx::DecalTrail::addSkipTrail()", _text + 0x786868
	.equiv "agl::fx::DecalTrail::addTrail()", _text + 0x786AA0
	.equiv "agl::fx::DecalTrail::setSkipCount()", _text + 0x786CD0
	.equiv "agl::sdw::ShadowMap::ShadowMap()", _text + 0x786E28
	.equiv "agl::sdw::ShadowMap::freeDepth_()", _text + 0x787350
	.equiv "agl::sdw::ShadowMap::free()", _text + 0x7873B4
	.equiv "agl::sdw::ShadowMap::~ShadowMap()", _text + 0x78741C
	.equiv "agl::sdw::ShadowMap::initialize()", _text + 0x7874FC
	.equiv "agl::sdw::ShadowMap::setSize()", _text + 0x7875B0
	.equiv "agl::sdw::ShadowMap::allocDepthBuffer()", _text + 0x7875D4
	.equiv "agl::sdw::ShadowMap::beginDepthBuffer()", _text + 0x787950
	.equiv "agl::sdw::ShadowMap::endDepthBuffer()", _text + 0x787D5C
	.equiv "agl::sdw::ShadowMap::drawVariance()", _text + 0x787DE4
	.equiv "FUN_0E909058:agl::utl::IParameterIO::IParameterIO()", _text + 0x789058
	.equiv "FUN_0E909340:agl::utl::IParameterIO::IParameterIO()", _text + 0x789340
	.equiv "agl::utl::IParameterIO::applyResParameterArchive()", _text + 0x7897FC
	.equiv "agl::utl::ContextParameterBufferImpl::copyParameter()", _text + 0x789ADC
	.equiv "agl::utl::ContextParameterBufferImpl::copyParameterLerp()", _text + 0x789BA8
	.equiv "agl::utl::ContextParameterBufferImpl::copyParameterByIndex()", _text + 0x789C7C
	.equiv "agl::utl::ContextParameterBufferImpl::copyParameterToAllContext()", _text + 0x789D98
	.equiv "agl::utl::ContextParameterBufferImpl::ContextParameterBufferImpl()", _text + 0x789E18
	.equiv "agl::utl::ContextParameterBufferImpl::~ContextParameterBufferImpl()", _text + 0x789EC0
	.equiv "agl::utl::ContextParameterBufferImpl::initialize()", _text + 0x789FA0
	.equiv "agl::utl::ScreenShotMgr::ScreenShotMgr()", _text + 0x78A090
	.equiv "agl::utl::ScreenShotMgr::createInstance()", _text + 0x78A4A0
	.equiv "agl::utl::ScreenShotMgr::initialize()", _text + 0x78A5A0
	.equiv "agl::utl::ScreenShotMgr::capture_()", _text + 0x78A5BC
	.equiv "agl::utl::INamedObjMgr::INamedObjMgr()", _text + 0x78AEA0
	.equiv "agl::utl::INamedObjMgr::~INamedObjMgr()", _text + 0x78B00C
	.equiv "agl::utl::INamedObjMgr::Group::Group()", _text + 0x78B108
	.equiv "agl::utl::INamedObjMgr::Group::initialize()", _text + 0x78B308
	.equiv "agl::utl::INamedObjMgr::initialize()", _text + 0x78B3E0
	.equiv "agl::utl::INamedObjMgr::pushBackNamedObj()", _text + 0x78B4FC
	.equiv "agl::utl::INamedObjMgr::syncNameToIndex()", _text + 0x78B528
	.equiv "agl::utl::INamedObjMgr::updateList()", _text + 0x78B594
	.equiv "agl::utl::INamedObjMgr::Group::reset()", _text + 0x78B77C
	.equiv "agl::utl::INamedObjMgr::constructList()", _text + 0x78BA1C
	.equiv "agl::utl::INamedObjMgr::constructListByName()", _text + 0x78BC04
	.equiv "agl::utl::INamedObjMgr::constructListByGroup()", _text + 0x78BD48
	.equiv "agl::utl::IParameterList::setParameterListName_()", _text + 0x78BFC4
	.equiv "agl::utl::IParameterList::IParameterList()", _text + 0x78BFF8
	.equiv "agl::utl::IParameterList::addList()", _text + 0x78C068
	.equiv "agl::utl::IParameterList::addObj()", _text + 0x78C0E0
	.equiv "agl::utl::IParameterList::clearList()", _text + 0x78C164
	.equiv "agl::utl::IParameterList::clearObj()", _text + 0x78C194
	.equiv "agl::utl::IParameterList::removeList()", _text + 0x78C1C4
	.equiv "agl::utl::IParameterList::removeObj()", _text + 0x78C218
	.equiv "agl::utl::IParameterList::searchChildParameterObj_()", _text + 0x78C26C
	.equiv "agl::utl::IParameterList::searchResParameterObj_()", _text + 0x78C2E8
	.equiv "agl::utl::IParameterList::searchChildParameterList_()", _text + 0x78C424
	.equiv "agl::utl::IParameterList::searchResParameterList_()", _text + 0x78C4A0
	.equiv "agl::utl::IParameterList::applyResParameterObjB_()", _text + 0x78C5DC
	.equiv "agl::utl::IParameterList::applyResParameterListB_()", _text + 0x78C714
	.equiv "agl::utl::IParameterList::applyResParameterList_()", _text + 0x78C848
	.equiv "agl::utl::IParameterList::applyResParameterList()", _text + 0x78CB74
	.equiv "agl::utl::MultiFilter::freeResultTexture()", _text + 0x78CC68
	.equiv "agl::utl::MultiFilter::~MultiFilter()", _text + 0x78CCB4
	.equiv "agl::utl::MultiFilter::postRead_()", _text + 0x78CE1C
	.equiv "agl::utl::MultiFilter::drawFilter_()", _text + 0x78CF28
	.equiv "FUN_0E90CFEC:agl::utl::MultiFilter::draw()", _text + 0x78CFEC
	.equiv "FUN_0E90D234:agl::utl::MultiFilter::draw()", _text + 0x78D234
	.equiv "agl::utl::MultiFilter::calcResultInfo()", _text + 0x78D264
	.equiv "agl::utl::MultiFilter::initialize()", _text + 0x78D354
	.equiv "agl::utl::MultiFilter::MultiFilter()", _text + 0x78D590
	.equiv "agl::utl::ParameterBase::calcHash()", _text + 0x78DC98
	.equiv "agl::utl::ParameterBase::initializeListNode()", _text + 0x78DD34
	.equiv "FUN_0E90DD90:agl::utl::ParameterBase::ParameterBase()", _text + 0x78DD90
	.equiv "FUN_0E90DE2C:agl::utl::ParameterBase::ParameterBase()", _text + 0x78DE2C
	.equiv "agl::utl::ParameterBase::copyLerp()", _text + 0x78E020
	.equiv "agl::utl::ParameterBase::makeZero()", _text + 0x78E274
	.equiv "agl::utl::ParameterBase::isInterpolatable()", _text + 0x78E4A0
	.equiv "FUN_0E90E504:agl::utl::ParameterBase::applyResource()", _text + 0x78E504
	.equiv "FUN_0E90E640:agl::utl::ParameterBase::applyResource()", _text + 0x78E640
	.equiv "FUN_0E90F0AC:void_agl::utl::ParameterBase::copyLerp_()", _text + 0x78F0AC
	.equiv "FUN_0E90F184:void_agl::utl::ParameterBase::copyLerp_()", _text + 0x78F184
	.equiv "FUN_0E90F244:void_agl::utl::ParameterBase::copyLerp_()", _text + 0x78F244
	.equiv "FUN_0E90F318:void_agl::utl::ParameterBase::copyLerp_()", _text + 0x78F318
	.equiv "FUN_0E90F400:void_agl::utl::ParameterBase::copyLerp_()", _text + 0x78F400
	.equiv "FUN_0E90F49C:void_agl::utl::ParameterBase::copyLerp_()", _text + 0x78F49C
	.equiv "FUN_0E90F550:void_agl::utl::ParameterCurve::reset()", _text + 0x78F550
	.equiv "FUN_0E90F5F4:void_agl::utl::ParameterCurve::reset()", _text + 0x78F5F4
	.equiv "FUN_0E90FBAC:void_agl::utl::ParameterCurve::setCurve()", _text + 0x78FBAC
	.equiv "agl::utl::DynamicTextureAllocator::DynamicTextureAllocator()", _text + 0x78FCB8
	.equiv "agl::utl::DynamicTextureAllocator::createInstance()", _text + 0x78FD78
	.equiv "agl::utl::DynamicTextureAllocator::~DynamicTextureAllocator()", _text + 0x78FE98
	.equiv "agl::utl::DynamicTextureAllocator::initialize()", _text + 0x78FF80
	.equiv "agl::utl::DynamicTextureAllocator::setDebugHeap()", _text + 0x7901D0
	.equiv "agl::utl::DynamicTextureAllocator::isContextValid_()", _text + 0x7901F8
	.equiv "agl::utl::DynamicTextureAllocator::isValid_()", _text + 0x790280
	.equiv "agl::utl::DynamicTextureAllocator::alloc_()", _text + 0x790338
	.equiv "agl::utl::DynamicTextureAllocator::alloc()", _text + 0x7907AC
	.equiv "agl::utl::DynamicTextureAllocator::allocArray()", _text + 0x790858
	.equiv "agl::utl::DynamicTextureAllocator::allocCube()", _text + 0x79090C
	.equiv "agl::utl::DynamicTextureAllocator::allocWithoutContext()", _text + 0x7909B8
	.equiv "agl::utl::DynamicTextureAllocator::allocArrayWithoutContext()", _text + 0x790A64
	.equiv "agl::utl::DynamicTextureAllocator::allocMultiSampleWithoutContext()", _text + 0x790B14
	.equiv "agl::utl::DynamicTextureAllocator::free_()", _text + 0x790BCC
	.equiv "agl::utl::DynamicTextureAllocator::free()", _text + 0x790C30
	.equiv "agl::utl::DynamicTextureAllocator::freeWithoutContext()", _text + 0x790D08
	.equiv "agl::utl::DynamicTextureAllocator::getUseSize()", _text + 0x790D68
	.equiv "agl::utl::DebugTexturePage::DebugTexturePage()", _text + 0x790FF8
	.equiv "agl::utl::DebugTexture::DebugTexture()", _text + 0x791350
	.equiv "agl::utl::VertexAttributeHolder::VertexAttributeHolder()", _text + 0x7916EC
	.equiv "agl::utl::VertexAttributeHolder::createInstance()", _text + 0x791750
	.equiv "agl::utl::VertexAttributeHolder::initialize()", _text + 0x7918CC
	.equiv "agl::utl::PrimitiveShape::PrimitiveShape()", _text + 0x791BD0
	.equiv "agl::utl::PrimitiveShape::createInstance()", _text + 0x792008
	.equiv "agl::utl::PrimitiveShape::~PrimitiveShape()", _text + 0x7920A4
	.equiv "agl::utl::PrimitiveShape::setUpStreams_()", _text + 0x792A10
	.equiv "agl::utl::PrimitiveShape::calcIdxArrayNumCircle_()", _text + 0x792A84
	.equiv "agl::utl::PrimitiveShape::setupVtxBufferCircle()", _text + 0x792AC0
	.equiv "agl::utl::PrimitiveShape::calcIdxArrayNumSphere_()", _text + 0x792CD8
	.equiv "agl::utl::PrimitiveShape::setupVtxBufferSphere()", _text + 0x792E0C
	.equiv "agl::utl::PrimitiveShape::calcVtxArrayNumHemisphere()", _text + 0x79320C
	.equiv "agl::utl::PrimitiveShape::calcIdxArrayNumHemisphere_()", _text + 0x793220
	.equiv "agl::utl::PrimitiveShape::setupVtxBufferHemisphere()", _text + 0x79335C
	.equiv "agl::utl::PrimitiveShape::calcVtxArrayNumCylinder()", _text + 0x79371C
	.equiv "agl::utl::PrimitiveShape::calcIdxArrayNumCylinder_()", _text + 0x79372C
	.equiv "agl::utl::PrimitiveShape::setupVtxBufferCylinder()", _text + 0x79381C
	.equiv "agl::utl::PrimitiveShape::calcVtxArrayNumCone()", _text + 0x793C9C
	.equiv "agl::utl::PrimitiveShape::calcIdxArrayNumCone_()", _text + 0x793CAC
	.equiv "agl::utl::PrimitiveShape::setupVtxBufferCone()", _text + 0x793DB0
	.equiv "agl::utl::PrimitiveShape::calcIdxArrayNumTorus_()", _text + 0x79422C
	.equiv "agl::utl::PrimitiveShape::calcTorusCircleCenter_()", _text + 0x794250
	.equiv "agl::utl::PrimitiveShape::setupVtxBufferTorus()", _text + 0x79441C
	.equiv "agl::utl::PrimitiveShape::setUpStreamQuad_()", _text + 0x794D44
	.equiv "agl::utl::PrimitiveShape::setUpStreamQuadTriangle_()", _text + 0x7951A8
	.equiv "agl::utl::PrimitiveShape::setUpStreamCube_()", _text + 0x7955CC
	.equiv "agl::utl::PrimitiveShape::setUpStreamCircle_()", _text + 0x795BF0
	.equiv "agl::utl::PrimitiveShape::setUpStreamSphere_()", _text + 0x795DF8
	.equiv "agl::utl::PrimitiveShape::setUpStreamHemisphere_()", _text + 0x796018
	.equiv "agl::utl::PrimitiveShape::setUpStreamCylinder_()", _text + 0x796238
	.equiv "agl::utl::PrimitiveShape::setUpStreamCone_()", _text + 0x796554
	.equiv "agl::utl::PrimitiveShape::setUpStreamTorus_()", _text + 0x796870
	.equiv "agl::utl::PrimitiveShape::initialize()", _text + 0x796BE8
	.equiv "void_agl::utl::PrimitiveShape::setupIdxStreamCircle_()", _text + 0x796EB8
	.equiv "void_agl::utl::PrimitiveShape::setupIdxStreamSphere_()", _text + 0x79703C
	.equiv "void_agl::utl::PrimitiveShape::setupIdxStreamHemisphere_()", _text + 0x7974B0
	.equiv "void_agl::utl::PrimitiveShape::setupIdxStreamCylinder_()", _text + 0x79788C
	.equiv "void_agl::utl::PrimitiveShape::setupIdxStreamCone_()", _text + 0x797BB4
	.equiv "void_agl::utl::PrimitiveShape::setupIdxStreamTorus_()", _text + 0x797ED0
	.equiv "agl::utl::ResParameterObj::modifyEndianObj()", _text + 0x7980B8
	.equiv "agl::utl::ResParameterList::getResParameterList()", _text + 0x798190
	.equiv "agl::utl::ResParameterList::getResParameterObj()", _text + 0x7981C0
	.equiv "agl::utl::ResParameterList::modifyEndianList()", _text + 0x798218
	.equiv "agl::utl::ResParameterArchive::ResParameterArchive()", _text + 0x7982F4
	.equiv "agl::utl::PrimitiveTexture::PrimitiveTexture()", _text + 0x7985A0
	.equiv "agl::utl::PrimitiveTexture::createInstance()", _text + 0x7985FC
	.equiv "agl::utl::PrimitiveTexture::~PrimitiveTexture()", _text + 0x79871C
	.equiv "agl::utl::PrimitiveTexture::initializeMipLevelTexture_()", _text + 0x7987AC
	.equiv "agl::utl::PrimitiveTexture::initialize()", _text + 0x7988A4
	.equiv "FUN_0E918E54:agl::utl::INamedObjIndex::INamedObjIndex()", _text + 0x798E54
	.equiv "FUN_0E918FF4:agl::utl::INamedObjIndex::INamedObjIndex()", _text + 0x798FF4
	.equiv "agl::utl::INamedObjIndex::bind()", _text + 0x7992CC
	.equiv "agl::utl::INamedObjIndex::~INamedObjIndex()", _text + 0x79935C
	.equiv "agl::utl::INamedObjIndex::syncNameToIndex()", _text + 0x7993D4
	.equiv "agl::utl::IParameterObj::IParameterObj()", _text + 0x7997BC
	.equiv "agl::utl::IParameterObj::pushBackListNode()", _text + 0x799810
	.equiv "agl::utl::IParameterObj::copy_()", _text + 0x799834
	.equiv "agl::utl::IParameterObj::copyLerp_()", _text + 0x7998B4
	.equiv "agl::utl::IParameterObj::searchParameter_()", _text + 0x799954
	.equiv "agl::utl::IParameterObj::copy()", _text + 0x79997C
	.equiv "agl::utl::IParameterObj::copyLerp()", _text + 0x799A04
	.equiv "agl::utl::IParameterObj::applyResParameterObj_()", _text + 0x799AC8
	.equiv "agl::utl::IParameterObj::applyResParameterObj()", _text + 0x799F28
	.equiv "agl::utl::ImageFilter2D::draw()", _text + 0x79A044
	.equiv "agl::utl::ImageFilter2D::drawTexture()", _text + 0x79A484
	.equiv "agl::utl::ImageFilter2D::drawTextureMipLevel()", _text + 0x79A574
	.equiv "agl::utl::ImageFilter2D::drawTextureTexCoord()", _text + 0x79A6DC
	.equiv "agl::utl::ImageFilter2D::drawTextureMSAA()", _text + 0x79A8C0
	.equiv "agl::utl::ImageFilter2D::getReduceProgram_()", _text + 0x79A9C4
	.equiv "agl::utl::ImageFilter2D::drawReduce()", _text + 0x79AA08
	.equiv "agl::utl::ImageFilter2D::getBlurProgram_()", _text + 0x79ABA4
	.equiv "agl::utl::ImageFilter2D::drawBlur()", _text + 0x79AC04
	.equiv "agl::utl::ImageFilter2D::drawGaussian()", _text + 0x79AD20
	.equiv "agl::utl::ImageFilter2D::drawColorDrift()", _text + 0x79AE5C
	.equiv "FUN_0E91B024:agl::utl::ImageFilter2D::drawCubemapGaussian()", _text + 0x79B024
	.equiv "FUN_0E91B3B8:agl::utl::ImageFilter2D::drawCubemapGaussian()", _text + 0x79B3B8
	.equiv "agl::utl::ImageFilter2D::drawCubemapIrradiance()", _text + 0x79B79C
	.equiv "agl::utl::ImageFilter2D::drawBC()", _text + 0x79BAB4
	.equiv "agl::utl::ImageFilter2D::drawQuadTriangle()", _text + 0x79BECC
	.equiv "agl::utl::ImageFilter2D::drawTextureQuadTriangle()", _text + 0x79C05C
	.equiv "agl::utl::ImageFilter2D::drawTextureGammaQuadTriangle()", _text + 0x79C140
	.equiv "agl::utl::ImageFilter2D::drawNormalMap()", _text + 0x79C2E0
	.equiv "agl::utl::ImageFilter2D::drawDepthMaskQuadTriangle()", _text + 0x79C4CC
	.equiv "agl::utl::ImageFilter2D::drawLuminanceQuadTriangle()", _text + 0x79C5B0
	.equiv "agl::utl::DevTools::beginDrawImm()", _text + 0x79C794
	.equiv "agl::utl::DevTools::drawLineImm()", _text + 0x79C9D8
	.equiv "agl::utl::DevTools::drawTexture_()", _text + 0x79CB54
	.equiv "agl::utl::DevTools::drawTexture()", _text + 0x79CDA8
	.equiv "agl::utl::DevTools::drawDepthGradation()", _text + 0x79CEB0
	.equiv "agl::utl::DevTools::drawColorQuad()", _text + 0x79E42C
	.equiv "agl::utl::DevTools::drawTextureCubeArray()", _text + 0x79E780
	.equiv "agl::utl::DevTools::drawTextureCubeMap()", _text + 0x79EA50
	.equiv "agl::utl::DevTools::drawTextureTexCoord()", _text + 0x79EA60
	.equiv "agl::utl::MultiFilterUnit::~MultiFilterUnit()", _text + 0x79ED48
	.equiv "agl::utl::Trimming::~Trimming()", _text + 0x79ED74
	.equiv "agl::utl::MultiFilterUnit::MultiFilterUnit()", _text + 0x79EDE0
	.equiv "agl::utl::ReduceFilter::ReduceFilter()", _text + 0x79F02C
	.equiv "agl::utl::ExpandFilter::ExpandFilter()", _text + 0x79F1B8
	.equiv "agl::utl::BlurFilter::BlurFilter()", _text + 0x79F344
	.equiv "agl::utl::ColorCorrectionFilter::ColorCorrectionFilter()", _text + 0x79F51C
	.equiv "agl::utl::ChangeFormat::ChangeFormat()", _text + 0x79F5A4
	.equiv "agl::utl::ColorDrift::ColorDrift()", _text + 0x79F854
	.equiv "agl::utl::Trimming::Trimming()", _text + 0x79FA48
	.equiv "agl::utl::MultiFilterUnit::create()", _text + 0x79FBD0
	.equiv "agl::utl::MultiFilterUnit::getFilterName()", _text + 0x79FD8C
	.equiv "agl::utl::MultiFilterUnit::initialize()", _text + 0x79FF3C
	.equiv "agl::utl::MultiFilterUnit::resetParameters()", _text + 0x79FFE8
	.equiv "agl::utl::MultiFilterUnit::inactivate()", _text + 0x79FFF8
	.equiv "agl::utl::MultiFilterUnit::destroy()", _text + 0x7A008C
	.equiv "agl::utl::MultiFilterUnit::activate()", _text + 0x7A00CC
	.equiv "agl::utl::ReduceFilter::drawReduce_()", _text + 0x7A015C
	.equiv "agl::utl::ExpandFilter::drawExpand_()", _text + 0x7A0868
	.equiv "agl::utl::BlurFilter::drawBlur_()", _text + 0x7A0F88
	.equiv "agl::utl::ColorCorrectionFilter::doDraw_()", _text + 0x7A1540
	.equiv "agl::utl::ColorDrift::doDraw_()", _text + 0x7A19AC
	.equiv "agl::utl::Trimming::doDraw_()", _text + 0x7A1E0C
	.equiv "agl::utl::Trimming::doCalcResultInfo_()", _text + 0x7A2308
	.equiv "agl::utl::INamedObj::INamedObj()", _text + 0x7A2620
	.equiv "agl::utl::INamedObj::getDefaultGroupName()", _text + 0x7A2674
	.equiv "agl::lght::LightMapMgr::CPUTexture::CPUTexture()", _text + 0x7A2720
	.equiv "agl::lght::LightMapMgr::LightMapMgr()", _text + 0x7A277C
	.equiv "agl::lght::LightMapMgr::CPUTexture::~CPUTexture()", _text + 0x7A2A04
	.equiv "agl::lght::LightMapMgr::~LightMapMgr()", _text + 0x7A2A60
	.equiv "agl::lght::LightMapMgr::updateLUT_()", _text + 0x7A2BCC
	.equiv "agl::lght::LightMapMgr::createNormalMap_()", _text + 0x7A2EDC
	.equiv "agl::lght::LightMapMgr::searchIndex()", _text + 0x7A36E8
	.equiv "agl::lght::LightMapMgr::constructMemory_()", _text + 0x7A37F0
	.equiv "agl::lght::LightMapMgr::constructList_()", _text + 0x7A38FC
	.equiv "agl::lght::LightMapMgr::initialize()", _text + 0x7A3B84
	.equiv "agl::lght::LightMapMgr::update()", _text + 0x7A47BC
	.equiv "agl::lght::LightMapMgr::updateViewGPU()", _text + 0x7A4A90
	.equiv "agl::lght::LightMapMgr::draw()", _text + 0x7A4B40
	.equiv "agl::lght::LightMapMgr::CreateArg::CreateArg()", _text + 0x7A4CB0
	.equiv "FUN_0E925318:float_agl::utl::ParameterCurve::evaluateUnit()", _text + 0x7A5318
	.equiv "agl::lght::LightPrePass::LightPrePass()", _text + 0x7A5344
	.equiv "agl::lght::LightPrePass::~LightPrePass()", _text + 0x7A586C
	.equiv "agl::lght::LightPrePass::changeTextureFilter_()", _text + 0x7A5A60
	.equiv "agl::lght::LightPrePass::updateSpecPowTex_()", _text + 0x7A5AC8
	.equiv "agl::lght::LightPrePass::initialize()", _text + 0x7A5F2C
	.equiv "agl::lght::LightPrePass::calc()", _text + 0x7A6660
	.equiv "agl::lght::LightPrePass::calcContext_()", _text + 0x7A6700
	.equiv "agl::lght::LightPrePass::calcContext()", _text + 0x7A6A6C
	.equiv "agl::lght::LightPrePass::isSkipRendering_()", _text + 0x7A6BB0
	.equiv "agl::lght::LightPrePass::updateViewGPU()", _text + 0x7A6BF0
	.equiv "agl::lght::LightPrePass::clearLightBuffer()", _text + 0x7A6E64
	.equiv "agl::lght::LightPrePass::createLightBuffer_()", _text + 0x7A6FC4
	.equiv "agl::lght::LightPrePass::applyGraphicsContext()", _text + 0x7A7540
	.equiv "agl::lght::LightPrePass::draw_()", _text + 0x7A75E8
	.equiv "agl::lght::LightPrePass::endDraw_()", _text + 0x7A7788
	.equiv "agl::lght::LightPrePass::draw()", _text + 0x7A77EC
	.equiv "agl::lght::LightPrePass::release()", _text + 0x7A7CF8
	.equiv "agl::lght::LightPrePass::setPointLight()", _text + 0x7A7DA8
	.equiv "agl::lght::LightPrePass::setSpotLight()", _text + 0x7A7FA4
	.equiv "agl::lght::LightPrePass::setSpotLightShadowMap()", _text + 0x7A822C
	.equiv "agl::lght::LightPrePass::setSpotLightShadowType()", _text + 0x7A8374
	.equiv "agl::lght::LightPrePass::setProjLight()", _text + 0x7A8570
	.equiv "agl::lght::LightPrePass::setProjLight_Ortho()", _text + 0x7A8AE0
	.equiv "agl::lght::LightPrePass::setProjLightShadowMap()", _text + 0x7A9088
	.equiv "agl::lght::LightPrePass::getShader()", _text + 0x7A93E8
	.equiv "agl::lght::LightPrePass::CreateArg::CreateArg()", _text + 0x7A947C
	.equiv "FUN_0E92BE94:float_agl::utl::ParameterCurve::evaluateUnit()", _text + 0x7ABE94
	.equiv "agl::IndexStream::IndexStream()", _text + 0x7ABEC0
	.equiv "agl::IndexStream::cleanUp_()", _text + 0x7ABF1C
	.equiv "agl::IndexStream::~IndexStream()", _text + 0x7ABF30
	.equiv "agl::IndexStream::flushCPUCacheNoSync()", _text + 0x7ABF70
	.equiv "agl::IndexStream::setUpStream_()", _text + 0x7ABF88
	.equiv "agl::TextureDataInitializerRAW::initialize()", _text + 0x7ABFDC
	.equiv "agl::TextureDataInitializerRAW::copyTileImage()", _text + 0x7AC120
	.equiv "agl::TextureDataInitializerTGA::TGAData::TGAData()", _text + 0x7AC4B0
	.equiv "agl::TextureDataInitializerTGA::TGAData::copy()", _text + 0x7AC704
	.equiv "agl::TextureDataInitializerTGA::initializeTiling_()", _text + 0x7AC95C
	.equiv "agl::TextureDataInitializerTGA::initialize()", _text + 0x7ACA98
	.equiv "agl::RenderTargetColor::onApplyTextureData_()", _text + 0x7ACB18
	.equiv "FUN_0E92CB70:agl::RenderTargetColor::RenderTargetColor()", _text + 0x7ACB70
	.equiv "FUN_0E92CC1C:agl::RenderTargetColor::RenderTargetColor()", _text + 0x7ACC1C
	.equiv "agl::RenderTargetColor::invalidateGPUCache()", _text + 0x7ACCD0
	.equiv "agl::RenderTargetColor::initRegs_()", _text + 0x7ACD48
	.equiv "agl::RenderTargetDepth::onApplyTextureData_()", _text + 0x7ACD98
	.equiv "FUN_0E92CDD0:agl::RenderTargetDepth::RenderTargetDepth()", _text + 0x7ACDD0
	.equiv "FUN_0E92CE84:agl::RenderTargetDepth::RenderTargetDepth()", _text + 0x7ACE84
	.equiv "agl::RenderTargetDepth::invalidateGPUCache()", _text + 0x7ACF3C
	.equiv "agl::RenderTargetDepth::initRegs_()", _text + 0x7ACFB4
	.equiv "agl::ShaderOptimizeInfo::setDefault()", _text + 0x7AD028
	.equiv "agl::ShaderOptimizeInfo::ShaderOptimizeInfo()", _text + 0x7AD074
	.equiv "agl::DrawContextMgr::DrawContextMgr()", _text + 0x7AD0E4
	.equiv "agl::DrawContextMgr::createInstance()", _text + 0x7AD184
	.equiv "agl::DrawContextMgr::getContextId_()", _text + 0x7AD2A0
	.equiv "FUN_0E92D3E0:FID_conflict:agl::DrawContextMgr::unlockCommandGX2()", _text + 0x7AD3E0
	.equiv "FUN_0E92D3F0:FID_conflict:agl::DrawContextMgr::unlockCommandGX2()", _text + 0x7AD3F0
	.equiv "agl::ShaderProgramArchive::destroyResFile_()", _text + 0x7AD654
	.equiv "<unnamed>::createShaderProgram()", _text + 0x7AD948
	.equiv "agl::ShaderProgramArchive::ShaderSource::ShaderSource()", _text + 0x7ADABC
	.equiv "agl::ShaderProgramArchive::ShaderProgramEx::ShaderProgramEx()", _text + 0x7ADB90
	.equiv "agl::ShaderProgramArchive::ShaderSource::initialize()", _text + 0x7ADC48
	.equiv "agl::ShaderProgramArchive::ShaderProgramEx::initialize()", _text + 0x7ADDD8
	.equiv "agl::ShaderProgramArchive::ShaderSource::expand()", _text + 0x7AE088
	.equiv "agl::ShaderProgramArchive::ShaderProgramEx::updateRawText()", _text + 0x7AE1B0
	.equiv "agl::ShaderProgramArchive::updateCompileInfo()", _text + 0x7AE248
	.equiv "agl::ShaderProgramArchive::setResShaderArchive_()", _text + 0x7AE318
	.equiv "agl::ShaderProgramArchive::createWithOption()", _text + 0x7AE950
	.equiv "agl::ShaderProgramArchive::ShaderProgramEx::updateAnalyze()", _text + 0x7AEFC4
	.equiv "agl::ShaderProgramArchive::setUp_()", _text + 0x7AF070
	.equiv "agl::ShaderProgramArchive::setUp()", _text + 0x7AF190
	.equiv "agl::ShaderProgramArchive::searchShaderProgramIndex()", _text + 0x7AF1CC
	.equiv "int_agl::ShaderProgram::VariationBuffer::calcVariationIndex()", _text + 0x7AF620
	.equiv "agl::RenderBuffer::setRenderTargetColorNullAll()", _text + 0x7AF660
	.equiv "agl::RenderBuffer::initialize_()", _text + 0x7AF6A0
	.equiv "FUN_0E92F6C8:agl::RenderBuffer::RenderBuffer()", _text + 0x7AF6C8
	.equiv "FUN_0E92F7B8:agl::RenderBuffer::RenderBuffer()", _text + 0x7AF7B8
	.equiv "agl::RenderBuffer::~RenderBuffer()", _text + 0x7AF878
	.equiv "agl::RenderBuffer::clear()", _text + 0x7AFB68
	.equiv "agl::RenderBuffer::initializeBoundRenderBuffer()", _text + 0x7AFE04
	.equiv "agl::RenderBuffer::bind_()", _text + 0x7AFF54
	.equiv "agl::ShaderProgram::ShaderProgram()", _text + 0x7B01C8
	.equiv "agl::ShaderProgram::destroyAttribute()", _text + 0x7B0320
	.equiv "agl::ShaderProgram::destroyUniform()", _text + 0x7B03F0
	.equiv "agl::ShaderProgram::destroySamplerLocation()", _text + 0x7B04C0
	.equiv "agl::ShaderProgram::destroyUniformBlock()", _text + 0x7B0590
	.equiv "agl::ShaderProgram::VariationBuffer::VariationBuffer()", _text + 0x7B08C4
	.equiv "agl::ShaderProgram::initialize()", _text + 0x7B0960
	.equiv "agl::ShaderProgram::setVariationMacroValue()", _text + 0x7B0CF0
	.equiv "FUN_0E930EB4:agl::ShaderProgram::getShader()", _text + 0x7B0EB4
	.equiv "FUN_0E930EE8:agl::ShaderProgram::getShader()", _text + 0x7B0EE8
	.equiv "agl::ShaderProgram::createAttribute()", _text + 0x7B0F1C
	.equiv "agl::ShaderProgram::setAttributeName()", _text + 0x7B10E8
	.equiv "agl::ShaderProgram::createUniform()", _text + 0x7B1154
	.equiv "agl::ShaderProgram::setUniformName()", _text + 0x7B1378
	.equiv "agl::ShaderProgram::createSamplerLocation()", _text + 0x7B13E4
	.equiv "agl::ShaderProgram::setSamplerLocationName()", _text + 0x7B1608
	.equiv "agl::ShaderProgram::createUniformBlock()", _text + 0x7B1674
	.equiv "agl::ShaderProgram::setUniformBlockName()", _text + 0x7B1898
	.equiv "agl::ShaderProgram::VariationBuffer::getMacroAndValueArray()", _text + 0x7B1904
	.equiv "agl::ShaderProgram::setUpForVariation_()", _text + 0x7B19E4
	.equiv "agl::ShaderProgram::setShaderGX2_()", _text + 0x7B1AA0
	.equiv "agl::ShaderProgram::updateUniformLocation()", _text + 0x7B1B14
	.equiv "agl::ShaderProgram::updateUniformBlockLocation()", _text + 0x7B1B7C
	.equiv "agl::ShaderProgram::updateAttributeLocation()", _text + 0x7B1BE4
	.equiv "agl::ShaderProgram::updateSamplerLocation()", _text + 0x7B1C4C
	.equiv "agl::ShaderProgram::forceValidate_()", _text + 0x7B1CB4
	.equiv "agl::ShaderProgram::setUpAllVariation()", _text + 0x7B1E70
	.equiv "agl::ShaderProgram::reserveSetUpAllVariation()", _text + 0x7B1F8C
	.equiv "agl::ShaderProgram::VariationBuffer::searchShaderProgramIndex()", _text + 0x7B1FF0
	.equiv "void_agl::ShaderProgram::VariationBuffer::getMacroValueIndexArray()", _text + 0x7B22F8
	.equiv "agl::VertexBuffer::VertexBuffer()", _text + 0x7B233C
	.equiv "agl::VertexBuffer::cleanUp_()", _text + 0x7B23B4
	.equiv "agl::VertexBuffer::~VertexBuffer()", _text + 0x7B2408
	.equiv "agl::VertexBuffer::setUpBuffer()", _text + 0x7B2448
	.equiv "agl::VertexBuffer::setUpStream()", _text + 0x7B24AC
	.equiv "agl::VertexBuffer::flushCPUCacheNoSync()", _text + 0x7B25E0
	.equiv "agl::ResShaderBinary::modifyBinaryEndian()", _text + 0x7B263C
	.equiv "agl::ResShaderBinary::setUp()", _text + 0x7B27DC
	.equiv "agl::ResShaderVariation::getID()", _text + 0x7B29B0
	.equiv "agl::ResShaderVariation::getValue()", _text + 0x7B29FC
	.equiv "agl::ResShaderProgram::getResShaderMacroArray()", _text + 0x7B2A44
	.equiv "agl::ResShaderProgram::getResShaderVariationArray()", _text + 0x7B2A7C
	.equiv "agl::ResShaderProgram::getResShaderSymbolArray()", _text + 0x7B2AA8
	.equiv "agl::ResBinaryShaderProgram::getResShaderSymbolArray()", _text + 0x7B2B2C
	.equiv "<unnamed>::modifyEndianResSymbolArray()", _text + 0x7B2B78
	.equiv "agl::ResShaderArchive::setUp()", _text + 0x7B2C3C
	.equiv "agl::ResBinaryShaderArchive::setUp()", _text + 0x7B3188
	.equiv "FUN_0E9336AC:FID_conflict:::modifyBinaryAndNamePtr()", _text + 0x7B36AC
	.equiv "FUN_0E9336EC:::modifyBinaryAndNamePtr()", _text + 0x7B36EC
	.equiv "FUN_0E93372C:FID_conflict:::modifyBinaryAndNamePtr()", _text + 0x7B372C
	.equiv "FUN_0E93376C:::modifyBinaryAndNamePtr()", _text + 0x7B376C
	.equiv "agl::UniformLocation::search()", _text + 0x7B37AC
	.equiv "agl::SamplerLocation::search()", _text + 0x7B3B0C
	.equiv "agl::UniformBlockLocation::search()", _text + 0x7B3E0C
	.equiv "agl::AttributeLocation::search()", _text + 0x7B410C
	.equiv "agl::TextureSampler::SamplerObject::SamplerObject()", _text + 0x7B41FC
	.equiv "agl::TextureSampler::applyTextureData_()", _text + 0x7B42CC
	.equiv "FUN_0E934394:agl::TextureSampler::TextureSampler()", _text + 0x7B4394
	.equiv "FUN_0E934540:agl::TextureSampler::TextureSampler()", _text + 0x7B4540
	.equiv "agl::TextureSampler::~TextureSampler()", _text + 0x7B46F0
	.equiv "agl::TextureSampler::initTexture_()", _text + 0x7B4704
	.equiv "agl::TextureSampler::initWrap_()", _text + 0x7B476C
	.equiv "agl::TextureSampler::initFilter_()", _text + 0x7B4780
	.equiv "agl::TextureSampler::initMipParam_()", _text + 0x7B47D8
	.equiv "agl::TextureSampler::initBorderColor_()", _text + 0x7B47F8
	.equiv "agl::TextureSampler::initRegs_()", _text + 0x7B4914
	.equiv "agl::TextureSampler::activate()", _text + 0x7B49BC
	.equiv "agl::TextureData::TextureData()", _text + 0x7B4B28
	.equiv "agl::TextureData::setMipLevelNum()", _text + 0x7B4BBC
	.equiv "agl::TextureData::invalidateGPUCache()", _text + 0x7B4C04
	.equiv "agl::TextureData::copyTo_()", _text + 0x7B4C60
	.equiv "agl::TextureData::initializeSize_()", _text + 0x7B4CBC
	.equiv "agl::TextureData::initialize_()", _text + 0x7B4DFC
	.equiv "FUN_0E934F5C:agl::TextureData::compressTo_()", _text + 0x7B4F5C
	.equiv "FUN_0E935508:agl::TextureData::compressTo_()", _text + 0x7B5508
	.equiv "agl::TextureData::compressToAll()", _text + 0x7B550C
	.equiv "agl::TextureData::isSRGB()", _text + 0x7B55CC
	.equiv "agl::TextureData::forceChangeUNormToSRGB()", _text + 0x7B55D4
	.equiv "agl::TextureData::isEnableChangeToSRGB()", _text + 0x7B568C
	.equiv "agl::TextureData::forceChangeSRGBToUNorm()", _text + 0x7B56C0
	.equiv "FUN_0E935768:agl::TextureData::initializeFromSurface()", _text + 0x7B5768
	.equiv "agl::UniformBlock::UniformBlock()", _text + 0x7B5834
	.equiv "agl::UniformBlock::destroy()", _text + 0x7B58C4
	.equiv "agl::UniformBlock::~UniformBlock()", _text + 0x7B5968
	.equiv "agl::UniformBlock::startDeclare()", _text + 0x7B59C4
	.equiv "FUN_0E935A5C:agl::UniformBlock::declare()", _text + 0x7B5A5C
	.equiv "FUN_0E935B84:agl::UniformBlock::declare()", _text + 0x7B5B84
	.equiv "agl::UniformBlock::calcBufferSize()", _text + 0x7B5BA4
	.equiv "agl::UniformBlock::setBuffer()", _text + 0x7B5BC8
	.equiv "FUN_0E935BD8:agl::UniformBlock::create()", _text + 0x7B5BD8
	.equiv "FUN_0E935C48:agl::UniformBlock::create()", _text + 0x7B5C48
	.equiv "agl::UniformBlock::createDirect()", _text + 0x7B5C84
	.equiv "agl::UniformBlock::copyTo()", _text + 0x7B5C94
	.equiv "agl::UniformBlock::fill()", _text + 0x7B5CFC
	.equiv "agl::UniformBlock::dcbz()", _text + 0x7B5D20
	.equiv "agl::UniformBlock::flush()", _text + 0x7B5D48
	.equiv "agl::UniformBlock::flushNoSync()", _text + 0x7B5DAC
	.equiv "agl::UniformBlock::setData_()", _text + 0x7B5E10
	.equiv "agl::ModifyEndianU32()", _text + 0x7B5E94
	.equiv "agl::VertexAttribute::VertexAttribute()", _text + 0x7B5F0C
	.equiv "agl::VertexAttribute::destroy()", _text + 0x7B5FA8
	.equiv "agl::VertexAttribute::~VertexAttribute()", _text + 0x7B6040
	.equiv "agl::VertexAttribute::cleanUp()", _text + 0x7B609C
	.equiv "agl::VertexAttribute::create()", _text + 0x7B6120
	.equiv "agl::VertexAttribute::disableVertexBuffer_()", _text + 0x7B61E4
	.equiv "agl::VertexAttribute::enableVertexBuffer_()", _text + 0x7B625C
	.equiv "agl::VertexAttribute::setVertexStream()", _text + 0x7B6320
	.equiv "agl::VertexAttribute::setUp()", _text + 0x7B6434
	.equiv "agl::VertexAttribute::activate()", _text + 0x7B661C
	.equiv "FID_conflict:agl::TextureFormatInfo::getComponentNum()", _text + 0x7B6700
	.equiv "agl::TextureFormatInfo::getComponentNum()", _text + 0x7B6714
	.equiv "agl::TextureFormatInfo::getComponentBitSize()", _text + 0x7B6728
	.equiv "agl::TextureFormatInfo::getComponentOrder()", _text + 0x7B6740
	.equiv "FUN_0E93675C:FID_conflict:agl::TextureFormatInfo::isFloat()", _text + 0x7B675C
	.equiv "FUN_0E936770:FID_conflict:agl::TextureFormatInfo::isFloat()", _text + 0x7B6770
	.equiv "FUN_0E936784:FID_conflict:agl::TextureFormatInfo::isFloat()", _text + 0x7B6784
	.equiv "agl::TextureFormatInfo::getDefaultCompSel()", _text + 0x7B67AC
	.equiv "agl::DisplayList::setBuffer()", _text + 0x7B6DB4
	.equiv "agl::DisplayList::clear()", _text + 0x7B6DDC
	.equiv "agl::DisplayList::DisplayList()", _text + 0x7B6E08
	.equiv "agl::DisplayList::destroy()", _text + 0x7B6EA8
	.equiv "agl::DisplayList::~DisplayList()", _text + 0x7B6EEC
	.equiv "agl::DisplayList::copyTo()", _text + 0x7B6F48
	.equiv "agl::DisplayList::beginDisplayList()", _text + 0x7B6F64
	.equiv "agl::DisplayList::endDisplayList()", _text + 0x7B6FA4
	.equiv "agl::DisplayList::beginDisplayListBuffer()", _text + 0x7B700C
	.equiv "agl::DisplayList::endDisplayListBuffer()", _text + 0x7B7070
	.equiv "agl::DisplayList::dump()", _text + 0x7B7124
	.equiv "agl::lyr::Renderer::Renderer()", _text + 0x7B728C
	.equiv "agl::lyr::Renderer::createInstance()", _text + 0x7B7408
	.equiv "agl::lyr::Renderer::~Renderer()", _text + 0x7B7528
	.equiv "agl::lyr::Renderer::initialize()", _text + 0x7B7738
	.equiv "agl::lyr::Renderer::calc()", _text + 0x7B7AD8
	.equiv "agl::lyr::Renderer::isDisplayList_()", _text + 0x7B8280
	.equiv "agl::lyr::Renderer::calcDL()", _text + 0x7B8294
	.equiv "agl::lyr::Renderer::sortDL()", _text + 0x7B8464
	.equiv "agl::lyr::Renderer::calcGPU()", _text + 0x7B84A0
	.equiv "agl::lyr::Renderer::draw()", _text + 0x7B8510
	.equiv "agl::lyr::Renderer::drawImmediate()", _text + 0x7B869C
	.equiv "agl::lyr::Renderer::setCallback()", _text + 0x7B8710
	.equiv "agl::lyr::Renderer::searchLayerIndex()", _text + 0x7B8768
	.equiv "agl::lyr::Renderer::removeLayer()", _text + 0x7B87B8
	.equiv "agl::lyr::Renderer::getJobQueue()", _text + 0x7B892C
	.equiv "agl::lyr::Renderer::getDisplayName()", _text + 0x7B8A54
	.equiv "agl::lyr::Renderer::initLayer_()", _text + 0x7B8AAC
	.equiv "agl::lyr::Renderer::CreateArg::CreateArg()", _text + 0x7B8C10
	.equiv "agl::lyr::Renderer::CreateArg::setDisplayInfo()", _text + 0x7B8D30
	.equiv "agl::lyr::Layer::setEnable()", _text + 0x7B8EEC
	.equiv "agl::lyr::Layer::setDisplayType()", _text + 0x7B8F3C
	.equiv "FUN_0E938F60:agl::lyr::Layer::pushBackDrawMethod()", _text + 0x7B8F60
	.equiv "FUN_0E938FB8:agl::lyr::Layer::pushBackDrawMethod()", _text + 0x7B8FB8
	.equiv "agl::lyr::Layer::getRenderCamera()", _text + 0x7B90C8
	.equiv "agl::lyr::Layer::getRenderProjection()", _text + 0x7B910C
	.equiv "agl::lyr::Layer::getLogicalFrameBuffer()", _text + 0x7B9148
	.equiv "agl::lyr::Layer::getDebugCameraAtDist()", _text + 0x7B9174
	.equiv "agl::lyr::Layer::drawRenderStep_()", _text + 0x7B9194
	.equiv "agl::lyr::Layer::updateDebugInfo_()", _text + 0x7B9280
	.equiv "agl::lyr::Layer::Layer()", _text + 0x7B99FC
	.equiv "agl::lyr::Layer::~Layer()", _text + 0x7B9B50
	.equiv "agl::lyr::Layer::initialize_()", _text + 0x7B9D20
	.equiv "agl::lyr::Layer::calc_()", _text + 0x7B9E5C
	.equiv "agl::lyr::Layer::calcGPU_()", _text + 0x7BAD14
	.equiv "agl::env::EnvObjMgr::~EnvObjMgr()", _text + 0x7BB14C
	.equiv "agl::env::EnvObjMgr::constructList()", _text + 0x7BB31C
	.equiv "agl::env::EnvObjMgr::reconstruct()", _text + 0x7BB630
	.equiv "agl::env::EnvObjMgr::clear()", _text + 0x7BB64C
	.equiv "agl::env::EnvObjMgr::applyResource_()", _text + 0x7BB7A4
	.equiv "agl::env::EnvObjMgr::EnvObjMgr()", _text + 0x7BC32C
	.equiv "agl::env::EnvObjMgr::TypeNode::TypeNode()", _text + 0x7BC4D4
	.equiv "agl::env::EnvObjMgr::initialize()", _text + 0x7BC570
	.equiv "agl::env::EnvObjMgr::update()", _text + 0x7BCA84
	.equiv "agl::env::EnvObjMgr::updateView()", _text + 0x7BCB80
	.equiv "agl::env::EnvObjMgr::removeObj()", _text + 0x7BCC70
	.equiv "FUN_0E93CCE8:agl::env::EnvObjMgr::InitArg::InitArg()", _text + 0x7BCCE8
	.equiv "agl::env::EnvObjSet::bind()", _text + 0x7BD194
	.equiv "agl::env::EnvObjSet::~EnvObjSet()", _text + 0x7BD208
	.equiv "agl::env::EnvObjSet::preRead_()", _text + 0x7BD324
	.equiv "agl::env::EnvObjSet::EnvObjSet()", _text + 0x7BD484
	.equiv "agl::env::EnvObjSet::allocBuffer()", _text + 0x7BD634
	.equiv "agl::env::EnvObjSet::pushBack()", _text + 0x7BDE48
	.equiv "agl::detail::SeadUtil::getNearFarAspectFovy()", _text + 0x7BE5B0
	.equiv "agl::detail::PrivateResource::PrivateResource()", _text + 0x7BE9AC
	.equiv "agl::detail::PrivateResource::createInstance()", _text + 0x7BEA8C
	.equiv "agl::detail::PrivateResource::initialize()", _text + 0x7BEC48
	.equiv "agl::detail::PrivateResource::createArchive()", _text + 0x7BECD8
	.equiv "agl::detail::FileIOMgr::FileIOMgr()", _text + 0x7BF064
	.equiv "agl::detail::FileIOMgr::createInstance()", _text + 0x7BF104
	.equiv "agl::detail::FileIOMgr::initialize()", _text + 0x7BF26C
	.equiv "agl::detail::FileIOMgr::showDialog()", _text + 0x7BF3C0
	.equiv "agl::detail::FileIOMgr::checkout_()", _text + 0x7BF560
	.equiv "agl::detail::FileIOMgr::save()", _text + 0x7BF5C8
	.equiv "agl::detail::FileIOMgr::load()", _text + 0x7BF8AC
	.equiv "agl::detail::FileIOMgr::CreateArg::CreateArg()", _text + 0x7BFD74
	.equiv "agl::detail::FileIOMgr::DialogArg::DialogArg()", _text + 0x7BFDB0
	.equiv "agl::detail::ShaderTextUtil::findLineFeedCode()", _text + 0x7C0070
	.equiv "agl::detail::ShaderTextUtil::replaceMacro()", _text + 0x7C00E4
	.equiv "agl::detail::ShaderTextUtil::replace()", _text + 0x7C060C
	.equiv "agl::detail::ShaderTextUtil::createRawText()", _text + 0x7C0694
	.equiv "agl::fx::OcclusionRenderer::OcclusionRenderer()", _text + 0x7C1340
	.equiv "agl::fx::OcclusionRenderer::OcclVtxStream::create()", _text + 0x7C189C
	.equiv "agl::fx::OcclusionRenderer::OcclVtxStream::initialize()", _text + 0x7C1C64
	.equiv "agl::fx::OcclusionRenderer::ClearBufVtxStream::initialize()", _text + 0x7C1D84
	.equiv "agl::fx::OcclusionRenderer::initialize()", _text + 0x7C1EBC
	.equiv "agl::fx::OcclusionRenderer::calcContext()", _text + 0x7C230C
	.equiv "agl::fx::OcclusionRenderer::updateViewGPU()", _text + 0x7C2E10
	.equiv "<unnamed>::ChangeShaderVariation()", _text + 0x7C306C
	.equiv "agl::fx::OcclusionRenderer::draw()", _text + 0x7C30B8
	.equiv "agl::fx::OcclusionRenderer::release()", _text + 0x7C3738
	.equiv "void_sead::Matrix34CalcCommon::multTranslationWorld()", _text + 0x7C3870
	.equiv "agl::utl::DebugTextureDrawer::DebugTextureDrawer()", _text + 0x7C3948
	.equiv "agl::utl::DebugTextureDrawer::createInstance()", _text + 0x7C3AB0
	.equiv "agl::utl::DebugTextureDrawer::destroy()", _text + 0x7C3BDC
	.equiv "agl::utl::DebugTextureDrawer::initialize()", _text + 0x7C3C90
	.equiv "agl::utl::TextureMemoryAllocator::initialize()", _text + 0x7C422C
	.equiv "agl::utl::TextureMemoryAllocator::alloc_()", _text + 0x7C43D4
	.equiv "agl::utl::TextureMemoryAllocator::alloc()", _text + 0x7C469C
	.equiv "agl::utl::TextureMemoryAllocator::free()", _text + 0x7C48B4
	.equiv "agl::utl::TextureMemoryAllocator::isOverwrapperd()", _text + 0x7C4C40
	.equiv "agl::utl::DynamicTextureCache::DynamicTextureCache()", _text + 0x7C4D58
	.equiv "agl::utl::DynamicTextureCache::~DynamicTextureCache()", _text + 0x7C4E28
	.equiv "agl::utl::DynamicTextureCache::initialize()", _text + 0x7C4F10
	.equiv "agl::utl::DynamicTextureCache::begin()", _text + 0x7C4FC8
	.equiv "agl::utl::DynamicTextureCache::pushBack_()", _text + 0x7C503C
	.equiv "agl::utl::DynamicTextureCache::popFront_()", _text + 0x7C5168
	.equiv "agl::utl::DynamicTextureCache::alloc()", _text + 0x7C51E8
	.equiv "agl::utl::DynamicTextureCache::free()", _text + 0x7C527C
	.equiv "agl::utl::DynamicTextureCache::end()", _text + 0x7C529C
	.equiv "agl::lght::LightMap::~LightMap()", _text + 0x7C532C
	.equiv "agl::lght::LightMap::preRead_()", _text + 0x7C54FC
	.equiv "agl::lght::LightMap::callbackNotAppliable_()", _text + 0x7C5650
	.equiv "agl::lght::LightMap::LightMap()", _text + 0x7C59A0
	.equiv "agl::lght::LightMap::bindLUT_()", _text + 0x7C5E48
	.equiv "agl::lght::LightMap::initialize_()", _text + 0x7C5F84
	.equiv "agl::lght::LightMap::applyEnvObjData()", _text + 0x7C71B0
	.equiv "agl::lght::LightMap::update_()", _text + 0x7C7850
	.equiv "agl::lght::LightMap::setCurrentBuffer()", _text + 0x7C7C58
	.equiv "agl::lght::LightMap::updateGPU_()", _text + 0x7C7D10
	.equiv "agl::lght::LightMap::updateViewGPU_()", _text + 0x7C8244
	.equiv "agl::lght::LightMap::draw_()", _text + 0x7C885C
	.equiv "agl::lght::LightMap::initializeTexture_()", _text + 0x7C91DC
	.equiv "agl::lght::LightMap::constructMemory_()", _text + 0x7C937C
	.equiv "<unnamed>::DeclareUBO()", _text + 0x7C9E9C
	.equiv "agl::lght::LightPrePass::InitializeShaderVariationTable_()", _text + 0x7C9F20
	.equiv "agl::lght::LightPrePass::GetShader_()", _text + 0x7C9F7C
	.equiv "agl::lght::LightPrePass::PointLightMgr::updateUBO_()", _text + 0x7CA468
	.equiv "<unnamed>::IsLightOff()", _text + 0x7CA824
	.equiv "agl::lght::LightPrePass::PointLightMgr::drawImpl_()", _text + 0x7CA860
	.equiv "agl::lght::LightPrePass::SpotLightMgr::initImpl_()", _text + 0x7CACE8
	.equiv "agl::lght::LightPrePass::SpotLightMgr::calcViewImpl_()", _text + 0x7CAF2C
	.equiv "agl::lght::LightPrePass::SpotLightMgr::updateUBO_()", _text + 0x7CB05C
	.equiv "agl::lght::LightPrePass::SpotLightMgr::drawImpl_()", _text + 0x7CBB20
	.equiv "agl::lght::LightPrePass::ProjLightMgr::updateParameters_()", _text + 0x7CBF68
	.equiv "agl::lght::LightPrePass::ProjLightMgr::initImpl_()", _text + 0x7CC8F8
	.equiv "FUN_0E94CBF0:FID_conflict:render::FloorLightManager::calcViewImpl_()", _text + 0x7CCBF0
	.equiv "agl::lght::LightPrePass::ProjLightMgr::updateUBO_()", _text + 0x7CCCFC
	.equiv "agl::lght::LightPrePass::ProjLightMgr::drawImpl_()", _text + 0x7CD95C
	.equiv "FUN_0E9507C4:void_::SetUBO()", _text + 0x7D07C4
	.equiv "FUN_0E9508B8:void_::SetUBO()", _text + 0x7D08B8
	.equiv "FUN_0E9509AC:void_::SetUBO()", _text + 0x7D09AC
	.equiv "agl::ShaderCompileInfo::ShaderCompileInfo()", _text + 0x7D0AA0
	.equiv "agl::ShaderCompileInfo::create()", _text + 0x7D0CE0
	.equiv "agl::ShaderCompileInfo::clearVariation()", _text + 0x7D0D88
	.equiv "agl::ShaderCompileInfo::pushBackVariation()", _text + 0x7D0D98
	.equiv "agl::ShaderCompileInfo::calcCompileSource()", _text + 0x7D0DEC
	.equiv "agl::Shader::Shader()", _text + 0x7D1A8C
	.equiv "agl::Shader::setUp()", _text + 0x7D1AF0
	.equiv "FUN_0E951C60:agl::lyr::RenderInfo::RenderInfo()", _text + 0x7D1C60
	.equiv "FUN_0E951D1C:agl::lyr::RenderInfo::RenderInfo()", _text + 0x7D1D1C
	.equiv "agl::lyr::RenderDLBuffer::RenderDLBuffer()", _text + 0x7D1D9C
	.equiv "agl::lyr::RenderDLBuffer::~RenderDLBuffer()", _text + 0x7D1E74
	.equiv "agl::lyr::RenderDLBuffer::initialize()", _text + 0x7D1FA4
	.equiv "agl::lyr::RenderDLBuffer::clear()", _text + 0x7D21CC
	.equiv "agl::lyr::RenderDLBuffer::begin()", _text + 0x7D2238
	.equiv "agl::lyr::RenderDLBuffer::end()", _text + 0x7D2368
	.equiv "agl::lyr::RenderStep::RenderStep()", _text + 0x7D247C
	.equiv "agl::lyr::RenderStep::calc()", _text + 0x7D2564
	.equiv "agl::lyr::RenderStep::pushBack()", _text + 0x7D2574
	.equiv "agl::lyr::RenderStep::remove()", _text + 0x7D25D4
	.equiv "agl::lyr::RenderDisplay::RenderDisplay()", _text + 0x7D2704
	.equiv "agl::lyr::RenderDisplay::freeFrameBuffer()", _text + 0x7D2A74
	.equiv "agl::lyr::RenderDisplay::~RenderDisplay()", _text + 0x7D2B20
	.equiv "agl::lyr::RenderDisplay::Job::Job()", _text + 0x7D2C88
	.equiv "agl::lyr::RenderDisplay::resetFrameBufferSize_()", _text + 0x7D2D10
	.equiv "agl::lyr::RenderDisplay::Job::setUp()", _text + 0x7D2E98
	.equiv "agl::lyr::RenderDisplay::initialize()", _text + 0x7D2EC0
	.equiv "agl::lyr::RenderDisplay::clear()", _text + 0x7D3258
	.equiv "agl::lyr::RenderDisplay::pushBack()", _text + 0x7D32AC
	.equiv "agl::lyr::RenderDisplay::erase()", _text + 0x7D32F0
	.equiv "agl::lyr::RenderDisplay::calc()", _text + 0x7D33E0
	.equiv "agl::lyr::RenderDisplay::allocFrameBuffer()", _text + 0x7D342C
	.equiv "agl::lyr::RenderDisplay::bindRenderBuffer()", _text + 0x7D3848
	.equiv "agl::lyr::RenderDisplay::beginDraw_()", _text + 0x7D393C
	.equiv "agl::lyr::RenderDisplay::endDraw_()", _text + 0x7D39DC
	.equiv "agl::lyr::RenderDisplay::draw()", _text + 0x7D3A48
	.equiv "agl::lyr::RenderDisplay::sortDL()", _text + 0x7D3CA8
	.equiv "agl::lyr::RenderDisplay::callDisplayList()", _text + 0x7D3CF8
	.equiv "agl::lyr::RenderDisplay::destroyDisplayList()", _text + 0x7D3E34
	.equiv "agl::lyr::RenderDisplay::drawImmediate_()", _text + 0x7D4070
	.equiv "agl::lyr::RenderDisplay::Job::enque()", _text + 0x7D411C
	.equiv "agl::lyr::RenderDisplay::calcDL()", _text + 0x7D4164
	.equiv "agl::lyr::RenderDisplay::calcGPU()", _text + 0x7D4230
	.equiv "agl::lyr::RenderDisplay::copyScanOutBuffer_()", _text + 0x7D42B0
	.equiv "agl::lyr::RenderDisplay::Job::getWeight()", _text + 0x7D4560
	.equiv "agl::tentative::AtomicPtrArrayImpl::setBuffer()", _text + 0x7D47B0
	.equiv "agl::tentative::AtomicPtrArrayImpl::allocBuffer()", _text + 0x7D47D4
	.equiv "agl::tentative::AtomicPtrArrayImpl::freeBuffer()", _text + 0x7D482C
	.equiv "agl::tentative::AtomicPtrArrayImpl::erase()", _text + 0x7D4874
	.equiv "agl::tentative::AtomicPtrArrayImpl::heapSort()", _text + 0x7D4900
	.equiv "agl::lyr::RenderDL::RenderDL()", _text + 0x7D4B1C
	.equiv "agl::lyr::RenderDL::copyToRenderDL()", _text + 0x7D4BF4
	.equiv "gsys::G3dResModelEx::G3dResModelEx()", _text + 0x7D4C74
	.equiv "gsys::G3dResModelEx::updateMaterial()", _text + 0x7D4E34
	.equiv "gsys::G3dResModelEx::update()", _text + 0x7D5190
	.equiv "gsys::G3dResModelEx::initialize()", _text + 0x7D5224
	.equiv "gsys::G3dResModelEx::bindModelFx()", _text + 0x7D54A0
	.equiv "gsys::G3dResModelEx::isUsed()", _text + 0x7D54D8
	.equiv "gsys::G3dResModelEx::calcSize()", _text + 0x7D5538
	.equiv "gsys::ParticleDrawArg::ParticleDrawArg()", _text + 0x7D55DC
	.equiv "gsys::ParticleDrawArg::applySystem()", _text + 0x7D5884
	.equiv "gsys::ParticleDrawArg::addParticleGroup()", _text + 0x7D5998
	.equiv "FUN_0E9559EC:FID_conflict:gsys::ParticleDrawArg::setZFog()", _text + 0x7D59EC
	.equiv "FUN_0E955A54:FID_conflict:gsys::ParticleDrawArg::setZFog()", _text + 0x7D5A54
	.equiv "FUN_0E955ABC:FID_conflict:gsys::CSUtil::_setupUserFragmentTexture()", _text + 0x7D5ABC
	.equiv "FUN_0E955B38:FID_conflict:gsys::CSUtil::_setupUserFragmentTexture()", _text + 0x7D5B38
	.equiv "FUN_0E955BB4:FID_conflict:gsys::CSUtil::_setupUserFragmentCubeMapTexture()", _text + 0x7D5BB4
	.equiv "FUN_0E955C30:FID_conflict:gsys::CSUtil::_setupUserFragmentTexture()", _text + 0x7D5C30
	.equiv "gsys::CSUtil::_setupUserVertexTexture()", _text + 0x7D5CAC
	.equiv "FUN_0E955D28:FID_conflict:gsys::CSUtil::_setupUserFragmentCubeMapTexture()", _text + 0x7D5D28
	.equiv "gsys::ModelOcclusionQuery::ModelOcclusionQuery()", _text + 0x7D5DF8
	.equiv "gsys::ModelOcclusionQuery::initialize_()", _text + 0x7D5F04
	.equiv "gsys::ModelOcclusionQuery::create()", _text + 0x7D5F70
	.equiv "gsys::ModelOcclusionQuery::destroy()", _text + 0x7D605C
	.equiv "gsys::ModelOcclusionQuery::add()", _text + 0x7D6078
	.equiv "gsys::ModelOcclusionQuery::pushBackTo()", _text + 0x7D6158
	.equiv "FID_conflict:gsys::ModelDecalAoObject::CreateArg::CreateArg()", _text + 0x7D6670
	.equiv "gsys::ModelScene::~ModelScene()", _text + 0x7D66CC
	.equiv "gsys::ModelScene::ModelScene()", _text + 0x7D6A40
	.equiv "gsys::ModelScene::Job::Job()", _text + 0x7D6D44
	.equiv "gsys::ModelScene::isOcclusionQueryEnabled()", _text + 0x7D6DE8
	.equiv "gsys::ModelScene::resetHostIO_()", _text + 0x7D6E18
	.equiv "gsys::ModelScene::initialize_()", _text + 0x7D6EB8
	.equiv "gsys::ModelScene::create()", _text + 0x7D8F04
	.equiv "gsys::ModelScene::clearParticleGroup()", _text + 0x7D8FD8
	.equiv "gsys::ModelScene::addParticleGroup()", _text + 0x7D9080
	.equiv "gsys::ModelScene::calcParticleGroupInfo()", _text + 0x7D9150
	.equiv "gsys::ModelScene::isMotionBlurEnabled()", _text + 0x7D923C
	.equiv "gsys::ModelScene::isSnapshotMgrEnabled()", _text + 0x7D926C
	.equiv "gsys::ModelScene::isBoundLayer()", _text + 0x7D929C
	.equiv "gsys::ModelScene::clearQueue_()", _text + 0x7D9300
	.equiv "gsys::ModelScene::invoke_()", _text + 0x7D93A4
	.equiv "gsys::ModelScene::calcFrame_()", _text + 0x7D95BC
	.equiv "gsys::ModelScene::calcModel_()", _text + 0x7D9A10
	.equiv "gsys::ModelScene::sortQueue_()", _text + 0x7D9AA8
	.equiv "gsys::ModelScene::calcWorld_()", _text + 0x7D9AFC
	.equiv "gsys::ModelScene::calcRenderView_()", _text + 0x7D9B58
	.equiv "gsys::ModelScene::calcDrawBackGround_()", _text + 0x7D9BB0
	.equiv "gsys::ModelScene::calcGPU_()", _text + 0x7D9C6C
	.equiv "gsys::ModelScene::isGPUStressAnalyzerEnabled_()", _text + 0x7D9D28
	.equiv "gsys::ModelScene::calcView()", _text + 0x7D9D8C
	.equiv "gsys::ModelScene::drawBG_()", _text + 0x7D9EB8
	.equiv "gsys::ModelScene::drawOpa()", _text + 0x7DA3C8
	.equiv "gsys::ModelScene::drawXlu()", _text + 0x7DAE14
	.equiv "gsys::ModelScene::drawPostEffects()", _text + 0x7DB5DC
	.equiv "gsys::ModelScene::drawFinalImage()", _text + 0x7DBA70
	.equiv "gsys::ModelScene::calcGPU()", _text + 0x7DBB2C
	.equiv "gsys::ModelScene::bind_()", _text + 0x7DBCF8
	.equiv "gsys::ModelScene::unbind_()", _text + 0x7DBDAC
	.equiv "gsys::ModelScene::setParticleDrawArg_()", _text + 0x7DBF10
	.equiv "gsys::ModelScene::add_()", _text + 0x7DC338
	.equiv "gsys::ModelScene::remove_()", _text + 0x7DC3D8
	.equiv "gsys::ModelScene::bindEnv_()", _text + 0x7DC418
	.equiv "gsys::ModelScene::calcCameraAreaEnv_()", _text + 0x7DCE4C
	.equiv "gsys::ModelScene::invokeCalcRenderView_()", _text + 0x7DD680
	.equiv "gsys::ModelSceneBuffer::isMultiFilterEnabled()", _text + 0x7DEA08
	.equiv "gsys::ModelSceneBuffer::ModelSceneBuffer()", _text + 0x7DEA80
	.equiv "gsys::ModelSceneBuffer::~ModelSceneBuffer()", _text + 0x7DEC0C
	.equiv "gsys::ModelSceneBuffer::initialize()", _text + 0x7DED2C
	.equiv "gsys::ModelSceneBuffer::updateFrame()", _text + 0x7DEF0C
	.equiv "gsys::ModelSceneBuffer::setRenderFlag()", _text + 0x7DF2A0
	.equiv "gsys::ModelSceneBuffer::getRenderFlag()", _text + 0x7DF2C4
	.equiv "gsys::ModelSceneBuffer::isFilterAAEnabled()", _text + 0x7DF2F4
	.equiv "gsys::ModelSceneBuffer::calcRenderBuffer()", _text + 0x7DF388
	.equiv "gsys::ModelSceneBuffer::drawBackGroundBuffer()", _text + 0x7DF4D0
	.equiv "gsys::ModelSceneBuffer::allocRenderBuffer()", _text + 0x7DF5EC
	.equiv "gsys::ModelSceneBuffer::isReuseOpa()", _text + 0x7DF6A0
	.equiv "gsys::ModelSceneBuffer::expandHiZ()", _text + 0x7DF6CC
	.equiv "gsys::ModelSceneBuffer::reuseOpa()", _text + 0x7DF75C
	.equiv "gsys::ModelSceneBuffer::copyForReuseOpa()", _text + 0x7DF7D8
	.equiv "gsys::ModelSceneBuffer::drawGBuffer()", _text + 0x7DF848
	.equiv "gsys::ModelSceneBuffer::expandGBuffer()", _text + 0x7DFA94
	.equiv "gsys::ModelSceneBuffer::drawDeferredShading()", _text + 0x7DFCA8
	.equiv "gsys::ModelSceneBuffer::drawMultiFilter()", _text + 0x7DFDC0
	.equiv "gsys::ModelSceneBuffer::isOutlineSilhouetteEnabled_()", _text + 0x7DFFB4
	.equiv "gsys::ModelSceneBuffer::drawOutline()", _text + 0x7DFFE0
	.equiv "gsys::ModelSceneBuffer::updateReducedBuffer()", _text + 0x7E0174
	.equiv "gsys::ModelSceneBuffer::drawFinalImage()", _text + 0x7E0210
	.equiv "gsys::ModelSceneBuffer::selectBloomDepth()", _text + 0x7E046C
	.equiv "gsys::ModelSceneBuffer::attachHostIO()", _text + 0x7E05C0
	.equiv "FUN_0E9605E0:FID_conflict:gsys::ModelSceneFx::CreateArg::CreateArg()", _text + 0x7E05E0
	.equiv "gsys::MemAllocator::tryAlloc()", _text + 0x7E063C
	.equiv "gsys::MemBuffer::MemBuffer()", _text + 0x7E0688
	.equiv "gsys::MemBuffer::~MemBuffer()", _text + 0x7E06D0
	.equiv "gsys::MemBuffer::tryAlloc()", _text + 0x7E06E4
	.equiv "gsys::MemBuffer::alloc()", _text + 0x7E0758
	.equiv "gsys::ModelSceneFx::~ModelSceneFx()", _text + 0x7E078C
	.equiv "gsys::ModelSceneFx::isOccludedEffectEnabled()", _text + 0x7E0818
	.equiv "gsys::ModelSceneFx::isRadialBlurEnabled()", _text + 0x7E0844
	.equiv "gsys::ModelSceneFx::isDecalEnabled()", _text + 0x7E0870
	.equiv "gsys::ModelSceneFx::isNormalDrawerEnabled()", _text + 0x7E08A8
	.equiv "gsys::ModelSceneFx::isDecalTrailEnabled()", _text + 0x7E08D4
	.equiv "gsys::ModelSceneFx::isDecalAoEnabled()", _text + 0x7E090C
	.equiv "FUN_0E960944:gsys::ModelSceneFx::addAoObject()", _text + 0x7E0944
	.equiv "FUN_0E96099C:gsys::ModelSceneFx::addAoObject()", _text + 0x7E099C
	.equiv "gsys::ModelSceneFx::ModelSceneFx()", _text + 0x7E09E8
	.equiv "gsys::ModelSceneFx::initialize()", _text + 0x7E0AD4
	.equiv "gsys::ModelSceneFx::bind()", _text + 0x7E1608
	.equiv "gsys::ModelSceneFx::unbind()", _text + 0x7E18D0
	.equiv "gsys::ModelSceneFx::calcView()", _text + 0x7E1DBC
	.equiv "gsys::ModelSceneFx::calcViewOccludedEffect()", _text + 0x7E1E00
	.equiv "gsys::ModelSceneFx::calcGPU()", _text + 0x7E1ECC
	.equiv "gsys::ModelSceneFx::drawOccludedEffect()", _text + 0x7E2020
	.equiv "gsys::ModelSceneFx::drawRadialBlur()", _text + 0x7E2070
	.equiv "gsys::ModelSceneFx::drawDecal()", _text + 0x7E20FC
	.equiv "gsys::ModelSceneFx::drawWaterNormalModify()", _text + 0x7E2508
	.equiv "gsys::ModelSceneFx::drawDecalTrail()", _text + 0x7E267C
	.equiv "gsys::ModelSceneFx::drawDecalTrailShadowPrePassAlpha()", _text + 0x7E2808
	.equiv "FUN_0E962A08:FID_conflict:gsys::ModelSceneFx::CreateArg::CreateArg()", _text + 0x7E2A08
	.equiv "FUN_0E962B6C:FID_conflict:gsys::ModelSceneFx::OfxResMgr::~OfxResMgr()", _text + 0x7E2B6C
	.equiv "FUN_0E962CC8:FID_conflict:gsys::ModelSceneFx::OfxResMgr::~OfxResMgr()", _text + 0x7E2CC8
	.equiv "FUN_0E962E24:FID_conflict:void_gsys::OfxRig::erase()", _text + 0x7E2E24
	.equiv "FUN_0E962E64:FID_conflict:void_gsys::OfxRig::erase()", _text + 0x7E2E64
	.equiv "FUN_0E962EA4:FID_conflict:gsys::ModelSceneFx::OfxResMgr::OfxResMgr()", _text + 0x7E2EA4
	.equiv "FUN_0E962F9C:FID_conflict:gsys::ModelSceneFx::OfxResMgr::OfxResMgr()", _text + 0x7E2F9C
	.equiv "FUN_0E963094:FID_conflict:void_gsys::ModelSceneFx::OfxResMgr::initialize()", _text + 0x7E3094
	.equiv "FUN_0E9634EC:FID_conflict:void_gsys::ModelSceneFx::OfxResMgr::initialize()", _text + 0x7E34EC
	.equiv "FUN_0E963944:FID_conflict:void_gsys::ModelSceneFx::OfxResMgr::free()", _text + 0x7E3944
	.equiv "FUN_0E963A54:FID_conflict:void_gsys::ModelSceneFx::OfxResMgr::free()", _text + 0x7E3A54
	.equiv "FUN_0E963B20:FID_conflict:void_gsys::ModelSceneFx::OfxResMgr::free()", _text + 0x7E3B20
	.equiv "FUN_0E963C30:FID_conflict:void_gsys::ModelSceneFx::OfxResMgr::free()", _text + 0x7E3C30
	.equiv "FUN_0E963CFC:FID_conflict:void_gsys::ModelSceneFx::OfxResMgr::update()", _text + 0x7E3CFC
	.equiv "FUN_0E963F28:FID_conflict:void_gsys::ModelSceneFx::OfxResMgr::update()", _text + 0x7E3F28
	.equiv "gsys::ModelDrawObj::ModelDrawObj()", _text + 0x7E4154
	.equiv "gsys::ModelDrawObj::~ModelDrawObj()", _text + 0x7E4318
	.equiv "gsys::ModelDrawObj::updateMtx()", _text + 0x7E4398
	.equiv "gsys::ModelDrawObj::initialize()", _text + 0x7E44C8
	.equiv "gsys::ModelDrawObj::updateUBO()", _text + 0x7E4724
	.equiv "gsys::ModelMgr::ModelMgr()", _text + 0x7E4790
	.equiv "gsys::ModelMgr::createInstance()", _text + 0x7E4A4C
	.equiv "gsys::ModelMgr::initialize()", _text + 0x7E4C78
	.equiv "gsys::ModelMgr::clearQueue()", _text + 0x7E4D84
	.equiv "gsys::ModelMgr::calcFrame()", _text + 0x7E4E50
	.equiv "gsys::ModelMgr::calcModel()", _text + 0x7E502C
	.equiv "gsys::ModelMgr::calcQueue()", _text + 0x7E50A8
	.equiv "gsys::ModelMgr::sortQueue()", _text + 0x7E51E8
	.equiv "gsys::ModelMgr::calcWorld()", _text + 0x7E527C
	.equiv "gsys::ModelMgr::calcRenderView()", _text + 0x7E5310
	.equiv "gsys::ModelMgr::calcDrawBackGround()", _text + 0x7E53A4
	.equiv "gsys::ModelMgr::calcGPU()", _text + 0x7E5438
	.equiv "gsys::ModelMgr::createFFLTexturePerFrame()", _text + 0x7E54CC
	.equiv "FUN_0E96555C:gsys::ModelMgr::editAll()", _text + 0x7E555C
	.equiv "FUN_0E9655E4:gsys::ModelMgr::editAll()", _text + 0x7E55E4
	.equiv "gsys::ModelMgr::getXluZPrePassID()", _text + 0x7E566C
	.equiv "gsys::ModelMgr::ModelNameNode::ModelNameNode()", _text + 0x7E5690
	.equiv "gsys::ModelMgr::ModelNameNode::add()", _text + 0x7E57A8
	.equiv "FUN_0E965838:gsys::ModelMgr::add_()", _text + 0x7E5838
	.equiv "FUN_0E965B28:gsys::ModelMgr::add_()", _text + 0x7E5B28
	.equiv "FUN_0E965BD8:gsys::ModelMgr::remove_()", _text + 0x7E5BD8
	.equiv "FUN_0E965D7C:gsys::ModelMgr::remove_()", _text + 0x7E5D7C
	.equiv "gsys::ModelMgr::addFFLAsync_()", _text + 0x7E5ED8
	.equiv "gsys::FFLBufferDL::getBufferSizeDL()", _text + 0x7E61A0
	.equiv "gsys::FFLBufferDL::getBufferSize()", _text + 0x7E61FC
	.equiv "gsys::FFLBufferDL::FFLBufferDL()", _text + 0x7E6238
	.equiv "gsys::FFLBufferDL::ModelExpressionDLObj::clear()", _text + 0x7E630C
	.equiv "gsys::FFLBufferDL::ModelExpressionDLObj::ModelExpressionDLObj()", _text + 0x7E634C
	.equiv "gsys::FFLBufferDL::createMatDLAry()", _text + 0x7E639C
	.equiv "gsys::FFLBufferDL::initialize()", _text + 0x7E6448
	.equiv "gsys::FFLBufferDL::create()", _text + 0x7E64FC
	.equiv "gsys::FFLBufferDL::initializeShaderNW()", _text + 0x7E65AC
	.equiv "gsys::FFLBufferDL::DrawDataUnit::initialize()", _text + 0x7E67C0
	.equiv "gsys::FFLBufferDL::CallbackData::setCulling()", _text + 0x7E70D0
	.equiv "gsys::FFLBufferDL::CallbackData::modulateModeToValue()", _text + 0x7E7168
	.equiv "gsys::FFLBufferDL::CallbackData::setModulate()", _text + 0x7E718C
	.equiv "gsys::FFLBufferDL::CallbackData::drawPrimitive()", _text + 0x7E7560
	.equiv "gsys::FFLBufferDL::ModelExpressionDLObj::createDLInstance()", _text + 0x7E7750
	.equiv "gsys::FFLBufferDL::createMatDLAryInstance()", _text + 0x7E78C4
	.equiv "gsys::FFLBufferDL::ModelExpressionDLObj::makeDL()", _text + 0x7E7958
	.equiv "gsys::FFLBufferDL::ModelExpressionDLObj::callDL()", _text + 0x7E7EC0
	.equiv "gsys::ModelUnit::ModelUnit()", _text + 0x7E8180
	.equiv "gsys::ModelUnit::destoryFx()", _text + 0x7E83C4
	.equiv "gsys::ModelUnit::~ModelUnit()", _text + 0x7E8414
	.equiv "gsys::ModelUnit::createFx()", _text + 0x7E8518
	.equiv "FUN_0E968644:gsys::ModelUnit::enableRenderViewOption()", _text + 0x7E8644
	.equiv "FUN_0E96885C:gsys::ModelUnit::enableRenderViewOption()", _text + 0x7E885C
	.equiv "gsys::ModelUnit::resetRenderViewOption()", _text + 0x7E89F4
	.equiv "FUN_0E968C54:gsys::ModelUnit::setRenderStateType()", _text + 0x7E8C54
	.equiv "gsys::ModelUnit::setXluAlpha()", _text + 0x7E8C88
	.equiv "gsys::ModelUnit::setXluZPrePassID()", _text + 0x7E8FA0
	.equiv "gsys::ModelUnit::setLodThreshold()", _text + 0x7E9008
	.equiv "gsys::ModelUnit::setReferenceLod()", _text + 0x7E9108
	.equiv "gsys::ModelUnit::setTextureDirty()", _text + 0x7E91A8
	.equiv "gsys::ModelUnit::erase()", _text + 0x7E9250
	.equiv "gsys::ModelUnit::getShapeSubMeshNum()", _text + 0x7E9294
	.equiv "gsys::ModelUnit::getShapeSubMeshBoundAABB()", _text + 0x7E92D0
	.equiv "gsys::ModelUnit::calcBufferSize()", _text + 0x7E932C
	.equiv "gsys::ModelUnit::setUpMaterialAndShape()", _text + 0x7E9354
	.equiv "FUN_0E9695F4:gsys::ModelUnit::setUpModelUnit()", _text + 0x7E95F4
	.equiv "FUN_0E969BC4:gsys::ModelUnit::setUpModelUnit()", _text + 0x7E9BC4
	.equiv "gsys::ModelUnit::calcBounding()", _text + 0x7E9CFC
	.equiv "FUN_0E969D7C:gsys::ModelUnit::updateQueueInfo_()", _text + 0x7E9D7C
	.equiv "FUN_0E96A390:gsys::ModelUnit::updateQueueInfo_()", _text + 0x7EA390
	.equiv "gsys::ModelUnit::calcQueue_()", _text + 0x7EA528
	.equiv "gsys::ModelUnit::calcGPU_()", _text + 0x7EA8E0
	.equiv "<unnamed>::pushBackSnapShot()", _text + 0x7EAA48
	.equiv "<unnamed>::calcDepthShadowBounding()", _text + 0x7EAB28
	.equiv "<unnamed>::pushBackUserPass()", _text + 0x7EAC5C
	.equiv "FUN_0E96B03C:bool_gsys::ModelUnit::calcDrawArray_()", _text + 0x7EB03C
	.equiv "FUN_0E96B2D8:FID_conflict:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EB2D8
	.equiv "FUN_0E96B5E0:bool_gsys::ModelUnit::calcDrawArray_()", _text + 0x7EB5E0
	.equiv "FUN_0E96B8D0:FID_conflict:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EB8D0
	.equiv "FUN_0E96BBF4:bool_gsys::ModelUnit::calcDrawArray_()", _text + 0x7EBBF4
	.equiv "FUN_0E96BED0:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EBED0
	.equiv "FUN_0E96C204:bool_gsys::ModelUnit::calcDrawArray_()", _text + 0x7EC204
	.equiv "FUN_0E96C54C:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EC54C
	.equiv "FUN_0E96C8A0:bool_gsys::ModelUnit::calcDrawArray_()", _text + 0x7EC8A0
	.equiv "FUN_0E96CC80:FID_conflict:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7ECC80
	.equiv "FUN_0E96D198:bool_gsys::ModelUnit::calcDrawArray_()", _text + 0x7ED198
	.equiv "FUN_0E96D5C8:FID_conflict:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7ED5C8
	.equiv "FUN_0E96DAFC:bool_gsys::ModelUnit::calcDrawArray_()", _text + 0x7EDAFC
	.equiv "FUN_0E96DF20:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EDF20
	.equiv "FUN_0E96E464:bool_gsys::ModelUnit::calcDrawArray_()", _text + 0x7EE464
	.equiv "FUN_0E96E8E0:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EE8E0
	.equiv "FUN_0E96EE44:FID_conflict:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EEE44
	.equiv "FUN_0E96F14C:FID_conflict:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EF14C
	.equiv "FUN_0E96F470:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EF470
	.equiv "FUN_0E96F778:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EF778
	.equiv "FUN_0E96FA9C:FID_conflict:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EFA9C
	.equiv "FUN_0E96FFB4:FID_conflict:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7EFFB4
	.equiv "FUN_0E9704E8:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7F04E8
	.equiv "FUN_0E970A00:unsigned_int_gsys::ModelUnit::calcCulling_()", _text + 0x7F0A00
	.equiv "FUN_0E970F34:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F0F34
	.equiv "FUN_0E971340:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F1340
	.equiv "FUN_0E97174C:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F174C
	.equiv "FUN_0E971BC4:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F1BC4
	.equiv "FUN_0E97203C:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F203C
	.equiv "FUN_0E972478:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F2478
	.equiv "FUN_0E9728B4:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F28B4
	.equiv "FUN_0E972D5C:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F2D5C
	.equiv "FUN_0E973204:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F3204
	.equiv "FUN_0E97364C:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F364C
	.equiv "FUN_0E973A94:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F3A94
	.equiv "FUN_0E973F30:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F3F30
	.equiv "FUN_0E9743CC:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F43CC
	.equiv "FUN_0E974844:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F4844
	.equiv "FUN_0E974CBC:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F4CBC
	.equiv "FUN_0E975188:FID_conflict:void_gsys::ModelUnit::pushBackQueue_()", _text + 0x7F5188
	.equiv "gsys::SnapshotTextureMgr::ExpansionColor::ExpansionColor()", _text + 0x7F5654
	.equiv "gsys::SnapshotTextureMgr::SnapshotTextureMgr()", _text + 0x7F56B8
	.equiv "gsys::SnapshotTextureMgr::initialize()", _text + 0x7F58EC
	.equiv "gsys::SnapshotTextureMgr::entry()", _text + 0x7F5A9C
	.equiv "gsys::SnapshotTextureMgr::setUpViewInfo()", _text + 0x7F5B7C
	.equiv "gsys::SnapshotTextureMgr::update()", _text + 0x7F5CD4
	.equiv "gsys::SnapshotTextureMgr::ExpansionColor::draw()", _text + 0x7F5E18
	.equiv "gsys::SnapshotTextureMgr::drawTexture()", _text + 0x7F655C
	.equiv "gsys::ModelNW::ModelNW()", _text + 0x7F6D34
	.equiv "gsys::ModelRenderUnitNW::createSubMeshInfo()", _text + 0x7F6F2C
	.equiv "gsys::ModelRenderUnitNW::setDisplayListDirty()", _text + 0x7F6FF8
	.equiv "gsys::ModelNW::setDisplayListDirty()", _text + 0x7F7014
	.equiv "gsys::ModelNW::createLocalLightMapObj()", _text + 0x7F7070
	.equiv "FUN_0E977104:gsys::ModelNW::initialize()", _text + 0x7F7104
	.equiv "gsys::ModelNW::CreateArg::CreateArg()", _text + 0x7F780C
	.equiv "FUN_0E977858:gsys::ModelNW::initialize()", _text + 0x7F7858
	.equiv "gsys::ModelNW::bind()", _text + 0x7F78C4
	.equiv "gsys::ModelNW::createSubMeshRangeBuffer()", _text + 0x7F7F3C
	.equiv "gsys::ModelNW::setSubMeshRangeBuffer()", _text + 0x7F801C
	.equiv "gsys::ModelNW::calcBounding_()", _text + 0x7F8460
	.equiv "gsys::ModelNW::postCalcWorld()", _text + 0x7F867C
	.equiv "gsys::ModelNW::calcBeforeDraw()", _text + 0x7F8754
	.equiv "gsys::ModelNW::calcGPUMaterial_()", _text + 0x7F8808
	.equiv "gsys::ModelNW::calcDrawBackGround()", _text + 0x7F8884
	.equiv "gsys::ModelNW::isDefaultRenderViewOptionEnabled()", _text + 0x7F8B14
	.equiv "gsys::ModelNW::setReferenceLocalLightMapObj()", _text + 0x7F8BBC
	.equiv "gsys::ModelNW::edit()", _text + 0x7F8C1C
	.equiv "gsys::ModelRenderUnitNW::ModelRenderUnitNW()", _text + 0x7F8D70
	.equiv "gsys::ModelNW::setUpMaterialImpl()", _text + 0x7F8F3C
	.equiv "gsys::ModelRenderUnitNW::~ModelRenderUnitNW()", _text + 0x7F93A4
	.equiv "gsys::ModelRenderUnitNW::resetShaderReplace()", _text + 0x7F948C
	.equiv "gsys::ModelRenderUnitNW::initialize()", _text + 0x7F94A4
	.equiv "gsys::ModelRenderUnitNW::resetShader()", _text + 0x7F9590
	.equiv "FUN_0E9798DC:gsys::ModelRenderUnitNW::activateInstance()", _text + 0x7F98DC
	.equiv "gsys::ModelRenderUnitNW::calc()", _text + 0x7F9930
	.equiv "gsys::ModelRenderUnitNW::calcView()", _text + 0x7F9A70
	.equiv "gsys::ModelRenderUnitNW::draw()", _text + 0x7F9CFC
	.equiv "FUN_0E97A168:gsys::ModelRenderUnitNW::activateInstance()", _text + 0x7FA168
	.equiv "gsys::ModelSceneShadow::ProjectionShadowInfo::~ProjectionShadowInfo()", _text + 0x7FB080
	.equiv "gsys::ModelSceneShadow::MaskedLightShadow::~MaskedLightShadow()", _text + 0x7FB108
	.equiv "gsys::ModelSceneShadow::DepthShadowInfo::~DepthShadowInfo()", _text + 0x7FB2AC
	.equiv "gsys::ModelSceneShadow::~ModelSceneShadow()", _text + 0x7FB448
	.equiv "gsys::ModelSceneShadow::isSealShadowEnabled()", _text + 0x7FB658
	.equiv "gsys::ModelSceneShadow::updateSealShadowTexture_()", _text + 0x7FB684
	.equiv "gsys::ModelSceneShadow::postRead_()", _text + 0x7FB6B8
	.equiv "gsys::ModelSceneShadow::DepthShadowInfo::DepthShadowInfo()", _text + 0x7FBEEC
	.equiv "gsys::ModelSceneShadow::ModelSceneShadow()", _text + 0x7FC0BC
	.equiv "gsys::ModelSceneShadow::DepthShadowInfo::initialize()", _text + 0x7FC618
	.equiv "gsys::ModelSceneShadow::ProjectionShadowInfo::ProjectionShadowInfo()", _text + 0x7FCCE0
	.equiv "gsys::ModelSceneShadow::MaskedLightShadow::MaskedLightShadow()", _text + 0x7FCF74
	.equiv "gsys::ModelSceneShadow::MaskedLightShadow::initialize()", _text + 0x7FD0EC
	.equiv "gsys::ModelSceneShadow::reset()", _text + 0x7FD3E8
	.equiv "gsys::ModelSceneShadow::initialize()", _text + 0x7FD800
	.equiv "gsys::ModelSceneShadow::clearQueue()", _text + 0x7FE76C
	.equiv "gsys::ModelSceneShadow::isDepthShadowEnabled()", _text + 0x7FE794
	.equiv "gsys::ModelSceneShadow::preCalcView()", _text + 0x7FE7C0
	.equiv "gsys::ModelSceneShadow::isEnableSealShadowAlphaOut()", _text + 0x7FED24
	.equiv "gsys::ModelSceneShadow::isShadowPrePassEnabled()", _text + 0x7FED54
	.equiv "gsys::ModelSceneShadow::calc()", _text + 0x7FED8C
	.equiv "gsys::ModelSceneShadow::calcViewDepthShadow_()", _text + 0x7FF2FC
	.equiv "gsys::ModelSceneShadow::calcViewStaticDepthShadow_()", _text + 0x7FF4C0
	.equiv "gsys::ModelSceneShadow::calcView()", _text + 0x7FF8C0
	.equiv "gsys::ModelSceneShadow::updateDepthShadowMatrix_()", _text + 0x7FF9D8
	.equiv "gsys::ModelSceneShadow::calcViewMaskedLightShadow()", _text + 0x7FFBB8
	.equiv "gsys::ModelSceneShadow::ProjectionShadowInfo::getDensity()", _text + 0x7FFFF4
	.equiv "gsys::ModelSceneShadow::calcGPUDrawBackGround()", _text + 0x8000A8
	.equiv "FUN_0E98074C:gsys::ModelSceneShadow::checkInsideAndUpdateBounding()", _text + 0x80074C
	.equiv "FUN_0E980800:gsys::ModelSceneShadow::checkInsideAndUpdateBounding()", _text + 0x800800
	.equiv "gsys::ModelSceneShadow::MaskedLightShadow::drawShadowMap()", _text + 0x8008B4
	.equiv "gsys::ModelSceneShadow::drawDepthShadow()", _text + 0x800914
	.equiv "gsys::ModelSceneShadow::drawSealShadow()", _text + 0x800ED0
	.equiv "gsys::ModelSceneShadow::isSSAOEnabled()", _text + 0x800F98
	.equiv "gsys::ModelSceneShadow::drawSSAO()", _text + 0x800FC4
	.equiv "gsys::ModelSceneShadow::drawShadowMask()", _text + 0x801560
	.equiv "gsys::ModelSceneShadow::drawShadowPrePass()", _text + 0x80165C
	.equiv "gsys::ModelSceneShadow::releaseShadowPrePass()", _text + 0x8018C4
	.equiv "gsys::ModelSceneShadow::releaseDepthShadow()", _text + 0x80191C
	.equiv "gsys::ModelSceneShadow::enableMaskedLightShadow()", _text + 0x801A54
	.equiv "gsys::ModelSceneShadow::disableMaskedLightShadow()", _text + 0x801A98
	.equiv "gsys::ModelSceneShadow::isEnableMaskedLightShadow()", _text + 0x801AE0
	.equiv "gsys::ModelSceneShadow::depthShadowCallback_()", _text + 0x801B30
	.equiv "gsys::ModelScenePfx::~ModelScenePfx()", _text + 0x8023A0
	.equiv "gsys::ModelScenePfx::isDOFEnabled()", _text + 0x80251C
	.equiv "gsys::ModelScenePfx::isAutoExposureEnabled()", _text + 0x802574
	.equiv "gsys::ModelScenePfx::isEdgeEffectEnabled()", _text + 0x8025A0
	.equiv "gsys::ModelScenePfx::isBloomEnabled()", _text + 0x8025CC
	.equiv "gsys::ModelScenePfx::isSkyLightScatterEnabled()", _text + 0x802634
	.equiv "gsys::ModelScenePfx::isGlareFilterEnabled()", _text + 0x802660
	.equiv "gsys::ModelScenePfx::isPaintDOFEnabled()", _text + 0x802670
	.equiv "gsys::ModelScenePfx::ModelScenePfx()", _text + 0x80269C
	.equiv "gsys::ModelScenePfx::initialize()", _text + 0x802784
	.equiv "gsys::ModelScenePfx::calc()", _text + 0x802AEC
	.equiv "gsys::ModelScenePfx::calcView()", _text + 0x802D78
	.equiv "gsys::ModelScenePfx::calcGPU()", _text + 0x8030E8
	.equiv "gsys::ModelScenePfx::drawDOF()", _text + 0x8032C8
	.equiv "gsys::ModelScenePfx::drawBloom()", _text + 0x8033C0
	.equiv "gsys::ModelScenePfx::drawHDRComposeColorCorrection()", _text + 0x8034B8
	.equiv "gsys::ModelScenePfx::drawAutoExposure()", _text + 0x8036B4
	.equiv "gsys::ModelScenePfx::drawEdgeEffect()", _text + 0x803704
	.equiv "gsys::ModelScenePfx::drawSkyLightScatterDome()", _text + 0x80380C
	.equiv "gsys::ModelScenePfx::drawSkyLightScatterScreen()", _text + 0x8038A0
	.equiv "gsys::ModelScenePfx::drawGlareFilter()", _text + 0x803914
	.equiv "FUN_0E983A5C:FID_conflict:gsys::ModelSceneFx::CreateArg::CreateArg()", _text + 0x803A5C
	.equiv "gsys::ModelRenderCache::loadOcclusionQuery()", _text + 0x803B40
	.equiv "gsys::ModelRenderCache::reset()", _text + 0x803BAC
	.equiv "gsys::ModelRenderCache::ModelRenderCache()", _text + 0x803C74
	.equiv "gsys::ModelRenderCache::~ModelRenderCache()", _text + 0x80424C
	.equiv "gsys::ModelRenderCache::loadColorCtrl()", _text + 0x8042A0
	.equiv "gsys::ModelRenderCache::loadPolygonCtrl()", _text + 0x804648
	.equiv "gsys::ModelRenderCache::loadResource()", _text + 0x804694
	.equiv "gsys::ModelRenderCache::setForceBlendColor()", _text + 0x804D60
	.equiv "gsys::PaintDOF::PaintDOF()", _text + 0x804DCC
	.equiv "gsys::PaintDOF::~PaintDOF()", _text + 0x804EB0
	.equiv "gsys::PaintDOF::initialize()", _text + 0x804FF0
	.equiv "gsys::PaintDOF::draw()", _text + 0x805400
	.equiv "gsys::ModelShaderProgram::ModelShaderProgram()", _text + 0x806500
	.equiv "gsys::ModelShaderProgram::clear()", _text + 0x806560
	.equiv "gsys::ModelShaderProgram::bind()", _text + 0x8065BC
	.equiv "gsys::ModelShaderProgram::activateUBO()", _text + 0x80682C
	.equiv "gsys::ModelShaderProgram::activateResource()", _text + 0x8068E8
	.equiv "gsys::ModelShaderProgram::activateSampler()", _text + 0x8069C8
	.equiv "gsys::ModelShaderProgram::activateInstance()", _text + 0x8069E8
	.equiv "gsys::ModelShaderProgram::calcInfo()", _text + 0x806B90
	.equiv "gsys::ModelShaderProgram::calcInstanceDisplayListSize()", _text + 0x806BE4
	.equiv "gsys::ModelShaderProgram::calcResourceDisplayListSize()", _text + 0x806FB8
	.equiv "gsys::MaskedSpotLightRig::updateObj_()", _text + 0x8074A8
	.equiv "FUN_0E987B48:FID_conflict:void_gsys::LightRigObj::updateFromModel()", _text + 0x807B48
	.equiv "FUN_0E988084:gsys::LightRig::LightRig()", _text + 0x808084
	.equiv "FUN_0E9889AC:FID_conflict:void_gsys::LightRigObj::clear()", _text + 0x8089AC
	.equiv "FUN_0E988A88:void_gsys::LightRig::bindBone_()", _text + 0x808A88
	.equiv "gsys::GBuffer::GBuffer()", _text + 0x808C38
	.equiv "gsys::GBuffer::~GBuffer()", _text + 0x808CD4
	.equiv "gsys::GBuffer::clearRenderingFlags()", _text + 0x808D54
	.equiv "gsys::GBuffer::initialize()", _text + 0x808EC0
	.equiv "gsys::GBuffer::setClearColor()", _text + 0x808FF4
	.equiv "gsys::GBuffer::begin()", _text + 0x809040
	.equiv "gsys::GBuffer::getBufferTypeName()", _text + 0x809554
	.equiv "gsys::GBuffer::expand()", _text + 0x809568
	.equiv "gsys::GBuffer::beginDeferredShading()", _text + 0x809E24
	.equiv "gsys::GBuffer::endDeferredShading()", _text + 0x80A294
	.equiv "FUN_0E98A2DC:gsys::GBuffer::invalidate()", _text + 0x80A2DC
	.equiv "FUN_0E98A35C:gsys::GBuffer::invalidate()", _text + 0x80A35C
	.equiv "gsys::GBuffer::setFormat()", _text + 0x80A410
	.equiv "gsys::FFLResource::loadResource_()", _text + 0x80A610
	.equiv "gsys::FFLResource::loadCompressor_()", _text + 0x80A6D0
	.equiv "gsys::FFLResource::initializeFFL()", _text + 0x80A728
	.equiv "gsys::FFLResource::setMasterScale()", _text + 0x80ABA8
	.equiv "gsys::FFLResource::calcTextureBufferSizeIconWithBody_()", _text + 0x80ABFC
	.equiv "gsys::FFLResource::getBufferSizeIcon()", _text + 0x80AC60
	.equiv "gsys::FFLResource::getBufferSizeBase()", _text + 0x80ACA0
	.equiv "gsys::FFLResource::getBufferSize()", _text + 0x80ACD8
	.equiv "gsys::FFLResource::getTemporaryBufferSize()", _text + 0x80AD3C
	.equiv "gsys::FFLResource::getTemporaryBufferSizeIcon()", _text + 0x80ADD0
	.equiv "gsys::FFLResource::FFLResource()", _text + 0x80AE70
	.equiv "gsys::FFLResource::createIconBuffer_()", _text + 0x80AF80
	.equiv "gsys::FFLResource::initializeCPU_()", _text + 0x80B130
	.equiv "gsys::FFLResource::initializeGPU()", _text + 0x80B388
	.equiv "gsys::FFLResource::initializeGPUWithDelay()", _text + 0x80B910
	.equiv "gsys::FFLResource::initialize_()", _text + 0x80B990
	.equiv "FUN_0E98BA28:FID_conflict:gsys::FFLResource::createIcon()", _text + 0x80BA28
	.equiv "gsys::FFLResource::initializeIcon_()", _text + 0x80BAD8
	.equiv "FUN_0E98BB70:FID_conflict:gsys::FFLResource::createIcon()", _text + 0x80BB70
	.equiv "gsys::ModelUnitDrawArray::setSize()", _text + 0x80BC68
	.equiv "gsys::ModelUnitDrawArray::createMaterialBuffer()", _text + 0x80BC80
	.equiv "gsys::ModelUnitDrawArray::copyMaterial()", _text + 0x80BF30
	.equiv "gsys::ModelUnitDrawArray::createLocalLightMapObj()", _text + 0x80C02C
	.equiv "gsys::ModelUnitDrawArray::~ModelUnitDrawArray()", _text + 0x80C154
	.equiv "gsys::ModelUnitDrawArray::initialize_()", _text + 0x80C2A8
	.equiv "gsys::ModelRenderUnitNWArray::drawDirect_()", _text + 0x80C48C
	.equiv "gsys::ModelRenderUnitNWArray::calcDisplayList()", _text + 0x80C5E8
	.equiv "gsys::ModelUnitDrawArray::calcDisplayList_()", _text + 0x80C7A8
	.equiv "gsys::ModelUnitDrawArray::calcDrawBackGround_()", _text + 0x80C818
	.equiv "gsys::ModelUnitDrawArray::CreateArg::CreateArg()", _text + 0x80CA88
	.equiv "gsys::ModelRenderUnitNWArray::initialize()", _text + 0x80CBB4
	.equiv "FUN_0E98D120:void_gsys::ModelUnitDrawArray::drawEachNode_()", _text + 0x80D120
	.equiv "FUN_0E98D68C:void_gsys::ModelUnitDrawArray::drawEachNode_()", _text + 0x80D68C
	.equiv "gsys::EffectLightMgr::setLight()", _text + 0x80DBA8
	.equiv "gsys::EffectLensFlareMgr::setLensFlare()", _text + 0x80DEBC
	.equiv "gsys::ParticleCB::lightPlacementCalcCallback()", _text + 0x80E2D0
	.equiv "gsys::ParticleCB::lensFlarePlacementCalcCallback()", _text + 0x80E840
	.equiv "gsys::XluZPrePass::XluZPrePass()", _text + 0x80EAF0
	.equiv "gsys::XluZPrePass::~XluZPrePass()", _text + 0x80EBDC
	.equiv "gsys::XluZPrePass::initialize()", _text + 0x80EC98
	.equiv "gsys::XluZPrePass::clear()", _text + 0x80ED6C
	.equiv "gsys::XluZPrePass::sort()", _text + 0x80EDD8
	.equiv "gsys::XluZPrePass::isValid()", _text + 0x80F08C
	.equiv "gsys::XluZPrePass::draw()", _text + 0x80F0E8
	.equiv "gsys::XluZPrePass::drawXluIndirect()", _text + 0x80F244
	.equiv "gsys::ParticleScene::initialize()", _text + 0x80F2FC
	.equiv "gsys::ModelViewInfo::ModelViewInfo()", _text + 0x80F8D0
	.equiv "gsys::ModelViewInfo::~ModelViewInfo()", _text + 0x80F940
	.equiv "gsys::ModelViewInfo::calcLodLevel()", _text + 0x80F954
	.equiv "gsys::ModelViewInfo::forceLodLevel()", _text + 0x80F9B0
	.equiv "gsys::GPUStressAnalyzer::GPUStressAnalyzer()", _text + 0x80F9E0
	.equiv "gsys::GPUStressAnalyzer::initialize()", _text + 0x80FBF0
	.equiv "gsys::GPUStressAnalyzer::AdjustorBase::preCalc()", _text + 0x80FCE8
	.equiv "gsys::GPUStressAnalyzer::AdjustorBase::restore()", _text + 0x80FD60
	.equiv "gsys::GPUStressAnalyzer::AdjustorBase::postCalc()", _text + 0x80FDE8
	.equiv "gsys::GPUStressAnalyzer::calc()", _text + 0x80FE70
	.equiv "gsys::ModelShader::ModelShader()", _text + 0x810698
	.equiv "gsys::ModelShader::cleanUp()", _text + 0x810778
	.equiv "gsys::ModelShader::getAssignName()", _text + 0x810884
	.equiv "gsys::ModelShader::initialize()", _text + 0x810898
	.equiv "gsys::ModelShader::setShadingModel()", _text + 0x810A04
	.equiv "gsys::ModelShader::VariationKey::VariationKey()", _text + 0x810A98
	.equiv "gsys::ModelShader::VariationKey::pushBack()", _text + 0x810AE0
	.equiv "FUN_0E990B20:gsys::ModelShader::VariationKey::search()", _text + 0x810B20
	.equiv "gsys::ModelShader::calcShaderOption()", _text + 0x810C28
	.equiv "gsys::ModelShader::fillMaterialUniformBlock()", _text + 0x811604
	.equiv "gsys::ModelShader::getValidAssignName()", _text + 0x8116E0
	.equiv "FUN_0E991738:gsys::ModelShader::VariationKey::search()", _text + 0x811738
	.equiv "gsys::EdgeEffect::EdgeEffect()", _text + 0x811940
	.equiv "gsys::EdgeEffect::finalize()", _text + 0x812994
	.equiv "gsys::EdgeEffect::initialize()", _text + 0x812B3C
	.equiv "gsys::EdgeEffect::transformPlane()", _text + 0x8131AC
	.equiv "gsys::EdgeEffect::calcView()", _text + 0x81340C
	.equiv "gsys::EdgeEffect::updateIndirectParam_()", _text + 0x8136DC
	.equiv "gsys::EdgeEffect::updateIndirectMatrix_()", _text + 0x813760
	.equiv "gsys::EdgeEffect::calcGPU()", _text + 0x81383C
	.equiv "gsys::EdgeEffect::getShader()", _text + 0x813BEC
	.equiv "gsys::EdgeEffect::setUniformBlock()", _text + 0x813C60
	.equiv "gsys::EdgeEffect::drawLinearDepthMask()", _text + 0x813D1C
	.equiv "gsys::EdgeEffect::drawEdge()", _text + 0x814264
	.equiv "gsys::EdgeEffect::drawTexture_()", _text + 0x8148CC
	.equiv "gsys::EdgeEffect::drawReduce4()", _text + 0x81492C
	.equiv "gsys::EdgeEffect::drawMipmap()", _text + 0x814E14
	.equiv "gsys::EdgeEffect::drawGaussian()", _text + 0x815348
	.equiv "gsys::EdgeEffect::drawBlur()", _text + 0x815D2C
	.equiv "gsys::EdgeEffect::getComposeShaderIndex()", _text + 0x815DDC
	.equiv "gsys::EdgeEffect::getComposeShader()", _text + 0x815E14
	.equiv "gsys::EdgeEffect::drawComposeEdge()", _text + 0x815E54
	.equiv "gsys::EdgeEffect::drawFinalCompose()", _text + 0x816644
	.equiv "FUN_0E996DDC:gsys::EdgeEffect::draw()", _text + 0x816DDC
	.equiv "FUN_0E99780C:gsys::EdgeEffect::draw()", _text + 0x81780C
	.equiv "gsys::ModelRenderUnitFFL::bindResource()", _text + 0x817FB8
	.equiv "gsys::ModelRenderUnitFFL::draw()", _text + 0x818054
	.equiv "gsys::ModelFFL::createFrameHeapDL()", _text + 0x818158
	.equiv "gsys::ModelFFL::createHeapDL()", _text + 0x8181D0
	.equiv "gsys::ModelFFL::makeDL()", _text + 0x8184E4
	.equiv "gsys::ModelFFL::cleanUpDL()", _text + 0x818574
	.equiv "gsys::ModelFFL::searchBoneIndex()", _text + 0x8187E0
	.equiv "gsys::ModelFFL::unbindDL()", _text + 0x818C40
	.equiv "gsys::ModelFFL::calcGPUSkinning_()", _text + 0x818D38
	.equiv "gsys::ModelFFL::ModelFFL()", _text + 0x818E28
	.equiv "gsys::ModelFFL::create_()", _text + 0x818F44
	.equiv "gsys::Layer3D::setModelScene()", _text + 0x819A9C
	.equiv "gsys::Layer3D::Layer3D()", _text + 0x819B84
	.equiv "gsys::SystemTask::setupFrameworkDrawContextLockFunctions()", _text + 0x81A4E4
	.equiv "gsys::SystemTask::resetScanBuffer_()", _text + 0x81AC0C
	.equiv "gsys::SystemTask::prepare()", _text + 0x81AD9C
	.equiv "gsys::SystemTask::createResource()", _text + 0x81B670
	.equiv "gsys::SystemTask::calcScene()", _text + 0x81B9A8
	.equiv "gsys::SystemTask::isEnableDrawDRCTwice()", _text + 0x81BA68
	.equiv "gsys::SystemTask::setPauseLayer()", _text + 0x81BA84
	.equiv "gsys::SystemTask::pauseDraw()", _text + 0x81BD98
	.equiv "gsys::SystemTask::callback_()", _text + 0x81BE60
	.equiv "gsys::SystemTask::preCalc_()", _text + 0x81C0C4
	.equiv "gsys::SystemTask::postCalc_()", _text + 0x81C870
	.equiv "gsys::SystemTask::reserveCopy_()", _text + 0x81D400
	.equiv "gsys::SystemTask::invokeDrawTV_()", _text + 0x81D55C
	.equiv "gsys::ModelSceneContext::ModelSceneContext()", _text + 0x81DDF4
	.equiv "gsys::ModelSceneContext::clear()", _text + 0x81DFAC
	.equiv "gsys::ModelSceneContext::initializeScene()", _text + 0x81E074
	.equiv "gsys::ModelSceneContext::updateFrame()", _text + 0x81E104
	.equiv "gsys::ModelSceneContext::updateParticleFrameDepthBuffer_()", _text + 0x81E114
	.equiv "gsys::ModelSceneContext::drawParticle()", _text + 0x81E190
	.equiv "gsys::ModelSceneContext::isQueueMaskValid()", _text + 0x81E4E8
	.equiv "gsys::ModelSceneContext::drawQueue()", _text + 0x81E52C
	.equiv "gsys::Outline::Outline()", _text + 0x81E594
	.equiv "gsys::Outline::SilhouetteDepthBuffer::SilhouetteDepthBuffer()", _text + 0x81E634
	.equiv "gsys::Outline::SilhouetteDepthBuffer::setBufferSize()", _text + 0x81E6A4
	.equiv "gsys::Outline::initialize()", _text + 0x81E800
	.equiv "gsys::Outline::setSilhouetteDeptBufferSize()", _text + 0x81E8CC
	.equiv "gsys::Outline::SilhouetteDepthBuffer::clear()", _text + 0x81E914
	.equiv "gsys::Outline::invalidateSilhouetteDepthBuffer()", _text + 0x81EB30
	.equiv "gsys::Outline::endSilhouetteDepthBuffer()", _text + 0x81EB64
	.equiv "gsys::Outline::getSilhouetteDepthBufferSampler()", _text + 0x81EB88
	.equiv "gsys::ModelSceneAreaEnv::initializeEnv()", _text + 0x81EBE0
	.equiv "gsys::ModelSceneAreaEnv::ModelSceneAreaEnv()", _text + 0x81EC30
	.equiv "gsys::ModelSceneAreaEnv::cleanup()", _text + 0x81EEA0
	.equiv "gsys::ModelSceneAreaEnv::~ModelSceneAreaEnv()", _text + 0x81EF20
	.equiv "gsys::ModelSceneAreaEnv::initialize()", _text + 0x81F064
	.equiv "<unnamed>::ChangeBoneToMatrix34f()", _text + 0x81F428
	.equiv "gsys::ModelSceneAreaEnv::importEnvExtData()", _text + 0x81F4FC
	.equiv "gsys::ModelSceneAreaEnv::buildEnv()", _text + 0x81F648
	.equiv "gsys::ModelSceneAreaEnv::importEnvExtDataMaster()", _text + 0x81FAA4
	.equiv "gsys::ModelSceneAreaEnv::getConfig()", _text + 0x81FB08
	.equiv "gsys::ModelSceneAreaEnv::setResource()", _text + 0x81FD6C
	.equiv "gsys::ModelSceneAreaEnv::getEnvOBB()", _text + 0x820020
	.equiv "gsys::ModelSceneAreaEnv::getEnvAABB()", _text + 0x820424
	.equiv "FUN_0E9A0E1C:gsys::ModelSceneAreaEnv::getEnv()", _text + 0x820E1C
	.equiv "FUN_0E9A0E8C:gsys::ModelSceneAreaEnv::getEnv()", _text + 0x820E8C
	.equiv "gsys::ModelSceneAreaEnv::getPrincipalIndex()", _text + 0x820F1C
	.equiv "gsys::ModelSceneAreaEnv::getAreaEnv()", _text + 0x820FB0
	.equiv "gsys::ModelSceneAreaEnv::getDefaultAreaEnv()", _text + 0x820FE4
	.equiv "void_sead::Matrix34CalcCommon::makeQT()", _text + 0x8211E4
	.equiv "FUN_0E9A1298:void_sead::Buffer::heapSort()", _text + 0x821298
	.equiv "gsys::G3dResMaterialEx::getShaderOptionUBO()", _text + 0x821560
	.equiv "gsys::G3dResMaterialEx::G3dResMaterialEx()", _text + 0x821584
	.equiv "gsys::G3dResMaterialEx::clearDependShader()", _text + 0x8216E8
	.equiv "gsys::G3dResMaterialEx::initialize()", _text + 0x8217AC
	.equiv "gsys::G3dResMaterialEx::bindShader()", _text + 0x821830
	.equiv "gsys::G3dResMaterialEx::updateDependShader()", _text + 0x8218B0
	.equiv "gsys::G3dResMaterialEx::activateRenderState()", _text + 0x821B80
	.equiv "gsys::G3dResMaterialEx::updateRenderStateAndRenderInfo()", _text + 0x821C88
	.equiv "gsys::G3dResMaterialEx::updateResUBO()", _text + 0x822454
	.equiv "gsys::G3dResMaterialEx::isFx()", _text + 0x8228E0
	.equiv "gsys::ModelRenderUnitNode::ModelRenderUnitNode()", _text + 0x822A68
	.equiv "gsys::ModelRenderUnitSortNode::ModelRenderUnitSortNode()", _text + 0x822AB0
	.equiv "gsys::ModelRenderUnitNodeArray::ModelRenderUnitNodeArray()", _text + 0x822AFC
	.equiv "gsys::ModelRenderUnitNodeArray::initialize()", _text + 0x822C70
	.equiv "gsys::BackGroundBuffer::BackGroundBuffer()", _text + 0x823168
	.equiv "gsys::BackGroundBuffer::Context::~Context()", _text + 0x8234BC
	.equiv "gsys::BackGroundBuffer::~BackGroundBuffer()", _text + 0x82351C
	.equiv "gsys::BackGroundBuffer::Context::Context()", _text + 0x823634
	.equiv "gsys::BackGroundBuffer::initialize()", _text + 0x8236A4
	.equiv "gsys::BackGroundBuffer::begin()", _text + 0x82378C
	.equiv "gsys::BackGroundBuffer::end()", _text + 0x823C84
	.equiv "gsys::ModelJobQueue::ModelJobQueue()", _text + 0x824254
	.equiv "gsys::ModelJobQueue::~ModelJobQueue()", _text + 0x824358
	.equiv "gsys::ModelJobQueue::erase()", _text + 0x824448
	.equiv "gsys::ModelJobQueue::Job::Job()", _text + 0x824494
	.equiv "gsys::ModelJobQueue::Job::initialize()", _text + 0x824528
	.equiv "FUN_0E9A453C:gsys::ModelJobQueue::initialize_()", _text + 0x82453C
	.equiv "gsys::ModelJobQueue::clearJobQueue_()", _text + 0x824674
	.equiv "gsys::ModelJobQueue::Job::reset()", _text + 0x8246AC
	.equiv "gsys::ModelJobQueue::update_()", _text + 0x8246C0
	.equiv "gsys::ModelJobQueue::checkQueue_()", _text + 0x824870
	.equiv "gsys::ModelJobQueueInstanceUpdater::ModelJobQueueInstanceUpdater()", _text + 0x824908
	.equiv "FUN_0E9A49F0:gsys::ModelJobQueue::initialize_()", _text + 0x8249F0
	.equiv "gsys::ModelJobQueueInstanceUpdater::clear()", _text + 0x8249F4
	.equiv "gsys::ModelJobQueueInstanceUpdater::invoke_()", _text + 0x824A74
	.equiv "gsys::ModelJobQueueSceneUpdater::ModelJobQueueSceneUpdater()", _text + 0x824BB0
	.equiv "gsys::ModelJobQueueSceneUpdater::~ModelJobQueueSceneUpdater()", _text + 0x824D90
	.equiv "gsys::ModelJobQueueSceneUpdater::initialize()", _text + 0x824E20
	.equiv "gsys::ModelJobQueueSceneUpdater::setDrawRequestFlag()", _text + 0x825018
	.equiv "gsys::ModelJobQueueSceneUpdater::clearViewData()", _text + 0x825078
	.equiv "gsys::ModelJobQueueSceneUpdater::calcViewData()", _text + 0x8250B0
	.equiv "gsys::ModelJobQueueSceneUpdater::updateModel()", _text + 0x82526C
	.equiv "gsys::ModelJobQueueSceneUpdater::preSort()", _text + 0x82541C
	.equiv "gsys::ModelJobQueueSceneUpdater::drawBG()", _text + 0x8257FC
	.equiv "gsys::ModelJobQueueSceneUpdater::calcDrawBackGround()", _text + 0x825888
	.equiv "gsys::ModelJobQueueSceneUpdater::updateGPU()", _text + 0x8258D8
	.equiv "gsys::ModelJobQueueSceneUpdater::invoke_()", _text + 0x825984
	.equiv "gsys::ParticleMgr::ParticleMgr()", _text + 0x825F78
	.equiv "gsys::ParticleMgr::createInstance()", _text + 0x8261C8
	.equiv "gsys::ParticleMgr::CLEAR_CALC_LOAD()", _text + 0x82634C
	.equiv "gsys::ParticleMgr::initialize()", _text + 0x826388
	.equiv "gsys::ParticleMgr::BEGIN_CALC_LOAD()", _text + 0x826C44
	.equiv "gsys::ParticleMgr::END_CALC_LOAD()", _text + 0x826D04
	.equiv "gsys::ParticleMgr::drawList()", _text + 0x826DD8
	.equiv "gsys::ParticleMgr::clearScenePlacementData()", _text + 0x827090
	.equiv "gsys::ParticleMgr::_calcFirst()", _text + 0x82710C
	.equiv "gsys::ParticleMgr::getTimeRate()", _text + 0x8272E8
	.equiv "gsys::ParticleMgr::_calcEmitter()", _text + 0x82731C
	.equiv "gsys::ParticleMgr::_postEmitterCalc()", _text + 0x8273AC
	.equiv "gsys::ParticleMgr::_pushParticleCalcJob()", _text + 0x827468
	.equiv "gsys::ParticleMgr::_pushChildParticleCalcJob()", _text + 0x8274EC
	.equiv "gsys::ParticleMgr::calcStep1()", _text + 0x827648
	.equiv "gsys::ParticleMgr::_pushCalcEmitterJob()", _text + 0x827850
	.equiv "gsys::ParticleMgr::calcStep2()", _text + 0x82790C
	.equiv "gsys::ParticleMgr::calcStep3()", _text + 0x827980
	.equiv "gsys::ParticleMgr::calcStep4()", _text + 0x8279F4
	.equiv "gsys::ParticleMgr::calcStep5()", _text + 0x827A68
	.equiv "gsys::ParticleMgr::_isFilterMatch()", _text + 0x827AD8
	.equiv "gsys::ParticleMgr::getNumModel()", _text + 0x827BE8
	.equiv "gsys::ParticleMgr::getModelName()", _text + 0x827C70
	.equiv "gsys::ParticleMgr::getNumBone()", _text + 0x827D70
	.equiv "gsys::ParticleMgr::getBoneName()", _text + 0x827E8C
	.equiv "gsys::ParticleMgr::getBoneMtx()", _text + 0x828088
	.equiv "gsys::ParticleMgr::CalcStreamOutEmittter()", _text + 0x82826C
	.equiv "gsys::ParticleMgr::addGroupInfo()", _text + 0x8282D8
	.equiv "gsys::ParticleMgr::fixScenePlacementData()", _text + 0x828320
	.equiv "gsys::ParticleMgr::isNeedDraw()", _text + 0x82839C
	.equiv "gsys::ParticleMgr::isEnableDrawInfo()", _text + 0x828438
	.equiv "gsys::ParticleMgr::ParticleCalcJob::invoke()", _text + 0x82859C
	.equiv "gsys::PointLight::PointLight()", _text + 0x82A224
	.equiv "FUN_0E9AAF78:FID_conflict:void_gsys::LightRigObj::updateFromModel()", _text + 0x82AF78
	.equiv "FUN_0E9AB4B4:gsys::LightRig::LightRig()", _text + 0x82B4B4
	.equiv "FUN_0E9ABDDC:FID_conflict:void_gsys::LightRigObj::clear()", _text + 0x82BDDC
	.equiv "FUN_0E9ABEB8:void_gsys::LightRig::bindBone_()", _text + 0x82BEB8
	.equiv "gsys::SealShadowMgr::SealShadowMgr()", _text + 0x82C068
	.equiv "gsys::SealShadowMgr::calcTextureColor_()", _text + 0x82C3F8
	.equiv "gsys::SealShadowMgr::updateTexture_()", _text + 0x82C5AC
	.equiv "gsys::SealShadowMgr::initialize()", _text + 0x82C908
	.equiv "gsys::SealShadowMgr::setPolygonOffset_()", _text + 0x82CFAC
	.equiv "gsys::SealShadowMgr::draw()", _text + 0x82CFF0
	.equiv "gsys::SealShadowMgr::CreateArg::CreateArg()", _text + 0x82D6A0
	.equiv "gsys::ModelRig::ModelRig()", _text + 0x82D900
	.equiv "gsys::ModelRig::bind()", _text + 0x82DF80
	.equiv "gsys::RenderBufferContext::BufferData::BufferData()", _text + 0x82E6D0
	.equiv "gsys::RenderBufferContext::RenderBufferContext()", _text + 0x82E7CC
	.equiv "FUN_0E9AE8D8:FID_conflict:gsys::RenderBufferContext::BufferData::releaseNLDepthBuffer()", _text + 0x82E8D8
	.equiv "FUN_0E9AE93C:FID_conflict:gsys::RenderBufferContext::BufferData::releaseNLDepthBuffer()", _text + 0x82E93C
	.equiv "gsys::RenderBufferContext::BufferData::releaseDepthBuffer()", _text + 0x82E9A0
	.equiv "gsys::RenderBufferContext::release()", _text + 0x82EA0C
	.equiv "gsys::RenderBufferContext::BufferData::releaseAll()", _text + 0x82EAE8
	.equiv "gsys::RenderBufferContext::BufferData::~BufferData()", _text + 0x82EB24
	.equiv "gsys::RenderBufferContext::~RenderBufferContext()", _text + 0x82EBB0
	.equiv "gsys::RenderBufferContext::initialize()", _text + 0x82ED14
	.equiv "gsys::RenderBufferContext::BufferData::clear()", _text + 0x82EFF4
	.equiv "gsys::RenderBufferContext::modifyRenderBufferSize_()", _text + 0x82F1C4
	.equiv "gsys::RenderBufferContext::calc()", _text + 0x82F324
	.equiv "gsys::RenderBufferContext::BufferData::enableHiZ()", _text + 0x82FBF4
	.equiv "gsys::RenderBufferContext::BufferData::bindAndApply()", _text + 0x82FC20
	.equiv "gsys::RenderBufferContext::alloc()", _text + 0x82FC5C
	.equiv "gsys::RenderBufferContext::updateHalfBuffer()", _text + 0x830520
	.equiv "gsys::RenderBufferContext::replaceRenderBufferToAABuffer()", _text + 0x830CA4
	.equiv "gsys::RenderBufferContext::releaseAABuffer()", _text + 0x830D80
	.equiv "gsys::RenderBufferContext::drawBack()", _text + 0x830EC0
	.equiv "gsys::RenderBufferContext::copyForReuseOpa()", _text + 0x83164C
	.equiv "gsys::RenderBufferContext::reuseOpa()", _text + 0x831938
	.equiv "gsys::RenderBufferContext::expandHiZ()", _text + 0x831AEC
	.equiv "gsys::RenderBufferContext::entryGBuffer()", _text + 0x8326BC
	.equiv "gsys::EffectModelDrawUnit::destroyModel()", _text + 0x83297C
	.equiv "gsys::EffectModelDrawUnit::destroy()", _text + 0x8329C4
	.equiv "gsys::EffectModelDrawUnit::~EffectModelDrawUnit()", _text + 0x832A70
	.equiv "gsys::EffectModelDrawUnit::createModel()", _text + 0x832AC0
	.equiv "gsys::EffectModelDrawUnit::initialize()", _text + 0x832BC0
	.equiv "gsys::EffectModelDrawUnit::clear()", _text + 0x832EBC
	.equiv "gsys::EffectModelDrawUnit::addInstance()", _text + 0x832EF4
	.equiv "gsys::EffectModelDrawUnit::pushBack()", _text + 0x832FC8
	.equiv "gsys::EffectModelDrawMgr::~EffectModelDrawMgr()", _text + 0x833194
	.equiv "gsys::EffectModelDrawMgr::initialize()", _text + 0x83326C
	.equiv "gsys::EffectModelDrawMgr::addModel()", _text + 0x833350
	.equiv "gsys::EffectModelDrawMgr::addInstance()", _text + 0x8334A0
	.equiv "gsys::ModelRenderUnit::ModelRenderUnit()", _text + 0x833698
	.equiv "gsys::ModelRenderUnit::~ModelRenderUnit()", _text + 0x833718
	.equiv "gsys::ModelRenderUnit::initialize()", _text + 0x83372C
	.equiv "gsys::ModelSceneGI::isPlanarReflectionEnabled()", _text + 0x8337EC
	.equiv "gsys::ModelSceneGI::isSSIIEnabled()", _text + 0x833818
	.equiv "gsys::ModelSceneGI::isLightProbeEnabled()", _text + 0x833844
	.equiv "gsys::ModelSceneGI::isLocalReflectionEnabled()", _text + 0x83387C
	.equiv "gsys::ModelSceneGI::ModelSceneGI()", _text + 0x8338A8
	.equiv "gsys::ModelSceneGI::~ModelSceneGI()", _text + 0x833930
	.equiv "gsys::ModelSceneGI::initialize()", _text + 0x833A20
	.equiv "gsys::ModelSceneGI::calcViewSSII()", _text + 0x833C08
	.equiv "gsys::ModelSceneGI::calcViewLightProbe()", _text + 0x833C48
	.equiv "gsys::ModelSceneGI::calcViewLocalReflection()", _text + 0x833D18
	.equiv "gsys::ModelSceneGI::calcGPU()", _text + 0x833E4C
	.equiv "gsys::ModelSceneGI::drawPlanarReflection()", _text + 0x833EB4
	.equiv "gsys::ModelSceneGI::releasePlanarReflection()", _text + 0x833F44
	.equiv "gsys::ModelSceneGI::drawSSII()", _text + 0x833F7C
	.equiv "gsys::ModelSceneGI::copyForSSIIReprojection()", _text + 0x83443C
	.equiv "gsys::ModelSceneGI::drawLocalReflection()", _text + 0x8344CC
	.equiv "gsys::ModelSceneGI::copyForLocalReflection()", _text + 0x834578
	.equiv "gsys::ModelSceneGI::releaseLocalReflection()", _text + 0x8345FC
	.equiv "FUN_0E9B4638:FID_conflict:gsys::ModelSceneFx::CreateArg::CreateArg()", _text + 0x834638
	.equiv "gsys::ParticleConfig::ParticleConfig()", _text + 0x834694
	.equiv "gsys::ParticleConfig::applyResouce()", _text + 0x83572C
	.equiv "gsys::ParticleConfig::getLightMapName()", _text + 0x835784
	.equiv "gsys::ModelSceneEnv::AreaEnvGetter::AreaEnvGetter()", _text + 0x835E2C
	.equiv "gsys::ModelSceneEnv::ModelSceneEnv()", _text + 0x835EAC
	.equiv "FUN_0E9B60EC:FID_conflict:gsys::ModelSceneEnv::freeParts()", _text + 0x8360EC
	.equiv "gsys::ModelSceneEnv::freeResource()", _text + 0x836108
	.equiv "FUN_0E9B61FC:FID_conflict:gsys::ModelSceneEnv::freeParts()", _text + 0x8361FC
	.equiv "gsys::ModelSceneEnv::clearAllImpl()", _text + 0x836218
	.equiv "gsys::ModelSceneEnv::finalizeDataSet()", _text + 0x836400
	.equiv "gsys::ModelSceneEnv::finalize()", _text + 0x8365E0
	.equiv "gsys::ModelSceneEnv::~ModelSceneEnv()", _text + 0x83671C
	.equiv "gsys::ModelSceneEnv::initializeDataSet()", _text + 0x8367DC
	.equiv "gsys::ModelSceneEnv::AreaEnvGetter::initialize()", _text + 0x8383F0
	.equiv "gsys::ModelSceneEnv::initialize()", _text + 0x838498
	.equiv "gsys::ModelSceneEnv::checkUpdate()", _text + 0x83895C
	.equiv "gsys::ModelSceneEnv::UpdateCheckerNode::UpdateCheckerNode()", _text + 0x838A9C
	.equiv "gsys::ModelSceneEnv::setFilenameImpl()", _text + 0x838D28
	.equiv "gsys::ModelSceneEnv::allocatePartsLinker()", _text + 0x839020
	.equiv "gsys::ModelSceneEnv::allocateParts()", _text + 0x8390A4
	.equiv "gsys::ModelSceneEnv::buildPartsSet()", _text + 0x839280
	.equiv "gsys::ModelSceneEnv::searchEnvBinary()", _text + 0x83A1B0
	.equiv "gsys::ModelSceneEnv::buildConvertPartsSet()", _text + 0x83A764
	.equiv "gsys::ModelSceneEnv::getParts()", _text + 0x83B1D8
	.equiv "gsys::ModelSceneEnv::checkMissingParts()", _text + 0x83B9D0
	.equiv "gsys::ModelSceneEnv::buildEnvSet()", _text + 0x83BB98
	.equiv "gsys::ModelSceneEnv::loadBinaryImpl()", _text + 0x83C464
	.equiv "gsys::ModelSceneEnv::setEnvMap()", _text + 0x83CBF8
	.equiv "gsys::ModelSceneEnv::setSnapshotEnvMap()", _text + 0x83CE30
	.equiv "gsys::ModelSceneEnv::setAreaEnv()", _text + 0x83D068
	.equiv "gsys::ModelSceneEnv::setEdgeEffectTexture()", _text + 0x83D464
	.equiv "gsys::ModelSceneEnv::setDoFTexture()", _text + 0x83D504
	.equiv "gsys::ModelSceneEnv::setProjectionShadow()", _text + 0x83D5A4
	.equiv "gsys::ModelSceneEnv::clearEnv()", _text + 0x83D61C
	.equiv "gsys::ModelSceneEnv::applyEnvSetUnit()", _text + 0x83D6BC
	.equiv "gsys::ModelSceneEnv::applyEnvSetFromIndex()", _text + 0x83D7DC
	.equiv "gsys::ModelSceneEnv::calc()", _text + 0x83DB44
	.equiv "gsys::ModelSceneEnv::setEnvMapContinue()", _text + 0x83DF58
	.equiv "gsys::ModelSceneEnv::AreaEnvGetter::getAccessoryKey()", _text + 0x83E404
	.equiv "gsys::Model::Model()", _text + 0x850B04
	.equiv "gsys::Model::initialize_()", _text + 0x850D74
	.equiv "gsys::Model::create_()", _text + 0x850E48
	.equiv "gsys::Model::searchModelFFL()", _text + 0x850F78
	.equiv "FUN_0E9D1024:gsys::Model::applyFFLColor()", _text + 0x851024
	.equiv "gsys::Model::bindModelFx()", _text + 0x851168
	.equiv "gsys::Model::updateTree_()", _text + 0x85127C
	.equiv "gsys::Model::addModelUnit_()", _text + 0x851340
	.equiv "gsys::Model::createFxModel_()", _text + 0x851554
	.equiv "FUN_0E9D1690:gsys::Model::pushBack()", _text + 0x851690
	.equiv "FUN_0E9D18E4:gsys::Model::pushBack()", _text + 0x8518E4
	.equiv "gsys::Model::postCreateModel_()", _text + 0x8519BC
	.equiv "FUN_0E9D1A8C:gsys::Model::create()", _text + 0x851A8C
	.equiv "FUN_0E9D1B14:gsys::Model::create()", _text + 0x851B14
	.equiv "FUN_0E9D1BB8:gsys::Model::pushBack()", _text + 0x851BB8
	.equiv "FUN_0E9D1BF4:gsys::Model::createDrawArray()", _text + 0x851BF4
	.equiv "FUN_0E9D1C30:gsys::Model::createDrawArray()", _text + 0x851C30
	.equiv "gsys::Model::createAnimation()", _text + 0x851C9C
	.equiv "gsys::Model::createOcclusionQuery()", _text + 0x851D40
	.equiv "gsys::Model::createDecalAoObject()", _text + 0x851D8C
	.equiv "gsys::Model::mergeLocalLightMap()", _text + 0x851DD8
	.equiv "gsys::Model::bindToModelScene()", _text + 0x851F18
	.equiv "gsys::Model::bind()", _text + 0x85208C
	.equiv "gsys::Model::destroy()", _text + 0x85213C
	.equiv "gsys::Model::applyAnimation_()", _text + 0x85217C
	.equiv "gsys::Model::applyAnimation()", _text + 0x8521FC
	.equiv "FUN_0E9D225C:gsys::Model::updateWorldMatrix_()", _text + 0x85225C
	.equiv "FUN_0E9D2344:gsys::Model::updateWorldMatrix_()", _text + 0x852344
	.equiv "gsys::Model::updateWorldMatrix()", _text + 0x852444
	.equiv "gsys::Model::requestUpdate()", _text + 0x85252C
	.equiv "gsys::Model::requestDraw()", _text + 0x852584
	.equiv "gsys::Model::updateAnimationWorldMatrix()", _text + 0x852608
	.equiv "gsys::Model::setVisible()", _text + 0x852774
	.equiv "gsys::Model::isVisible()", _text + 0x8527F0
	.equiv "gsys::Model::setVisibleDirect()", _text + 0x852840
	.equiv "gsys::Model::getRenderedFlag()", _text + 0x852870
	.equiv "gsys::Model::setAutoAnimationFrameRate()", _text + 0x8528A8
	.equiv "gsys::Model::searchBone()", _text + 0x85297C
	.equiv "gsys::Model::clearBoneLocalMatrix()", _text + 0x852A10
	.equiv "gsys::Model::searchMaterial()", _text + 0x852A74
	.equiv "gsys::Model::searchMaterialParam()", _text + 0x852B08
	.equiv "gsys::Model::clearMaterialParameter()", _text + 0x852B80
	.equiv "FUN_0E9D2C24:gsys::Model::replaceTexture()", _text + 0x852C24
	.equiv "FUN_0E9D2E0C:gsys::Model::replaceTexture()", _text + 0x852E0C
	.equiv "gsys::Model::searchModelUnitAccessIndex()", _text + 0x852EB0
	.equiv "gsys::Model::searchModelUnitIndex_()", _text + 0x852FBC
	.equiv "gsys::Model::bindModelToBone_()", _text + 0x8530C8
	.equiv "FUN_0E9D31A4:gsys::Model::bindModelToBone()", _text + 0x8531A4
	.equiv "FUN_0E9D31FC:gsys::Model::bindModelToBone()", _text + 0x8531FC
	.equiv "gsys::Model::countBoneNum()", _text + 0x853284
	.equiv "gsys::Model::setXluAlpha()", _text + 0x8532FC
	.equiv "gsys::Model::setEnableRenderToDepthShadow()", _text + 0x8533F8
	.equiv "gsys::Model::setLodThreshold()", _text + 0x85355C
	.equiv "gsys::Model::mergeLodLevel()", _text + 0x8535F4
	.equiv "gsys::Model::gatherBounding_()", _text + 0x853674
	.equiv "gsys::Model::getBoundSphere()", _text + 0x853954
	.equiv "gsys::Model::updateBounding_()", _text + 0x8539E0
	.equiv "gsys::Model::updateBounding()", _text + 0x853A48
	.equiv "gsys::Model::releaseModelFx()", _text + 0x853AA8
	.equiv "FUN_0E9D3B44:gsys::Model::applyFFLColor()", _text + 0x853B44
	.equiv "gsys::Model::~Model()", _text + 0x853B48
	.equiv "gsys::Model::updateFromRequest_()", _text + 0x853CD8
	.equiv "gsys::Model::editAll_()", _text + 0x853E58
	.equiv "gsys::Model::CreateArg::CreateArg()", _text + 0x853F14
	.equiv "gsys::ModelSceneLight::~ModelSceneLight()", _text + 0x85402C
	.equiv "gsys::ModelSceneLight::searchPointLight()", _text + 0x854220
	.equiv "gsys::ModelSceneLight::allocSpotLight()", _text + 0x854258
	.equiv "gsys::ModelSceneLight::searchSpotLight()", _text + 0x854288
	.equiv "gsys::ModelSceneLight::isLightPrePassEnabled()", _text + 0x8542C0
	.equiv "gsys::ModelSceneLight::pushBack()", _text + 0x8542F8
	.equiv "gsys::ModelSceneLight::bind()", _text + 0x854320
	.equiv "gsys::ModelSceneLight::unbind()", _text + 0x85475C
	.equiv "gsys::ModelSceneLight::ModelSceneLight()", _text + 0x854C7C
	.equiv "gsys::ModelSceneLight::initialize()", _text + 0x85571C
	.equiv "gsys::ModelSceneLight::calcLightMap()", _text + 0x856628
	.equiv "gsys::ModelSceneLight::calcLightPrePass()", _text + 0x85665C
	.equiv "gsys::ModelSceneLight::calcViewLightPrePass()", _text + 0x856ECC
	.equiv "gsys::ModelSceneLight::isSSSSSEnabled_()", _text + 0x856F74
	.equiv "gsys::ModelSceneLight::calcView()", _text + 0x856FA0
	.equiv "gsys::ModelSceneLight::calcGPU()", _text + 0x857014
	.equiv "gsys::ModelSceneLight::calcGPUDrawBackGround()", _text + 0x8570A8
	.equiv "gsys::ModelSceneLight::drawLightMap()", _text + 0x8575B8
	.equiv "gsys::ModelSceneLight::drawLightPrePass()", _text + 0x857694
	.equiv "gsys::ModelSceneLight::releaseLightPrePass()", _text + 0x8578D8
	.equiv "gsys::ModelSceneLight::drawSSSSS()", _text + 0x857910
	.equiv "gsys::ModelSceneLight::releaseSSSSS()", _text + 0x8579C4
	.equiv "gsys::ModelSceneLight::setPointLightGlareFilter()", _text + 0x857A08
	.equiv "gsys::ModelSceneLight::CreateArg::CreateArg()", _text + 0x857FD4
	.equiv "FUN_0E9D8190:FID_conflict:void_gsys::LightRigObj::clear()", _text + 0x858190
	.equiv "FUN_0E9D8260:T1::LightObj_*gsys::LightResMgr::search()", _text + 0x858260
	.equiv "FUN_0E9D832C:FID_conflict:bool_gsys::LightResMgr::free()", _text + 0x85832C
	.equiv "alloc", _text + 0x858410
	.equiv "FUN_0E9D84BC:T1::LightObj_*gsys::LightResMgr::search()", _text + 0x8584BC
	.equiv "FUN_0E9D8588:FID_conflict:bool_gsys::LightResMgr::free()", _text + 0x858588
	.equiv "FUN_0E9D8718:FID_conflict:bool_gsys::LightResMgr::free()", _text + 0x858718
	.equiv "FUN_0E9D8AC0:FID_conflict:gsys::LightResMgr::LightResMgr()", _text + 0x858AC0
	.equiv "FUN_0E9D8B60:FID_conflict:void_gsys::LightResMgr::initialize()", _text + 0x858B60
	.equiv "FUN_0E9D8CE0:FID_conflict:gsys::LightResMgr::LightResMgr()", _text + 0x858CE0
	.equiv "FUN_0E9D8D80:FID_conflict:void_gsys::LightResMgr::initialize()", _text + 0x858D80
	.equiv "FUN_0E9D8F00:FID_conflict:gsys::LightResMgr::LightResMgr()", _text + 0x858F00
	.equiv "void_gsys::LightResMgr::initialize()", _text + 0x858FA0
	.equiv "gsys::ModelResource::destroy()", _text + 0x85924C
	.equiv "gsys::ModelResource::searchModelShader()", _text + 0x859278
	.equiv "gsys::ModelResource::pushBack()", _text + 0x85944C
	.equiv "gsys::ModelResource::tryRemove()", _text + 0x859518
	.equiv "gsys::ModelResource::ModelResource()", _text + 0x8596E0
	.equiv "gsys::ModelResource::create_()", _text + 0x859BD8
	.equiv "gsys::ModelResource::initialize_()", _text + 0x859C88
	.equiv "gsys::ModelResource::CreateArg::CreateArg()", _text + 0x85B040
	.equiv "gsys::ModelAutoAnimation::ModelAutoAnimation()", _text + 0x85B330
	.equiv "gsys::ModelAutoAnimation::update_()", _text + 0x85B53C
	.equiv "gsys::ModelAutoAnimation::initialize_()", _text + 0x85B7C0
	.equiv "gsys::ModelAutoAnimation::InitArg::InitArg()", _text + 0x85BAF8
	.equiv "<unnamed>::isEqual()", _text + 0x85BC80
	.equiv "gsys::ModelAutoAnimation::InitArg::setResource()", _text + 0x85BCB8
	.equiv "FUN_0E9DCA80:nw::g3d::ModelAnimObj_*::createAnm()", _text + 0x85CA80
	.equiv "FUN_0E9DCCB0:nw::g3d::ModelAnimObj_*::createAnm()", _text + 0x85CCB0
	.equiv "FUN_0E9DCEF4:nw::g3d::ModelAnimObj_*::createAnm()", _text + 0x85CEF4
	.equiv "FUN_0E9DD154:nw::g3d::ModelAnimObj_*::createAnm()", _text + 0x85D154
	.equiv "gsys::SnapshotTexture::updateCamera()", _text + 0x85D3E8
	.equiv "gsys::SnapshotTexture::retake()", _text + 0x85D430
	.equiv "gsys::SnapshotTexture::initialize()", _text + 0x85D46C
	.equiv "gsys::SnapshotTexture::checkEnableToDraw()", _text + 0x85D4C0
	.equiv "gsys::LightProbeMgr::LightProbeMgr()", _text + 0x85D680
	.equiv "gsys::LightProbeMgr::Grid::Grid()", _text + 0x85D9CC
	.equiv "gsys::LightProbeMgr::ProbeVolumeMgr::ProbeVolumeMgr()", _text + 0x85DBD8
	.equiv "gsys::LightProbeMgr::DebugProbeInterp::DebugProbeInterp()", _text + 0x85DEEC
	.equiv "gsys::LightProbeMgr::DebugProbeDrawer::DebugProbeDrawer()", _text + 0x85DF80
	.equiv "gsys::LightProbeMgr::ProbeVolumeMgr::InitArg::InitArg()", _text + 0x85E0FC
	.equiv "gsys::LightProbeMgr::SHIndexBuffer::SHIndexBuffer()", _text + 0x85E21C
	.equiv "gsys::LightProbeMgr::SHDataBuffer::SHDataBuffer()", _text + 0x85E428
	.equiv "gsys::LightProbeMgr::BoxProbeVolume::addBaseParameters()", _text + 0x85E690
	.equiv "gsys::LightProbeMgr::BoxProbeVolume::addParameters()", _text + 0x85E704
	.equiv "gsys::LightProbeMgr::BoxProbeVolume::BoxProbeVolume()", _text + 0x85E780
	.equiv "gsys::LightProbeMgr::Grid::isValid()", _text + 0x85E9F4
	.equiv "gsys::LightProbeMgr::Grid::setup()", _text + 0x85EA34
	.equiv "gsys::LightProbeMgr::Grid::initialize()", _text + 0x85ECF0
	.equiv "gsys::LightProbeMgr::ProbeVolumeMgr::initialize()", _text + 0x85ED70
	.equiv "gsys::LightProbeMgr::DebugProbeDrawer::createCameraUB_()", _text + 0x85EEAC
	.equiv "gsys::LightProbeMgr::DebugProbeDrawer::setUpShader_()", _text + 0x85EF4C
	.equiv "gsys::LightProbeMgr::DebugProbeDrawer::initialize()", _text + 0x85F1D0
	.equiv "gsys::LightProbeMgr::initialize()", _text + 0x85F2B8
	.equiv "gsys::LightProbeMgr::finalizeDebugDrawer()", _text + 0x85F3C0
	.equiv "gsys::LightProbeMgr::SHIndexBuffer::free()", _text + 0x85F410
	.equiv "gsys::LightProbeMgr::SHDataBuffer::free()", _text + 0x85F488
	.equiv "FUN_0E9DF4F8:gsys::LightProbeMgr::BoxProbeVolume::freeBuffer_()", _text + 0x85F4F8
	.equiv "FUN_0E9DF530:gsys::LightProbeMgr::BoxProbeVolume::freeBuffer_()", _text + 0x85F530
	.equiv "gsys::LightProbeMgr::ProbeVolumeMgr::finalize()", _text + 0x85F534
	.equiv "gsys::LightProbeMgr::cleanup()", _text + 0x85F628
	.equiv "gsys::LightProbeMgr::ProbeVolumeMgr::isValid()", _text + 0x85F664
	.equiv "gsys::LightProbeMgr::Grid::isInside()", _text + 0x85F6C4
	.equiv "gsys::LightProbeMgr::BoxProbeVolume::isValid()", _text + 0x85F728
	.equiv "FUN_0E9DF78C:gsys::LightProbeMgr::Grid::getVoxelIndex()", _text + 0x85F78C
	.equiv "FUN_0E9DF80C:gsys::LightProbeMgr::Grid::getVoxelIndices()", _text + 0x85F80C
	.equiv "FUN_0E9DF948:gsys::LightProbeMgr::Grid::getVoxelIndex()", _text + 0x85F948
	.equiv "gsys::LightProbeMgr::SHIndexBuffer::isTypeU16()", _text + 0x85F9C0
	.equiv "gsys::LightProbeMgr::SHIndexBuffer::getSHDataIndexU16_()", _text + 0x85F9DC
	.equiv "gsys::LightProbeMgr::SHIndexBuffer::getSHDataIndexU32_()", _text + 0x85FA28
	.equiv "gsys::LightProbeMgr::SHIndexBuffer::getSHDataIndex()", _text + 0x85FA3C
	.equiv "gsys::LightProbeMgr::SHIndexBuffer::isIndexValueEmpty()", _text + 0x85FAA4
	.equiv "gsys::LightProbeMgr::SHIndexBuffer::isIndexValueInvisible()", _text + 0x85FAF8
	.equiv "gsys::LightProbeMgr::BoxProbeVolume::getVoxelState()", _text + 0x85FB4C
	.equiv "FUN_0E9DFBFC:gsys::LightProbeMgr::Grid::getVoxelIndices()", _text + 0x85FBFC
	.equiv "gsys::LightProbeMgr::Grid::getVoxelAABBInfo()", _text + 0x85FD3C
	.equiv "gsys::LightProbeMgr::Grid::getVoxelTriLinearWeight()", _text + 0x85FE68
	.equiv "gsys::LightProbeMgr::BoxProbeVolume::getSHDataIndex()", _text + 0x85FF14
	.equiv "gsys::LightProbeMgr::SHIndexBuffer::isIndexValueValid()", _text + 0x85FF24
	.equiv "gsys::LightProbeMgr::SHDataBuffer::getSHData()", _text + 0x85FF7C
	.equiv "gsys::LightProbeMgr::BoxProbeVolume::getSHData()", _text + 0x85FF9C
	.equiv "gsys::LightProbeMgr::getSHTriLinear_()", _text + 0x860000
	.equiv "gsys::LightProbeMgr::Grid::getVoxelNearestLocalProbeIndex()", _text + 0x8601D4
	.equiv "gsys::LightProbeMgr::getSHNearest_()", _text + 0x86024C
	.equiv "gsys::LightProbeMgr::getInterpolatedSH_()", _text + 0x86032C
	.equiv "gsys::LightProbeMgr::updateObj()", _text + 0x860464
	.equiv "gsys::LightProbeMgr::getSHDataId()", _text + 0x860578
	.equiv "gsys::LightProbeMgr::DebugProbeDrawer::finalizeProbeBuffer()", _text + 0x860594
	.equiv "gsys::LightProbeMgr::DebugProbeDrawer::createProbeUB_()", _text + 0x860724
	.equiv "gsys::LightProbeMgr::BoxProbeVolume::clearParameters()", _text + 0x860D8C
	.equiv "gsys::LightProbeMgr::ProbeVolumeMgr::addParameters()", _text + 0x860E24
	.equiv "gsys::LightProbeMgr::DebugProbeInterp::finalize()", _text + 0x861324
	.equiv "gsys::LightProbeMgr::DebugProbeDrawer::finalize()", _text + 0x86135C
	.equiv "gsys::LayerTexture::LayerTexture()", _text + 0x861920
	.equiv "gsys::LayerTexture::free_()", _text + 0x861A14
	.equiv "gsys::LayerTexture::setUp_()", _text + 0x861B40
	.equiv "gsys::LayerTexture::setUpDynamic_()", _text + 0x861C4C
	.equiv "gsys::LayerTexture::bind_()", _text + 0x861EE4
	.equiv "gsys::CopyLayerTexture::CopyLayerTexture()", _text + 0x861F28
	.equiv "FUN_0E9E2074:gsys::CopyLayerTexture::initialize()", _text + 0x862074
	.equiv "gsys::CopyLayerTexture::setLayer()", _text + 0x862188
	.equiv "gsys::CopyLayerTexture::adjustTrimViewportToLayer()", _text + 0x8621C8
	.equiv "FUN_0E9E2200:gsys::CopyLayerTexture::initialize()", _text + 0x862200
	.equiv "gsys::ModelAnimation::ModelAnimation()", _text + 0x8627E0
	.equiv "gsys::ModelAnimation::initializeSkeletalAnm_()", _text + 0x8629D0
	.equiv "gsys::ModelAnimation::initializeMaterialAnm_()", _text + 0x862F78
	.equiv "gsys::ModelAnimation::initialize_()", _text + 0x863484
	.equiv "gsys::ModelAnimation::create()", _text + 0x863808
	.equiv "FUN_0E9E388C:FID_conflict:gsys::ModelAnimation::destroy()", _text + 0x86388C
	.equiv "gsys::ModelAnimation::setSkeletalAnmByKey()", _text + 0x8638A8
	.equiv "FUN_0E9E3B68:gsys::ModelAnimation::clearSkeletalAnm()", _text + 0x863B68
	.equiv "FUN_0E9E3BA4:gsys::ModelAnimation::clearSkeletalAnm()", _text + 0x863BA4
	.equiv "gsys::ModelAnimation::searchSkeletalKey()", _text + 0x863C04
	.equiv "gsys::ModelAnimation::setMaterialAnmByKey_()", _text + 0x863CCC
	.equiv "gsys::ModelAnimation::searchEmptyMaterialSlotIndex_()", _text + 0x863E38
	.equiv "FUN_0E9E3E9C:gsys::ModelAnimation::clearMaterialAnm()", _text + 0x863E9C
	.equiv "gsys::ModelAnimation::setMaterialAnmFrame()", _text + 0x863EEC
	.equiv "gsys::ModelAnimation::setMaterialAnmByKey()", _text + 0x863FDC
	.equiv "FUN_0E9E4128:gsys::ModelAnimation::clearMaterialAnm()", _text + 0x864128
	.equiv "gsys::ModelAnimation::getMaterialAnmFrameCount()", _text + 0x86415C
	.equiv "gsys::ModelAnimation::isMaterialAnmLooped()", _text + 0x864274
	.equiv "gsys::ModelAnimation::searchMaterialAnmKey()", _text + 0x864404
	.equiv "gsys::ModelAnimation::applySkeletalAnm_()", _text + 0x8644E4
	.equiv "FUN_0E9E4884:gsys::ModelAnimation::applySkeletalAnm()", _text + 0x864884
	.equiv "FUN_0E9E49B8:gsys::ModelAnimation::applySkeletalAnm()", _text + 0x8649B8
	.equiv "gsys::ModelAnimation::applyMaterialAnm()", _text + 0x864A20
	.equiv "gsys::ModelAnimation::~ModelAnimation()", _text + 0x864BA0
	.equiv "gsys::ModelAnimation::CreateArg::CreateArg()", _text + 0x864E60
	.equiv "gsys::ModelAnimationDebugInfo::ModelAnimationDebugInfo()", _text + 0x864EA0
	.equiv "gsys::ModelAnimationDebugInfo::~ModelAnimationDebugInfo()", _text + 0x864F38
	.equiv "gsys::ModelAnimationDebugInfo::initialize()", _text + 0x864FC4
	.equiv "FUN_0E9E5200:void_gsys::ModelAnimation::initMaterialAnmData_()", _text + 0x865200
	.equiv "FUN_0E9E56B8:void_gsys::ModelAnimation::initMaterialAnmData_()", _text + 0x8656B8
	.equiv "FUN_0E9E5B70:void_gsys::ModelAnimation::initMaterialAnmData_()", _text + 0x865B70
	.equiv "FUN_0E9E6028:void_gsys::ModelAnimation::initMaterialAnmData_()", _text + 0x866028
	.equiv "FUN_0E9E6510:void_gsys::ModelAnimation::initMaterialAnmData_()", _text + 0x866510
	.equiv "FUN_0E9E69E4:void_gsys::ModelAnimation::initMaterialAnmData_()", _text + 0x8669E4
	.equiv "FUN_0E9E6EB8:FID_conflict:int_gsys::ModelAnimation::setMaterialAnm_()", _text + 0x866EB8
	.equiv "FUN_0E9E70D0:FID_conflict:int_gsys::ModelAnimation::setMaterialAnm_()", _text + 0x8670D0
	.equiv "FUN_0E9E72E8:FID_conflict:int_gsys::ModelAnimation::setMaterialAnm_()", _text + 0x8672E8
	.equiv "int_gsys::ModelAnimation::setMaterialAnm_()", _text + 0x867500
	.equiv "FUN_0E9E7734:FID_conflict:int_gsys::ModelAnimation::setMaterialAnm_()", _text + 0x867734
	.equiv "FUN_0E9E79A4:FID_conflict:int_gsys::ModelAnimation::setMaterialAnm_()", _text + 0x8679A4
	.equiv "FUN_0E9E7C14:gsys::AnimationAccessKey_gsys::ModelAnimation::searchMaterialAnmKey_()", _text + 0x867C14
	.equiv "FUN_0E9E7CD4:gsys::AnimationAccessKey_gsys::ModelAnimation::searchMaterialAnmKey_()", _text + 0x867CD4
	.equiv "FUN_0E9E7D94:gsys::AnimationAccessKey_gsys::ModelAnimation::searchMaterialAnmKey_()", _text + 0x867D94
	.equiv "FUN_0E9E7E54:gsys::AnimationAccessKey_gsys::ModelAnimation::searchMaterialAnmKey_()", _text + 0x867E54
	.equiv "FUN_0E9E7F14:gsys::AnimationAccessKey_gsys::ModelAnimation::searchMaterialAnmKey_()", _text + 0x867F14
	.equiv "FUN_0E9E7FD4:gsys::AnimationAccessKey_gsys::ModelAnimation::searchMaterialAnmKey_()", _text + 0x867FD4
	.equiv "FUN_0E9E8094:FID_conflict:void_gsys::ModelAnimation::finalizeMaterialAnmData_()", _text + 0x868094
	.equiv "FUN_0E9E8164:FID_conflict:void_gsys::ModelAnimation::finalizeMaterialAnmData_()", _text + 0x868164
	.equiv "FUN_0E9E8234:FID_conflict:void_gsys::ModelAnimation::finalizeMaterialAnmData_()", _text + 0x868234
	.equiv "FUN_0E9E8304:FID_conflict:void_gsys::ModelAnimation::finalizeMaterialAnmData_()", _text + 0x868304
	.equiv "FUN_0E9E83D4:FID_conflict:void_gsys::ModelAnimation::finalizeMaterialAnmData_()", _text + 0x8683D4
	.equiv "FUN_0E9E84A4:FID_conflict:void_gsys::ModelAnimation::finalizeMaterialAnmData_()", _text + 0x8684A4
	.equiv "gsys::MotionBlur::RenderTexture::allocTextureData()", _text + 0x8689D4
	.equiv "gsys::MotionBlur::drawCameraVelocityMapQuad()", _text + 0x868CAC
	.equiv "gsys::MotionBlur::MeshVertexData::drawElements()", _text + 0x869344
	.equiv "gsys::MotionBlur::drawVelocityMapBlurQuad()", _text + 0x869B10
	.equiv "gsys::ModelDynamicEnvInfo::ModelDynamicEnvInfo()", _text + 0x869CA8
	.equiv "gsys::ModelDynamicEnvInfo::~ModelDynamicEnvInfo()", _text + 0x869D64
	.equiv "gsys::ModelDynamicEnvInfo::setReferenceLocalLightMapObj()", _text + 0x869DD8
	.equiv "gsys::ModelDynamicEnvInfo::createLocalLightMapObj()", _text + 0x869E84
	.equiv "gsys::ModelDynamicEnvInfo::calcWorld()", _text + 0x869F18
	.equiv "gsys::ModelDynamicEnvInfo::calcDrawBackGround()", _text + 0x86A43C
	.equiv "gsys::ModelSceneConfigList::applyResouce()", _text + 0x86AA3C
	.equiv "gsys::ModelSceneConfigList::postRead_()", _text + 0x86AA9C
	.equiv "gsys::ModelSceneConfig::ModelSceneConfig()", _text + 0x86AD7C
	.equiv "gsys::ModelSceneConfig::getEnvObjSetTemplate_()", _text + 0x86D57C
	.equiv "gsys::ModelSceneConfig::EnvObjSetTemplate::EnvObjSetTemplate()", _text + 0x86D59C
	.equiv "gsys::ModelSceneConfigList::EnvObjSetTemplateList::EnvObjSetTemplateList()", _text + 0x86DB38
	.equiv "gsys::ModelSceneConfigList::ModelSceneConfigList()", _text + 0x86DB94
	.equiv "gsys::ModelSceneConfigList::reload()", _text + 0x86E008
	.equiv "gsys::ModelSceneConfigList::setup()", _text + 0x86E23C
	.equiv "gsys::ModelRenderQueue::ModelRenderQueue()", _text + 0x86F378
	.equiv "gsys::ModelRenderQueue::initialize()", _text + 0x86F4C4
	.equiv "gsys::ModelRenderQueue::clear()", _text + 0x86F570
	.equiv "gsys::ModelRenderQueue::preSort()", _text + 0x86F5C4
	.equiv "<unnamed>::heapSortKeyZOpa()", _text + 0x86F608
	.equiv "<unnamed>::heapSortKeyZXlu()", _text + 0x86F7D4
	.equiv "<unnamed>::heapSortZOpa()", _text + 0x86F9A0
	.equiv "<unnamed>::heapSortZXlu()", _text + 0x86FB04
	.equiv "<unnamed>::heapSortKey()", _text + 0x86FC68
	.equiv "gsys::ModelRenderQueue::sort()", _text + 0x86FDDC
	.equiv "gsys::ModelDebugInfo::ModelDebugInfo()", _text + 0x870050
	.equiv "gsys::ModelDebugInfo::~ModelDebugInfo()", _text + 0x870300
	.equiv "gsys::ModelDebugInfo::initializeAnimation()", _text + 0x87035C
	.equiv "gsys::ModelDisplayList::ModelDisplayList()", _text + 0x870458
	.equiv "gsys::ModelDisplayList::safeBeginDisplayList()", _text + 0x870560
	.equiv "gsys::ModelDisplayList::setupBuffer_()", _text + 0x870624
	.equiv "gsys::ModelDisplayList::safeEndDisplayList()", _text + 0x87068C
	.equiv "gsys::ModelShaderArchive::ModelShaderArchive()", _text + 0x870780
	.equiv "gsys::ModelShaderArchive::initialize()", _text + 0x8709B8
	.equiv "FUN_0E9F0C10:gsys::ModelShaderArchive::searchModelShader()", _text + 0x870C10
	.equiv "FUN_0E9F0C78:gsys::ModelShaderArchive::searchModelShader()", _text + 0x870C78
	.equiv "gsys::ModelSceneComponent::ModelSceneComponent()", _text + 0x870E54
	.equiv "gsys::ModelSceneComponent::~ModelSceneComponent()", _text + 0x870EB0
	.equiv "gsys::ModelSceneComponent::setUpComponent()", _text + 0x870F34
	.equiv "FUN_0E9F10AC:nw::lyt::ShaderSetupHelper::ShaderSetupHelper()", _text + 0x8710AC
	.equiv "FUN_0E9F1104:nw::lyt::ShaderSetupHelper::ShaderSetupHelper()", _text + 0x871104
	.equiv "gsys::G3dResShaderProgramEx::G3dResShaderProgramEx()", _text + 0x87115C
	.equiv "gsys::G3dResShaderProgramEx::~G3dResShaderProgramEx()", _text + 0x871264
	.equiv "gsys::G3dResShaderProgramEx::calcAddressHash_()", _text + 0x8712B8
	.equiv "gsys::G3dResShaderProgramEx::calcBinaryHash_()", _text + 0x871334
	.equiv "gsys::G3dResShaderProgramEx::updateKey()", _text + 0x871448
	.equiv "gsys::G3dResShaderProgramEx::createDisplayList()", _text + 0x871618
	.equiv "FUN_0E9F16E8:FID_conflict:gsys::G3dResShaderProgramEx::getSamplerID()", _text + 0x8716E8
	.equiv "FUN_0E9F16FC:FID_conflict:gsys::G3dResShaderProgramEx::getSamplerID()", _text + 0x8716FC
	.equiv "gsys::G3dResShaderProgramEx::calcSamplerLocationHash_()", _text + 0x871710
	.equiv "gsys::G3dResShaderProgramEx::calcUBOLocationHash_()", _text + 0x871788
	.equiv "gsys::G3dResShaderProgramEx::calcPassTextureBit_()", _text + 0x871800
	.equiv "gsys::G3dResShaderProgramEx::updateInfo_()", _text + 0x871860
	.equiv "gsys::G3dResShaderProgramEx::update()", _text + 0x8719FC
	.equiv "gsys::G3dResShaderProgramEx::isEqual()", _text + 0x871A70
	.equiv "gsys::PartialSkeletalAnm::apply()", _text + 0x871B28
	.equiv "FUN_0E9F1DCC:FID_conflict:gsys::OfxLargeLensFlareRig::updateObj_()", _text + 0x871DCC
	.equiv "FUN_0E9F1FA4:FID_conflict:gsys::OfxLargeLensFlareRig::updateObj_()", _text + 0x871FA4
	.equiv "FUN_0E9F2C60:FID_conflict:gsys::OfxRig::OfxRig()", _text + 0x872C60
	.equiv "FUN_0E9F2E8C:FID_conflict:gsys::OfxRig::OfxRig()", _text + 0x872E8C
	.equiv "gsys::ModelRenderContext::clear()", _text + 0x873240
	.equiv "gsys::ModelRenderContext::ModelRenderContext()", _text + 0x8733B0
	.equiv "gsys::ModelRenderContext::initialize()", _text + 0x8734E4
	.equiv "gsys::ModelRenderContext::calcView()", _text + 0x873558
	.equiv "gsys::ModelRenderContext::bindDefaultFrameBuffer()", _text + 0x8735FC
	.equiv "gsys::ModelRenderContext::draw()", _text + 0x873640
	.equiv "gsys::ModelRenderContext::setPolygonOffsetSeal()", _text + 0x873A2C
	.equiv "FUN_0E9F3CEC:void_::drawEachNode()", _text + 0x873CEC
	.equiv "FUN_0E9F3DC8:void_::drawEachNode()", _text + 0x873DC8
	.equiv "FUN_0E9F3EB4:void_::drawEachNode()", _text + 0x873EB4
	.equiv "FUN_0E9F3FA8:void_::drawEachNode()", _text + 0x873FA8
	.equiv "FUN_0E9F40AC:void_::drawEachNode()", _text + 0x8740AC
	.equiv "FUN_0E9F4194:void_::drawEachNode()", _text + 0x874194
	.equiv "FUN_0E9F428C:void_::drawEachNode()", _text + 0x87428C
	.equiv "FUN_0E9F438C:void_::drawEachNode()", _text + 0x87438C
	.equiv "FUN_0E9F449C:void_::drawEachNode()", _text + 0x87449C
	.equiv "FUN_0E9F45AC:void_::drawEachNode()", _text + 0x8745AC
	.equiv "FUN_0E9F46CC:void_::drawEachNode()", _text + 0x8746CC
	.equiv "FUN_0E9F47F0:void_::drawEachNode()", _text + 0x8747F0
	.equiv "FUN_0E9F4924:void_::drawEachNode()", _text + 0x874924
	.equiv "FUN_0E9F4A40:void_::drawEachNode()", _text + 0x874A40
	.equiv "FUN_0E9F4B6C:void_::drawEachNode()", _text + 0x874B6C
	.equiv "FUN_0E9F4C9C:void_::drawEachNode()", _text + 0x874C9C
	.equiv "gsys::SpotLight::SpotLight()", _text + 0x87539C
	.equiv "gsys::SpotLightRig::updateObj_()", _text + 0x875754
	.equiv "FUN_0E9F5F04:FID_conflict:void_gsys::LightRigObj::updateFromModel()", _text + 0x875F04
	.equiv "FUN_0E9F6440:gsys::LightRig::LightRig()", _text + 0x876440
	.equiv "FUN_0E9F6E20:void_gsys::LightRig::bindBone_()", _text + 0x876E20
	.equiv "gsys::ModelResourceMgr::ModelResourceMgr()", _text + 0x876FD0
	.equiv "gsys::ModelResourceMgr::createInstance()", _text + 0x877140
	.equiv "gsys::ModelResourceMgr::add_()", _text + 0x8772C0
	.equiv "gsys::ModelResourceMgr::calcShapeKey_()", _text + 0x877310
	.equiv "gsys::ModelResourceMgr::resetShaderBind()", _text + 0x8774AC
	.equiv "gsys::ModelResourceMgr::update()", _text + 0x877644
	.equiv "gsys::ModelResourceMgr::create_()", _text + 0x877710
	.equiv "gsys::G3dResShapeEx::G3dResShapeEx()", _text + 0x877B48
	.equiv "gsys::G3dResShapeEx::~G3dResShapeEx()", _text + 0x877C8C
	.equiv "gsys::G3dResShapeEx::getModelShaderAttribute()", _text + 0x877E0C
	.equiv "gsys::G3dResShapeEx::updateShaderKey()", _text + 0x877E24
	.equiv "gsys::G3dResShapeEx::bindShader()", _text + 0x877E5C
	.equiv "gsys::G3dResShapeEx::initialize()", _text + 0x87843C
	.equiv "gsys::G3dResShapeEx::updateShapeName()", _text + 0x8784A4
	.equiv "gsys::G3dResShapeEx::createDisplayList()", _text + 0x8785B4
	.equiv "gsys::ModelDecalAoObject::requestTextureRender()", _text + 0x87889C
	.equiv "gsys::ModelDecalAoObject::ModelDecalAoObject()", _text + 0x8789AC
	.equiv "gsys::ModelDecalAoObject::initialize_()", _text + 0x879180
	.equiv "gsys::ModelDecalAoObject::create()", _text + 0x879240
	.equiv "gsys::ModelDecalAoObject::addModel()", _text + 0x879338
	.equiv "gsys::ModelDecalAoObject::updateTexture_calcGPU()", _text + 0x879370
	.equiv "gsys::ModelDecalAoObject::setupTextureRender()", _text + 0x879814
	.equiv "gsys::ModelDecalAoObject::CreateArg::CreateArg()", _text + 0x8799D4
	.equiv "gsys::Layer::setTextureShaderedLayer()", _text + 0x879B10
	.equiv "gsys::Layer::Layer()", _text + 0x879B40
	.equiv "gsys::ModelSharedResource::ModelSharedResource()", _text + 0x87AFD8
	.equiv "gsys::ModelSharedResource::createInstance()", _text + 0x87B1A0
	.equiv "gsys::ModelSharedResource::getConstantTextureName()", _text + 0x87B3B0
	.equiv "gsys::ModelSharedResource::initialize()", _text + 0x87B408
	.equiv "gsys::ModelSharedResource::loadPolygonCtrl()", _text + 0x87BB7C
	.equiv "gsys::ModelSharedResource::getSysTextureName()", _text + 0x87BBB0
	.equiv "gsys::ModelSharedResource::getRenderInfoEnvObjSetName()", _text + 0x87BC50
	.equiv "gsys::ModelSharedResource::getRenderInfoLightName()", _text + 0x87BC9C
	.equiv "FUN_0E9FBCF4:FID_conflict:gsys::ModelSharedResource::getRenderInfoPassName()", _text + 0x87BCF4
	.equiv "FUN_0E9FBD40:FID_conflict:gsys::ModelSharedResource::getModelFxPassName()", _text + 0x87BD40
	.equiv "FUN_0E9FBD98:FID_conflict:gsys::ModelSharedResource::getRenderInfoPassName()", _text + 0x87BD98
	.equiv "FUN_0E9FBDE4:FID_conflict:gsys::ModelSharedResource::getRenderInfoPassName()", _text + 0x87BDE4
	.equiv "gsys::ModelSharedResource::getRenderInfoModelFxName()", _text + 0x87BE30
	.equiv "FUN_0E9FBE88:FID_conflict:gsys::ModelSharedResource::getModelFxPassName()", _text + 0x87BE88
	.equiv "FUN_0E9FBEE0:FID_conflict:gsys::ModelSharedResource::getModelFxPassName()", _text + 0x87BEE0
	.equiv "gsys::ModelSharedResource::getPriorityHintType()", _text + 0x87BF38
	.equiv "gsys::ModelSharedResource::isRenderInfoBoolEnabled()", _text + 0x87C034
	.equiv "`global_constructor_keyed_to'_27_gsysModelSharedResource_cpp_08f1f2c7", _text + 0x87C128
	.equiv "gsys::LockedCache::LockedCache()", _text + 0x87C860
	.equiv "gsys::LockedCache::clear()", _text + 0x87C8D4
	.equiv "gsys::LockedCache::setLC()", _text + 0x87C914
	.equiv "gsys::LockedCache::copy()", _text + 0x87C950
	.equiv "gsys::LockedCache::copyNoAligned()", _text + 0x87C97C
	.equiv "gsys::LockedCache::alloc()", _text + 0x87C9F0
	.equiv "gsys::ShaderHolder::ShaderHolder()", _text + 0x87CA68
	.equiv "gsys::ShaderHolder::createInstance()", _text + 0x87CADC
	.equiv "gsys::ShaderHolder::initialize()", _text + 0x87CC64
	.equiv "gsys::LockedCacheMgr::Job::Job()", _text + 0x87F228
	.equiv "gsys::LockedCacheMgr::LockedCacheMgr()", _text + 0x87F2AC
	.equiv "gsys::LockedCacheMgr::createInstance()", _text + 0x87F384
	.equiv "gsys::LockedCacheMgr::initialize()", _text + 0x87F4DC
	.equiv "gsys::LockedCacheMgr::freeLockedCache_()", _text + 0x87F65C
	.equiv "gsys::LockedCacheMgr::Job::invoke()", _text + 0x87F860
	.equiv "gsys::LockedCacheMgr::allocLockedCache()", _text + 0x87F8D8
	.equiv "gsys::LockedCacheMgr::getLockedCache()", _text + 0x87F9C0
	.equiv "gsys::ShaderContext::ShaderContext()", _text + 0x87FBC0
	.equiv "gsys::ShaderContext::initialize()", _text + 0x87FDA8
	.equiv "gsys::ShaderContext::clear()", _text + 0x87FF58
	.equiv "gsys::ShaderContext::setAreaOverride()", _text + 0x87FFF4
	.equiv "gsys::ShaderContext::getShaderAssignType()", _text + 0x88001C
	.equiv "gsys::ShaderContext::calcGpuRenderBuffer()", _text + 0x880038
	.equiv "gsys::ShaderContext::calcGpuLight()", _text + 0x8801CC
	.equiv "gsys::ShaderContext::calcGpuShadowColor()", _text + 0x8803C0
	.equiv "gsys::ShaderContext::calcGpuDepthShadowCascade()", _text + 0x880428
	.equiv "gsys::ShaderContext::calcGpuStaticDepthShadow()", _text + 0x880520
	.equiv "gsys::ShaderContext::calcGpuMaskDepthShadow()", _text + 0x8805B0
	.equiv "gsys::ShaderContext::calcGpuProjectionShadow()", _text + 0x8805CC
	.equiv "gsys::ShaderContext::copyPrev_()", _text + 0x8806A0
	.equiv "gsys::ShaderContext::calcGpuViewFlush()", _text + 0x8806B8
	.equiv "<unnamed>::setFogUBO()", _text + 0x880BB4
	.equiv "gsys::ShaderContext::getEnvUBO()", _text + 0x880FEC
	.equiv "gsys::ShaderContext::getViewProjType()", _text + 0x882044
	.equiv "gsys::ShaderContext::createContextUBO()", _text + 0x882058
	.equiv "gsys::ShaderContext::createEnvUBO()", _text + 0x88232C
	.equiv "gsys::ApplicationPackage::ApplicationPackage()", _text + 0x8828C8
	.equiv "gsys::ApplicationPackage::createInstance()", _text + 0x88291C
	.equiv "gsys::ApplicationPackage::getSampleModelShader()", _text + 0x8829BC
	.equiv "gsys::ApplicationPackage::~ApplicationPackage()", _text + 0x882A24
	.equiv "gsys::ApplicationPackage::Package::Package()", _text + 0x882AF0
	.equiv "gsys::ApplicationPackage::Package::initialize()", _text + 0x882B88
	.equiv "gsys::ApplicationPackage::addApplicationPackage()", _text + 0x882DBC
	.equiv "gsys::ModelShaderHolder::ModelShaderHolder()", _text + 0x883370
	.equiv "gsys::ModelShaderHolder::initialize()", _text + 0x883420
	.equiv "gsys::ModelShaderHolder::addModelShaderArchive()", _text + 0x883434
	.equiv "gsys::ModelShaderHolder::searchModelShaderProgramArchive()", _text + 0x8834E0
	.equiv "gsys::ModelShaderHolder::searchModelShader()", _text + 0x8835D4
	.equiv "gsys::ORUtil::getIconString()", _text + 0x883764
	.equiv "gsys::ORUtil::setNodeMetaIcon()", _text + 0x8837C4
	.equiv "FUN_0EA03844:gsys::ORUtil::setNodeMeta()", _text + 0x883844
	.equiv "FUN_0EA038FC:gsys::ORUtil::setNodeMeta()", _text + 0x8838FC
	.equiv "gsys::ORUtil::addNodeMeta()", _text + 0x8839F4
	.equiv "gsys::ProcessMeter::ProcessMeter()", _text + 0x883CF0
	.equiv "gsys::ProcessMeter::createInstance()", _text + 0x883DE4
	.equiv "gsys::ProcessMeter::~ProcessMeter()", _text + 0x883E84
	.equiv "gsys::ProcessMeter::initialize()", _text + 0x883F64
	.equiv "gsys::ProcessMeter::calc()", _text + 0x884150
	.equiv "gsys::ProcessMeter::measureBeginSystem()", _text + 0x884250
	.equiv "gsys::ProcessMeter::measureEndSystem()", _text + 0x884294
	.equiv "`global_constructor_keyed_to'_20_gsysProcessMeter_cpp_df7ce048", _text + 0x884364
	.equiv "gsys::IModelProcedural::IModelProcedural()", _text + 0x8846BC
	.equiv "gsys::IModelProcedural::~IModelProcedural()", _text + 0x88473C
	.equiv "gsys::ModelRenderUnitProcedural::ModelRenderUnitProcedural()", _text + 0x884790
	.equiv "gsys::IModelProcedural::initializeModelProcedural()", _text + 0x884814
	.equiv "gsys::IModelProcedural::setProcedualPassName()", _text + 0x88494C
	.equiv "FUN_0EA04970:gsys::ModelUnit::setRenderStateType()", _text + 0x884970
	.equiv "gsys::MaskedLight::MaskedLight()", _text + 0x884E68
	.equiv "gsys::MaskedSpotLight::MaskedSpotLight()", _text + 0x885490
	.equiv "gsys::MaskedProjLight::MaskedProjLight()", _text + 0x885AF8
	.equiv "gsys::MaskedLight::setToLightPrePass()", _text + 0x886560
	.equiv "gsys::MaskedLight::getLightViewMtx()", _text + 0x88658C
	.equiv "gsys::MaskedLight::getLightProjectionMtx()", _text + 0x886680
	.equiv "gsys::MaskedLight::setShadowMap()", _text + 0x8867D4
	.equiv "gsys::MaskedLight::assignModelSceneShadow()", _text + 0x88683C
	.equiv "gsys::MaskedSpotLight::setToLightPrePassImpl_()", _text + 0x88691C
	.equiv "gsys::ParticleCS::prepareWater()", _text + 0x887664
	.equiv "gsys::ParticleCS::disorganizeWater()", _text + 0x887A54
	.equiv "gsys::ParticleCS::prepareMetaball()", _text + 0x887A70
	.equiv "gsys::ParticleCS::disorganizeMetaball()", _text + 0x888178
	.equiv "gsys::ParticleCS::prepareUberLowRes()", _text + 0x8881F8
	.equiv "gsys::ParticleCS::disorganizeUberLowRes()", _text + 0x88855C
	.equiv "gsys::ModelEnvInfo::clear()", _text + 0x888794
	.equiv "gsys::ModelEnvInfo::ModelEnvInfo()", _text + 0x8887B8
	.equiv "gsys::ModelEnvInfo::~ModelEnvInfo()", _text + 0x888804
	.equiv "gsys::ModelEnvInfo::bind()", _text + 0x888818
	.equiv "gsys::ModelUnitFx::ModelUnitFx()", _text + 0x888CB0
	.equiv "gsys::ModelRenderUnitProj::ModelRenderUnitProj()", _text + 0x8890AC
	.equiv "gsys::ModelRenderUnitProj::initializeProj()", _text + 0x889110
	.equiv "gsys::ModelRenderUnitFx::ModelRenderUnitFx()", _text + 0x8891D8
	.equiv "gsys::ModelUnitFx::initialize()", _text + 0x889234
	.equiv "gsys::ModelUnitFx::setUpModelFx_()", _text + 0x8898EC
	.equiv "gsys::ModelUnitFx::setUpMaterial()", _text + 0x889CF4
	.equiv "gsys::ModelUnitFx::calc()", _text + 0x889DEC
	.equiv "gsys::ModelRenderUnitProj::copyShpBlock()", _text + 0x889EA0
	.equiv "gsys::ModelUnitFx::calcGPU()", _text + 0x889F28
	.equiv "gsys::ModelUnitFx::pushBackToQueue()", _text + 0x88A224
	.equiv "gsys::ModelUnitFx::bindModelFx()", _text + 0x88A4F0
	.equiv "gsys::ModelUnitFx::releaseModelFx()", _text + 0x88A680
	.equiv "gsys::ModelUnitFx::CreateArg::CreateArg()", _text + 0x88A760
	.equiv "gsys::KColExtractor::KColExtractor()", _text + 0x88A948
	.equiv "gsys::KColExtractor::PolygonList::PolygonList()", _text + 0x88AB40
	.equiv "gsys::KColExtractor::initialize()", _text + 0x88AC48
	.equiv "gsys::KColExtractor::calcAABB()", _text + 0x88ADC0
	.equiv "gsys::KColExtractor::PolygonList::cutVtxGroup()", _text + 0x88AF90
	.equiv "gsys::KColExtractor::PolygonList::addPolygon()", _text + 0x88B2B4
	.equiv "gsys::KColExtractor::PolygonList::cutBox()", _text + 0x88B3CC
	.equiv "gsys::KColExtractor::PolygonList::mergeVtx()", _text + 0x88B578
	.equiv "gsys::KColExtractor::updatePolygonList()", _text + 0x88B72C
	.equiv "gsys::KColExtractor::BoundingInfo::updateDir()", _text + 0x88BE58
	.equiv "gsys::ResourceEditor::ResourceEditor()", _text + 0x88C17C
	.equiv "gsys::ResourceEditor::createInstance()", _text + 0x88C468
	.equiv "gsys::ResourceEditor::calc()", _text + 0x88C5EC
	.equiv "FUN_0EA0CCCC:gsys::SealShadow::bindBounding()", _text + 0x88CCCC
	.equiv "FUN_0EA0CCFC:gsys::SealShadow::bindBounding()", _text + 0x88CCFC
	.equiv "gsys::SealShadow::getValidBoundingNum()", _text + 0x88CD50
	.equiv "gsys::SealShadow::getValidShadowNodeNum()", _text + 0x88CD78
	.equiv "gsys::SealShadow::isEnableExtractSkip()", _text + 0x88CDC0
	.equiv "FUN_0EA0CE38:gsys::SealShadow::extractPolygon()", _text + 0x88CE38
	.equiv "FUN_0EA0CEBC:gsys::SealShadow::extractPolygon()", _text + 0x88CEBC
	.equiv "gsys::SealShadow::extractPolygons()", _text + 0x88D028
	.equiv "gsys::SealShadow::entryShadowNode()", _text + 0x88D30C
	.equiv "gsys::SealShadow::draw()", _text + 0x88D370
	.equiv "gsys::SealShadow::bind()", _text + 0x88D6D4
	.equiv "FUN_0EA0D754:FID_conflict:gsys::ModelAnimation::destroy()", _text + 0x88D754
	.equiv "gsys::SealShadow::updateBounding()", _text + 0x88D770
	.equiv "gsys::SealShadow::updateShadowNode()", _text + 0x88DA5C
	.equiv "gsys::ModelAutoLayoutMgr::ModelAutoLayoutMgr()", _text + 0x88E0F4
	.equiv "gsys::ModelAutoLayoutMgr::loadConfig()", _text + 0x88E234
	.equiv "gsys::ModelAutoLayoutMgr::initialize()", _text + 0x88E2C4
	.equiv "gsys::ModelAutoLayoutMgr::createModel()", _text + 0x88E318
	.equiv "gsys::ModelAutoLayoutMgr::peekTextureColor()", _text + 0x88E330
	.equiv "gsys::ModelAutoLayoutMgr::Collision::extractPolygon()", _text + 0x88E6E8
	.equiv "gsys::ModelAutoLayoutMgr::layoutModelRandom()", _text + 0x88E8DC
	.equiv "gsys::ModelAutoLayoutMgr::layout()", _text + 0x88F3FC
	.equiv "gsys::ModelAutoLayoutMgr::Collision::updateAreaMinMax()", _text + 0x88FAB4
	.equiv "gsys::ModelAutoLayoutMgr::Collision::Collision()", _text + 0x88FC58
	.equiv "void_::Swap()", _text + 0x88FEF0
	.equiv "gsys::ApplicationPackageInfo::ApplicationPackageInfo()", _text + 0x88FF04
	.equiv "FUN_0EA1030C:FID_conflict:gsys::ApplicationPackageInfo::getConfFileName_()", _text + 0x89030C
	.equiv "gsys::ApplicationPackageInfo::convToBinaryFileName_()", _text + 0x89039C
	.equiv "FUN_0EA10588:FID_conflict:gsys::ApplicationPackageInfo::getBinaryInfoFileName_()", _text + 0x890588
	.equiv "gsys::ApplicationPackageInfo::ShaderFileNameInfo::ShaderFileNameInfo()", _text + 0x8905EC
	.equiv "FUN_0EA10DD0:FID_conflict:gsys::ApplicationPackageInfo::getConfFileName_()", _text + 0x890DD0
	.equiv "FUN_0EA10E60:FID_conflict:gsys::ApplicationPackageInfo::getBinaryInfoFileName_()", _text + 0x890E60
	.equiv "gsys::ApplicationPackageInfo::initializeFromArchive_()", _text + 0x890EC4
	.equiv "FUN_0EA110B8:FID_conflict:gsys::ApplicationPackageInfo::getConfFileName_()", _text + 0x8910B8
	.equiv "FUN_0EA11148:FID_conflict:gsys::ApplicationPackageInfo::getConfFileName_()", _text + 0x891148
	.equiv "FUN_0EA111D8:FID_conflict:gsys::ApplicationPackageInfo::getBinaryPtclConfFileName_()", _text + 0x8911D8
	.equiv "FUN_0EA1123C:FID_conflict:gsys::ApplicationPackageInfo::getBinaryPtclConfFileName_()", _text + 0x89123C
	.equiv "sead::kcol::KCollision::searchMultiBlockRecursiveAllVer1()", _text + 0x8916B8
	.equiv "sead::kcol::KCollision::searchMultiBlockRecursiveVer1()", _text + 0x891870
	.equiv "sead::kcol::KCollision::checkAABBVer1()", _text + 0x891C04
	.equiv "sead::kcol::KCollision::searchMultiBlockRecursiveAll()", _text + 0x891F1C
	.equiv "sead::kcol::KCollision::searchMultiBlockRecursive()", _text + 0x89204C
	.equiv "sead::kcol::KCollision::checkAABB()", _text + 0x892398
	.equiv "sead::kcol::KCollisionPrism::calcPrismPos()", _text + 0x892720
	.equiv "nw::eft::EmitterInstance::Init()", _text + 0x892908
	.equiv "nw::eft::_copyTextureShiftAnimParm()", _text + 0x892BCC
	.equiv "nw::eft::_copyTexturePtnAnimParm()", _text + 0x892D78
	.equiv "nw::eft::EmitterInstance::UpdateEmitterStaticUniformBlock()", _text + 0x892F20
	.equiv "nw::eft::EmitterInstance::UpdateChildStaticUniformBlock()", _text + 0x893828
	.equiv "nw::eft::EmitterInstance::UpdateEmitterInfoByEmit()", _text + 0x8939D4
	.equiv "nw::eft::EmitterInstance::UpdateResInfo()", _text + 0x8942EC
	.equiv "nw::eft::EmitterInstance::IsRequestFrameBufferTexture()", _text + 0x894740
	.equiv "nw::eft::EmitterCalc::RemoveParticle()", _text + 0x8947B4
	.equiv "nw::eft::EmitterCalc::AddPtclToList()", _text + 0x8949D4
	.equiv "nw::eft::_initialize3v4kAnim()", _text + 0x894AA0
	.equiv "nw::eft::EmitterCalc::EmitCommon()", _text + 0x894BBC
	.equiv "nw::eft::_getUnifiedAnimID()", _text + 0x8965B8
	.equiv "FUN_0EA165EC:nw::eft::_calcParticleAnimTime()", _text + 0x8965EC
	.equiv "FUN_0EA1673C:nw::eft::_calcParticleAnimTime()", _text + 0x89673C
	.equiv "FUN_0EA16880:nw::eft::EmitterController::SetEmissionRatio()", _text + 0x896880
	.equiv "FUN_0EA16914:nw::eft::EmitterController::SetEmissionRatio()", _text + 0x896914
	.equiv "nw::eft::EmitterSet::GetAliveEmitter()", _text + 0x8969BC
	.equiv "nw::eft::EmitterSet::SetMtx()", _text + 0x896A14
	.equiv "nw::eft::EmitterSet::Fade()", _text + 0x896CC4
	.equiv "nw::eft::EmitterSet::ForceCalc()", _text + 0x896D1C
	.equiv "nw::eft::EmitterCalc::CalcEmitPoint()", _text + 0x896E38
	.equiv "nw::eft::EmitterCalc::CalcEmitCircle()", _text + 0x897350
	.equiv "nw::eft::EmitterCalc::CalcEmitCircleSameDivide()", _text + 0x897A14
	.equiv "nw::eft::EmitterCalc::CalcEmitFillCircle()", _text + 0x8980C8
	.equiv "nw::eft::EmitterCalc::CalcEmitSphere()", _text + 0x898844
	.equiv "nw::eft::EmitterCalc::CalcEmitSphereSameDivide()", _text + 0x8992E0
	.equiv "nw::eft::EmitterCalc::CalcEmitSphereSameDivide64()", _text + 0x899B20
	.equiv "nw::eft::EmitterCalc::CalcEmitFillSphere()", _text + 0x89A35C
	.equiv "nw::eft::EmitterCalc::CalcEmitCylinder()", _text + 0x89AEB0
	.equiv "nw::eft::EmitterCalc::CalcEmitFillCylinder()", _text + 0x89B4EC
	.equiv "nw::eft::EmitterCalc::CalcEmitBox()", _text + 0x89BD14
	.equiv "nw::eft::EmitterCalc::CalcEmitFillBox()", _text + 0x89C4D0
	.equiv "nw::eft::EmitterCalc::CalcEmitLine()", _text + 0x89CE78
	.equiv "nw::eft::EmitterCalc::CalcEmitLineSameDivide()", _text + 0x89D3A4
	.equiv "nw::eft::EmitterCalc::CalcEmitRectangle()", _text + 0x89D8E0
	.equiv "nw::eft::EmitterCalc::CalcEmitPrimitive()", _text + 0x89DF88
	.equiv "nw::eft::PtclRandom::Initialize()", _text + 0x89EB48
	.equiv "nw::eft::Renderer::Renderer()", _text + 0x89EEE8
	.equiv "nw::eft::Renderer::BeginRender()", _text + 0x89F0D8
	.equiv "nw::eft::Renderer::SetupParticleShaderAndVertex()", _text + 0x89F72C
	.equiv "nw::eft::Renderer::SetupTexture()", _text + 0x89F8DC
	.equiv "nw::eft::Renderer::DrawCpuEntry()", _text + 0x89FA7C
	.equiv "nw::eft::Renderer::DrawGpuEntry()", _text + 0x89FB24
	.equiv "nw::eft::Renderer::RequestParticle()", _text + 0x89FBCC
	.equiv "nw::eft::Renderer::EntryChildParticleSub()", _text + 0x8A010C
	.equiv "nw::eft::Renderer::EntryParticleSub()", _text + 0x8A0288
	.equiv "nw::eft::Renderer::EntryParticle()", _text + 0x8A03F0
	.equiv "nw::eft::Renderer::BeginStremOut()", _text + 0x8A0684
	.equiv "nw::eft::Renderer::CalcStremOutParticle()", _text + 0x8A06B4
	.equiv "nw::eft::Renderer::EndStremOut()", _text + 0x8A085C
	.equiv "nw::eft::Renderer::SwapDoubleBuffer()", _text + 0x8A0890
	.equiv "nw::eft::Renderer::MakeStripeAttributeBlockCore()", _text + 0x8A08F4
	.equiv "nw::eft::Renderer::GetPositionOnCubic()", _text + 0x8A0C4C
	.equiv "nw::eft::Renderer::MakeStripeAttributeBlockCoreDivide()", _text + 0x8A0EB8
	.equiv "nw::eft::Renderer::MakeStripeAttributeBlock()", _text + 0x8A1568
	.equiv "nw::eft::Renderer::SetupStripeDrawSetting()", _text + 0x8A1BEC
	.equiv "nw::eft::Renderer::EntryStripe()", _text + 0x8A1D5C
	.equiv "nw::eft::System::System()", _text + 0x8A2718
	.equiv "nw::eft::System::RemoveStripe()", _text + 0x8A279C
	.equiv "nw::eft::System::RemoveStripe_()", _text + 0x8A27F4
	.equiv "nw::eft::System::RemovePtcl()", _text + 0x8A2998
	.equiv "nw::eft::System::AddStripeRemoveList()", _text + 0x8A2A1C
	.equiv "nw::eft::System::EmitChildParticle()", _text + 0x8A2A48
	.equiv "nw::eft::System::AddPtclAdditionList()", _text + 0x8A2AD8
	.equiv "nw::eft::System::AllocAndConnectStripe()", _text + 0x8A2B10
	.equiv "nw::eft::System::AllocPtcl()", _text + 0x8A3098
	.equiv "nw::eft::System::UpdateEmitterResInfo()", _text + 0x8A3144
	.equiv "nw::eft::System::UpdateEmitterSetResInfo()", _text + 0x8A31A8
	.equiv "nw::eft::System::AllocEmitter()", _text + 0x8A32FC
	.equiv "nw::eft::ParticleShader::ParticleShader()", _text + 0x8A35A0
	.equiv "nw::eft::ParticleShader::InitializeVertexShaderLocation()", _text + 0x8A3834
	.equiv "nw::eft::ParticleShader::InitializeFragmentShaderLocation()", _text + 0x8A38C0
	.equiv "nw::eft::ParticleShader::InitializeAttribute()", _text + 0x8A3B10
	.equiv "nw::eft::ParticleShader::InitializeStripeVertexShaderLocation()", _text + 0x8A3F98
	.equiv "nw::eft::ParticleShader::InitializeStripeAttribute()", _text + 0x8A3FF0
	.equiv "nw::eft::ParticleShader::SetupShaderResource()", _text + 0x8A40B8
	.equiv "nw::eft::ParticleShader::SetUserVertexUniformBlock()", _text + 0x8A41F4
	.equiv "nw::eft::ParticleShader::SetUserFragmentUniformBlock()", _text + 0x8A42C8
	.equiv "FUN_0EA2439C:FID_conflict:nw::eft::ParticleShader::SetUserFragmentUniformBlockFromData()", _text + 0x8A439C
	.equiv "FUN_0EA244A4:FID_conflict:nw::eft::ParticleShader::SetUserFragmentUniformBlockFromData()", _text + 0x8A44A4
	.equiv "nw::eft::ParticleShader::SetUserUniformBlockFromData()", _text + 0x8A45AC
	.equiv "nw::eft::ParticleShader::GetUserFragmentSamplerLocation()", _text + 0x8A4614
	.equiv "nw::eft::ParticleShader::GetUserVertexSamplerLocation()", _text + 0x8A4668
	.equiv "nw::eft::CalcAnimKeyFrame()", _text + 0x8A4714
	.equiv "nw::eft::CalcAnimKeyFrameIndex()", _text + 0x8A48C4
	.equiv "nw::eft::CalcAnimKeyFrameSimple()", _text + 0x8A4914
	.equiv "nw::eft::CalcAnimKeyFrameSimpleS32()", _text + 0x8A4990
	.equiv "nw::eft::Renderer::BindParticleAttributeBlock()", _text + 0x8A4A5C
	.equiv "nw::eft::Renderer::BindGpuParticleAttributeBlock()", _text + 0x8A4A7C
	.equiv "_DEMOGFDReadVertexShader()", _text + 0x8A4A9C
	.equiv "_DEMOGFDReadPixelShader()", _text + 0x8A4BFC
	.equiv "_DEMOGFDReadGeometryShader()", _text + 0x8A4D5C
	.equiv "nw::eft::TextureSampler::TextureSampler()", _text + 0x8A4F1C
	.equiv "nw::eft::TextureSampler::Setup()", _text + 0x8A4F6C
	.equiv "nw::eft::TextureSampler::Initialize()", _text + 0x8A5028
	.equiv "nw::eft::TextureSampler::SetupLOD()", _text + 0x8A504C
	.equiv "nw::eft::VertexBuffer::VertexBuffer()", _text + 0x8A5080
	.equiv "nw::eft::VertexBuffer::AllocateVertexBuffer()", _text + 0x8A50C0
	.equiv "nw::eft::VertexBuffer::SetVertexBuffer()", _text + 0x8A511C
	.equiv "nw::eft::VertexBuffer::Finalize()", _text + 0x8A512C
	.equiv "nw::eft::VertexBuffer::BindBuffer()", _text + 0x8A5188
	.equiv "nw::eft::Shader::Shader()", _text + 0x8A51AC
	.equiv "nw::eft::Shader::BindShader()", _text + 0x8A5324
	.equiv "nw::eft::Shader::CreateShader()", _text + 0x8A53A4
	.equiv "nw::eft::Shader::GetFragmentSamplerLocation()", _text + 0x8A5424
	.equiv "nw::eft::Shader::GetVertexSamplerLocation()", _text + 0x8A54A0
	.equiv "nw::eft::Shader::GetAttributeLocation()", _text + 0x8A551C
	.equiv "nw::eft::Shader::GetAttribute()", _text + 0x8A5598
	.equiv "nw::eft::Shader::SetupShader()", _text + 0x8A56D8
	.equiv "nw::eft::UniformBlock::InitializeVertexUniformBlock()", _text + 0x8A5784
	.equiv "nw::eft::UniformBlock::InitializePixelUniformBlock()", _text + 0x8A5830
	.equiv "nw::eft::UniformBlock::BindUniformBlock()", _text + 0x8A58D8
	.equiv "nw::eftvw::ViewerSystem::ViewerSystem()", _text + 0x8A5934
	.equiv "nw::eftvw::ViewerSystem::ReleaseEffecData()", _text + 0x8A5D28
	.equiv "nw::eftvw::ViewerSystem::LoadEffectData()", _text + 0x8A602C
	.equiv "nw::eftvw::ViewerSystem::UnbindResource()", _text + 0x8A6324
	.equiv "nw::eftvw::ViewerSystem::BindEffectResource()", _text + 0x8A641C
	.equiv "nw::eftvw::ViewerSystem::CreateEffectPreview()", _text + 0x8A68A0
	.equiv "FUN_0EA26AF4:nw::eftvw::ViewerSystem::ReleaseEffectPreview()", _text + 0x8A6AF4
	.equiv "FUN_0EA26C6C:nw::eftvw::ViewerSystem::ReleaseEffectPreview()", _text + 0x8A6C6C
	.equiv "nw::eftvw::ViewerSystem::SetFunctionHeader()", _text + 0x8A6D9C
	.equiv "nw::eftvw::ViewerSystem::RequestSetCustomShaderPath()", _text + 0x8A6E64
	.equiv "nw::eftvw::ViewerSystem::RequestSetCustomActionPath()", _text + 0x8A6EFC
	.equiv "nw::eftvw::ViewerSystem::RequestSetUserConfigPath()", _text + 0x8A6F94
	.equiv "nw::eftvw::CalcSize_BoneNameBuff()", _text + 0x8A702C
	.equiv "nw::eftvw::MakePacket_SendModelInfoV2E()", _text + 0x8A70D8
	.equiv "nw::eftvw::ViewerSystem::UpdateModelInfo()", _text + 0x8A71DC
	.equiv "nw::eftvw::ViewerSystem::OverrideSimpleResource()", _text + 0x8A7508
	.equiv "nw::eftvw::ViewerSystem::OverrideChildResource()", _text + 0x8A7900
	.equiv "nw::eftvw::ViewerSystem::OverrideFieldResource()", _text + 0x8A7D20
	.equiv "nw::eftvw::ViewerSystem::OverrideFluctuationResource()", _text + 0x8A8078
	.equiv "nw::eftvw::ViewerSystem::OverrideStripeResource()", _text + 0x8A8318
	.equiv "nw::eftvw::ViewerSystem::OverrideAnimResource()", _text + 0x8A8598
	.equiv "nw::eftvw::ViewerSystem::OverrideShaderParamResource()", _text + 0x8A87B8
	.equiv "nw::eftvw::ViewerSystem::ResetFrame()", _text + 0x8A8A60
	.equiv "nw::eftvw::ViewerSystem::ProcCalc()", _text + 0x8A8AF0
	.equiv "nw::eftvw::ViewerSystem::ExecuteCommand()", _text + 0x8A8D54
	.equiv "nw::eftvw::ViewerSystem::ForceFade()", _text + 0x8A92E8
	.equiv "nw::eft::EmitterComplexCalc::CalcChildParticle()", _text + 0x8A9448
	.equiv "FUN_0EA29914:nw::eft::EmitterComplexCalc::EmitChildParticle()", _text + 0x8A9914
	.equiv "nw::eft::System::BeginFrame()", _text + 0x8AAD04
	.equiv "nw::eft::System::SwapDoubleBuffer()", _text + 0x8AAD78
	.equiv "FUN_0EA2ADD0:nw::eft::System::CalcEmitter()", _text + 0x8AADD0
	.equiv "FUN_0EA2AFA8:nw::eft::System::CalcParticle()", _text + 0x8AAFA8
	.equiv "nw::eft::System::CalcChildParticle()", _text + 0x8AB158
	.equiv "nw::eft::System::FlushCache()", _text + 0x8AB2DC
	.equiv "nw::eft::System::FlushGpuCache()", _text + 0x8AB320
	.equiv "FUN_0EA2B330:nw::eft::System::CalcEmitter()", _text + 0x8AB330
	.equiv "FUN_0EA2B3EC:nw::eft::System::CalcParticle()", _text + 0x8AB3EC
	.equiv "nw::eft::System::BeginRender()", _text + 0x8AB4CC
	.equiv "nw::eft::System::RenderEmitter()", _text + 0x8AB614
	.equiv "nw::eft::System::RenderSortBuffer()", _text + 0x8AB7EC
	.equiv "nw::eft::System::AddSortBuffer()", _text + 0x8AB9C8
	.equiv "nw::eft::System::EndRender()", _text + 0x8ABB3C
	.equiv "nw::eft::System::SwapStreamOutBuffer()", _text + 0x8ABB78
	.equiv "nw::eft::System::CalcStreamOutEmittter()", _text + 0x8ABBA0
	.equiv "nw::eft::System::ClearResource()", _text + 0x8ABC30
	.equiv "nw::eft::System::EntryResource()", _text + 0x8ABCE4
	.equiv "nw::eft::System::KillEmitter()", _text + 0x8AC050
	.equiv "FUN_0EA2C32C:nw::eft::System::KillEmitterSet()", _text + 0x8AC32C
	.equiv "nw::eft::System::SearchEmitterSetID()", _text + 0x8AC3C4
	.equiv "FUN_0EA2C3E4:nw::eft::System::KillEmitterSet()", _text + 0x8AC3E4
	.equiv "nw::eft::System::SearchEmitterSetName()", _text + 0x8AC468
	.equiv "nw::eft::System::SetShaderType()", _text + 0x8AC498
	.equiv "nw::eft::System::GetCurrentCustomActionEmitterMatrixSetCallback()", _text + 0x8AC4DC
	.equiv "FUN_0EA2C510:FID_conflict:nw::eft::System::GetCurrentCustomActionEmitterPreCalcCallback()", _text + 0x8AC510
	.equiv "FUN_0EA2C544:FID_conflict:nw::eft::System::GetCurrentCustomActionEmitterPreCalcCallback()", _text + 0x8AC544
	.equiv "nw::eft::System::GetCurrentCustomActionParticleEmitCallback()", _text + 0x8AC578
	.equiv "nw::eft::System::GetCurrentCustomActionParticleRemoveCallback()", _text + 0x8AC5AC
	.equiv "FUN_0EA2C5E0:FID_conflict:nw::eft::System::GetCurrentCustomActionParticleMakeAttributeCallback()", _text + 0x8AC5E0
	.equiv "FUN_0EA2C614:FID_conflict:nw::eft::System::GetCurrentCustomActionParticleMakeAttributeCallback()", _text + 0x8AC614
	.equiv "nw::eft::System::GetCurrentCustomActionEmitterDrawOverrideCallback()", _text + 0x8AC648
	.equiv "nw::eft::System::GetCustomShaderEmitterInitializeCallback()", _text + 0x8AC67C
	.equiv "nw::eft::System::GetCustomShaderEmitterFinalizeCallback()", _text + 0x8AC69C
	.equiv "nw::eft::System::GetCustomShaderEmitterPreCalcCallback()", _text + 0x8AC6BC
	.equiv "nw::eft::System::GetCustomShaderEmitterPostCalcCallback()", _text + 0x8AC6DC
	.equiv "nw::eft::System::GetCustomShaderDrawOverrideCallback()", _text + 0x8AC6FC
	.equiv "nw::eft::System::GetCustomShaderRenderStateSetCallback()", _text + 0x8AC71C
	.equiv "nw::eft::System::GetDrawPathRenderStateSetCallback()", _text + 0x8AC75C
	.equiv "nw::eft::System::SetDrawPathRenderStateSetCallback()", _text + 0x8AC7A0
	.equiv "nw::eft::PtclInstance::GetDrawColor0()", _text + 0x8AC7BC
	.equiv "nw::eft::EmitterCalc::CalcSimpleParticleBehavior()", _text + 0x8AC858
	.equiv "nw::eft::EmitterCalc::CalcComplexParticleBehavior()", _text + 0x8ACE04
	.equiv "nw::eft::EmitterCalc::CalcChildParticleBehavior()", _text + 0x8AD4C0
	.equiv "nw::eft::EmitterCalc::MakeParticleAttributeBuffer()", _text + 0x8ADB58
	.equiv "nw::eft::EmitterCalc::ptclAnim_Scale_8key()", _text + 0x8ADD5C
	.equiv "nw::eft::EmitterCalc::ptclAnim_Scale_4k3v()", _text + 0x8ADE74
	.equiv "nw::eft::EmitterCalc::ptclAnim_Color0_8key()", _text + 0x8ADF34
	.equiv "nw::eft::EmitterCalc::ptclAnim_Color1_8key()", _text + 0x8ADFD8
	.equiv "nw::eft::EmitterCalc::ptclAnim_Color0_4k3v()", _text + 0x8AE07C
	.equiv "nw::eft::EmitterCalc::ptclAnim_Color1_4k3v()", _text + 0x8AE28C
	.equiv "nw::eft::EmitterCalc::ptclAnim_Alpha0_4k3v()", _text + 0x8AE514
	.equiv "nw::eft::EmitterCalc::ptclAnim_Alpha1_4k3v()", _text + 0x8AE624
	.equiv "nw::eft::Renderer::ConnectionStripeUvScaleCalc()", _text + 0x8AE6C0
	.equiv "nw::eft::Renderer::MakeConnectionStripeAttributeBlockCore()", _text + 0x8AE824
	.equiv "nw::eft::Renderer::MakeConnectionStripeAttributeBlockCoreDivide()", _text + 0x8AF52C
	.equiv "nw::eft::Renderer::MakeConnectionStripeAttributeBlock()", _text + 0x8B05AC
	.equiv "nw::eft::Renderer::EntryConnectionStripe()", _text + 0x8B0C90
	.equiv "nw::eft::EmitterCalc::_ptclField_CurlNoise()", _text + 0x8B0E38
	.equiv "nw::eft::OutputError()", _text + 0x8B1D80
	.equiv "nw::eft::AllocFromStaticHeap()", _text + 0x8B1DE0
	.equiv "nw::eft::OutputWarning()", _text + 0x8B1E44
	.equiv "nw::eft::AllocFromDynamicHeap()", _text + 0x8B1E98
	.equiv "nw::eft::FreeFromDynamicHeap()", _text + 0x8B1F00
	.equiv "nw::eft::InitializeDelayFreeList()", _text + 0x8B1F30
	.equiv "nw::eft::FlushDelayFreeList()", _text + 0x8B1FA0
	.equiv "nw::eft::OutputLog()", _text + 0x8B2084
	.equiv "nw::eft::EmitterSimpleGpuCalc::CalcEmitter()", _text + 0x8B20E4
	.equiv "nw::eft::TemporaryBuffer::Initialize()", _text + 0x8B2B50
	.equiv "nw::eft::TemporaryBuffer::Swap()", _text + 0x8B2BF8
	.equiv "nw::eft::RenderContext::RenderContext()", _text + 0x8B2E14
	.equiv "nw::eft::RenderContext::SetupCommonState()", _text + 0x8B2EDC
	.equiv "nw::eft::RenderContext::SetupBlendType()", _text + 0x8B3050
	.equiv "nw::eft::RenderContext::SetupZBufATest()", _text + 0x8B3130
	.equiv "nw::eft::RenderContext::SetupDisplaySideType()", _text + 0x8B32A0
	.equiv "nw::eft::RenderContext::_SetupFragmentTexture()", _text + 0x8B32E8
	.equiv "FUN_0EA33340:nw::eft::RenderContext::SetupTexture()", _text + 0x8B3340
	.equiv "FUN_0EA333BC:nw::eft::RenderContext::SetupTexture()", _text + 0x8B33BC
	.equiv "FUN_0EA333F0:FID_conflict:nw::eft::RenderContext::_SetupFragmentCubeMapArrayTexture()", _text + 0x8B33F0
	.equiv "nw::eft::RenderContext::SetupUserFragmentTexture()", _text + 0x8B341C
	.equiv "nw::eft::RenderContext::_SetupFragment2DArrayTexture()", _text + 0x8B3448
	.equiv "nw::eft::RenderContext::SetupUserFragment2DArrayTexture()", _text + 0x8B3474
	.equiv "FUN_0EA334A8:FID_conflict:nw::eft::RenderContext::SetupUserFragmentCubeMapTexture()", _text + 0x8B34A8
	.equiv "FUN_0EA334D4:FID_conflict:nw::eft::RenderContext::SetupUserFragmentCubeMapTexture()", _text + 0x8B34D4
	.equiv "FUN_0EA33500:FID_conflict:nw::eft::RenderContext::_SetupFragmentCubeMapArrayTexture()", _text + 0x8B3500
	.equiv "FUN_0EA3352C:FID_conflict:nw::eft::RenderContext::SetupUserFragmentCubeMapTexture()", _text + 0x8B352C
	.equiv "nw::eft::RenderContext::_SetupVertexTexture()", _text + 0x8B3558
	.equiv "FUN_0EA335A4:nw::eft::RenderContext::SetupUserVertexTexture()", _text + 0x8B35A4
	.equiv "FUN_0EA335D8:nw::eft::RenderContext::SetupUserVertexTexture()", _text + 0x8B35D8
	.equiv "nw::eft::RenderContext::_SetupVertex2DArrayTexture()", _text + 0x8B3604
	.equiv "FUN_0EA33630:FID_conflict:nw::eft::RenderContext::SetupUserFragmentCubeMapTexture()", _text + 0x8B3630
	.equiv "nw::eft::RenderContext::SetupVertexArrayTexture()", _text + 0x8B365C
	.equiv "nw::eft::StreamOutAttributeBuffer::Invalidate()", _text + 0x8B3690
	.equiv "nw::eft::StreamOutAttributeBuffer::Initialize()", _text + 0x8B36F4
	.equiv "nw::eft::StreamOutAttributeBuffer::Finalize()", _text + 0x8B38CC
	.equiv "nw::eft::StreamOutAttributeBuffer::Bind()", _text + 0x8B3930
	.equiv "nw::eft::StreamOutAttributeBuffer::UnBind()", _text + 0x8B39F0
	.equiv "nw::eft::EmitterComplexCalc::CalcStripe()", _text + 0x8B3A70
	.equiv "FUN_0EA343F8:nw::eft::EmitterComplexCalc::EmitChildParticle()", _text + 0x8B43F8
	.equiv "nw::eft::EmitterComplexCalc::CalcParticle()", _text + 0x8B45C8
	.equiv "nw::eft::EmitterCalc::_ptclField_Random()", _text + 0x8B4DA8
	.equiv "nw::eft::EmitterCalc::_ptclField_Magnet()", _text + 0x8B4F28
	.equiv "nw::eft::EmitterCalc::_ptclField_Spin()", _text + 0x8B5378
	.equiv "nw::eft::EmitterCalc::_ptclField_Collision()", _text + 0x8B5800
	.equiv "nw::eft::EmitterCalc::_ptclField_Convergence()", _text + 0x8B6148
	.equiv "nw::eft::EmitterCalc::_ptclField_PosAdd()", _text + 0x8B657C
	.equiv "nw::eft::EmitterCalc::InitializeFluctuationTable()", _text + 0x8B675C
	.equiv "nw::eft::EmitterCalc::CalcFluctuation()", _text + 0x8B69D0
	.equiv "nw::eft::EmitterCalc::ApplyAnim()", _text + 0x8B6BF0
	.equiv "nw::eft::EmitterSimpleCalc::EmitSameDistance()", _text + 0x8B7238
	.equiv "nw::eft::EmitterSimpleCalc::CalcEmitter()", _text + 0x8B7568
	.equiv "nw::eft::EmitterSimpleCalc::CalcParticle()", _text + 0x8B7CFC
	.equiv "nw::eft::Resource::CreateFtexbTextureHandle()", _text + 0x8B8738
	.equiv "nw::eft::Resource::CreateOriginalTextureHandle()", _text + 0x8B89CC
	.equiv "nw::eft::Resource::Initialize()", _text + 0x8B8C04
	.equiv "nw::eft::Resource::Resource()", _text + 0x8B95D8
	.equiv "nw::eft::Resource::DeleteTextureHandle()", _text + 0x8B9654
	.equiv "nw::eft::Resource::Finalize()", _text + 0x8B96A8
	.equiv "nw::eft::Resource::SearchEmitterSetID()", _text + 0x8B9930
	.equiv "FUN_0EA399A0:nw::eft::Resource::SearchEmitterID()", _text + 0x8B99A0
	.equiv "FUN_0EA39A18:nw::eft::Resource::SearchEmitterID()", _text + 0x8B9A18
	.equiv "nw::eft::Resource::BindResource()", _text + 0x8B9A98
	.equiv "nw::eft::Resource::UnbindResource()", _text + 0x8B9B98
	.equiv "nw::eft::Resource::GetShader()", _text + 0x8B9CB4
	.equiv "nw::eftvw::CmdReceiver::CmdReceiver()", _text + 0x8B9CE0
	.equiv "nw::eftvw::CmdReceiver::DoCallbackAfterProc()", _text + 0x8B9EB8
	.equiv "nw::eftvw::CreateCmdReceiver()", _text + 0x8B9F44
	.equiv "nw::eftvw::CmdSender::CmdSender()", _text + 0x8B9FA8
	.equiv "nw::eftvw::CmdSender::AddCommand()", _text + 0x8BA0A4
	.equiv "nw::eftvw::CreateCmdSender()", _text + 0x8BA3A0
	.equiv "nw::eftvw::EffectPreview::EffectPreview()", _text + 0x8BA430
	.equiv "nw::eftvw::EffectPreview::DestroyEmitterSet()", _text + 0x8BA740
	.equiv "nw::eftvw::EffectPreview::DestroyEffectPreview()", _text + 0x8BA7F4
	.equiv "nw::eftvw::EffectPreview::CreateEffectPreview()", _text + 0x8BA850
	.equiv "nw::eftvw::EffectPreview::updateDrawMatrix()", _text + 0x8BA9EC
	.equiv "nw::eftvw::EffectPreview::SetTransform()", _text + 0x8BAC8C
	.equiv "nw::eftvw::EffectPreview::SetViewerColor()", _text + 0x8BB0B0
	.equiv "nw::eftvw::EffectPreview::SetVisible()", _text + 0x8BB430
	.equiv "nw::eftvw::EffectPreview::SetEmitterVisible()", _text + 0x8BB4C4
	.equiv "nw::eftvw::EffectPreview::ForceCalcEmitterSet()", _text + 0x8BB564
	.equiv "nw::eftvw::EffectPreview::CreateEmitterSet()", _text + 0x8BB5BC
	.equiv "nw::eftvw::EffectPreview::FadeEmitterSet()", _text + 0x8BB74C
	.equiv "nw::eftvw::Function::Function()", _text + 0x8BB924
	.equiv "nw::eftvw::Function::SetFunctionParam()", _text + 0x8BBA84
	.equiv "nw::eftvw::_MTX34Mult()", _text + 0x8BBB10
	.equiv "nw::eftvw::DegToIdx()", _text + 0x8BBD7C
	.equiv "nw::eftvw::Function::Calc()", _text + 0x8BBDAC
	.equiv "nw::eftvw::PacketProcedure::ProcViewerPacket()", _text + 0x8BDAA0
	.equiv "nw::eftvw::PacketProcedure::ProcFilePacket()", _text + 0x8BDAB8
	.equiv "nw::eftvw::PacketProcedure::ProcEmitterPacket()", _text + 0x8BDF3C
	.equiv "nw::eftvw::PacketProcedure::ProcPreviewPacket()", _text + 0x8BE250
	.equiv "nw::eftvw::PacketProcedure::DoPacket()", _text + 0x8BE8BC
	.equiv "nw::eftvw::Preview::Preview()", _text + 0x8BEA28
	.equiv "nw::eftvw::Preview::Initialize()", _text + 0x8BEA7C
	.equiv "nw::eftvw::Preview::Finalize()", _text + 0x8BEB08
	.equiv "nw::eftvw::Preview::CalcTree()", _text + 0x8BEB14
	.equiv "nw::eftvw::Preview::AddPreviewList()", _text + 0x8BEC48
	.equiv "nw::eftvw::Preview::RemovePreviewList()", _text + 0x8BEC98
	.equiv "nw::eftvw::Preview::GetPreview()", _text + 0x8BECE0
	.equiv "nw::eft::System::InitializeEmitter()", _text + 0x8BEE88
	.equiv "nw::eft::System::CreateEmitterSetID()", _text + 0x8BF2CC
	.equiv "FUN_0EA3F6BC:nw::eft::System::ReCreateEmitter()", _text + 0x8BF6BC
	.equiv "FUN_0EA3FBBC:nw::eft::System::ReCreateEmitter()", _text + 0x8BFBBC
	.equiv "nw::eft::System::ReCreateEmitterSet()", _text + 0x8BFCD0
	.equiv "nn::ngc::Cafe::ProfanityFilter::CleanUpVariables()", _text + 0x8BFD20
	.equiv "nn::ngc::Cafe::ProfanityFilter::ProfanityFilter()", _text + 0x8BFD4C
	.equiv "nn::ngc::Cafe::ProfanityFilter::SetupMemoryArea()", _text + 0x8BFD90
	.equiv "nn::ngc::Cafe::ProfanityFilterBase::GetPatternBitsFromRegion()", _text + 0x8C05D8
	.equiv "nn::ngc::Cafe::ProfanityFilterBase::ConvertKatakanaToBig()", _text + 0x8C07F0
	.equiv "nn::ngc::Cafe::ProfanityFilterBase::ConvertHalfwidthKatakanaToFullwidth()", _text + 0x8C0830
	.equiv "nn::ngc::Cafe::ProfanityFilterBase::ConvertUserInputForText()", _text + 0x8C0874
	.equiv "nn::ngc::Cafe::ProfanityFilterBase::ConvertRegexPatternForText()", _text + 0x8C0AE4
	.equiv "nn::ngc::ProfanityFilterTemporaryPool::ProfanityFilterTemporaryPool()", _text + 0x8C0F9C
	.equiv "nn::ngc::ProfanityFilterTemporaryPool::Initialize()", _text + 0x8C0FF4
	.equiv "nn::ngc::ProfanityFilterTemporaryPool::AllocateBlock()", _text + 0x8C1054
	.equiv "nn::ngc::ProfanityFilterTemporaryPool::Allocate()", _text + 0x8C10DC
	.equiv "nn::ngc::ProfanityFilterTemporaryPool::Free()", _text + 0x8C1180
	.equiv "FUN_0EA41258:memcmp..obj.5Cghs.5Ccafe.5Clib.5Cnn.5Cngc.5CNDEBUG.5Cngc_RegexDfaConverter.", _text + 0x8C1258
	.equiv "nn::ngc::RegexDfaConverter::RegexDfaConverter()", _text + 0x8C1288
	.equiv "FUN_0EA42860:nn::ngc::UnitList::UnitList()", _text + 0x8C2860
	.equiv "FUN_0EA428A4:void_nn::ngc::UnitList::Finalize()", _text + 0x8C28A4
	.equiv "FUN_0EA42918:nn::ngc::UnitList::~UnitList()", _text + 0x8C2918
	.equiv "FUN_0EA42968:FID_conflict:nn::ngc::UnitList::Iterator_nn::ngc::UnitList::InsertNew()", _text + 0x8C2968
	.equiv "void_nn::ngc::UnitList::MoveAllNodesFrom()", _text + 0x8C2A44
	.equiv "FUN_0EA42E60:nn::ngc::UnitList::UnitList()", _text + 0x8C2E60
	.equiv "nn::ngc::RegexDfaState::RegexDfaState()", _text + 0x8C2FD0
	.equiv "nn::ngc::RegexDfaState::Initialize()", _text + 0x8C3034
	.equiv "FUN_0EA4312C:FID_conflict:nn::ngc::UnitList::UnitList()", _text + 0x8C312C
	.equiv "FUN_0EA43170:FID_conflict:void_nn::ngc::UnitList::Initialize()", _text + 0x8C3170
	.equiv "FUN_0EA431B4:FID_conflict:nn::ngc::UnitList::UnitList()", _text + 0x8C31B4
	.equiv "FUN_0EA431F8:FID_conflict:void_nn::ngc::UnitList::Initialize()", _text + 0x8C31F8
	.equiv "nn::ngc::RegexMatch::IsBlankCode()", _text + 0x8C323C
	.equiv "nn::ngc::RegexMatch::GetLineCode()", _text + 0x8C3364
	.equiv "FUN_0EA43E74:FID_conflict:nn::ngc::UnitList::UnitList()", _text + 0x8C3E74
	.equiv "FUN_0EA44AD8:void_nn::ngc::UnitList::Finalize()", _text + 0x8C4AD8
	.equiv "FUN_0EA44B4C:nn::ngc::UnitList::~UnitList()", _text + 0x8C4B4C
	.equiv "nn::ngc::RegexNfaStateCopier::RegexNfaStateCopier()", _text + 0x8C55F8
	.equiv "FUN_0EA45A54:nn::ngc::UnitList::UnitList()", _text + 0x8C5A54
	.equiv "FUN_0EA45A98:void_nn::ngc::UnitList::Initialize()", _text + 0x8C5A98
	.equiv "nn::ngc::RegexScanner::RegexScanner()", _text + 0x8C5BD4
	.equiv "nn::ngc::RegexScanner::SetupToken()", _text + 0x8C5C30
	.equiv "nn::ngc::RegexScanner::LexicalAnalysis()", _text + 0x8C5FF8
	.equiv "FUN_0EA46060:nn::ngc::UnitList::UnitList()", _text + 0x8C6060
	.equiv "FUN_0EA460E8:FID_conflict:nn::ngc::UnitList::Iterator_nn::ngc::UnitList::InsertNew()", _text + 0x8C60E8
	.equiv "FUN_0EA47C8C:void_nn::ngc::UnitList::Initialize()", _text + 0x8C7C8C
	.equiv "FUN_0EA47CD0:FID_conflict:nn::ngc::RegexStateLink::RegexStateLink()", _text + 0x8C7CD0
	.equiv "nn::ngc::RegexStateLink::~RegexStateLink()", _text + 0x8C7D28
	.equiv "FUN_0EA47D7C:void_nn::ngc::RegexStateLink::LinkTo()", _text + 0x8C7D7C
	.equiv "FUN_0EA47D90:void_nn::ngc::RegexStateLink::LinkTo()", _text + 0x8C7D90
	.equiv "FUN_0EA47DA8:void_nn::ngc::RegexStateLink::LinkTo()", _text + 0x8C7DA8
	.equiv "FUN_0EA47E10:void_nn::ngc::RegexStateLink::LinkTo()", _text + 0x8C7E10
	.equiv "FUN_0EA47E28:bool_nn::ngc::RegexStateLink::DeepCopyFrom()", _text + 0x8C7E28
	.equiv "FUN_0EA47F38:bool_nn::ngc::RegexStateLink::DeepCopyFrom()", _text + 0x8C7F38
	.equiv "FUN_0EA48070:FID_conflict:nn::ngc::RegexStateLink::RegexStateLink()", _text + 0x8C8070
	.equiv "FUN_0EA480E0:void_nn::ngc::RegexStateLink::LinkTo()", _text + 0x8C80E0
	.equiv "FUN_0EA48268:wcslen", _text + 0x8C8268
	.equiv "FUN_0EA4826C:wcsncmp", _text + 0x8C826C
	.equiv "nn::ngc::Cafe::GetProductArea()", _text + 0x8C8274
	.equiv "nn::ngc::Cafe::GetLanguageSetting()", _text + 0x8C82B8
	.equiv "nn::ngc::Cafe::ContentsReader::CloseFile()", _text + 0x8C850C
	.equiv "nn::ngc::Cafe::ContentsReader::GetFileContent()", _text + 0x8C8560
	.equiv "nn::ngc::Cafe::ContentsReader::GetFilterFilePath()", _text + 0x8C8634
	.equiv "nn::ngc::Cafe::ContentsReader::GetFilterData()", _text + 0x8C8670
	.equiv "nn::ngc::Cafe::ContentsReader::GetFilterDataSize()", _text + 0x8C87B8
	.equiv "nn::ngc::GetCharClassTypeFromName()", _text + 0x8C88F0
	.equiv "nn::ngc::GetCaseFoldingPair()", _text + 0x8C89A8
	.equiv "nn::ngc::UnitList::Iterator_nn::ngc::UnitList::Remove()", _text + 0x8C9A7C
	.equiv "`global_constructor_keyed_to'_13_enlResult_cpp_8d76d5c0", _text + 0x8CA290
	.equiv "enl::CafeMemoryManager::GetTransportRequiredMemory()", _text + 0x8CA5D0
	.equiv "enl::CafeMemorySetting::CafeMemorySetting()", _text + 0x8CA5E8
	.equiv "enl::CafeMemoryManager::curlAlloc()", _text + 0x8CA838
	.equiv "enl::CafeMemoryManager::curlFree()", _text + 0x8CA898
	.equiv "enl::NexWifiMatchingManager::NexWifiMatchingManager()", _text + 0x8CB1A0
	.equiv "enl::NexWifiMatchingManager::disconnect()", _text + 0x8CC678
	.equiv "enl::NexWifiMatchingManager::isSessionOwner_()", _text + 0x8CD454
	.equiv "enl::CafePiaFramework::applyConfig_()", _text + 0x8CE404
	.equiv "enl::CafePiaFramework::createErrorManager_()", _text + 0x8CE868
	.equiv "enl::Buffer::clear()", _text + 0x8CF158
	.equiv "enl::Buffer::Buffer()", _text + 0x8CF198
	.equiv "enl::Buffer::set()", _text + 0x8CF228
	.equiv "enl::ErrorManager::setCommonError()", _text + 0x8CF708
	.equiv "enl::Framework::initializeManagers_()", _text + 0x8CFC04
	.equiv "enl::Framework::Framework()", _text + 0x8CFC30
	.equiv "enl::Framework::calcReceive()", _text + 0x8CFD6C
	.equiv "enl::Framework::calcSend()", _text + 0x8CFE7C
	.equiv "enl::Framework::startThread()", _text + 0x8CFEC0
	.equiv "enl::IDInfoBase::regist()", _text + 0x8D0524
	.equiv "enl::IDInfoBase::toSimpleIDInfo()", _text + 0x8D0590
	.equiv "enl::NetworkInfoManager::getLiveBufferIDByTransportID()", _text + 0x8D0D80
	.equiv "enl::SendManager::setSendMethod()", _text + 0x8D186C
	.equiv "enl::SystemTransport::SystemTransport()", _text + 0x8D2060
	.equiv "FUN_0EA52C14:enl::SystemTransport::getSessionTimeInfo_()", _text + 0x8D2C14
	.equiv "enl::SystemTransport::addSessionTime_()", _text + 0x8D2CA4
	.equiv "enl::SystemTransport::getReceivedDataDetailByAID()", _text + 0x8D2F4C
	.equiv "enl::SystemTransport::updateLastPlayerUniqueIDTable_()", _text + 0x8D2FF0
	.equiv "enl::SystemTransport::clearPlayerIDTable()", _text + 0x8D30F0
	.equiv "enl::SystemTransport::updatePlayerIDTable()", _text + 0x8D31D8
	.equiv "enl::SystemTransport::updatePlayerIDTable_()", _text + 0x8D330C
	.equiv "enl::SystemTransport::toBufferFromDetail_()", _text + 0x8D3690
	.equiv "enl::SystemTransport::update()", _text + 0x8D382C
	.equiv "enl::SystemTransport::checkMasterUnique()", _text + 0x8D3B4C
	.equiv "FUN_0EA53C3C:enl::SystemTransport::getSessionTimeInfo_()", _text + 0x8D3C3C
	.equiv "enl::SystemTransport::checkReceiveSessionTime()", _text + 0x8D3CCC
	.equiv "enl::SystemTransport::getMasterStationNum()", _text + 0x8D3DC8
	.equiv "enl::SystemTransport::syncPlayerIDTable()", _text + 0x8D3E98
	.equiv "enl::SystemTransport::isPlayerIDSet()", _text + 0x8D3F2C
	.equiv "enl::SystemTransport::getReceivedDataDetail_()", _text + 0x8D3F90
	.equiv "enl::SystemTransport::findPlayerIDByAID_()", _text + 0x8D3FF0
	.equiv "enl::SystemTransport::isDisconnectedPlayer()", _text + 0x8D4064
	.equiv "enl::SystemTransport::isPlayerIDSync()", _text + 0x8D40CC
	.equiv "enl::SystemTransport::updatePlayerIDSyncUnique()", _text + 0x8D43FC
	.equiv "enl::SystemTransport::getReceivedDataDetailByUniqueID()", _text + 0x8D45DC
	.equiv "enl::SystemTransport::isPlayerIDSetInAny()", _text + 0x8D4684
	.equiv "enl::SystemTransport::checkUniqueIDInfoSync()", _text + 0x8D4818
	.equiv "enl::SystemTransport::isCPU()", _text + 0x8D4948
	.equiv "enl::SystemTransport::isPlayerAllArrival()", _text + 0x8D4AD4
	.equiv "enl::SystemTransport::addSessionTimeOuter()", _text + 0x8D4CE8
	.equiv "enl::SystemTransport::toDetailFromBuffer_()", _text + 0x8D50A4
	.equiv "enl::SystemTransport::onReceived()", _text + 0x8D51EC
	.equiv "enl::TaskThread::TaskThread()", _text + 0x8D62F8
	.equiv "enl::TaskThread::calc_()", _text + 0x8D677C
	.equiv "enl::TransportManager::TransportManager()", _text + 0x8D6F9C
	.equiv "enl::TransportManager::init()", _text + 0x8D7484
	.equiv "enl::TransportManager::getContentTransporter()", _text + 0x8D7678
	.equiv "enl::TransportManager::updateReceiveBuffer_()", _text + 0x8D772C
	.equiv "enl::TransportManager::receive()", _text + 0x8D79E0
	.equiv "enl::TransportManager::receiveSet()", _text + 0x8D7CAC
	.equiv "enl::TransportManager::checkNeedSendContents_()", _text + 0x8D7E74
	.equiv "enl::TransportManager::createPacket_()", _text + 0x8D7F38
	.equiv "enl::TransportManager::readyTransportBuffer()", _text + 0x8D84E8
	.equiv "enl::TransportManager::procDisconnectContent()", _text + 0x8D86F0
	.equiv "enl::TransportManager::checkSystemReceive()", _text + 0x8D88CC
	.equiv "enl::TransportManager::readyBufferUse()", _text + 0x8D8958
	.equiv "`global_constructor_keyed_to'_23_enlTransportManager_cpp_16c1d315", _text + 0x8D8A20
	.equiv "enl::PiaFramework::dispatch()", _text + 0x8DA6A8
	.equiv "enl::PiaFramework::createPeerManager_()", _text + 0x8DAB70
	.equiv "enl::PiaFramework::createTransportManager_()", _text + 0x8DAF90
	.equiv "enl::PiaFramework::createSendManager_()", _text + 0x8DB004
	.equiv "enl::PiaFramework::createNetworkInfoManager_()", _text + 0x8DB33C
	.equiv "enl::PiaNetworkInfoManager::updateToBuffer_()", _text + 0x8DBB4C
	.equiv "enl::PiaNetworkInfoManager::updatePeerInfo_()", _text + 0x8DBD50
	.equiv "enl::PiaPeerManager::onConnect()", _text + 0x8DC2CC
	.equiv "enl::PiaSendUnreliableInner::send()", _text + 0x8DD3F4
	.equiv "enl::PiaTransportManager::receiveFromLib()", _text + 0x8DD7DC
	.equiv "enl::EventSynchronizer::clearEvent_()", _text + 0x8DDC7C
	.equiv "enl::EventSynchronizer::init()", _text + 0x8DDD54
	.equiv "enl::EventSynchronizer::clearEventOne_()", _text + 0x8DDE38
	.equiv "enl::EventSynchronizer::changeEventArray_()", _text + 0x8DDEF4
	.equiv "enl::EventSynchronizer::checkDoneEventReach_()", _text + 0x8DE220
	.equiv "enl::EventSynchronizer::convertArrayToBuffer_()", _text + 0x8DE348
	.equiv "enl::EventSynchronizer::convertToBuffer_()", _text + 0x8DE4E0
	.equiv "enl::EventSynchronizer::update()", _text + 0x8DE714
	.equiv "enl::EventSynchronizer::findEvent_()", _text + 0x8DE78C
	.equiv "enl::EventSynchronizer::addEvent_()", _text + 0x8DE854
	.equiv "enl::EventSynchronizer::popNextEvent_()", _text + 0x8DEAF8
	.equiv "enl::EventSynchronizer::parseBufferToRequest_()", _text + 0x8DF334
	.equiv "enl::EventSynchronizer::mergeEvent_()", _text + 0x8DF368
	.equiv "enl::TimeSynchronizer::TimeSynchronizer()", _text + 0x8DFF38
	.equiv "enl::TimeSynchronizer::start()", _text + 0x8E0820
	.equiv "enl::TransportRequest::TransportRequest()", _text + 0x8E13DC
	.equiv "enl::TransportRequest::findRequest()", _text + 0x8E14F0
	.equiv "enl::TransportRequest::request()", _text + 0x8E155C
	.equiv "void_sead::Serialization::read()", _text + 0x8E1EF8
	.equiv "void_sead::Serialization::write()", _text + 0x8E1F3C
	.equiv "enl::MatchingManager::waitInitNetworkInfo_()", _text + 0x8E3344
	.equiv "enl::MatchingManager::waitInitNetworkInfoDisconnect_()", _text + 0x8E33EC
	.equiv "enl::PiaP2PManager::procAfterLogin()", _text + 0x8E4200
	.equiv "enl::PiaP2PManager::waitForContext_()", _text + 0x8E46D4
	.equiv "FUN_0EA66218:registPeerInfo", _text + 0x8E6218
	.equiv "enl::PacketInfo::PacketInfo()", _text + 0x8E6824
	.equiv "enl::PacketInfo::init()", _text + 0x8E6908
	.equiv "enl::DoubledSendPacketArray::updatePacketTypeList_()", _text + 0x8E6920
	.equiv "enl::DoubledSendPacketArray::DoubledSendPacketArray()", _text + 0x8E6A9C
	.equiv "enl::DoubledSendPacketArray::init()", _text + 0x8E6D28
	.equiv "enl::DoubledSendPacketArray::getPacketInfo_()", _text + 0x8E6E0C
	.equiv "enl::DoubledSendPacketArray::addSendList()", _text + 0x8E6E48
	.equiv "enl::DoubledSendPacketArray::getPacketBuffer()", _text + 0x8E6EB4
	.equiv "enl::ReceiveChecker::ReceiveChecker()", _text + 0x8E7330
	.equiv "FUN_0EA67430:enl::ReceiveChecker::getInfo_()", _text + 0x8E7430
	.equiv "enl::ReceiveChecker::addInfo()", _text + 0x8E7470
	.equiv "FUN_0EA6751C:enl::ReceiveChecker::getInfo_()", _text + 0x8E751C
	.equiv "enl::ReceiveChecker::isReceive()", _text + 0x8E755C
	.equiv "enl::ReceiveChecker::setReceive()", _text + 0x8E7580
	.equiv "enl::ReceiveChecker::clear()", _text + 0x8E75A8
	.equiv "enl::SendMethodUnicast::decideNextSendCore_()", _text + 0x8E7910
	.equiv "enl::SystemInfoAccessor::getLatency()", _text + 0x8E7F58
	.equiv "enl::MultiUnitHeap::emergencyAllocate()", _text + 0x8E9208
	.equiv "enl::MultiUnitHeap::Allocate()", _text + 0x8E9278
	.equiv "FUN_0EA6984C:memcmp..obj.5Cghs.5Ccafe.5Clib.5Cnn.5Cngc.5CNDEBUG.5Cngc_RegexDfaConverter.", _text + 0x8E984C
	.equiv "FUN_0EA6987C:memmove..obj.5Cghs.5Ccafe.5Ccos.5Ccore.5Ctarget.5Cdyn.5Ccore_dyn_stub.5CNDEBUG.5Cstub.", _text + 0x8E987C
	.equiv "nn::nex::MemoryManager::Allocate()", _text + 0x8E9994
	.equiv "QuazalCRTAlloc", _text + 0x8E99D8
	.equiv "FUN_0EA69A68:nn::nex::MemoryManager::Free()", _text + 0x8E9A68
	.equiv "FUN_0EA69BE8:nn::nex::qResult::Equals()", _text + 0x8E9BE8
	.equiv "nn::nex::TraceLog::GetInstance()", _text + 0x8E9C00
	.equiv "Thunked-Function:nn::nex::MemoryManager::Allocate()", _text + 0x8E9C10
	.equiv "nn::nex::StringStream::StringStream()", _text + 0x8E9C14
	.equiv "nn::nex::StringStream::GetLength()", _text + 0x8E9C80
	.equiv "nn::nex::StringStream::FreeBuffer()", _text + 0x8E9C94
	.equiv "nn::nex::StringStream::ResizeBuffer()", _text + 0x8E9CA8
	.equiv "nn::nex::StringStream::TestFreeRoom()", _text + 0x8E9D3C
	.equiv "FUN_0EA69D94:nn::nex::StringStream::operator_<<()", _text + 0x8E9D94
	.equiv "nn::nex::StringStream::AddBaseIfRequired()", _text + 0x8E9E38
	.equiv "FUN_0EA69E88:FID_conflict:nn::nex::StringStream::StreamNumber()", _text + 0x8E9E88
	.equiv "FUN_0EA69F5C:nn::nex::MemoryManager::Free()", _text + 0x8E9F5C
	.equiv "nn::nex::StringStream::~StringStream()", _text + 0x8E9F60
	.equiv "FUN_0EA6A004:inet_addr()", _text + 0x8EA004
	.equiv "FUN_0EA6A054:nn::nex::qResult::Equals()", _text + 0x8EA054
	.equiv "FUN_0EA6A0F0:FID_conflict:nn::nex::CriticalSection::EnterImpl()", _text + 0x8EA0F0
	.equiv "FUN_0EA6ADD0:FID_conflict:nn::nex::CriticalSection::EnterImpl()", _text + 0x8EADD0
	.equiv "nn::nex::SingleThreadCallPolicy::CurrentThreadIsDispatchingJobs()", _text + 0x8EB14C
	.equiv "nn::nex::HighResolutionClock::GetFrequency()", _text + 0x8EB34C
	.equiv "nn::nex::HighResolutionClock::GetTime()", _text + 0x8EB378
	.equiv "nn::nex::HighResolutionClock::GetLowResolutionTime()", _text + 0x8EB3D4
	.equiv "nn::nex::SystemClock::ApplyCorrection()", _text + 0x8EB3F4
	.equiv "nn::nex::SpinTest::SpinTest()", _text + 0x8EBA64
	.equiv "nn::nex::InstantiationContext::AddInstance()", _text + 0x8EBDA8
	.equiv "nn::nex::InstanceTable::AddInstance()", _text + 0x8EBF10
	.equiv "nn::nex::PseudoSingleton::PseudoSingleton()", _text + 0x8EC0D0
	.equiv "nn::nex::MutexPrimitive::MutexPrimitive()", _text + 0x8EC13C
	.equiv "nn::nex::LockChecker::LockChecker()", _text + 0x8EC190
	.equiv "nn::nex::CriticalSection::CriticalSection()", _text + 0x8EC1F0
	.equiv "nn::nex::hex()", _text + 0x8EC30C
	.equiv "nn::nex::Core::RefreshThreadMode()", _text + 0x8EC320
	.equiv "FUN_0EA6C3FC:FID_conflict:nn::nex::StringStream::StreamNumber()", _text + 0x8EC3FC
	.equiv "nn::nex::CriticalSection::SetEnableLockFlags()", _text + 0x8EC4C8
	.equiv "nn::nex::CriticalSection::ClearEnableLockFlags()", _text + 0x8EC4DC
	.equiv "nn::nex::Core::PrepareLockFlags()", _text + 0x8EC504
	.equiv "nn::nex::EventHandler::EventHandler()", _text + 0x8EC640
	.equiv "FUN_0EA6C78C:nn::nex::String::String()", _text + 0x8EC78C
	.equiv "FUN_0EA6C81C:nn::nex::String::String()", _text + 0x8EC81C
	.equiv "nn::nex::ProfilingUnit::Reset()", _text + 0x8EC898
	.equiv "nn::nex::SingleThreadCallPolicy::SingleThreadCallPolicy()", _text + 0x8ECAC0
	.equiv "nn::nex::Event::Event()", _text + 0x8ECB18
	.equiv "nn::nex::EventHandler::ResetEvent()", _text + 0x8ECCDC
	.equiv "FUN_0EA6D0B8:nn::nex::String::String()", _text + 0x8ED0B8
	.equiv "FUN_0EA6D1F8:nn::nex::String::operator_=()", _text + 0x8ED1F8
	.equiv "nn::nex::String::Format()", _text + 0x8ED284
	.equiv "nn::nex::ObjectThreadRoot::SetThreadAffinity()", _text + 0x8EDC08
	.equiv "nn::nex::ObjectThreadRoot::SetPriority()", _text + 0x8EDC3C
	.equiv "nn::nex::ObjectThreadRoot::WrapExceptionHandling()", _text + 0x8EDC74
	.equiv "FUN_0EA6DE08:nn::nex::String::operator_=()", _text + 0x8EDE08
	.equiv "nn::nex::String::GetLength()", _text + 0x8EDE98
	.equiv "nn::nex::String::Reserve()", _text + 0x8EDEC4
	.equiv "<unnamed>::_Copy()", _text + 0x8EDF28
	.equiv "nn::nex::operator_", _text + 0x8EDF94
	.equiv "nn::nex::String::~String()", _text + 0x8EE064
	.equiv "FUN_0EA6E0C8:<unnamed>::UnicodeToUtf8()", _text + 0x8EE0C8
	.equiv "FUN_0EA6E1A4:<unnamed>::UnicodeToUtf8()", _text + 0x8EE1A4
	.equiv "nn::nex::ObjectThreadRoot::LaunchImpl()", _text + 0x8EE1A8
	.equiv "nn::nex::Platform::Sleep()", _text + 0x8EE328
	.equiv "nn::nex::ObjectThreadRoot::Launch()", _text + 0x8EE37C
	.equiv "nn::nex::SystemComponent::SystemComponent()", _text + 0x8EEAF0
	.equiv "nn::nex::SystemComponent::SetParent()", _text + 0x8EED94
	.equiv "nn::nex::SystemComponents::SystemComponents()", _text + 0x8EF02C
	.equiv "nn::nex::SystemComponent::SetState()", _text + 0x8F08D4
	.equiv "nn::nex::SystemComponent::Initialize()", _text + 0x8F0950
	.equiv "nn::nex::LogDeviceConsole::LogDeviceConsole()", _text + 0x8F119C
	.equiv "nn::nex::OutputFormat::OutputFormat()", _text + 0x8F1200
	.equiv "nn::nex::Log::Log()", _text + 0x8F129C
	.equiv "nn::nex::EventLog::EventLog()", _text + 0x8F130C
	.equiv "nn::nex::TraceLog::TraceLog()", _text + 0x8F1370
	.equiv "nn::nex::CriticalSection::ResetLockFlags()", _text + 0x8F16F4
	.equiv "nn::nex::Scheduler::TimeToDeadline()", _text + 0x8F1FB8
	.equiv "nn::nex::Job::SetState()", _text + 0x8F2040
	.equiv "nn::nex::Job::PerformExecution()", _text + 0x8F209C
	.equiv "nn::nex::Scheduler::ProcessJob()", _text + 0x8F2B48
	.equiv "nn::nex::EventHandler::EventSet()", _text + 0x8F3C90
	.equiv "nn::nex::Scheduler::GlobalSingleThreadDispatch()", _text + 0x8F4938
	.equiv "nn::nex::SpinTest::GetRemainingTime()", _text + 0x8F49F8
	.equiv "nn::nex::SpinTest::SpinOnce()", _text + 0x8F4A58
	.equiv "nn::nex::CallContext::Wait()", _text + 0x8F4CEC
	.equiv "nn::nex::qResult::operator_bool()", _text + 0x8F4ED0
	.equiv "nn::nex::SystemComponent::Terminate()", _text + 0x8F4EE4
	.equiv "FUN_0EA75028:nn::nex::qResult::qResult()", _text + 0x8F5028
	.equiv "FUN_0EA7507C:nn::nex::qResult::operator_=()", _text + 0x8F507C
	.equiv "FUN_0EA75098:nn::nex::qResult::qResult()", _text + 0x8F5098
	.equiv "FUN_0EA750F4:nn::nex::qResult::operator_=()", _text + 0x8F50F4
	.equiv "nn::nex::SystemComponent::WaitForTerminatedState()", _text + 0x8F53B8
	.equiv "nn::nex::NATProperties::~NATProperties()", _text + 0x8F57B8
	.equiv "nn::nex::CallContext::IsRegistered()", _text + 0x8F5878
	.equiv "nn::nex::CallContext::FlagIsSet()", _text + 0x8F6A1C
	.equiv "nn::nex::CallContext::SignalFailure()", _text + 0x8F6CD4
	.equiv "FUN_0EA77440:FID_conflict:nn::nex::StringStream::StreamNumber()", _text + 0x8F7440
	.equiv "FUN_0EA778A8:<unnamed>::Utf8ToUnicode()", _text + 0x8F78A8
	.equiv "FUN_0EA779A0:<unnamed>::Utf8ToUnicode()", _text + 0x8F79A0
	.equiv "FUN_0EA77A44:nn::nex::String::String()", _text + 0x8F7A44
	.equiv "nn::nex::Relay::UnregisterStream()", _text + 0x8F7F7C
	.equiv "FUN_0EA77FE0:void_std::vector::_Tidy()", _text + 0x8F7FE0
	.equiv "nn::nex::Timeout::SetExpirationTime()", _text + 0x8F811C
	.equiv "nn::nex::Job::~Job()", _text + 0x8F867C
	.equiv "nn::nex::CallContext::TransitionIsValid()", _text + 0x8F87C4
	.equiv "FUN_0EA79590:<unnamed>::Utf8ToUnicode()", _text + 0x8F9590
	.equiv "nn::nex::InetAddress::GetAddress()", _text + 0x8F9594
	.equiv "nn::nex::InetAddress::GetPortNumber()", _text + 0x8F960C
	.equiv "FUN_0EA79664:nn::nex::InetAddress::GetPortNumberStr()", _text + 0x8F9664
	.equiv "nn::nex::InetAddress::ToStr()", _text + 0x8F96A4
	.equiv "FUN_0EA7974C:nn::nex::InetAddress::SetAddress()", _text + 0x8F974C
	.equiv "nn::nex::InetAddress::SetPortNumber()", _text + 0x8F9780
	.equiv "nn::nex::BerkeleySocketDriver::BerkeleySocket::RecvFrom()", _text + 0x8F9DC4
	.equiv "nn::nex::BerkeleySocketDriver::BerkeleySocket::SendTo()", _text + 0x8F9F0C
	.equiv "nn::nex::InetAddress::Init()", _text + 0x8FA590
	.equiv "FUN_0EA7A5CC:nn::nex::InetAddress::InetAddress()", _text + 0x8FA5CC
	.equiv "FUN_0EA7A62C:inet_addr()", _text + 0x8FA62C
	.equiv "FUN_0EA7A630:nn::nex::InetAddress::SetAddress()", _text + 0x8FA630
	.equiv "nn::nex::StationURL::SetAddress()", _text + 0x8FA75C
	.equiv "nn::nex::StationURL::SetPortNumber()", _text + 0x8FA7A8
	.equiv "nn::nex::String::operator_<()", _text + 0x8FA7F4
	.equiv "nn::nex::StationURL::Set()", _text + 0x8FB3D4
	.equiv "nn::nex::StationURL::ParseParam()", _text + 0x8FB46C
	.equiv "nn::nex::StationURL::ParseParams()", _text + 0x8FB624
	.equiv "nn::nex::StationURL::CopyInSuppliedBuffer()", _text + 0x8FB850
	.equiv "nn::nex::StationURL::GetURLType()", _text + 0x8FB980
	.equiv "nn::nex::StationURL::ParseURLType()", _text + 0x8FBBF0
	.equiv "nn::nex::StationURL::SetURLType()", _text + 0x8FBE04
	.equiv "nn::nex::InetAddress::operator_=()", _text + 0x8FC030
	.equiv "nn::nex::StationURL::SetInetAddress()", _text + 0x8FC064
	.equiv "nn::nex::StationURL::GetInetAddress()", _text + 0x8FC0B4
	.equiv "nn::nex::StationURL::SetURL()", _text + 0x8FC0E4
	.equiv "nn::nex::RootObject::operator_new()", _text + 0x8FDDDC
	.equiv "FUN_0EA7DDF4:nn::nex::PacketBufferManager::GetMaxUnitSize()", _text + 0x8FDDF4
	.equiv "nn::nex::PacketBufferManager::Allocate()", _text + 0x8FDE0C
	.equiv "nn::nex::Buffer::AllocateDataBuffer()", _text + 0x8FDE28
	.equiv "nn::nex::Buffer::Initialize()", _text + 0x8FDE88
	.equiv "nn::nex::ByteStream::Init()", _text + 0x8FE594
	.equiv "nn::nex::PacketBufferManager::GetProperUnitSize()", _text + 0x8FE6A8
	.equiv "nn::nex::Buffer::GetAllocateSize()", _text + 0x8FE708
	.equiv "nn::nex::Buffer::ResizeByRealSize()", _text + 0x8FE770
	.equiv "nn::nex::Buffer::AppendData()", _text + 0x8FE81C
	.equiv "nn::nex::ByteStream::Append()", _text + 0x8FE8C8
	.equiv "nn::nex::ByteStream::Clear()", _text + 0x8FE940
	.equiv "FUN_0EA7E954:nn::nex::ByteStream::operator_<<()", _text + 0x8FE954
	.equiv "FUN_0EA7ED04:nn::nex::StringStream::operator_<<()", _text + 0x8FED04
	.equiv "nn::nex::PacketOut::PacketOut()", _text + 0x9009C4
	.equiv "FUN_0EA81324:nn::nex::InetAddress::InetAddress()", _text + 0x901324
	.equiv "nn::nex::Socket::SetTTL()", _text + 0x901388
	.equiv "FUN_0EA819CC:nn::nex::InetAddress::InetAddress()", _text + 0x9019CC
	.equiv "nn::nex::RandomNumberGenerator::SetRandomNumberSeed()", _text + 0x901AF0
	.equiv "nn::nex::Platform::SetRandomNumberSeed()", _text + 0x901B28
	.equiv "nn::nex::Platform::GetPlatformID()", _text + 0x901B64
	.equiv "nn::nex::MD5::init()", _text + 0x901BD8
	.equiv "nn::nex::MD5::MD5()", _text + 0x901BE4
	.equiv "nn::nex::MD5::finalize()", _text + 0x901C48
	.equiv "nn::nex::MD5::raw_digest()", _text + 0x901C90
	.equiv "nn::nex::Platform::GetRandomSeed()", _text + 0x901CB8
	.equiv "nn::nex::RandomNumberGenerator::GetRandomNumber()", _text + 0x901DC0
	.equiv "nn::nex::RandomNumberGenerator::GetRealRandomNumber()", _text + 0x901F34
	.equiv "nn::nex::Platform::GetRealRandomNumber()", _text + 0x901F9C
	.equiv "nn::nex::Platform::GetRandomNumber()", _text + 0x901FFC
	.equiv "nn::nex::QueuingSocket::Flush()", _text + 0x902520
	.equiv "nn::nex::SocketTransport::ProcessTransport()", _text + 0x902A84
	.equiv "nn::nex::Socket::GetIOResult()", _text + 0x902AC4
	.equiv "nn::nex::Buffer::SetHeadShiftSize()", _text + 0x902CB0
	.equiv "nn::nex::Buffer::operator_=()", _text + 0x902CCC
	.equiv "nn::nex::Buffer::Buffer()", _text + 0x902D84
	.equiv "nn::nex::TransportStreamManager::IsDuplicateReorderingPacket()", _text + 0x902FB4
	.equiv "nn::nex::QueuingSocket::FillPacketQueueFromBuffer()", _text + 0x903318
	.equiv "nn::nex::Socket::ProcessDriverSocketResult()", _text + 0x903AFC
	.equiv "nn::nex::Socket::Send()", _text + 0x903B60
	.equiv "nn::nex::Socket::Recv()", _text + 0x903CC4
	.equiv "nn::nex::StationProbe::~StationProbe()", _text + 0x9044D8
	.equiv "nn::nex::StationURL::GetURL()", _text + 0x904B64
	.equiv "nn::nex::Key::Key()", _text + 0x905D48
	.equiv "nn::nex::StringStream::Clear()", _text + 0x907B34
	.equiv "object::IMapObjAccel::accel_start()", _text + 0x907B7C
	.equiv "nn::nex::Log::~Log()", _text + 0x907B98
	.equiv "nn::nex::OutputFormat::IncreaseIndent()", _text + 0x907F80
	.equiv "nn::nex::OutputFormat::DecreaseIndent()", _text + 0x907F90
	.equiv "FUN_0EA87FB4:FID_conflict:nn::nex::TraceLog::~TraceLog()", _text + 0x907FB4
	.equiv "FUN_0EA88008:FID_conflict:nn::nex::TraceLog::~TraceLog()", _text + 0x908008
	.equiv "nn::nex::RandomNumberGenerator::RandomNumberGenerator()", _text + 0x908110
	.equiv "nn::nex::ErrorDescriptionTable::ErrorDescriptionTable()", _text + 0x908168
	.equiv "nn::nex::SystemError::SystemError()", _text + 0x908210
	.equiv "nn::nex::SystemError::ClearLast()", _text + 0x9082E4
	.equiv "nn::nex::SystemError::TraceLast()", _text + 0x90832C
	.equiv "FUN_0EA88BE8:nn::nex::String::operator_=()", _text + 0x908BE8
	.equiv "nn::nex::String::ToUpper()", _text + 0x908CE8
	.equiv "nn::nex::String::FindSubstringNoCase()", _text + 0x908D30
	.equiv "nn::nex::String::IsEqual()", _text + 0x908DF0
	.equiv "nn::nex::CriticalSection::~CriticalSection()", _text + 0x908EB0
	.equiv "nn::nex::Time::ConvertDeadlineToTimeout()", _text + 0x908FC8
	.equiv "FUN_0EA8904C:nn::nex::qResult::qResult()", _text + 0x90904C
	.equiv "nn::nex::qResult::GetFacility()", _text + 0x9090C0
	.equiv "FUN_0EA890D0:nn::nex::qResult::operator_=()", _text + 0x9090D0
	.equiv "FUN_0EA890F0:nn::nex::DateTime::DateTime()", _text + 0x9090F0
	.equiv "FUN_0EA89130:nn::nex::DateTime::DateTime()", _text + 0x909130
	.equiv "nn::nex::DateTime::operator_=()", _text + 0x909180
	.equiv "FUN_0EA89194:nn::nex::DateTime::DateTime()", _text + 0x909194
	.equiv "FUN_0EA892C8:nn::nex::DateTime::DateTime()", _text + 0x9092C8
	.equiv "nn::nex::DateTime::GetMinute()", _text + 0x9093AC
	.equiv "nn::nex::DateTime::GetHour()", _text + 0x9093C4
	.equiv "nn::nex::DateTime::IsLeapYear()", _text + 0x9093DC
	.equiv "nn::nex::DateTime::DateToDays()", _text + 0x90943C
	.equiv "nn::nex::DateTime::GetYear()", _text + 0x909508
	.equiv "nn::nex::DateTime::GetMonth()", _text + 0x909520
	.equiv "nn::nex::DateTime::GetDay()", _text + 0x909538
	.equiv "nn::nex::DateTime::ToEpochTime()", _text + 0x909550
	.equiv "nn::nex::DateTime::operator_-()", _text + 0x909610
	.equiv "nn::nex::DateTime::GetSystemTime()", _text + 0x909680
	.equiv "nn::nex::DateTime::DaysToDate()", _text + 0x90974C
	.equiv "nn::nex::SpinTest::~SpinTest()", _text + 0x90AB6C
	.equiv "FUN_0EA8AB80:<unnamed>::Utf8ToUnicode()", _text + 0x90AB80
	.equiv "FUN_0EA8AB84:<unnamed>::UnicodeToUtf8()", _text + 0x90AB84
	.equiv "FUN_0EA8AB88:<unnamed>::GetNeededUtf8BufferSize()", _text + 0x90AB88
	.equiv "FUN_0EA8ABE8:<unnamed>::GetNeededUtf8BufferSize()", _text + 0x90ABE8
	.equiv "nn::nex::StringConversion::HexToString()", _text + 0x90ABEC
	.equiv "nn::nex::ObjectThreadRoot::Wait()", _text + 0x90AF8C
	.equiv "nn::nex::EventHandler::~EventHandler()", _text + 0x90B280
	.equiv "nn::nex::ThreadVariableRoot::~ThreadVariableRoot()", _text + 0x90B49C
	.equiv "nn::nex::PseudoSingleton::~PseudoSingleton()", _text + 0x90EB50
	.equiv "nn::nex::PseudoSingleton::SetContextIfRequired()", _text + 0x90EBA4
	.equiv "nn::nex::Job::SetToWaiting()", _text + 0x90EBC8
	.equiv "nn::nex::SystemSetting::GetList()", _text + 0x90F680
	.equiv "nn::nex::Scheduler::GlobalSingleThreadSpecialDispatch()", _text + 0x910B54
	.equiv "nn::nex::Scheduler::IsCheckingQueueToDenyJoiningEnabled()", _text + 0x910D24
	.equiv "nn::nex::Scheduler::RegisterSpecialDispatchJob()", _text + 0x910D50
	.equiv "nn::nex::NATProperties::NATProperties()", _text + 0x910D9C
	.equiv "nn::nex::Buffer::~Buffer()", _text + 0x9111E4
	.equiv "nn::nex::Buffer::CopyContent()", _text + 0x911254
	.equiv "nn::nex::Buffer::AttemptExpand()", _text + 0x9112D0
	.equiv "nn::nex::Buffer::Swap()", _text + 0x9113B0
	.equiv "nn::nex::Buffer::ComputeCheckSum()", _text + 0x9113D4
	.equiv "nn::nex::Buffer::GetCheckSum()", _text + 0x911494
	.equiv "nn::nex::Buffer::AppendCheckSum()", _text + 0x9114E4
	.equiv "nn::nex::Buffer::StripCheckSum()", _text + 0x911528
	.equiv "nn::nex::Buffer::IsCheckSumValid()", _text + 0x911538
	.equiv "nn::nex::Buffer::operator", _text + 0x9115C0
	.equiv "nn::nex::Buffer::operator_==()", _text + 0x911660
	.equiv "nn::nex::Buffer::operator_", _text + 0x9116B8
	.equiv "nn::nex::Buffer::ToString()", _text + 0x9116FC
	.equiv "nn::nex::Key::operator_=()", _text + 0x911A04
	.equiv "nn::nex::StreamSettings::SetKeepAliveTimeout()", _text + 0x911C6C
	.equiv "nn::nex::StreamSettings::SetMaxSilenceTime()", _text + 0x911CD0
	.equiv "nn::nex::ChecksumAlgorithm::ChecksumAlgorithm()", _text + 0x911D68
	.equiv "nn::nex::MD5Checksum::MD5Checksum()", _text + 0x911DB4
	.equiv "FUN_0EA91E08:nn::nex::MD5Checksum::ComputeChecksum()", _text + 0x911E08
	.equiv "nn::nex::KeyedChecksumAlgorithm::SetKey()", _text + 0x911E7C
	.equiv "nn::nex::StreamSettings::SetIsEncryptionRequired()", _text + 0x91212C
	.equiv "nn::nex::PseudoGlobalVariableList::AddVariable()", _text + 0x9122F8
	.equiv "nn::nex::PseudoGlobalVariableList::RemoveVariable()", _text + 0x9123DC
	.equiv "nn::nex::PseudoGlobalVariableRoot::PseudoGlobalVariableRoot()", _text + 0x9124DC
	.equiv "nn::nex::StationURL::GetAddress()", _text + 0x912B64
	.equiv "nn::nex::StationURL::GetPortNumber()", _text + 0x912BD0
	.equiv "nn::nex::StationURL::SetStreamID()", _text + 0x913694
	.equiv "nn::nex::StationURL::GetStreamID()", _text + 0x91389C
	.equiv "nn::nex::StationURL::SetStreamType()", _text + 0x9138D0
	.equiv "nn::nex::StationURL::GetPrincipalID()", _text + 0x913954
	.equiv "nn::nex::StationURL::SetConnectionID()", _text + 0x913968
	.equiv "nn::nex::StationURL::GetConnectionID()", _text + 0x9139A0
	.equiv "nn::nex::StationURL::SetRVConnectionID()", _text + 0x9139B4
	.equiv "nn::nex::StationURL::GetRVConnectionID()", _text + 0x9139EC
	.equiv "nn::nex::StationURL::SetProbeRequestID()", _text + 0x913A00
	.equiv "nn::nex::StationURL::SetNATMapping()", _text + 0x913A38
	.equiv "nn::nex::StationURL::SetNATFiltering()", _text + 0x913A84
	.equiv "FUN_0EA93B08:nn::nex::StationURL::GetUseRelayServer()", _text + 0x913B08
	.equiv "nn::nex::StationURL::SetUPnPSupport()", _text + 0x913B40
	.equiv "nn::nex::StationURL::SetNatPMPSupport()", _text + 0x913B78
	.equiv "nn::nex::StationURL::SetType()", _text + 0x913BB0
	.equiv "nn::nex::StationURL::GetType()", _text + 0x913BE8
	.equiv "nn::nex::StationURL::SetRelayServerPort()", _text + 0x913D64
	.equiv "nn::nex::StationURL::SetUseRelayServer()", _text + 0x913D9C
	.equiv "FUN_0EA93DD4:nn::nex::StationURL::GetUseRelayServer()", _text + 0x913DD4
	.equiv "nn::nex::StationURL::operator_=()", _text + 0x913E3C
	.equiv "nn::nex::StationURL::operator_!=()", _text + 0x913E70
	.equiv "nn::nex::StationURL::IsValid()", _text + 0x913EC8
	.equiv "nn::nex::StationURL::IsMatching()", _text + 0x913EF8
	.equiv "nn::nex::SystemComponent::IncrementInUseCount()", _text + 0x914020
	.equiv "nn::nex::SystemComponent::DecrementInUseCount()", _text + 0x91408C
	.equiv "nn::nex::SystemComponent::Use::Use()", _text + 0x914234
	.equiv "nn::nex::SystemComponent::Use::~Use()", _text + 0x9142B0
	.equiv "nn::nex::CallContext::Reset()", _text + 0x9147B4
	.equiv "nn::nex::CallContextRegister::Register()", _text + 0x9152E8
	.equiv "nn::nex::CallContext::SignalSuccess()", _text + 0x915614
	.equiv "nn::nex::CallContext::SetFlag()", _text + 0x915658
	.equiv "nn::nex::CallContext::ClearFlag()", _text + 0x9156B0
	.equiv "nn::nex::CallContext::RegisterCompletionCallback()", _text + 0x915BC4
	.equiv "nn::nex::StationContactInfo::SetConnectionID()", _text + 0x915CA0
	.equiv "nn::nex::StationProbe::Trace()", _text + 0x917628
	.equiv "nn::nex::ConnectivityManager::ConnectivityManager()", _text + 0x917724
	.equiv "nn::nex::ConnectivityManager::~ConnectivityManager()", _text + 0x9177B4
	.equiv "nn::nex::StepSequenceJob::StepSequenceJob()", _text + 0x917860
	.equiv "nn::nex::RootTransport::GetNextPortNumber()", _text + 0x917924
	.equiv "nn::nex::StepSequenceJob::SetStep()", _text + 0x917DB4
	.equiv "nn::nex::NATTraversalEngine::CanUseRelay()", _text + 0x918330
	.equiv "nn::nex::NATTraversalEngine::ShouldUseRelay()", _text + 0x918400
	.equiv "nn::nex::CompressionAlgorithm::CompressionAlgorithm()", _text + 0x918A64
	.equiv "nn::nex::CompressionAlgorithm::RecordCompressionStats()", _text + 0x918B7C
	.equiv "FUN_0EA98DA8:nn::nex::InetAddress::InetAddress()", _text + 0x918DA8
	.equiv "FUN_0EA98E48:nn::nex::InetAddress::GetPortNumberStr()", _text + 0x918E48
	.equiv "nn::nex::InetAddress::Trace()", _text + 0x918E88
	.equiv "nn::nex::InterfaceTable::InterfaceTable()", _text + 0x918F1C
	.equiv "nn::nex::EncryptionAlgorithm::EncryptionAlgorithm()", _text + 0x919D34
	.equiv "nn::nex::EncryptionAlgorithm::~EncryptionAlgorithm()", _text + 0x919DB0
	.equiv "nn::nex::EncryptionAlgorithm::SetKey()", _text + 0x919F5C
	.equiv "nn::nex::RC4Encryption::GetDefaultKey()", _text + 0x919FDC
	.equiv "nn::nex::RC4Encryption::RC4Encryption()", _text + 0x91A02C
	.equiv "nn::nex::RC4Encryption::~RC4Encryption()", _text + 0x91A0D4
	.equiv "nn::nex::RC4Encryption::ReinitStateArray()", _text + 0x91A210
	.equiv "nn::nex::RC4Encryption::Encrypt()", _text + 0x91A260
	.equiv "nn::nex::RC4Encryption::Decrypt()", _text + 0x91A480
	.equiv "nn::nex::ZLibCompression::Initialize()", _text + 0x91A5CC
	.equiv "nn::nex::ZLibCompression::ZLibCompression()", _text + 0x91A694
	.equiv "nn::nex::ZLibCompression::DecompressImpl()", _text + 0x91A948
	.equiv "FUN_0EA9AB74:FID_conflict:nn::nex::PRUDPMessageV0::PRUDPMessageV0()", _text + 0x91AB74
	.equiv "nn::nex::PRUDPMessageV1::PRUDPMessageV1()", _text + 0x91ABB4
	.equiv "nn::nex::Network::RegisterTransportAdapter()", _text + 0x91B1C8
	.equiv "nn::nex::EmulationDevice::EmulationDevice()", _text + 0x91B214
	.equiv "nn::nex::UPnPProperties::UPnPProperties()", _text + 0x91B3A4
	.equiv "nn::nex::IOCompletionNotifier::IOCompletionNotifier()", _text + 0x91C010
	.equiv "nn::nex::PacketQueue::PacketQueue()", _text + 0x91C0D0
	.equiv "nn::nex::Relay::Relay()", _text + 0x91C65C
	.equiv "nn::nex::Router::UnregisterStream()", _text + 0x91C6D4
	.equiv "nn::nex::Router::SetTransport()", _text + 0x91C730
	.equiv "nn::nex::Relay::SetTransport()", _text + 0x91C790
	.equiv "nn::nex::BerkeleySocketDriver::ResetAnalyzeInfo()", _text + 0x91C7F0
	.equiv "nn::nex::SocketTransport::ResetAnalyzeInfo()", _text + 0x91C800
	.equiv "nn::nex::UDPTransport::UDPTransport()", _text + 0x91CBC4
	.equiv "FID_conflict:nw::snd::internal::DspadpcmReader::DspadpcmReader()", _text + 0x91CC18
	.equiv "nn::nex::KeyedChecksumAlgorithm::KeyedChecksumAlgorithm()", _text + 0x91CFA4
	.equiv "nn::nex::HMACChecksum::HMACChecksum()", _text + 0x91D020
	.equiv "nn::nex::Network::SetP2PDataPacketDefaultSignatureKey()", _text + 0x91D07C
	.equiv "nn::nex::MD5ChecksumWithKey::MD5ChecksumWithKey()", _text + 0x91D0BC
	.equiv "nn::nex::Network::InitP2PChecksumAlgorithmKey()", _text + 0x91D118
	.equiv "nn::nex::Network::UnregisterTransportAdapter()", _text + 0x91D5E4
	.equiv "nn::nex::NATTraversalEngine::Terminate()", _text + 0x91D634
	.equiv "nn::nex::QueuingSocketTransportBuffer::RecvCore()", _text + 0x91FB88
	.equiv "nn::nex::QueuingSocketTransportBuffer::SendBufferCoreSingle()", _text + 0x91FF34
	.equiv "nn::nex::QueuingSocketTransportBuffer::SendBufferCore()", _text + 0x920034
	.equiv "nn::nex::Router::EnableRouting()", _text + 0x921AF0
	.equiv "nn::nex::RoutingAddressResolver::AddMapping()", _text + 0x923554
	.equiv "nn::nex::Router::GetRoutingIPAddressTemplate()", _text + 0x9235B4
	.equiv "nn::nex::Router::ConstructAndAssociateRoutingAddress()", _text + 0x923610
	.equiv "nn::nex::Socket::Socket()", _text + 0x9239BC
	.equiv "nn::nex::Socket::Close()", _text + 0x923A70
	.equiv "nn::nex::Socket::Open()", _text + 0x923B48
	.equiv "nn::nex::Socket::Shutdown()", _text + 0x923BC0
	.equiv "nn::nex::Socket::Bind()", _text + 0x923BE8
	.equiv "nn::nex::IOCompletionContext::Reset()", _text + 0x923CA0
	.equiv "nn::nex::IOCompletionContext::IOCompletionContext()", _text + 0x923D00
	.equiv "nn::nex::IOCompletionContext::~IOCompletionContext()", _text + 0x923D58
	.equiv "nn::nex::IOCompletionNotifier::CreateIOCompletionContextSimple()", _text + 0x924008
	.equiv "nn::nex::QueuingSocket::CreateCompletionContext()", _text + 0x925AD4
	.equiv "nn::nex::QueuingSocketTransportBuffer::QueuingSocketTransportBuffer()", _text + 0x92626C
	.equiv "nn::nex::QueuingSocket::Bind()", _text + 0x926394
	.equiv "nn::nex::SocketTransport::SetTransportBufferSendLatencyLimitDequeueCount()", _text + 0x927558
	.equiv "nn::nex::Timeout::GetAwaitedTime()", _text + 0x9278F4
	.equiv "nn::nex::Timeout::IsExpired()", _text + 0x9279DC
	.equiv "nn::nex::Timeout::IsAwaited()", _text + 0x927A98
	.equiv "nn::nex::ByteStream::ByteStream()", _text + 0x927AE4
	.equiv "nn::nex::ByteStream::SetLength()", _text + 0x927B84
	.equiv "nn::nex::StringConverter::StringConverter()", _text + 0x927BE4
	.equiv "nn::nex::StringConverter::Encode()", _text + 0x927C5C
	.equiv "nn::nex::StringConverter::~StringConverter()", _text + 0x927D00
	.equiv "FUN_0EAA7D60:nn::nex::ByteStream::AppendString()", _text + 0x927D60
	.equiv "FUN_0EAA7E60:nn::nex::ByteStream::AppendString()", _text + 0x927E60
	.equiv "nn::nex::ByteStream::ExtractRaw()", _text + 0x927F18
	.equiv "nn::nex::StringConverter::LimitString()", _text + 0x927FB0
	.equiv "nn::nex::StringConverter::Decode()", _text + 0x927FD0
	.equiv "nn::nex::ByteStream::ExtractString()", _text + 0x928010
	.equiv "nn::nex::ByteStream::Extract()", _text + 0x928108
	.equiv "FUN_0EAA81BC:nn::nex::ByteStream::operator_<<()", _text + 0x9281BC
	.equiv "nn::nex::ByteStream::operator_>>()", _text + 0x928278
	.equiv "FUN_0EAAC408:FID_conflict:nn::nex::PRUDPMessageV0::PRUDPMessageV0()", _text + 0x92C408
	.equiv "nn::nex::StepSequenceJob::ResumeOnCallCompletion()", _text + 0x92C818
	.equiv "nn::nex::ChecksumAlgorithm::CompressChecksum()", _text + 0x92DC00
	.equiv "nn::nex::MD5Checksum::ChecksumComputeHelper()", _text + 0x92E610
	.equiv "FUN_0EAAE688:nn::nex::MD5Checksum::ComputeChecksum()", _text + 0x92E688
	.equiv "nn::nex::PeriodicJob::PeriodicJob()", _text + 0x92F3D0
	.equiv "nn::nex::KeyedChecksumAlgorithm::~KeyedChecksumAlgorithm()", _text + 0x930294
	.equiv "nn::nex::HMACChecksum::~HMACChecksum()", _text + 0x930334
	.equiv "nn::nex::HMACChecksum::ChecksumComputeHelper()", _text + 0x930388
	.equiv "nn::nex::HMACChecksum::ComputeChecksum()", _text + 0x9304D4
	.equiv "nn::nex::MD5ChecksumWithKey::ChecksumComputeHelper()", _text + 0x932358
	.equiv "nn::nex::MD5ChecksumWithKey::ComputeChecksum()", _text + 0x932400
	.equiv "nn::nex::BitStream::Init()", _text + 0x9325FC
	.equiv "nn::nex::BitStream::AdjustLength()", _text + 0x9326B0
	.equiv "nn::nex::BitStream::SetPosition()", _text + 0x932798
	.equiv "nn::nex::BitStream::PrepareAppend()", _text + 0x9327B0
	.equiv "nn::nex::BitStream::AppendByteImpl()", _text + 0x932838
	.equiv "nn::nex::BitStream::AppendBitImpl()", _text + 0x932914
	.equiv "nn::nex::BitStream::AppendRaw()", _text + 0x9329DC
	.equiv "nn::nex::BitStream::Append()", _text + 0x932AB8
	.equiv "nn::nex::BitStream::CanExtract()", _text + 0x932B2C
	.equiv "nn::nex::BitStream::ExtractByteImpl()", _text + 0x932B58
	.equiv "nn::nex::BitStream::ExtractBitImpl()", _text + 0x932C24
	.equiv "nn::nex::BitStream::ExtractRaw()", _text + 0x932CEC
	.equiv "nn::nex::BitStream::Extract()", _text + 0x932DF0
	.equiv "nn::nex::BitStream::operator_<<()", _text + 0x932E64
	.equiv "nn::nex::BitStream::operator_>>()", _text + 0x932ED8
	.equiv "nn::nex::LocalClock::LocalClock()", _text + 0x933038
	.equiv "nn::nex::Chrono::Reset()", _text + 0x9330B8
	.equiv "nn::nex::Chrono::Chrono()", _text + 0x9330CC
	.equiv "nn::nex::Chrono::Start()", _text + 0x933188
	.equiv "FUN_0EAB3228:nn::nex::Chrono::Elapsed()", _text + 0x933228
	.equiv "FUN_0EAB3298:nn::nex::Chrono::Elapsed()", _text + 0x933298
	.equiv "nn::nex::StateMachine::DispatchEvent()", _text + 0x934FBC
	.equiv "nn::nex::Operation::Operation()", _text + 0x9350A0
	.equiv "nn::nex::qBuffer::clear()", _text + 0x9356A8
	.equiv "nn::nex::qBuffer::initialize()", _text + 0x9356D4
	.equiv "nn::nex::qBuffer::qBuffer()", _text + 0x93574C
	.equiv "nn::nex::qBuffer::~qBuffer()", _text + 0x935A44
	.equiv "__nn::nex::operator_", _text + 0x935B48
	.equiv "nn::nex::EndPointInfo::Reset()", _text + 0x935C28
	.equiv "nn::nex::EndPointInfo::EndPointInfo()", _text + 0x935C78
	.equiv "nn::nex::EndPoint::Open()", _text + 0x935CCC
	.equiv "nn::nex::EndPoint::Close()", _text + 0x935CE4
	.equiv "nn::nex::EndPoint::SetConnectionID()", _text + 0x935DB0
	.equiv "nn::nex::EndPoint::SetPrincipalID()", _text + 0x935E38
	.equiv "nn::nex::EndPoint::EndPoint()", _text + 0x935EE0
	.equiv "nn::nex::EndPoint::~EndPoint()", _text + 0x935F74
	.equiv "nn::nex::ConnectionOrientedStream::ConnectionOrientedStream()", _text + 0x936008
	.equiv "nn::nex::TransportEventHandler::TransportEventHandler()", _text + 0x936304
	.equiv "nn::nex::RoutingTable::RTEntry::IsExpired()", _text + 0x9365E8
	.equiv "nn::nex::ConnectionManager::ConnectionManager()", _text + 0x936E04
	.equiv "nn::nex::ConnectionManager::RegisterConnectionFilter()", _text + 0x93724C
	.equiv "nn::nex::ConnectionManager::ConnectionRequest()", _text + 0x93725C
	.equiv "nn::nex::ConnectionManager::OpenEndPoint()", _text + 0x9373EC
	.equiv "nn::nex::ConnectionManager::SetRouterAddress()", _text + 0x9379B8
	.equiv "nn::nex::ConnectionManager::ConfigureEndPointForRouting()", _text + 0x9379CC
	.equiv "nn::nex::ConnectionManager::ConstructAndAssociateRoutingURL()", _text + 0x937A84
	.equiv "nn::nex::JobConnectEndPoint::IsRoutedURL()", _text + 0x93B6FC
	.equiv "nn::nex::NATTraversalEngine::ReportNATTraversalResult()", _text + 0x93D7B0
	.equiv "nn::nex::RelayMessage::UnpackPayload()", _text + 0x93DBDC
	.equiv "nn::nex::RelayMessage::GetCurrentTimeStamp()", _text + 0x93E024
	.equiv "nn::nex::PacketEncDec::GenerateKey()", _text + 0x93EC38
	.equiv "nn::nex::PacketEncDec::SetUnreliableEncryptionKey()", _text + 0x93ED30
	.equiv "nn::nex::PacketEncDec::DecideMaxUserReliableSubStreams()", _text + 0x940848
	.equiv "nn::nex::Message::InitCommon()", _text + 0x9409CC
	.equiv "FUN_0EAC0B34:nn::nex::Message::Message()", _text + 0x940B34
	.equiv "FUN_0EAC0BB4:nn::nex::Message::Message()", _text + 0x940BB4
	.equiv "nn::nex::Message::~Message()", _text + 0x940C48
	.equiv "nn::nex::Message::GetBuffer()", _text + 0x940CB8
	.equiv "nn::nex::Message::AddDataFromMessage()", _text + 0x940D4C
	.equiv "nn::nex::Message::AppendMessage()", _text + 0x940D6C
	.equiv "nn::nex::Message::TruncateMessage()", _text + 0x940E70
	.equiv "nn::nex::Message::SetSourceEndPoint()", _text + 0x940EE4
	.equiv "nn::nex::QueuingSocketTransportBuffer::RecvCoreSingle()", _text + 0x941798
	.equiv "nn::nex::TransportBufferMultiThread::TransportRecvLoop()", _text + 0x941880
	.equiv "nn::nex::RTT::RTT()", _text + 0x946058
	.equiv "nn::nex::RTT::Adjust()", _text + 0x9460CC
	.equiv "nn::nex::PRUDPEndPoint::GetTimeoutMultiplier()", _text + 0x949BDC
	.equiv "nn::nex::PRUDPEndPoint::DecideSignatureMethod()", _text + 0x949DD8
	.equiv "nn::nex::PRUDPEndPoint::IsSendAggregateACK()", _text + 0x94D540
	.equiv "nn::nex::PRUDPEndPoint::StartPing()", _text + 0x94F540
	.equiv "nn::nex::PRUDPEndPoint::AnalyzeRttRto()", _text + 0x94FA08
	.equiv "nn::nex::PRUDPEndPoint::IsNegotiationConnectionSignatureVersion()", _text + 0x94FA2C
	.equiv "nn::nex::PRUDPEndPoint::SetSupportedFunctionsFlags()", _text + 0x950D7C
	.equiv "nn::nex::PRUDPEndPoint::PacketAggregateAcknoledged()", _text + 0x953D24
	.equiv "nn::nex::PRUDPEndPoint::AdjustRTT()", _text + 0x953DA4
	.equiv "nn::nex::PRUDPStream::GetPreferredPortNumber()", _text + 0x9579A0
	.equiv "nn::nex::PRUDPStream::ServiceConnectionRequest()", _text + 0x9595EC
	.equiv "nn::nex::PRUDPStream::DecideSignatureMethod()", _text + 0x959C00
	.equiv "nn::nex::PRUDPMessageV1::OptionSubHeaderBuilder()", _text + 0x95AE20
	.equiv "nn::nex::PRUDPMessageV1::CalcSignature()", _text + 0x95B538
	.equiv "FUN_0EADFFBC:nn::nex::SpecialNewArray()", _text + 0x95FFBC
	.equiv "FUN_0EAE0014:SpecialDeleteArray", _text + 0x960014
	.equiv "FUN_0EAE0038:nn::nex::qResult::Equals()", _text + 0x960038
	.equiv "FUN_0EAE003C:nn::nex::SpecialNewArray()", _text + 0x96003C
	.equiv "FUN_0EAE0090:nn::nex::SpecialNewArray()", _text + 0x960090
	.equiv "FUN_0EAE00E8:nn::nex::SpecialNewArray()", _text + 0x9600E8
	.equiv "FUN_0EAE0144:nn::nex::MemoryManager::Free()", _text + 0x960144
	.equiv "FUN_0EAE0148:nn::nex::qChain::iterator_nn::nex::qChain::erase()", _text + 0x960148
	.equiv "FUN_0EAE0848:SpecialDeleteArray", _text + 0x960848
	.equiv "FUN_0EAE09FC:nn::nex::qChain::iterator_nn::nex::qChain::erase()", _text + 0x9609FC
	.equiv "FUN_0EAE0AB8:FID_conflict:nn::nex::qChain::iterator_nn::nex::qChain::erase()", _text + 0x960AB8
	.equiv "FUN_0EAE0B70:SpecialDeleteArray", _text + 0x960B70
	.equiv "FUN_0EAE0B94:SpecialDeleteArray", _text + 0x960B94
	.equiv "FUN_0EAE0BB8:FID_conflict:nn::nex::qChain::iterator_nn::nex::qChain::erase()", _text + 0x960BB8
	.equiv "FUN_0EAE0C70:FID_conflict:nn::nex::qChain::iterator_nn::nex::qChain::erase()", _text + 0x960C70
	.equiv "FUN_0EAE0EB0:FID_conflict:nn::nex::qChain::iterator_nn::nex::qChain::erase()", _text + 0x960EB0
	.equiv "nn::nex::SpecialNew()", _text + 0x961078
	.equiv "FUN_0EAE10C8:nn::nex::HostOrderToNexNetworkOrder()", _text + 0x9610C8
	.equiv "FUN_0EAE10D8:nn::nex::HostOrderToNexNetworkOrder()", _text + 0x9610D8
	.equiv "FUN_0EAE10F0:memmove..obj.5Cghs.5Ccafe.5Ccos.5Ccore.5Ctarget.5Cdyn.5Ccore_dyn_stub.5CNDEBUG.5Cstub.", _text + 0x9610F0
	.equiv "nn::nex::Data::Data()", _text + 0x961B14
	.equiv "nn::nex::Protocol::Protocol()", _text + 0x9625B8
	.equiv "nn::nex::Protocol::FlagIsSet()", _text + 0x9626B0
	.equiv "nn::nex::Protocol::SetFlag()", _text + 0x9626C8
	.equiv "nn::nex::Protocol::GetCurrentOperation()", _text + 0x96270C
	.equiv "nn::nex::Protocol::AddCallOutcome()", _text + 0x962730
	.equiv "nn::nex::Protocol::AddCallContextID()", _text + 0x9627C4
	.equiv "nn::nex::Protocol::AddCallResponse()", _text + 0x9627F4
	.equiv "nn::nex::Protocol::AddProtocolKey()", _text + 0x962888
	.equiv "nn::nex::Protocol::ExtractProtocolKey()", _text + 0x962940
	.equiv "nn::nex::Protocol::RegisterCallContext()", _text + 0x962A68
	.equiv "nn::nex::Protocol::AddMethodID()", _text + 0x962BCC
	.equiv "nn::nex::Protocol::IsOldRVDDLVersion()", _text + 0x962BFC
	.equiv "nn::nex::Protocol::SetIncomingConnection()", _text + 0x962D00
	.equiv "nn::nex::ClientProtocol::ClientProtocol()", _text + 0x962D4C
	.equiv "nn::nex::ClientProtocol::SendOverLocalLoopback()", _text + 0x962E98
	.equiv "nn::nex::ProtocolCallContext::AddReturnValuePtr()", _text + 0x963DB4
	.equiv "nn::nex::ServerProtocol::ServerProtocol()", _text + 0x963EAC
	.equiv "nn::nex::ServerProtocol::SetCallError()", _text + 0x963F64
	.equiv "nn::nex::ProtocolRequestBrokerInterface::ProtocolRequestBrokerInterface()", _text + 0x964348
	.equiv "nn::nex::KerberosEncryption::KerberosEncryption()", _text + 0x96472C
	.equiv "FUN_0EAE47DC:nn::nex::KerberosEncryption::Decrypt()", _text + 0x9647DC
	.equiv "nn::nex::KerberosEncryption::Encrypt()", _text + 0x96487C
	.equiv "FUN_0EAE4970:nn::nex::KerberosEncryption::Decrypt()", _text + 0x964970
	.equiv "FUN_0EAE4AF0:nn::nex::KerberosEncryption::CreateKey()", _text + 0x964AF0
	.equiv "FUN_0EAE4B24:nn::nex::KerberosEncryption::CreateKey()", _text + 0x964B24
	.equiv "nn::nex::KerberosEncryption::SetKey()", _text + 0x964C38
	.equiv "nn::nex::MD5KeyDerivation::MD5KeyDerivation()", _text + 0x964C80
	.equiv "nn::nex::MD5KeyDerivation::CreateKey()", _text + 0x964D50
	.equiv "nn::nex::NATCheckMessage::NATCheckMessage()", _text + 0x965124
	.equiv "nn::nex::StreamManager::Initialize()", _text + 0x967454
	.equiv "nn::nex::StreamManager::Terminate()", _text + 0x9676E0
	.equiv "nn::nex::StreamManager::IsTerminated()", _text + 0x9676E8
	.equiv "nn::nex::StreamManager::AssociateSecureStream()", _text + 0x9676F0
	.equiv "FUN_0EAE7754:nn::nex::StreamManager::SetSandboxAccessKey()", _text + 0x967754
	.equiv "FUN_0EAE7768:nn::nex::Ticket::Ticket()", _text + 0x967768
	.equiv "FUN_0EAE77FC:nn::nex::Ticket::Ticket()", _text + 0x9677FC
	.equiv "nn::nex::Ticket::Decrypt()", _text + 0x967904
	.equiv "nn::nex::_DDL_ResultRange::operator_=()", _text + 0x967CA4
	.equiv "nn::nex::_DDL_ResultRange::Add()", _text + 0x967CC0
	.equiv "FUN_0EAE7F20:std::_List_val::_Alty::rebind::other::pointer_std::list::_Buynode()", _text + 0x967F20
	.equiv "nn::nex::Credentials::Credentials()", _text + 0x96C568
	.equiv "nn::nex::Credentials::MarkInvalid()", _text + 0x96C6E4
	.equiv "nn::nex::Credentials::GetConnection()", _text + 0x96C700
	.equiv "nn::nex::ServiceClient::SetDefaultCredentials()", _text + 0x96DAF0
	.equiv "nn::nex::ProtocolRegistry::RegisterProtocol()", _text + 0x96E798
	.equiv "nn::nex::ServiceClient::PrepareForConnection()", _text + 0x96E878
	.equiv "nn::nex::ServiceClient::GetStreamManager()", _text + 0x96EF48
	.equiv "nn::nex::RVClientCore::GetGameServerTime()", _text + 0x970BC8
	.equiv "nn::nex::RVClientCore::SetGameServerTime()", _text + 0x970C94
	.equiv "nn::nex::SecureConnectionClient::SecureConnectionClient()", _text + 0x9716F0
	.equiv "nn::nex::BackEndServices::TerminateJobIsInProgress()", _text + 0x971D50
	.equiv "nn::nex::BackEndServices::GetStreamManager()", _text + 0x972388
	.equiv "nn::nex::BackEndServices::GetSecureStream()", _text + 0x97239C
	.equiv "nn::nex::BackEndServices::GetSecureConnectionClient()", _text + 0x9723C8
	.equiv "nn::nex::RendezVousOperation::RendezVousOperation()", _text + 0x9726DC
	.equiv "FUN_0EAF2744:FID_conflict:nn::nex::RendezVousLogoutOperation::RendezVousLogoutOperation()", _text + 0x972744
	.equiv "nn::nex::BackEndServices::GetAuthenticationClient()", _text + 0x973318
	.equiv "nn::nex::ClientStreamManager::ClientStreamManager()", _text + 0x97348C
	.equiv "nn::nex::AuthenticationClient::AuthenticationClient()", _text + 0x9735D8
	.equiv "nn::nex::SecureStream::SecureStream()", _text + 0x9736E4
	.equiv "nn::nex::KerberosAuthentication::ValidateConnectionRequest()", _text + 0x97376C
	.equiv "FUN_0EAF3DA4:nn::nex::StreamManager::SetSandboxAccessKey()", _text + 0x973DA4
	.equiv "nn::nex::BackEndServices::LoginJobIsInProgress()", _text + 0x973DA8
	.equiv "nn::nex::BackEndServices::LogoutJobIsInProgress()", _text + 0x973DD0
	.equiv "FUN_0EAF3FC4:std::_List_val::_Alty::rebind::other::pointer_std::list::_Buynode()", _text + 0x973FC4
	.equiv "FUN_0EAF47C4:FID_conflict:nn::nex::RendezVousLogoutOperation::RendezVousLogoutOperation()", _text + 0x9747C4
	.equiv "nn::nex::BackEndServices::CancelLoginJob()", _text + 0x9749D8
	.equiv "nn::nex::RendezVous::Login()", _text + 0x974A48
	.equiv "nn::nex::AuthenticationClient::Login()", _text + 0x9759FC
	.equiv "nn::nex::AuthenticationClient::Rebind()", _text + 0x975A5C
	.equiv "nn::nex::TicketManager::InsertTicket()", _text + 0x9769B4
	.equiv "nn::nex::SecureEndPoint::SetAssociatedEndPoint()", _text + 0x977BB8
	.equiv "nn::nex::SecureEndPoint::CompleteDisconnect()", _text + 0x977E34
	.equiv "nn::nex::SecureStream::SetCredentials()", _text + 0x978814
	.equiv "nn::nex::JobBackEndServicesLogin::CreateStreamManager()", _text + 0x978DF4
	.equiv "nn::nex::JobConnectSecureEndPoint::InitializeBufferRequest()", _text + 0x97D050
	.equiv "nn::nex::DDLDeclarations::DDLDeclarations()", _text + 0x97E3D8
	.equiv "nn::nex::_Type_qresult::Extract()", _text + 0x97E968
	.equiv "nn::nex::<unnamed>::ShouldConvertForUTF8Connection()", _text + 0x97E9B0
	.equiv "nn::nex::_Type_string::Add()", _text + 0x97E9C8
	.equiv "nn::nex::<unnamed>::ShouldConvertForLatin1Connection()", _text + 0x97EB00
	.equiv "nn::nex::_Type_string::Extract()", _text + 0x97EB30
	.equiv "nn::nex::_Type_stationurl::Add()", _text + 0x97EF20
	.equiv "nn::nex::_Type_stationurl::Extract()", _text + 0x97EF74
	.equiv "quazal_deflateEnd", _text + 0x97F754
	.equiv "quazal_deflateReset", _text + 0x97F890
	.equiv "quazal_deflateInit2_", _text + 0x97FAA4
	.equiv "quazal_deflate", _text + 0x980124
	.equiv "quazal_inflateReset", _text + 0x982068
	.equiv "quazal_inflateReset2", _text + 0x9820F4
	.equiv "quazal_inflate", _text + 0x9824CC
	.equiv "quazal_inflate_table", _text + 0x9840E8
	.equiv "quazal__tr_init", _text + 0x9846D4
	.equiv "quazal__tr_stored_block", _text + 0x9853FC
	.equiv "quazal__tr_align", _text + 0x985644
	.equiv "quazal__tr_flush_block", _text + 0x985D54
	.equiv "quazal_adler32", _text + 0x986370
	.equiv "quazal_crc32", _text + 0x98666C
	.equiv "quazal_inflate_fast", _text + 0x986C10
	.equiv "nn::nex::Gathering::Reset()", _text + 0x987CCC
	.equiv "nn::nex::MatchMakingClient::EndParticipation()", _text + 0x98A804
	.equiv "FUN_0EB0B49C:memmove..obj.5Cghs.5Ccafe.5Ccos.5Ccore.5Ctarget.5Cdyn.5Ccore_dyn_stub.5CNDEBUG.5Cstub.", _text + 0x98B49C
	.equiv "nn::nex::MatchmakeSession::SetProgressScore()", _text + 0x98E554
	.equiv "nn::nex::MatchmakeSessionSearchCriteria::SetMatchmakeSystemType()", _text + 0x98E7D0
	.equiv "nn::nex::MatchmakeSessionSearchCriteria::SetVacantOnly()", _text + 0x98E7E8
	.equiv "nn::nex::_DDL_SimpleSearchDateTimeAttribute::operator_=()", _text + 0x98EF28
	.equiv "nn::nex::_DDL_SimpleSearchDateTimeAttribute::Add()", _text + 0x98EFA0
	.equiv "nn::nex::_DDL_SimpleSearchObject::operator_=()", _text + 0x98F2C8
	.equiv "nn::nex::_DDL_SimpleSearchObject::Add()", _text + 0x98F350
	.equiv "nn::nex::SimpleSearchObject::GetAttribute()", _text + 0x98F87C
	.equiv "nn::nex::_DDL_SimpleSearchCondition::operator_=()", _text + 0x98F8A4
	.equiv "FUN_0EB0F8C0:FID_conflict:nn::nex::_DDL_SimpleSearchCondition::Add()", _text + 0x98F8C0
	.equiv "nn::nex::_DDL_SimpleSearchParam::Add()", _text + 0x98FD3C
	.equiv "FUN_0EB136C8:nn::nex::MatchmakeExtensionClient::UpdateProgressScore()", _text + 0x9936C8
	.equiv "FUN_0EB13810:nn::nex::MatchmakeExtensionClient::UpdateProgressScore()", _text + 0x993810
	.equiv "nn::nex::MatchmakeExtensionClient::GetSimplePlayingSession()", _text + 0x993898
	.equiv "nn::nex::MatchmakeExtensionClient::UpdateSimpleSearchObject()", _text + 0x9938DC
	.equiv "FUN_0EB16E8C:nn::nex::SpecialNewArray()", _text + 0x996E8C
	.equiv "nn::nex::NgsFacade::TerminateJobIsInProgress()", _text + 0x998818
	.equiv "nn::nex::JobCafeLogin::JobCafeLogin()", _text + 0x999018
	.equiv "nn::nex::NgsFacade::LoginJobIsInProgress()", _text + 0x999864
	.equiv "nn::nex::JobLogin::Wait()", _text + 0x999BA8
	.equiv "FUN_0EB1D820:nn::nex::ErrorCodeConverter::ConvertToNetworkErrorCode()", _text + 0x99D820
	.equiv "FUN_0EB1EAA4:memmove..obj.5Cghs.5Ccafe.5Ccos.5Ccore.5Ctarget.5Cdyn.5Ccore_dyn_stub.5CNDEBUG.5Cstub.", _text + 0x99EAA4
	.equiv "nn::nex::_DDL_DataStorePersistenceTarget::Add()", _text + 0x99F7E0
	.equiv "nn::nex::_DDL_DataStorePrepareGetParam::Add()", _text + 0x99F970
	.equiv "nn::nex::_DDL_DataStoreKeyValue::operator_=()", _text + 0x99FD08
	.equiv "FUN_0EB219D0:FID_conflict:nn::nex::_DDL_SimpleSearchCondition::Add()", _text + 0x9A19D0
	.equiv "nn::nex::DataStoreLogicServerClient::PrepareGetObjectOrMetaBinary()", _text + 0x9A25C8
	.equiv "FID_conflict:nn::nex::_DDL_CompetitionRankingInfoGetParam::Add()", _text + 0x9A26D4
	.equiv "nn::nex::_DDL_DataStoreRatingInitParam::Add()", _text + 0x9A27C8
	.equiv "nn::nex::_DDL_DataStorePersistenceInitParam::Add()", _text + 0x9A2AD8
	.equiv "nn::nex::_DDL_DataStoreCompletePostParam::Add()", _text + 0x9A32BC
	.equiv "nn::nex::_DDL_DataStorePrepareUpdateParam::Add()", _text + 0x9A3728
	.equiv "nn::nex::_DDL_DataStoreCompleteUpdateParam::Add()", _text + 0x9A3D9C
	.equiv "nn::nex::_DDL_DataStoreRatingInfo::operator_=()", _text + 0x9A59C0
	.equiv "nn::nex::_DDL_DataStoreRatingInfoWithSlot::operator_=()", _text + 0x9A59F4
	.equiv "nn::nex::_DDL_DataStorePermission::operator_=()", _text + 0x9A7950
	.equiv "nn::nex::_DDL_DataStoreMetaInfo::operator_=()", _text + 0x9A8060
	.equiv "nn::nex::_DDL_DataStoreRatingInitParam::operator_=()", _text + 0x9AAB38
	.equiv "nn::nex::_DDL_DataStoreRatingInitParamWithSlot::operator_=()", _text + 0x9AAB8C
	.equiv "nn::nex::_DDL_DataStorePersistenceInitParam::operator_=()", _text + 0x9AB028
	.equiv "nn::nex::_DDL_DataStorePreparePostParam::operator_=()", _text + 0x9AB044
	.equiv "nn::nex::_DDL_DataStoreReqGetInfo::operator_=()", _text + 0x9AB9D0
	.equiv "nn::nex::_DDL_DataStoreFileServerObjectInfo::operator_=()", _text + 0x9ABA4C
	.equiv "nn::nex::_DDL_DataStorePersistenceTarget::operator_=()", _text + 0x9ACE78
	.equiv "nn::nex::JobDataStoreFileServer::IsHttpStatusCodeSuccess()", _text + 0x9AED48
	.equiv "nn::nex::_DDL_DataStoreChangeMetaCompareParam::operator_=()", _text + 0x9AF584
	.equiv "nn::nex::_DDL_DataStorePrepareUpdateParam::operator_=()", _text + 0x9AF690
	.equiv "nn::nex::_DDL_DataStorePrepareGetParam::operator_=()", _text + 0x9AF6F8
	.equiv "nn::nex::DataStoreLogicServerClient::DataStoreLogicServerClient()", _text + 0x9AF948
	.equiv "FUN_0EB2FB9C:FID_conflict:nn::nex::PRUDPMessageV0::PRUDPMessageV0()", _text + 0x9AFB9C
	.equiv "bool_nn::nex::DataStoreClientTemplate::SetDependentRvConnection()", _text + 0x9B59B0
	.equiv "nn::nex::DataStoreClientTemplate::DataStoreClientTemplate()", _text + 0x9B8AA0
	.equiv "FUN_0EB3C8CC:memmove..obj.5Cghs.5Ccafe.5Ccos.5Ccore.5Ctarget.5Cdyn.5Ccore_dyn_stub.5CNDEBUG.5Cstub.", _text + 0x9BC8CC
	.equiv "nn::nex::_DDL_CompetitionRankingInfo::operator_=()", _text + 0x9BDB0C
	.equiv "nn::nex::_DDL_RankingScoreData::Add()", _text + 0x9BE5D4
	.equiv "nn::nex::_DDL_CompetitionRankingUploadScoreParam::Add()", _text + 0x9C181C
	.equiv "nn::nex::RankingClient::RankingClient()", _text + 0x9C493C
	.equiv "nn::nex::RankingClient::UploadScore()", _text + 0x9C4AA4
	.equiv "FUN_0EB455F4:memmove..obj.5Cghs.5Ccafe.5Ccos.5Ccore.5Ctarget.5Cdyn.5Ccore_dyn_stub.5CNDEBUG.5Cstub.", _text + 0x9C55F4
	.equiv "nn::nex::DOCallContext::Wait()", _text + 0x9C5658
	.equiv "nn::nex::DORef::EmptyInit()", _text + 0x9C5738
	.equiv "nn::nex::DOSelections::RemoveFromAllSelections()", _text + 0x9C67A4
	.equiv "nn::nex::DuplicatedObject::SetFlag()", _text + 0x9C6820
	.equiv "nn::nex::DuplicatedObject::DestroyDO()", _text + 0x9C689C
	.equiv "FUN_0EB472A8:nn::nex::DORef::DORef()", _text + 0x9C72A8
	.equiv "nn::nex::DuplicatedObject::IsADuplica()", _text + 0x9C74A8
	.equiv "nn::nex::DORef::Release()", _text + 0x9C74E4
	.equiv "nn::nex::DORef::~DORef()", _text + 0x9C74F4
	.equiv "nn::nex::DOClass::GenerateObjectIDCouldBlock()", _text + 0x9C76E0
	.equiv "nn::nex::IDGenerator::UseNextLocalRange()", _text + 0x9C7738
	.equiv "nn::nex::IDGenerator::GetNextLocalID()", _text + 0x9C7788
	.equiv "nn::nex::Session::GetSystemState()", _text + 0x9C7A64
	.equiv "nn::nex::DuplicatedObject::UpdateImplCore()", _text + 0x9C7BF4
	.equiv "FUN_0EB47FB0:nn::nex::DORef::operator_=()", _text + 0x9C7FB0
	.equiv "nn::nex::DOCallContext::SetTargetStation()", _text + 0x9C8004
	.equiv "nn::nex::ObjDupProtocol::AddMessageType()", _text + 0x9C8570
	.equiv "nn::nex::ObjDupProtocol::CreateMessage()", _text + 0x9C85C8
	.equiv "nn::nex::DOHandle::IsACoreDO()", _text + 0x9C9370
	.equiv "nn::nex::DOHandle::IsAUserDO()", _text + 0x9C942C
	.equiv "nn::nex::ObjDupProtocol::SetMessageTargetType()", _text + 0x9C9454
	.equiv "nn::nex::RMCContext::PrepareCallMessage()", _text + 0x9C9658
	.equiv "nn::nex::RMCContext::AddReturnValuePtr()", _text + 0x9C99F8
	.equiv "nn::nex::DOCallContext::SignalFailure()", _text + 0x9C9A2C
	.equiv "nn::nex::ActiveDOCallContext::IsUserDO()", _text + 0x9C9A70
	.equiv "nn::nex::ActiveDOCallContext::SetMessageTargetType()", _text + 0x9C9AC4
	.equiv "nn::nex::_DO_IDGenerator::CallRequestIDRangeFromMaster()", _text + 0x9C9FD0
	.equiv "nn::nex::CallMethodOperation::CreateResponseHeader()", _text + 0x9CAA6C
	.equiv "nn::nex::CallRegister::GetInstanceRef()", _text + 0x9CAF4C
	.equiv "nn::nex::DuplicatedObject::MigrationInProgress()", _text + 0x9CAF70
	.equiv "FUN_0EB4B0EC:nn::nex::DORef::DORef()", _text + 0x9CB0EC
	.equiv "FUN_0EB4B5E4:nn::nex::DORef::DORef()", _text + 0x9CB5E4
	.equiv "nn::nex::DuplicatedObject::CallApproveFaultRecovery()", _text + 0x9CBF48
	.equiv "FUN_0EB4BFA8:nn::nex::DORef::DORef()", _text + 0x9CBFA8
	.equiv "nn::nex::RemoveFromStoreOperation::RemoveFromStoreOperation()", _text + 0x9CC038
	.equiv "nn::nex::RemoveFromStoreOperation::~RemoveFromStoreOperation()", _text + 0x9CC0B4
	.equiv "nn::nex::DuplicatedObject::RemoveFromStore()", _text + 0x9CC108
	.equiv "nn::nex::DuplicatedObject::ClearFlag()", _text + 0x9CC170
	.equiv "nn::nex::DuplicatedObject::ExecuteOperationImpl()", _text + 0x9CC83C
	.equiv "nn::nex::ActiveDOCallContext::ActiveDOCallContext()", _text + 0x9CCBC0
	.equiv "nn::nex::Station::ConnectionIsPossible()", _text + 0x9CD4F0
	.equiv "nn::nex::SafetyExecutive::CheckOperationValidity()", _text + 0x9CEB3C
	.equiv "nn::nex::DOCallContext::SignalResponse()", _text + 0x9CEC4C
	.equiv "nn::nex::JobExecuteDelayedOperation::JobExecuteDelayedOperation()", _text + 0x9CF14C
	.equiv "nn::nex::CallMethodOperation::DispatchCall()", _text + 0x9CFA34
	.equiv "nn::nex::CallMethodOperation::AddFailureDetails()", _text + 0x9CFB84
	.equiv "nn::nex::DOCallContext::GetOutcomeString()", _text + 0x9CFBBC
	.equiv "nn::nex::DOCore::IsTerminating()", _text + 0x9D05A8
	.equiv "nn::nex::DOCore::IsTerminated()", _text + 0x9D05C0
	.equiv "nn::nex::DOCore::IsCorrupted()", _text + 0x9D05D8
	.equiv "nn::nex::DOCore::HasStartedTermination()", _text + 0x9D05F0
	.equiv "nn::nex::ProcessAuthentication::ProcessAuthentication()", _text + 0x9D0654
	.equiv "nn::nex::DataSet::DataSet()", _text + 0x9D06F4
	.equiv "nn::nex::ProcessAuthentication::ExtractFrom()", _text + 0x9D08B4
	.equiv "nn::nex::operator_>>()", _text + 0x9D1138
	.equiv "nn::nex::StationManager::SetInitialConnectionPoint()", _text + 0x9D34D4
	.equiv "nn::nex::JobJoinSession::CompleteURL()", _text + 0x9D3714
	.equiv "nn::nex::JobJoinSession::ProcessNegativeJoinResponse()", _text + 0x9D3A8C
	.equiv "nn::nex::ObjDupProtocol::ProcessJoinResponse()", _text + 0x9D3ABC
	.equiv "nn::nex::ObjDupProtocol::ParseJoinResponseMessage()", _text + 0x9D3C24
	.equiv "FUN_0EB53D78:nn::nex::UpdateDataSetOperation::UpdateDataSetOperation()", _text + 0x9D3D78
	.equiv "nn::nex::ObjDupProtocol::ParseUpdateMessage()", _text + 0x9D412C
	.equiv "nn::nex::ObjDupProtocol::ParseDeleteMessage()", _text + 0x9D45E0
	.equiv "nn::nex::DOCallContext::SignalOutcome()", _text + 0x9D49C8
	.equiv "nn::nex::ObjDupProtocol::ParseCallOutcomeMessage()", _text + 0x9D4C50
	.equiv "FUN_0EB54CF8:nn::nex::DORef::operator_=()", _text + 0x9D4CF8
	.equiv "nn::nex::CallMethodOperation::CallMethodOperation()", _text + 0x9D4E30
	.equiv "nn::nex::CallMethodOperation::CancelResponse()", _text + 0x9D4F10
	.equiv "nn::nex::ObjDupProtocol::ParseRMCCallMessage()", _text + 0x9D5184
	.equiv "nn::nex::ObjDupProtocol::ParseRMCResponseMessage()", _text + 0x9D5460
	.equiv "nn::nex::DOHandle::AddSourceTo()", _text + 0x9D5560
	.equiv "nn::nex::ObjDupProtocol::CreateActionMessage()", _text + 0x9D5578
	.equiv "nn::nex::DuplicatedObject::CreateStubMessage()", _text + 0x9D560C
	.equiv "nn::nex::IteratorOverDOs::ComputeHandleRangeRestrictions()", _text + 0x9D5650
	.equiv "nn::nex::IteratorOverDOs::~IteratorOverDOs()", _text + 0x9D5D38
	.equiv "nn::nex::_DO_RootDO::AddDuplicaLocation_OnMaster()", _text + 0x9D634C
	.equiv "nn::nex::DuplicatedObject::RemoveFromDuplicationSet()", _text + 0x9D643C
	.equiv "nn::nex::ObjDupProtocol::ParseFetchRequestMessage()", _text + 0x9D6C3C
	.equiv "nn::nex::ObjDupProtocol::ParseEOSMessage()", _text + 0x9D6E70
	.equiv "nn::nex::AddToStoreOperation::AddToStoreOperation()", _text + 0x9D7CBC
	.equiv "nn::nex::AddToStoreOperation::~AddToStoreOperation()", _text + 0x9D7D38
	.equiv "nn::nex::DuplicatedObject::AddToStoreAsDuplica()", _text + 0x9D7D8C
	.equiv "FUN_0EB57DF4:nn::nex::UpdateDataSetOperation::UpdateDataSetOperation()", _text + 0x9D7DF4
	.equiv "nn::nex::ObjDupProtocol::CreateDuplica()", _text + 0x9D8850
	.equiv "nn::nex::ObjDupProtocol::ProcessGetParticipantsRequest()", _text + 0x9D97BC
	.equiv "nn::nex::ObjDupProtocol::ParseGetParticipantsRequestMessage()", _text + 0x9D98B0
	.equiv "nn::nex::ObjDupProtocol::ProcessGetParticipantsResponse()", _text + 0x9D9ED8
	.equiv "nn::nex::ObjDupProtocol::ParseGetParticipantsResponseMessage()", _text + 0x9D9F34
	.equiv "nn::nex::ObjDupProtocol::ParseSpecificMessage()", _text + 0x9D9FA4
	.equiv "nn::nex::ObjDupProtocol::DispatchTrace()", _text + 0x9DA124
	.equiv "nn::nex::JobProcessMessage::JobProcessMessage()", _text + 0x9DA1BC
	.equiv "nn::nex::ObjDupProtocol::ReleaseMessage()", _text + 0x9DA704
	.equiv "nn::nex::Station::QueueLocalMessage()", _text + 0x9DAB38
	.equiv "nn::nex::MessageBundle::IsEmpty()", _text + 0x9DABA8
	.equiv "nn::nex::MessageBundle::MarkBundleEnd()", _text + 0x9DABC0
	.equiv "nn::nex::MessageBundle::UnmarkBundleEnd()", _text + 0x9DAC08
	.equiv "nn::nex::MessageBundle::Clear()", _text + 0x9DAC50
	.equiv "nn::nex::MessageBundle::Send()", _text + 0x9DAC94
	.equiv "nn::nex::Station::IsConnectedWithoutLock()", _text + 0x9DB76C
	.equiv "nn::nex::BundlingPolicy::IsEnabled()", _text + 0x9DBD1C
	.equiv "nn::nex::BundlingPolicy::FlagIsSet()", _text + 0x9DBD2C
	.equiv "nn::nex::MessageBundle::SizeWillBeExceeded()", _text + 0x9DBD44
	.equiv "nn::nex::MessageBundle::MustFlushBefore()", _text + 0x9DBD68
	.equiv "nn::nex::MessageBundle::Add()", _text + 0x9DBDCC
	.equiv "nn::nex::MessageBundle::TimeIsExpired()", _text + 0x9DC3C8
	.equiv "nn::nex::MessageBundle::SizeIsExceeded()", _text + 0x9DC444
	.equiv "nn::nex::MessageBundle::MustFlushNow()", _text + 0x9DC45C
	.equiv "nn::nex::Station::SendImpl()", _text + 0x9DCE30
	.equiv "nn::nex::ObjDupProtocol::ParseMessage()", _text + 0x9DCF20
	.equiv "nn::nex::Station::Send()", _text + 0x9DCF9C
	.equiv "nn::nex::DOCallContext::Cancel()", _text + 0x9DD540
	.equiv "nn::nex::DOCallContext::PrepareForDestruction()", _text + 0x9DD5A4
	.equiv "nn::nex::DOCallContext::~DOCallContext()", _text + 0x9DD644
	.equiv "nn::nex::ActiveDOCallContext::~ActiveDOCallContext()", _text + 0x9DD708
	.equiv "FID_conflict:nn::nex::ChangeDupSetOperation::~ChangeDupSetOperation()", _text + 0x9DD9F4
	.equiv "nn::nex::DOFilter::DOFilter()", _text + 0x9DE874
	.equiv "nn::nex::IsAKindOfDOFilter::IsAKindOfDOFilter()", _text + 0x9DEF8C
	.equiv "nn::nex::operator_<<()", _text + 0x9DFDCC
	.equiv "FUN_0EB5FE10:nn::nex::DuplicatedObject::AcquireReferenceToMaster()", _text + 0x9DFE10
	.equiv "FUN_0EB5FE24:nn::nex::DuplicatedObject::AcquireReferenceToMaster()", _text + 0x9DFE24
	.equiv "nn::nex::DuplicatedObject::Emigrate()", _text + 0x9E0CE4
	.equiv "nn::nex::DuplicatedObject::AttemptEmigration()", _text + 0x9E0DA0
	.equiv "nn::nex::DuplicatedObject::RemoveFromCachedDuplicationSet()", _text + 0x9E1238
	.equiv "nn::nex::DOCallContext::GetTargetCount()", _text + 0x9E17FC
	.equiv "nn::nex::ActiveDOCallContext::IsInvalidSubStreamID()", _text + 0x9E1934
	.equiv "FUN_0EB641AC:nn::nex::ProcessAuthentication::ComputeTitleChecksum()", _text + 0x9E41AC
	.equiv "FUN_0EB641E0:nn::nex::ProcessAuthentication::ComputeTitleChecksum()", _text + 0x9E41E0
	.equiv "nn::nex::ProcessAuthentication::Authenticate()", _text + 0x9E4210
	.equiv "nn::nex::_DO_Session::CallRetrieveURLs()", _text + 0x9E4AA4
	.equiv "nn::nex::ConnectionInfo::GetURL()", _text + 0x9E4B90
	.equiv "nn::nex::Station::SignalFault()", _text + 0x9E4F64
	.equiv "nn::nex::_DO_Session::CallDestroySessionWithMasterCheckFromRemote()", _text + 0x9E5978
	.equiv "nn::nex::StationState::ValidateTransition()", _text + 0x9E59F8
	.equiv "nn::nex::StationState::Set()", _text + 0x9E5A64
	.equiv "nn::nex::ConnectionInfo::SetURL()", _text + 0x9E5A90
	.equiv "FUN_0EB65BB0:nn::nex::ConnectionInfo::AddURL()", _text + 0x9E5BB0
	.equiv "FUN_0EB65C8C:nn::nex::ConnectionInfo::AddURL()", _text + 0x9E5C8C
	.equiv "nn::nex::_DO_Station::GetIDGenerator()", _text + 0x9E5CD4
	.equiv "nn::nex::SessionOperation::SessionOperation()", _text + 0x9E6184
	.equiv "nn::nex::StationManager::DisconnectStation()", _text + 0x9E62E8
	.equiv "nn::nex::Station::InitIdentification()", _text + 0x9E6720
	.equiv "nn::nex::Station::ReleaseConnection()", _text + 0x9E67C0
	.equiv "nn::nex::Session::GetInstanceHandle()", _text + 0x9E69CC
	.equiv "nn::nex::Session::CallApproveJoinSessionCallback()", _text + 0x9E6B74
	.equiv "nn::nex::MatchOperationTriggers::EnablePeriodicMatch()", _text + 0x9E73B0
	.equiv "nn::nex::MatchOperationTriggers::MatchOperationTriggers()", _text + 0x9E73C0
	.equiv "nn::nex::DuplicationSpace::NoCellRequired()", _text + 0x9E7588
	.equiv "nn::nex::SessionSpace::SessionSpace()", _text + 0x9E75A0
	.equiv "nn::nex::ObjDupProtocol::CreateEOSMessage()", _text + 0x9E7EE8
	.equiv "nn::nex::JobChangeConnection::ReportJobCompletion()", _text + 0x9E8B70
	.equiv "nn::nex::JobConnectStation::ReportConnectResult()", _text + 0x9EA2E8
	.equiv "FUN_0EB73C14:nn::pia::common::HeapManager::GetHeap()", _text + 0x9F3C14
	.equiv "FUN_0EB73C30:<unnamed>::allocFromPead()", _text + 0x9F3C30
	.equiv "FUN_0EB73C60:<unnamed>::allocFromPead()", _text + 0x9F3C60
	.equiv "<unnamed>::GetFrequency()", _text + 0x9F3C7C
	.equiv "nn::pia::common::TimeSpan::GetTicksPerMSec()", _text + 0x9F3CA8
	.equiv "nn::pia::common::Time::SetNow()", _text + 0x9F3D78
	.equiv "nn::pia::common::Log::Write()", _text + 0x9F3E78
	.equiv "nn::pia::common::CriticalSection::CriticalSection()", _text + 0x9F3ECC
	.equiv "nn::pia::common::CriticalSection::~CriticalSection()", _text + 0x9F3F18
	.equiv "nn::pia::common::CallContext::Reset()", _text + 0x9F3F34
	.equiv "nn::pia::common::CallContext::CallContext()", _text + 0x9F3F50
	.equiv "FUN_0EB73F98:FID_conflict:nn::pia::transport::Protocol::~Protocol()", _text + 0x9F3F98
	.equiv "nn::pia::common::CallContext::InitiateCall()", _text + 0x9F3FC0
	.equiv "nn::pia::common::CallContext::Complete()", _text + 0x9F4000
	.equiv "nn::pia::common::CallContext::SignalSuccess()", _text + 0x9F4044
	.equiv "nn::pia::common::CallContext::SignalFailure()", _text + 0x9F40B0
	.equiv "nn::pia::common::CallContext::SignalCancel()", _text + 0x9F411C
	.equiv "nn::pia::common::SetupAndCheckSetting()", _text + 0x9F4190
	.equiv "nn::pia::common::Crypto::Encrypt()", _text + 0x9F423C
	.equiv "nn::pia::common::Crypto::Decrypt()", _text + 0x9F436C
	.equiv "nn::pia::common::Crypto::GetBlockSize()", _text + 0x9F449C
	.equiv "nn::pia::common::ErrorHandler::TraceResult()", _text + 0x9F4504
	.equiv "FUN_0EB74514:nn::pia::common::InetAddress::InetAddress()", _text + 0x9F4514
	.equiv "nn::pia::common::InetAddress::operator_=()", _text + 0x9F45A8
	.equiv "FUN_0EB745BC:nn::pia::common::InetAddress::InetAddress()", _text + 0x9F45BC
	.equiv "nn::pia::common::InetAddress::~InetAddress()", _text + 0x9F460C
	.equiv "nn::pia::common::InetAddress::GetKey()", _text + 0x9F4620
	.equiv "nn::pia::common::String::FormatV()", _text + 0x9F4630
	.equiv "nn::pia::common::serializeU32()", _text + 0x9F4738
	.equiv "nn::pia::common::serializeU16()", _text + 0x9F4758
	.equiv "nn::pia::common::deserializeU32()", _text + 0x9F483C
	.equiv "nn::pia::common::InetAddress::IsValid()", _text + 0x9F48D4
	.equiv "nn::pia::common::InetAddress::IsPrivate()", _text + 0x9F490C
	.equiv "nn::pia::common::ListBase::Init()", _text + 0x9F4954
	.equiv "nn::pia::common::ListBase::InsertBeforeNode()", _text + 0x9F496C
	.equiv "nn::pia::common::ListBase::InsertAfterNode()", _text + 0x9F4994
	.equiv "nn::pia::common::ListBase::EraseNode()", _text + 0x9F49BC
	.equiv "nn::pia::common::ListBase::IsIncludeNode()", _text + 0x9F49F0
	.equiv "nn::pia::common::ListBase::PopFrontNode()", _text + 0x9F4A3C
	.equiv "nn::pia::common::ListBase::PopBackNode()", _text + 0x9F4A84
	.equiv "nn::pia::common::BackgroundScheduler::EntryJob()", _text + 0x9F4EC8
	.equiv "nn::pia::common::Scheduler::EntryJob()", _text + 0x9F4F98
	.equiv "nn::pia::common::Scheduler::EntryJobNext()", _text + 0x9F5088
	.equiv "nn::pia::common::Job::Execute()", _text + 0x9F50A0
	.equiv "nn::pia::common::Job::IsForeground()", _text + 0x9F55D0
	.equiv "nn::pia::common::Job::IsBackground()", _text + 0x9F5658
	.equiv "nn::pia::common::BackgroundScheduler::ResetJob()", _text + 0x9F56E0
	.equiv "nn::pia::common::Scheduler::ResetJob()", _text + 0x9F5728
	.equiv "nn::pia::common::Scheduler::SetMonitoringData()", _text + 0x9F5800
	.equiv "nn::pia::common::String::String()", _text + 0x9F597C
	.equiv "nn::pia::common::String::StrLen()", _text + 0x9F5A2C
	.equiv "nn::pia::common::Watermark::SetName()", _text + 0x9F5A44
	.equiv "nn::pia::common::Watermark::Update()", _text + 0x9F5A9C
	.equiv "nn::pia::common::WatermarkManager::GetWatermark()", _text + 0x9F5B40
	.equiv "nn::pia::common::HeapManager::convert()", _text + 0x9F5C24
	.equiv "FUN_0EB75C48:nn::pia::common::HeapManager::GetHeap()", _text + 0x9F5C48
	.equiv "nn::pia::common::HeapManager::SetCurrentHeap()", _text + 0x9F5C78
	.equiv "nn::pia::common::HeapManager::ClearCurrentHeap()", _text + 0x9F5CA0
	.equiv "nn::pia::common::HeapManager::Setup()", _text + 0x9F5CB0
	.equiv "nn::pia::common::HeapManager::Cleanup()", _text + 0x9F5D20
	.equiv "nn::pia::common::PacketOld::IsValidDefaultPayloadSize()", _text + 0x9F5F60
	.equiv "nn::pia::common::PacketOld::IsValidSignatureSize()", _text + 0x9F5F7C
	.equiv "nn::pia::common::ChunkOld::IsValidDataSizeLimit()", _text + 0x9F5FAC
	.equiv "nn::pia::common::PacketOld::SetDefaultPayloadSize()", _text + 0x9F5FBC
	.equiv "nn::pia::common::PacketOld::SetSignatureSize()", _text + 0x9F6018
	.equiv "nn::pia::common::ChunkOld::SetDataSizeLimit()", _text + 0x9F6074
	.equiv "nn::pia::common::PayloadSizeManager::updatePayloadSize()", _text + 0x9F60D0
	.equiv "nn::pia::common::PayloadSizeManager::SetMtuSize()", _text + 0x9F634C
	.equiv "nn::pia::common::PayloadSizeManager::SetSignatureSize()", _text + 0x9F6370
	.equiv "nn::pia::common::Hmac::Initialize()", _text + 0x9F6398
	.equiv "nn::pia::common::Hmac::Calc()", _text + 0x9F6560
	.equiv "nn::pia::common::Md5Context::Initialize()", _text + 0x9F6BC0
	.equiv "nn::pia::common::Md5Context::Update()", _text + 0x9F6BFC
	.equiv "FUN_0EB76E68:nn::pia::common::StationAddress::StationAddress()", _text + 0x9F6E68
	.equiv "FUN_0EB76EC4:nn::pia::common::StationAddress::StationAddress()", _text + 0x9F6EC4
	.equiv "nn::pia::common::StationAddress::SetInetAddress()", _text + 0x9F6F30
	.equiv "nn::pia::common::StationAddress::Clear()", _text + 0x9F6F58
	.equiv "nn::pia::common::StationAddress::IsValid()", _text + 0x9F70FC
	.equiv "nn::pia::common::StationAddress::operator_==()", _text + 0x9F714C
	.equiv "nn::pia::common::StationAddress::operator_=()", _text + 0x9F71D4
	.equiv "nn::pia::common::StationAddress::operator_<()", _text + 0x9F7218
	.equiv "nn::pia::common::SignatureManager::SetNecessity()", _text + 0x9F7534
	.equiv "nn::pia::common::SignatureManager::Calculator::Disable()", _text + 0x9F7558
	.equiv "nn::pia::common::SignatureManager::CheckSignature()", _text + 0x9F7E50
	.equiv "nn::pia::common::serializeU64()", _text + 0x9F8238
	.equiv "nn::pia::common::SessionEndMonitoringData::Initialize()", _text + 0x9F89D4
	.equiv "nn::pia::common::Job::Job()", _text + 0x9F96F4
	.equiv "nn::pia::common::Job::Reset()", _text + 0x9F9764
	.equiv "FUN_0EB797EC:nn::pia::common::Job::Ready()", _text + 0x9F97EC
	.equiv "FUN_0EB79884:nn::pia::common::Job::Ready()", _text + 0x9F9884
	.equiv "nn::pia::common::Job::GetState()", _text + 0x9F991C
	.equiv "nn::pia::common::Job::IsRunning()", _text + 0x9F9A68
	.equiv "nn::pia::common::Packet::Reset()", _text + 0x9F9AF0
	.equiv "nn::pia::common::Packet::Packet()", _text + 0x9F9B68
	.equiv "nn::pia::common::Packet::IsValid()", _text + 0x9F9BD4
	.equiv "nn::pia::common::Packet::AssignPayload()", _text + 0x9F9C1C
	.equiv "nn::pia::common::Packet::Encrypt()", _text + 0x9F9C50
	.equiv "nn::pia::common::Packet::Decrypt()", _text + 0x9F9E04
	.equiv "nn::pia::common::Packet::GetPacketNumInNetwork()", _text + 0x9FA01C
	.equiv "nn::pia::common::isValidDestinationStationId()", _text + 0x9FA0A0
	.equiv "nn::pia::common::StepSequenceJob::StepSequenceJob()", _text + 0x9FA0E4
	.equiv "nn::pia::common::StepSequenceJob::Reset()", _text + 0x9FA19C
	.equiv "nn::pia::common::StepSequenceJob::WaitForCompletion()", _text + 0x9FA1D0
	.equiv "FUN_0EB7A41C:sead::AudioFxObject::AudioFxObject()", _text + 0x9FA41C
	.equiv "nn::pia::common::hashWithMd5()", _text + 0x9FAF64
	.equiv "const_nn::pia::common::maximum()", _text + 0x9FB180
	.equiv "const_nn::pia::common::minimum()", _text + 0x9FB1A8
	.equiv "nn::pia::inet::BeginSetup()", _text + 0x9FB35C
	.equiv "nn::pia::inet::EndSetup()", _text + 0x9FB404
	.equiv "nn::pia::inet::NexFacade::NexFacade()", _text + 0x9FB4EC
	.equiv "nn::pia::inet::NexFacade::CreateInstance()", _text + 0x9FB598
	.equiv "nn::pia::inet::NexFacade::IsGlobal()", _text + 0x9FBA84
	.equiv "nn::pia::inet::NexFacade::IsEdmMapping()", _text + 0x9FBACC
	.equiv "nn::pia::inet::NexFacade::IsEimMapping()", _text + 0x9FBAE0
	.equiv "nn::pia::inet::NexFacade::GetNatProperty()", _text + 0x9FC2B0
	.equiv "nn::pia::inet::NatTraversalTimeList::Find()", _text + 0x9FCD54
	.equiv "nn::pia::inet::NatTraversalTimeList::Remove()", _text + 0x9FCF04
	.equiv "nn::pia::inet::NexNatTraversalProtocol::~NexNatTraversalProtocol()", _text + 0x9FD34C
	.equiv "nn::pia::inet::NexNatTraversalProtocol::CancelPortDetection()", _text + 0x9FD8A8
	.equiv "nn::pia::inet::NexNatTraversalProtocol::IsTraversed()", _text + 0x9FDD48
	.equiv "nn::pia::inet::NexNatTraversalProtocol::addProbeRequest()", _text + 0x9FDDCC
	.equiv "nn::pia::inet::NexNatTraversalProtocol::findProbeRequestByConnectionId()", _text + 0x9FE704
	.equiv "nn::pia::inet::NexNatTraversalProtocol::sendDummyPacket()", _text + 0x9FEAC4
	.equiv "nn::pia::inet::NexNatTraversalProtocol::detectNatPort()", _text + 0x9FECC8
	.equiv "nn::pia::inet::NexNatTraversalProtocol::sendProbe()", _text + 0x9FF4A4
	.equiv "nn::pia::inet::NexNatTraversalProtocol::GetLatestStationLocation()", _text + 0xA002D8
	.equiv "nn::pia::inet::NexNatTraversalProtocol::ReportNatTraversalResult()", _text + 0xA00418
	.equiv "nn::pia::inet::Socket::Socket()", _text + 0xA00D98
	.equiv "nn::pia::inet::Socket::Close()", _text + 0xA01340
	.equiv "nn::pia::inet::convertRecvSocketErrorToResult()", _text + 0xA019D4
	.equiv "nn::pia::inet::convertSendSocketErrorToResult()", _text + 0xA01D68
	.equiv "nn::pia::inet::Socket::SetTtl()", _text + 0xA0243C
	.equiv "nn::pia::inet::SocketAddress::Init()", _text + 0xA02788
	.equiv "nn::pia::inet::SocketAddress::SetInetAddress()", _text + 0xA027D0
	.equiv "nn::pia::inet::SocketAddress::SetSockAddrIn()", _text + 0xA02810
	.equiv "nn::pia::inet::SocketAddress::GetSockAddrIn()", _text + 0xA02838
	.equiv "sys::Base::start()", _text + 0xA02BF8
	.equiv "nn::pia::inet::SocketOutputStream::OnStationConnectionEvent()", _text + 0xA02D04
	.equiv "nn::pia::inet::SocketOutputStream::SendTo()", _text + 0xA02F10
	.equiv "nn::pia::inet::NatProbeData::NatProbeData()", _text + 0xA06A74
	.equiv "nn::pia::inet::NatProbeList::removeNotReceivedProbes()", _text + 0xA06FFC
	.equiv "nn::pia::inet::NatProbeList::removeDifferentConnectionIdAndSameAddressPortProbes()", _text + 0xA070D8
	.equiv "nn::pia::inet::NatProbeList::isSameAddressAndConnectionId()", _text + 0xA071E8
	.equiv "nn::pia::inet::NatProbeList::removeSameAddressAndConnectionIdProbes()", _text + 0xA07218
	.equiv "nn::pia::inet::NatProbeList::FindByConnectionId()", _text + 0xA075C4
	.equiv "nn::pia::inet::NatProbeList::FindByAddressAndConnectionId()", _text + 0xA07728
	.equiv "nn::pia::inet::NatProbeList::RemoveProbesByConnectionId()", _text + 0xA0785C
	.equiv "nn::pia::inet::NatProbeRequest::NatProbeRequest()", _text + 0xA07B74
	.equiv "nn::pia::inet::NatTraverser::GetSessionEndMonitoringDataIndex()", _text + 0xA0A100
	.equiv "nn::pia::inet::NatTraverser::incrementNatTraversalTrialCount()", _text + 0xA0A1D4
	.equiv "nn::pia::inet::NatTraverser::IsTraversed()", _text + 0xA0A508
	.equiv "nn::pia::inet::NatTraverser::PrepareNatTraversal()", _text + 0xA0A538
	.equiv "nn::pia::inet::NatTraverser::ClearNatTraversal()", _text + 0xA0A68C
	.equiv "nn::pia::inet::NatTraverser::CheckLatestStationLocation()", _text + 0xA0A734
	.equiv "nn::pia::inet::NatDetecter::CloseSocket()", _text + 0xA0D330
	.equiv "nn::pia::inet::NatDetectionJob::NatDetectionJob()", _text + 0xA0DF4C
	.equiv "nn::pia::inet::NatDetectionJob::Cleanup()", _text + 0xA0E138
	.equiv "nn::pia::inet::NatServerAddressResolveJob::Cleanup()", _text + 0xA101B8
	.equiv "FUN_0EB904FC:pead::allocateFromSeadHeap()", _text + 0xA104FC
	.equiv "FUN_0EB90564:pead::allocateFromSeadHeap()", _text + 0xA10564
	.equiv "pead::freeToSeadHeap()", _text + 0xA105D8
	.equiv "pead::PtrArrayImpl::setBuffer()", _text + 0xA10648
	.equiv "pead::PtrArrayImpl::allocBuffer()", _text + 0xA1066C
	.equiv "pead::PtrArrayImpl::freeBuffer()", _text + 0xA10710
	.equiv "pead::PtrArrayImpl::erase()", _text + 0xA10778
	.equiv "FUN_0EB908C0:sead::PtrArrayImpl::sort()", _text + 0xA108C0
	.equiv "pead::PtrArrayImpl::binarySearch()", _text + 0xA109C8
	.equiv "pead::IDisposer::IDisposer()", _text + 0xA10AB4
	.equiv "FUN_0EB90BC4:sead::ExpHeap::ExpHeap()", _text + 0xA10BC4
	.equiv "FUN_0EB90D0C:sead::ExpHeap::mergeFreeList_()", _text + 0xA10D0C
	.equiv "FUN_0EB90DE4:sead::ExpHeap::pushToFreeList_()", _text + 0xA10DE4
	.equiv "FUN_0EB90E94:sead::ExpHeap::createMaxSizeFreeMemBlock_()", _text + 0xA10E94
	.equiv "FUN_0EB90F94:sead::ExpHeap::createMaxSizeFreeMemBlock_()", _text + 0xA10F94
	.equiv "FUN_0EB90F98:pead::ExpHeap::tryCreate()", _text + 0xA10F98
	.equiv "FUN_0EB91100:pead::ExpHeap::tryCreate()", _text + 0xA11100
	.equiv "FUN_0EB915CC:sead::ExpHeap::findFreeMemBlockFromHead_()", _text + 0xA115CC
	.equiv "FUN_0EB91654:sead::ExpHeap::pushToUseList_()", _text + 0xA11654
	.equiv "FUN_0EB91698:sead::ExpHeap::allocFromHead_()", _text + 0xA11698
	.equiv "FUN_0EB91770:sead::ExpHeap::findFreeMemBlockFromHead_()", _text + 0xA11770
	.equiv "FUN_0EB91834:sead::ExpHeap::allocFromHead_()", _text + 0xA11834
	.equiv "FUN_0EB9195C:sead::ExpHeap::findFreeMemBlockFromTail_()", _text + 0xA1195C
	.equiv "FUN_0EB919F8:sead::ExpHeap::allocFromTail_()", _text + 0xA119F8
	.equiv "FUN_0EB91B3C:sead::ExpHeap::findFreeMemBlockFromTail_()", _text + 0xA11B3C
	.equiv "FUN_0EB91C1C:sead::ExpHeap::allocFromTail_()", _text + 0xA11C1C
	.equiv "pead::ExpHeap::tryAlloc()", _text + 0xA11D8C
	.equiv "pead::Heap::findContainHeap_()", _text + 0xA12784
	.equiv "pead::Heap::pushBackChild_()", _text + 0xA128CC
	.equiv "pead::Heap::appendDisposer_()", _text + 0xA12D80
	.equiv "pead::HeapMgr::getCurrentHeap()", _text + 0xA130A4
	.equiv "FUN_0EB93230:sead::CoreInfo::getPlatformMask()", _text + 0xA13230
	.equiv "pead::BitFlagUtil::countOnBit()", _text + 0xA132A8
	.equiv "pead::BitFlagUtil::findOnBitFromRight()", _text + 0xA13300
	.equiv "FUN_0EB93398:pead::Random::init()", _text + 0xA13398
	.equiv "FUN_0EB933F4:pead::Random::init()", _text + 0xA133F4
	.equiv "pead::Random::getU32()", _text + 0xA13434
	.equiv "FUN_0EB934E8:sead::TextStreamFormat::TextStreamFormat()", _text + 0xA134E8
	.equiv "pead::DelegateThread::DelegateThread()", _text + 0xA13700
	.equiv "pead::ThreadMgr::getCurrentThread()", _text + 0xA139A0
	.equiv "pead::Thread::run_()", _text + 0xA13A94
	.equiv "FID_conflict:pead::CriticalSection::CriticalSection()", _text + 0xA13B24
	.equiv "pead::Event::initialize()", _text + 0xA13BF4
	.equiv "FID_conflict:pead::Event::Event()", _text + 0xA13C04
	.equiv "pead::Event::wait()", _text + 0xA13CD8
	.equiv "pead::MessageQueue::MessageQueue()", _text + 0xA13D30
	.equiv "pead::MessageQueue::allocate()", _text + 0xA13E2C
	.equiv "FUN_0EB93F0C:FID_conflict:sead::MessageQueue::pop()", _text + 0xA13F0C
	.equiv "FUN_0EB94770:sead::Thread::start()", _text + 0xA14770
	.equiv "pead::Thread::setAffinity()", _text + 0xA148A0
	.equiv "FUN_0EB949B0:FID_conflict:pead::TickSpan::toNanoSeconds()", _text + 0xA149B0
	.equiv "pead::TickTime::TickTime()", _text + 0xA14A60
	.equiv "pead::ListNode::insertBack_()", _text + 0xA14AAC
	.equiv "pead::ListNode::insertFront_()", _text + 0xA14ACC
	.equiv "FUN_0EB94AEC:sead::ListNode::erase_()", _text + 0xA14AEC
	.equiv "pead::ListImpl::nth()", _text + 0xA14B24
	.equiv "pead::ListImpl::sort()", _text + 0xA14B54
	.equiv "FID_conflict:nn::pia::chat::BeginSetup()", _text + 0xA14D44
	.equiv "FID_conflict:nn::pia::chat::EndSetup()", _text + 0xA14DEC
	.equiv "nn::pia::session::CreateSessionJob::Cleanup()", _text + 0xA15040
	.equiv "nn::pia::session::JoinSessionJob::CleanupInternalContexts()", _text + 0xA159B0
	.equiv "nn::pia::session::ProcessHostMigrationJob::Cleanup()", _text + 0xA1A518
	.equiv "nn::pia::session::ProcessHostMigrationJob::SetMonitoringData()", _text + 0xA1ADC0
	.equiv "nn::pia::session::ProcessJoinRequestJob::Cleanup()", _text + 0xA1BED8
	.equiv "nn::pia::session::ProcessUpdateSessionJob::CleanupInternalContexts()", _text + 0xA1F480
	.equiv "nn::pia::session::ProcessUpdateSessionJob::Cleanup()", _text + 0xA1FD3C
	.equiv "nn::pia::session::ProcessUpdateSessionJob::CheckEdmByStationId()", _text + 0xA1FE04
	.equiv "nn::pia::session::ProcessUpdateSessionJob::SetMonitoringData()", _text + 0xA1FEA8
	.equiv "nn::pia::session::Session::CleanupStationsJobs()", _text + 0xA21264
	.equiv "nn::pia::session::Session::CheckStationIdIsValid()", _text + 0xA214A0
	.equiv "nn::pia::session::Session::StopUse()", _text + 0xA214E0
	.equiv "nn::pia::session::Session::IsUsingHostMigration()", _text + 0xA2213C
	.equiv "nn::pia::session::SessionProtocol::SendMigrationStart()", _text + 0xA28F40
	.equiv "nn::pia::session::SessionProtocol::SendMultiMigrationStart()", _text + 0xA295E4
	.equiv "nn::pia::session::DestroySessionJob::CleanupStatus()", _text + 0xA2A8B0
	.equiv "nn::pia::session::KickoutManageJob::Cleanup()", _text + 0xA2B144
	.equiv "nn::pia::session::KickoutManageJob::SetLeaveEventStationId()", _text + 0xA2B36C
	.equiv "nn::pia::transport::StationLocation::~StationLocation()", _text + 0xA2B898
	.equiv "nn::pia::transport::Protocol::Protocol()", _text + 0xA2B8EC
	.equiv "FUN_0EBAB944:FID_conflict:nn::pia::transport::Protocol::~Protocol()", _text + 0xA2B944
	.equiv "nn::pia::transport::Protocol::SetPort()", _text + 0xA2B958
	.equiv "nn::pia::transport::ProtocolManager::Finalize()", _text + 0xA2BA78
	.equiv "nn::pia::transport::ProtocolManager::~ProtocolManager()", _text + 0xA2BAF0
	.equiv "nn::pia::transport::ProtocolManager::Initialize()", _text + 0xA2BB4C
	.equiv "nn::pia::transport::ProtocolManager::CleanupProtocols()", _text + 0xA2BDDC
	.equiv "nn::pia::transport::ProtocolManager::UpdateEvent()", _text + 0xA2C00C
	.equiv "<unnamed>::getProtocolTypeBit()", _text + 0xA2C194
	.equiv "nn::pia::transport::ProtocolManager::SearchProtocol()", _text + 0xA2C4AC
	.equiv "nn::pia::transport::StationProtocol::StationProtocol()", _text + 0xA2C50C
	.equiv "nn::pia::transport::StationProtocolReliable::StationProtocolReliable()", _text + 0xA2C568
	.equiv "nn::pia::transport::RttProtocol::RttProtocol()", _text + 0xA2C610
	.equiv "nn::pia::transport::StationManager::CreateInstance()", _text + 0xA2C7B4
	.equiv "nn::pia::transport::StationProtocolManager::StationProtocolManager()", _text + 0xA2C990
	.equiv "nn::pia::transport::StationProtocolManager::CreateInstance()", _text + 0xA2C9D4
	.equiv "FUN_0EBACBB0:nn::pia::transport::StationLocation::StationLocation()", _text + 0xA2CBB0
	.equiv "FUN_0EBACC30:nn::pia::transport::StationConnectionInfo::StationConnectionInfo()", _text + 0xA2CC30
	.equiv "nn::pia::transport::StationConnectionInfoTable::StationConnectionInfoTable()", _text + 0xA2CC8C
	.equiv "nn::pia::transport::StationConnectionInfoTable::CreateInstance()", _text + 0xA2CD08
	.equiv "nn::pia::transport::ResendingMessageManager::ResendingMessageManager()", _text + 0xA2CDFC
	.equiv "nn::pia::transport::ResendingMessageManager::CreateInstance()", _text + 0xA2CE68
	.equiv "nn::pia::transport::IdentificationInfoTable::IdentificationInfoTable()", _text + 0xA2CEDC
	.equiv "nn::pia::transport::IdentificationInfoTable::CreateInstance()", _text + 0xA2CF58
	.equiv "nn::pia::transport::NetworkRttManager::NetworkRttManager()", _text + 0xA2D04C
	.equiv "nn::pia::transport::NetworkRttManager::CreateInstance()", _text + 0xA2D0B4
	.equiv "nn::pia::transport::TransportAnalyzer::Finalize()", _text + 0xA2D648
	.equiv "nn::pia::transport::TransportAnalyzer::~TransportAnalyzer()", _text + 0xA2D688
	.equiv "FUN_0EBAD71C:nn::pia::transport::StationProtocolManager::~StationProtocolManager()", _text + 0xA2D71C
	.equiv "FUN_0EBAD730:nn::pia::transport::StationProtocolManager::DestroyInstance()", _text + 0xA2D730
	.equiv "nn::pia::transport::NetworkRttManager::Finalize()", _text + 0xA2D774
	.equiv "nn::pia::transport::NetworkRttManager::~NetworkRttManager()", _text + 0xA2D7A8
	.equiv "nn::pia::transport::NetworkRttManager::DestroyInstnce()", _text + 0xA2D81C
	.equiv "nn::pia::transport::IdentificationInfoTable::DestroyInstance()", _text + 0xA2D860
	.equiv "nn::pia::transport::ResendingMessageManager::Finalize()", _text + 0xA2D974
	.equiv "nn::pia::transport::ResendingMessageManager::~ResendingMessageManager()", _text + 0xA2DAB0
	.equiv "nn::pia::transport::ResendingMessageManager::DestroyInstance()", _text + 0xA2DAC4
	.equiv "nn::pia::transport::StationConnectionInfoTable::DestroyInstance()", _text + 0xA2DB10
	.equiv "FUN_0EBADB60:nn::pia::transport::StationProtocolManager::~StationProtocolManager()", _text + 0xA2DB60
	.equiv "FUN_0EBADB74:nn::pia::transport::StationProtocolManager::DestroyInstance()", _text + 0xA2DB74
	.equiv "nn::pia::transport::ReliableSlidingWindow::Finalize()", _text + 0xA2DBB8
	.equiv "nn::pia::transport::NetworkRttManager::StatUnit::Clear()", _text + 0xA2DF2C
	.equiv "nn::pia::transport::NetworkRttManager::MeasurementData::Clear()", _text + 0xA2DF44
	.equiv "nn::pia::transport::NetworkRttManager::InitializeImpl()", _text + 0xA2DF84
	.equiv "nn::pia::transport::ReliableSlidingWindow::ReliableSlidingWindow()", _text + 0xA2E04C
	.equiv "nn::pia::transport::ProcessConnectionRequestJob::ProcessConnectionRequestJob()", _text + 0xA2E0D4
	.equiv "nn::pia::transport::SequenceIdController::SequenceIdController()", _text + 0xA2E174
	.equiv "nn::pia::transport::Station::Station()", _text + 0xA2E1B4
	.equiv "nn::pia::transport::ReliableSlidingWindow::Initialize()", _text + 0xA2E26C
	.equiv "nn::pia::transport::StationConnectionInfoTable::Initialize()", _text + 0xA2EB48
	.equiv "nn::pia::transport::ResendingMessageManager::Initialize()", _text + 0xA2ED44
	.equiv "nn::pia::transport::IdentificationInfoTable::Initialize()", _text + 0xA2EFE8
	.equiv "nn::pia::transport::PacketStream::PacketStream()", _text + 0xA2F108
	.equiv "FUN_0EBAF2A0:FID_conflict:nn::pia::transport::SendThreadStream::SendThreadStream()", _text + 0xA2F2A0
	.equiv "nn::pia::transport::PacketStream::Initialize()", _text + 0xA2F4D0
	.equiv "FUN_0EBAF8E4:FID_conflict:nn::pia::transport::SendThreadStream::SendThreadStream()", _text + 0xA2F8E4
	.equiv "nn::pia::transport::ThreadStreamManager::ThreadStreamManager()", _text + 0xA2FA60
	.equiv "nn::pia::transport::PacketAnalyzer::PacketAnalyzer()", _text + 0xA2FC6C
	.equiv "nn::pia::transport::PacketAnalyzer::~PacketAnalyzer()", _text + 0xA2FD68
	.equiv "nn::pia::transport::StationPacketHandler::Initialize()", _text + 0xA2FF28
	.equiv "nn::pia::transport::ConnectionAnalyzer::ConnectionAnalyzer()", _text + 0xA2FF8C
	.equiv "nn::pia::transport::Transport::CreateInstance()", _text + 0xA30470
	.equiv "nn::pia::transport::TransportThreadStream::ChangeState()", _text + 0xA307B4
	.equiv "nn::pia::transport::LatencyEmulator::Clear()", _text + 0xA30FE8
	.equiv "nn::pia::transport::PacketAnalysisData::ClearCounters()", _text + 0xA31390
	.equiv "nn::pia::transport::PacketAnalyzer::ClearPacketAnalysisData()", _text + 0xA313D8
	.equiv "nn::pia::transport::StationLocation::SetStationLocation()", _text + 0xA32074
	.equiv "nn::pia::transport::StationConnectionInfo::SetStationConnectionInfo()", _text + 0xA32104
	.equiv "nn::pia::transport::StationConnectionInfo::operator_=()", _text + 0xA32150
	.equiv "nn::pia::transport::NetworkRttManager::MeasurementData::UpdateTime()", _text + 0xA3218C
	.equiv "nn::pia::transport::NetworkRttManager::MeasurementData::GetAverage()", _text + 0xA32270
	.equiv "nn::pia::transport::NetworkRttManager::GetAverage()", _text + 0xA322B0
	.equiv "FUN_0EBB27FC:nn::nex::PacketBufferManager::GetMaxUnitSize()", _text + 0xA327FC
	.equiv "nn::pia::transport::Transport::OutputStreamUpdateEvent()", _text + 0xA32814
	.equiv "FUN_0EBB287C:nn::pia::transport::StationManager::GetStation()", _text + 0xA3287C
	.equiv "FUN_0EBB2934:nn::pia::transport::StationManager::GetStation()", _text + 0xA32934
	.equiv "nn::pia::transport::PacketStream::Reader::PullAll()", _text + 0xA329B4
	.equiv "nn::pia::transport::PacketAnalysisData::GetIndex()", _text + 0xA32B30
	.equiv "nn::pia::transport::ProtocolMessageReader::ProtocolMessageReader()", _text + 0xA32B6C
	.equiv "nn::pia::transport::ProtocolMessageReader::~ProtocolMessageReader()", _text + 0xA32BC0
	.equiv "nn::pia::transport::PacketAnalysisData::CreateIndex()", _text + 0xA32C14
	.equiv "nn::pia::transport::PacketAnalyzer::UpdatePacketAnalysisData()", _text + 0xA32CC4
	.equiv "FUN_0EBB331C:nn::pia::transport::StationManager::GetStation()", _text + 0xA3331C
	.equiv "nn::pia::transport::ProtocolMessageWriter::Commit()", _text + 0xA336AC
	.equiv "nn::pia::transport::PacketHandler::Commit()", _text + 0xA33884
	.equiv "nn::pia::transport::ProtocolMessageWriter::SetPayload()", _text + 0xA33B78
	.equiv "nn::pia::transport::StationProtocolManager::GetRttProtocol()", _text + 0xA33D5C
	.equiv "FUN_0EBB3DC0:nn::pia::transport::RttProtocol::GetRtt()", _text + 0xA33DC0
	.equiv "nn::pia::transport::Transport::Setting::Setting()", _text + 0xA35048
	.equiv "nn::pia::transport::SequenceIdController::Startup()", _text + 0xA3509C
	.equiv "nn::pia::transport::ReliableSlidingWindow::Cleanup()", _text + 0xA3521C
	.equiv "nn::pia::transport::Station::helperStartupCleanup()", _text + 0xA3524C
	.equiv "nn::pia::transport::Station::Cleanup()", _text + 0xA3549C
	.equiv "FUN_0EBB6E9C:nn::pia::transport::RttProtocol::GetRtt()", _text + 0xA36E9C
	.equiv "nn::pia::transport::ResendingMessageManager::StopResending()", _text + 0xA36FDC
	.equiv "nn::pia::transport::ConnectStationJob::Cleanup()", _text + 0xA37068
	.equiv "nn::pia::transport::DisconnectStationJob::Cleanup()", _text + 0xA37128
	.equiv "nn::pia::transport::ProcessConnectionRequestJob::Cleanup()", _text + 0xA37140
	.equiv "nn::pia::transport::StationConnectionInfoTable::GetStationConnectionInfo()", _text + 0xA37418
	.equiv "nn::pia::transport::StationConnectionInfo::~StationConnectionInfo()", _text + 0xA37514
	.equiv "nn::pia::transport::StationManager::CreateStation()", _text + 0xA376DC
	.equiv "nn::pia::transport::StationManager::isInStationList()", _text + 0xA377DC
	.equiv "nn::pia::transport::StationManager::isInPtrArray()", _text + 0xA37814
	.equiv "nn::pia::transport::UnreliableProtocol::UnreliableProtocol()", _text + 0xA37B18
	.equiv "nn::pia::transport::UnreliableProtocol::Finalize()", _text + 0xA37BA4
	.equiv "nn::pia::transport::PacketHandler::GetIterator()", _text + 0xA37CD8
	.equiv "nn::pia::transport::PacketHandler::Iterator::GetMessageReader()", _text + 0xA37D24
	.equiv "nn::pia::transport::UnreliableProtocol::IsInCommunication()", _text + 0xA38328
	.equiv "nn::pia::transport::UnreliableProtocol::Send()", _text + 0xA3895C
	.equiv "nn::pia::transport::ReliableProtocol::ReliableProtocol()", _text + 0xA38C44
	.equiv "nn::pia::transport::ReliableProtocol::Finalize()", _text + 0xA38CFC
	.equiv "nn::pia::transport::ReliableProtocol::Initialize()", _text + 0xA38DEC
	.equiv "nn::pia::transport::ReliableSlidingWindow::IsInCommunication()", _text + 0xA39014
	.equiv "nn::pia::transport::ReliableProtocol::GetSlidingWindow()", _text + 0xA3909C
	.equiv "nn::pia::transport::ReliableSlidingWindow::ReceiveBuffer::Assign()", _text + 0xA390BC
	.equiv "nn::pia::transport::ReliableSlidingWindow::AnalyzeProtocolMessage()", _text + 0xA39134
	.equiv "nn::pia::transport::ReliableProtocol::Dispatch()", _text + 0xA39924
	.equiv "nn::pia::transport::ReliableSlidingWindow::StartupCommon()", _text + 0xA39BA8
	.equiv "nn::pia::transport::ReliableSlidingWindow::Startup()", _text + 0xA39C30
	.equiv "nn::pia::transport::ReliableSlidingWindow::SendBuffer::Assign()", _text + 0xA39EAC
	.equiv "FUN_0EBBA6F0:nn::pia::transport::StationLocation::StationLocation()", _text + 0xA3A6F0
	.equiv "nn::pia::transport::StationLocation::operator_=()", _text + 0xA3A75C
	.equiv "nn::pia::transport::StationLocation::operator_==()", _text + 0xA3A798
	.equiv "nn::pia::transport::StationLocation::GetSerializedSize()", _text + 0xA3A8A8
	.equiv "FUN_0EBBABC0:nn::pia::transport::StationConnectionInfo::StationConnectionInfo()", _text + 0xA3ABC0
	.equiv "nn::pia::transport::StationConnectionInfo::operator_==()", _text + 0xA3AC34
	.equiv "nn::pia::transport::StationConnectionInfo::GetSerializedSize()", _text + 0xA3ACB0
	.equiv "nn::pia::transport::ConnectStationJob::Startup()", _text + 0xA3AFCC
	.equiv "nn::pia::transport::ConnectStationJob::CheckContextCallCanncelled()", _text + 0xA3B080
	.equiv "nn::pia::transport::StationProtocol::GetConnectionRequestDataSize()", _text + 0xA3B0F8
	.equiv "nn::pia::transport::StationProtocol::MakeConnectionRequestData()", _text + 0xA3B134
	.equiv "nn::pia::transport::ResendingMessageManager::SetSendMessage()", _text + 0xA3B1BC
	.equiv "nn::pia::transport::ResendingMessageManager::CheckNowResending()", _text + 0xA3B904
	.equiv "nn::pia::transport::ConnectStationJob::TimeOutCheck()", _text + 0xA3B944
	.equiv "nn::pia::transport::ConnectStationJob::SendRelayConnectionRequestMessage()", _text + 0xA3BFA8
	.equiv "nn::pia::transport::StationProtocolReliable::getSlidingWindow()", _text + 0xA3C418
	.equiv "nn::pia::transport::StationProtocolReliable::getStationAddress()", _text + 0xA3C940
	.equiv "nn::pia::transport::ResendingMessageManager::ExtractAckIdFromMessage()", _text + 0xA3CB48
	.equiv "nn::pia::transport::StationConnectionInfoTable::GetStation()", _text + 0xA3CB7C
	.equiv "nn::pia::transport::StationConnectionInfoTable::AddToTable()", _text + 0xA3CFC0
	.equiv "nn::pia::transport::StationConnectionInfoTable::EraseFromTable()", _text + 0xA3D670
	.equiv "nn::pia::transport::RelayRouteManager::CalcRelayNumTable()", _text + 0xA3E09C
	.equiv "nn::pia::transport::RelayRouteManager::SearchRefugeRelayRoute()", _text + 0xA3E160
	.equiv "nn::pia::transport::StationProtocol::MakeConnectionResponseData()", _text + 0xA3EC30
	.equiv "nn::pia::transport::StationConnectionInfoTable::ClearTable()", _text + 0xA3EEC8
	.equiv "nn::pia::transport::StationConnectionInfoTable::~StationConnectionInfoTable()", _text + 0xA3EF18
	.equiv "nn::pia::transport::DisconnectStationJob::Startup()", _text + 0xA3F0D0
	.equiv "nn::pia::transport::IdentificationInfoTable::EraseFromTable()", _text + 0xA3F51C
	.equiv "nn::pia::transport::IdentificationInfoTable::ClearTable()", _text + 0xA3FB20
	.equiv "nn::pia::transport::ProcessConnectionRequestJob::TimeOutCheck()", _text + 0xA3FDF8
	.equiv "nn::pia::transport::RelayRouteManager::SetRelayRoute()", _text + 0xA40018
	.equiv "nn::pia::transport::LatencyEmulator::getLatency()", _text + 0xA43308
	.equiv "nn::pia::transport::LatencyEmulator::calcLatency()", _text + 0xA43368
	.equiv "nn::pia::transport::NetworkRttManager::StatUnit::AddValue()", _text + 0xA43988
	.equiv "nn::pia::transport::NetworkRttManager::MeasurementData::AddValue()", _text + 0xA439C8
	.equiv "nn::pia::transport::ProtocolMessageReader::Clear()", _text + 0xA43B20
	.equiv "nn::pia::transport::PacketStream::Accessor::Get()", _text + 0xA43B90
	.equiv "nn::pia::transport::PacketStream::Writer::AssignableNum()", _text + 0xA43BD0
	.equiv "nn::pia::transport::PacketStream::Writer::Assign()", _text + 0xA43BF8
	.equiv "nn::pia::transport::ProtocolMessageWriter::Reset()", _text + 0xA43DC4
	.equiv "nn::pia::transport::ProtocolMessageWriter::AddMessageBuffer()", _text + 0xA43DEC
	.equiv "nn::pia::transport::PacketHandler::AssignPacketPayload()", _text + 0xA43F14
	.equiv "nn::pia::transport::PacketHandler::AssignPacket()", _text + 0xA441A8
	.equiv "nn::pia::transport::PacketHandler::ReserveMessageWriter()", _text + 0xA44214
	.equiv "nn::pia::transport::TransportThreadStream::isDropPacket()", _text + 0xA446B8
	.equiv "nn::pia::transport::StationProtocolManager::GetStationProtocolReliable()", _text + 0xA449CC
	.equiv "nn::pia::transport::RttCalculator::SetLastRequestedTime()", _text + 0xA44B44
	.equiv "nn::pia::transport::RttCalculator::Update()", _text + 0xA44B58
	.equiv "nn::pia::transport::RttProtocol::request()", _text + 0xA44FC8
	.equiv "nn::pia::transport::StationPacketHandler::GetParticipatingStationBitmap()", _text + 0xA459F8
	.equiv "nn::pia::transport::StationPacketHandler::AssignAllMessage()", _text + 0xA45A60
	.equiv "nn::pia::transport::StationPacketHandler::GetStationAddress()", _text + 0xA45C0C
	.equiv "nn::pia::transport::StationPacketHandler::AssignRelayStationMessage()", _text + 0xA45C2C
	.equiv "nn::pia::transport::StationPacketHandler::GetStationKey()", _text + 0xA45E20
	.equiv "nn::pia::transport::StationPacketHandler::AssignRelayNodeMessage()", _text + 0xA45E40
	.equiv "nn::pia::transport::StationPacketHandler::AssignDirectMessage()", _text + 0xA462C0
	.equiv "nn::pia::transport::StationPacketHandler::AssignMasterMessage()", _text + 0xA467D0
	.equiv "nn::pia::transport::EndSetup()", _text + 0xA47054
	.equiv "nn::pia::transport::BeginSetup()", _text + 0xA47174
	.equiv "FUN_0EBC9900:void_nn::pia::transport::NetworkRttManager::DataBuffer::Finalize()", _text + 0xA49900
	.equiv "FUN_0EBC99B0:void_nn::pia::transport::NetworkRttManager::DataBuffer::Finalize()", _text + 0xA499B0
	.equiv "FUN_0EBC9A60:void_nn::pia::transport::ReliableSlidingWindow::Buffer::Finalize()", _text + 0xA49A60
	.equiv "FUN_0EBC9AD4:void_nn::pia::transport::ReliableSlidingWindow::Buffer::Finalize()", _text + 0xA49AD4
	.equiv "FUN_0EBC9D4C:FID_conflict:nn::pia::transport::ReliableSlidingWindow::Buffer::Buffer()", _text + 0xA49D4C
	.equiv "FUN_0EBC9D98:FID_conflict:nn::pia::transport::ReliableSlidingWindow::Buffer::Buffer()", _text + 0xA49D98
	.equiv "FUN_0EBC9DE4:nn::Result_nn::pia::transport::ReliableSlidingWindow::Buffer::Initialize()", _text + 0xA49DE4
	.equiv "FUN_0EBC9EE8:nn::Result_nn::pia::transport::ReliableSlidingWindow::Buffer::Initialize()", _text + 0xA49EE8
	.equiv "FUN_0EBC9FEC:nn::pia::transport::NetworkRttManager::DataBuffer::Get()", _text + 0xA49FEC
	.equiv "nn::pia::transport::ReliableSlidingWindow::Buffer::GetData()", _text + 0xA4A070
	.equiv "void_nn::pia::transport::ReliableSlidingWindow::Buffer::Withdraw()", _text + 0xA4A0B8
	.equiv "FUN_0EBCA0F4:FID_conflict:void_nn::pia::transport::ReliableSlidingWindow::Buffer::Clear()", _text + 0xA4A0F4
	.equiv "FUN_0EBCA10C:FID_conflict:void_nn::pia::transport::ReliableSlidingWindow::Buffer::Clear()", _text + 0xA4A10C
	.equiv "FUN_0EBCA178:nn::pia::transport::NetworkRttManager::DataBuffer::Get()", _text + 0xA4A178
	.equiv "nn::pia::transport::NetworkRttManager::DataBuffer::Assign()", _text + 0xA4A414
	.equiv "nn::pia::chat::BeginSetup()", _text + 0xA4B59C
	.equiv "nn::pia::chat::EndSetup()", _text + 0xA4B644
	.equiv "nn::pia::chat::Finalize()", _text + 0xA4B6F8
	.equiv "nn::pia::chat::VoiceProtocol::setupProtocols()", _text + 0xA4BBC0
	.equiv "nn::pia::chat::VoiceProtocol::Finalize()", _text + 0xA4C420
	.equiv "nn::pia::chat::VoiceProtocol::AddConferenceClient()", _text + 0xA4C8B4
	.equiv "nn::pia::chat::VoiceProtocol::RemoveConferenceClient()", _text + 0xA4CAE8
	.equiv "FUN_0EBCCC9C:thunk_FUN_0ebd3be0", _text + 0xA4CC9C
	.equiv "FUN_0EBCCCA0:thunk_FUN_0ebd3bec", _text + 0xA4CCA0
	.equiv "FUN_0EBCCCA4:VCT_ResetVAD()", _text + 0xA4CCA4
	.equiv "nn::pia::chat::HandsFree::HandsFree()", _text + 0xA4D478
	.equiv "<unnamed>::isValidEcMode()", _text + 0xA4D5A4
	.equiv "<unnamed>::isValidNsLevel()", _text + 0xA4D5BC
	.equiv "<unnamed>::isValidAgcLevel()", _text + 0xA4D5D4
	.equiv "<unnamed>::updateFunctionalBits()", _text + 0xA4D5EC
	.equiv "VCTi_CreateSession()", _text + 0xA4E148
	.equiv "VCT_DeleteSession()", _text + 0xA4E29C
	.equiv "VCT_AddConferenceClient()", _text + 0xA4E460
	.equiv "VCT_RemoveConferenceClient()", _text + 0xA4E65C
	.equiv "vct_finish_ssp()", _text + 0xA4E860
	.equiv "FUN_0EBCE8CC:VCT_ResetVAD()", _text + 0xA4E8CC
	.equiv "VCTi_GetVADStatus()", _text + 0xA4E918
	.equiv "FUN_0EBCF260:thunk_FUN_0ebd3be0", _text + 0xA4F260
	.equiv "FUN_0EBCF264:thunk_FUN_0ebd3bec", _text + 0xA4F264
	.equiv "VCT_GetAudioScale()", _text + 0xA4F268
	.equiv "TMC_HF_FUNC_045", _text + 0xA4F2B0
	.equiv "TMC_HF_FUNC_046", _text + 0xA4F380
	.equiv "TMC_HF_FUNC_047", _text + 0xA4F3E4
	.equiv "TMC_HF_FUNC_048", _text + 0xA4F414
	.equiv "TMC_HF_FUNC_049", _text + 0xA4F444
	.equiv "TMC_HF_FUNC_050", _text + 0xA4F480
	.equiv "TMC_HF_FUNC_051", _text + 0xA4F4AC
	.equiv "TMC_HF_FUNC_052", _text + 0xA4F4E4
	.equiv "TMC_HF_FUNC_053", _text + 0xA4F510
	.equiv "TMC_HF_Init", _text + 0xA4F54C
	.equiv "TMC_HF_Proc", _text + 0xA4F750
	.equiv "TMC_HF_Close", _text + 0xA4FF0C
	.equiv "TMC_HF_FUNC_009", _text + 0xA50460
	.equiv "TMC_HF_FUNC_010", _text + 0xA504B8
	.equiv "TMC_HF_FUNC_002", _text + 0xA512E0
	.equiv "TMC_HF_FUNC_006", _text + 0xA51758
	.equiv "TMC_HF_FUNC_004", _text + 0xA51840
	.equiv "TMC_HF_FUNC_005", _text + 0xA5196C
	.equiv "VCT_StartStreaming()", _text + 0xA51E90
	.equiv "VCT_StopStreaming()", _text + 0xA521F8
	.equiv "VCT_SendAudioEx()", _text + 0xA52324
	.equiv "VCT_ReceiveAudio()", _text + 0xA5289C
	.equiv "vct_prepare_send_buffer()", _text + 0xA52A4C
	.equiv "VCTi_GetStreamFromCid()", _text + 0xA530F4
	.equiv "VCT_GetQualityAlert()", _text + 0xA53124
	.equiv "VCT_IsValidCodec()", _text + 0xA531E4
	.equiv "VCT_IsValidSpareCodec()", _text + 0xA53204
	.equiv "vct_handle_audio()", _text + 0xA53214
	.equiv "vct_decode_audio_buffer()", _text + 0xA53634
	.equiv "vct_flush_send_buffer()", _text + 0xA53754
	.equiv "vct_get_audio_stream()", _text + 0xA53B18
	.equiv "vct_get_spare_packet_size()", _text + 0xA53B3C
	.equiv "VCTi_GetAudioFrameTicks()", _text + 0xA53BF8
	.equiv "vct_recover_drop_using_spare()", _text + 0xA540A4
	.equiv "vct_filter_fade_in()", _text + 0xA5416C
	.equiv "vct_filter_fade_rate()", _text + 0xA541C0
	.equiv "vct_recover_drop_fade()", _text + 0xA54250
	.equiv "vct_recover_drop_stream()", _text + 0xA544B4
	.equiv "VCTi_SetQualityAlertClearStartTick()", _text + 0xA545CC
	.equiv "VCT_GetQualityAlertStatus()", _text + 0xA545DC
	.equiv "nn::pia::chat::Decoder::GetPacket()", _text + 0xA546AC
	.equiv "nn::pia::chat::Decoder::RemovePacket()", _text + 0xA5474C
	.equiv "nn::pia::chat::Decoder::Flush()", _text + 0xA54840
	.equiv "nn::pia::chat::Decoder::FlushAll()", _text + 0xA548CC
	.equiv "nn::pia::chat::Decoder::CountQueue()", _text + 0xA54960
	.equiv "nn::pia::chat::Decoder::Insert()", _text + 0xA549B8
	.equiv "nn::pia::chat::Decoder::Top()", _text + 0xA54A8C
	.equiv "HPFFilter()", _text + 0xA54AF0
	.equiv "HPFFilter2()", _text + 0xA54BD4
	.equiv "vct_encode_g711_ulaw()", _text + 0xA54C78
	.equiv "vct_encode_8bit_raw()", _text + 0xA54DA4
	.equiv "vct_decode_8bit_raw()", _text + 0xA54DD0
	.equiv "vct_mix_audio()", _text + 0xA54E00
	.equiv "vct_init_audio_queue()", _text + 0xA54EFC
	.equiv "<unnamed>::flushQueue()", _text + 0xA54F60
	.equiv "vct_flush_audio_queue()", _text + 0xA54FF4
	.equiv "vct_flush_all_audio_queue()", _text + 0xA55040
	.equiv "nn::pia::chat::AudioStream::InitEx()", _text + 0xA55450
	.equiv "nn::pia::chat::AudioStream::Init()", _text + 0xA5552C
	.equiv "nn::pia::chat::AudioStream::Reset()", _text + 0xA55578
	.equiv "nn::pia::chat::AudioStream::SavePreviousBuffer()", _text + 0xA555C0
	.equiv "nn::pia::chat::AudioStream::InitSequence()", _text + 0xA55610
	.equiv "nn::pia::chat::AudioStream::UpdateSequence()", _text + 0xA55630
	.equiv "nn::pia::chat::AudioStream::CalcJitterAndSkew()", _text + 0xA55718
	.equiv "nn::pia::chat::AudioStream::UpdateSkew()", _text + 0xA561D4
	.equiv "vct_cleanup_packet_buffer()", _text + 0xA56570
	.equiv "vct_alloc_packet_buffer()", _text + 0xA565BC
	.equiv "vct_free_packet_buffer()", _text + 0xA56620
	.equiv "vct_dump_packet_buffer()", _text + 0xA566E8
	.equiv "TMC_HF_FUNC_003", _text + 0xA56794
	.equiv "TMC_HF_FUNC_015", _text + 0xA57948
	.equiv "TMC_HF_FUNC_030", _text + 0xA57D84
	.equiv "FUN_0EBD7DE0:FID_conflict:TMC_HF_FUNC_038", _text + 0xA57DE0
	.equiv "TMC_HF_FUNC_032", _text + 0xA580A8
	.equiv "TMC_HF_FUNC_033", _text + 0xA58190
	.equiv "TMC_HF_FUNC_034", _text + 0xA581C0
	.equiv "TMC_HF_FUNC_035", _text + 0xA58394
	.equiv "TMC_HF_FUNC_036", _text + 0xA58484
	.equiv "TMC_HF_FUNC_037", _text + 0xA584C0
	.equiv "FUN_0EBD851C:FID_conflict:TMC_HF_FUNC_038", _text + 0xA5851C
	.equiv "TMC_HF_FUNC_039", _text + 0xA587E4
	.equiv "TMC_HF_FUNC_040", _text + 0xA588CC
	.equiv "TMC_HF_FUNC_041", _text + 0xA588FC
	.equiv "TMC_HF_FUNC_042", _text + 0xA58AD0
	.equiv "TMC_HF_FUNC_043", _text + 0xA58BC0
	.equiv "nn::pia::chat::Adpcm::Decode()", _text + 0xA59814
	.equiv "nn::pia::chat::Adpcm::Encode()", _text + 0xA5A718
	.equiv "elink::Event::_emitEffect()", _text + 0xA5A8FC
	.equiv "elink::Event::activate()", _text + 0xA5AB80
	.equiv "elink::Event::_safeKill()", _text + 0xA5AD38
	.equiv "elink::Event::_calcMtx()", _text + 0xA5ADC4
	.equiv "elink::Event::_applyColorAlpha()", _text + 0xA5B594
	.equiv "elink::Event::sleep()", _text + 0xA5BBB0
	.equiv "FUN_0EBDBC48:elink::Event::setPos()", _text + 0xA5BC48
	.equiv "FUN_0EBDBD2C:elink::Event::setPos()", _text + 0xA5BD2C
	.equiv "FUN_0EBDBE60:elink::Event::setMtx()", _text + 0xA5BE60
	.equiv "FUN_0EBDBF30:elink::Event::setMtx()", _text + 0xA5BF30
	.equiv "FUN_0EBDC034:elink::Event::setMtx()", _text + 0xA5C034
	.equiv "elink::PropertyTable::PropertyTable()", _text + 0xA5C16C
	.equiv "elink::PropertyTable::entry()", _text + 0xA5C1E4
	.equiv "elink::PropertyTable::getId()", _text + 0xA5C218
	.equiv "elink::System::System()", _text + 0xA5C280
	.equiv "elink::System::searchUser()", _text + 0xA5C43C
	.equiv "elink::System::createUserInstance()", _text + 0xA5C558
	.equiv "elink::System::loadResource()", _text + 0xA5C740
	.equiv "elink::System::allocEvent()", _text + 0xA5C750
	.equiv "elink::System::addError()", _text + 0xA5C7B0
	.equiv "elink::System::setErrorDispFrame()", _text + 0xA5C8CC
	.equiv "elink::User::User()", _text + 0xA5C960
	.equiv "elink::User::setRomBin()", _text + 0xA5CBE4
	.equiv "elink::UserInstance::reset()", _text + 0xA5CCA0
	.equiv "elink::UserInstance::calc()", _text + 0xA5CD48
	.equiv "elink::UserInstance::setActionFrame()", _text + 0xA5CE34
	.equiv "elink::UserInstance::sleep()", _text + 0xA5CE48
	.equiv "elink::UserInstance::_postSetModelConnection()", _text + 0xA5D084
	.equiv "elink::UserInstance::_preSetModelConnection()", _text + 0xA5D2D8
	.equiv "elink::UserInstance::setupResource()", _text + 0xA5D34C
	.equiv "FUN_0EBDD440:elink::UserInstance::searchEffect()", _text + 0xA5D440
	.equiv "FUN_0EBDD48C:elink::UserInstance::searchEffect()", _text + 0xA5D48C
	.equiv "elink::UserInstance::emitDirect()", _text + 0xA5D4D8
	.equiv "elink::UserInstance::searchAndEmit()", _text + 0xA5D6B4
	.equiv "elink::UserInstance::killAllEffect()", _text + 0xA5D720
	.equiv "elink::UserInstance::UserInstance()", _text + 0xA5D7E0
	.equiv "elink::UserInstance::CreateArg::CreateArg()", _text + 0xA5D988
	.equiv "elink::UserResource::UserResource()", _text + 0xA5DA6C
	.equiv "elink::UserResource::update()", _text + 0xA5DAD0
	.equiv "FUN_0EBDDF68:elink::UserResource::searchEffectCallTable()", _text + 0xA5DF68
	.equiv "FUN_0EBDDFEC:elink::UserResource::searchEffectCallTable()", _text + 0xA5DFEC
	.equiv "elink::UserResource::propertyMatching()", _text + 0xA5E020
	.equiv "elink::UserResource::searchAction()", _text + 0xA5E198
	.equiv "elink::ResourceBuffer::ResourceBuffer()", _text + 0xA5E240
	.equiv "elink::ResourceBuffer::_removeImpl()", _text + 0xA5E328
	.equiv "elink::ResourceBuffer::search()", _text + 0xA5E3A8
	.equiv "elink::ActionCtrl::_changeActionImpl()", _text + 0xA5E584
	.equiv "elink::ActionCtrl::calc()", _text + 0xA5EA58
	.equiv "elink::ActionCtrl::kill()", _text + 0xA5EC10
	.equiv "elink::ErrorMgr::add()", _text + 0xA5ED2C
	.equiv "slink::System::System()", _text + 0xA5F1AC
	.equiv "slink::System::searchUser()", _text + 0xA5F34C
	.equiv "slink::System::createUserInstance()", _text + 0xA5F468
	.equiv "slink::System::removeUserInstance()", _text + 0xA5F598
	.equiv "slink::System::loadResource()", _text + 0xA5F65C
	.equiv "slink::System::allocEvent()", _text + 0xA5F664
	.equiv "slink::System::addError()", _text + 0xA5F6C4
	.equiv "slink::System::getSoundArchive()", _text + 0xA5F7E0
	.equiv "slink::System::getLabelId()", _text + 0xA5F86C
	.equiv "slink::ErrorMgr::add()", _text + 0xA5F978
	.equiv "slink::User::User()", _text + 0xA5FE38
	.equiv "slink::UserInstance::destroy()", _text + 0xA60120
	.equiv "slink::UserInstance::reset()", _text + 0xA601DC
	.equiv "slink::UserInstance::setActionFrame()", _text + 0xA603E8
	.equiv "FUN_0EBE03FC:slink::UserInstance::searchSound()", _text + 0xA603FC
	.equiv "FUN_0EBE0444:slink::UserInstance::searchSound()", _text + 0xA60444
	.equiv "slink::UserInstance::play()", _text + 0xA6048C
	.equiv "slink::UserInstance::hold()", _text + 0xA606B0
	.equiv "slink::UserInstance::searchAndPlay()", _text + 0xA6082C
	.equiv "slink::UserInstance::searchAndHold()", _text + 0xA608B8
	.equiv "slink::UserInstance::stopAction()", _text + 0xA609BC
	.equiv "slink::UserInstance::stopChangeAction()", _text + 0xA60ACC
	.equiv "slink::UserInstance::setupBonePtr()", _text + 0xA60D88
	.equiv "slink::UserInstance::setupResource()", _text + 0xA60F68
	.equiv "slink::UserInstance::getUserParams()", _text + 0xA60FCC
	.equiv "slink::UserInstance::UserInstance()", _text + 0xA60FDC
	.equiv "slink::UserInstance::CreateArg::CreateArg()", _text + 0xA61194
	.equiv "slink::UserResource::UserResource()", _text + 0xA614C4
	.equiv "FUN_0EBE1540:slink::UserResource::searchSound()", _text + 0xA61540
	.equiv "FUN_0EBE15C4:slink::UserResource::searchSound()", _text + 0xA615C4
	.equiv "slink::UserResource::propertyMatching()", _text + 0xA615F8
	.equiv "slink::UserResource::searchAction()", _text + 0xA617CC
	.equiv "slink::UserResource::getFollowBoneName()", _text + 0xA61850
	.equiv "slink::UserResource::getCountBoneFollowSound()", _text + 0xA61880
	.equiv "slink::UserResource::setupSoundID()", _text + 0xA61918
	.equiv "slink::Locator::getInitVolume()", _text + 0xA61A38
	.equiv "slink::Locator::getInitPitch()", _text + 0xA61C08
	.equiv "slink::Locator::getInitLpf()", _text + 0xA61DD8
	.equiv "slink::Locator::getInitPan()", _text + 0xA61FA8
	.equiv "slink::Locator::getInitSurroundPan()", _text + 0xA6219C
	.equiv "slink::Locator::getDelay()", _text + 0xA623A4
	.equiv "slink::Locator::isHold()", _text + 0xA6252C
	.equiv "slink::Locator::setupSoundLabelId()", _text + 0xA62578
	.equiv "slink::PropertyTable::getId()", _text + 0xA625F0
	.equiv "slink::ResourceBuffer::ResourceBuffer()", _text + 0xA6265C
	.equiv "slink::ResourceBuffer::getUserResource()", _text + 0xA62744
	.equiv "slink::ActionCtrl::executeFirstFrame()", _text + 0xA62930
	.equiv "slink::ActionCtrl::calc()", _text + 0xA62BC8
	.equiv "slink::Event::activate()", _text + 0xA62E10
	.equiv "FUN_0EBE36D0:slink::Event::stop()", _text + 0xA636D0
	.equiv "FUN_0EBE3750:slink::Event::stop()", _text + 0xA63750
	.equiv "FUN_0EBE3764:slink::Event::stop()", _text + 0xA63764
	.equiv "slink::Event::invalidate()", _text + 0xA63784
	.equiv "slink::Event::resetAction()", _text + 0xA63810
	.equiv "mw::igr::Recorder::New()", _text + 0xA6388C
	.equiv "mw::igr::NewFile()", _text + 0xA63C88
	.equiv "VerifyLanguageRange..obj.5Cghs.5Ccafe.5Clib.5Csci.5CNDEBUG.5CsciCafeSettings.", _text + 0xA63DE8
	.equiv "VerifyCountryRange..obj.5Cghs.5Ccafe.5Clib.5Csci.5CNDEBUG.5CsciCafeSettings.", _text + 0xA63E14
	.equiv "SCIGetCafeCountry", _text + 0xA63F30
	.equiv "SCIGetAreaInfo", _text + 0xA64C40
	.equiv "SCIGetCountryCodeA2", _text + 0xA6512C
	.equiv "FUN_0EBE52F8:SCIGetSystemProdArea", _text + 0xA652F8
	.equiv "FUN_0EBE5348:SCIGetSystemProdArea", _text + 0xA65348
	.equiv "JPEGSetEncodeParams..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg.", _text + 0xA656BC
	.equiv "JPEGEncEncodeSurface", _text + 0xA65720
	.equiv "JPEGSetDecodeParams..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg.", _text + 0xA659D8
	.equiv "JPEGDecDecodeImage", _text + 0xA65A00
	.equiv "checkJpegDataSOI..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA65D40
	.equiv "validateMarkerCode..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA65D94
	.equiv "getSOFInfo..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA6602C
	.equiv "getSOSInfo..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA662A8
	.equiv "getHuffTableNum..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA66554
	.equiv "getBlockSize..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA66718
	.equiv "getDerivedTableNum..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA66834
	.equiv "getQuantTableNum..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA66A20
	.equiv "calcComponentInfo..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA66BA4
	.equiv "getJpegType..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA66E08
	.equiv "validateJpegHeader..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA66EC8
	.equiv "setOutColorInfo..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA66F1C
	.equiv "readJpegHeader..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA672C8
	.equiv "getWorkSizeSmallPerma..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA67470
	.equiv "getWorkSizeSmallImage..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA674F8
	.equiv "getWorkSizeFlexLarge..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA676B8
	.equiv "getWorkSizeJpegTemp..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA67860
	.equiv "setJpegHeader..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA67874
	.equiv "getWorkSizeFlexLargeEnc..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjpeg_info.", _text + 0xA678DC
	.equiv "JPEGDecGetImageInfo", _text + 0xA67974
	.equiv "JPEGEncGetSurfaceInfo", _text + 0xA67ABC
	.equiv "JPEGUtilRoundUpDiv", _text + 0xA67B98
	.equiv "JPEGUtilRoundUp", _text + 0xA67BA8
	.equiv "JPEGUtilGetScaleParam", _text + 0xA67BC4
	.equiv "JPEGUtilSampleRows", _text + 0xA67C14
	.equiv "JPEGCreateCompress", _text + 0xA67C98
	.equiv "FUN_0EBE7DE0:JPEGDestroy", _text + 0xA67DE0
	.equiv "JPEGSuppressTables", _text + 0xA67DE4
	.equiv "JPEGFinishCompress", _text + 0xA67E4C
	.equiv "JPEGStartCompress", _text + 0xA67FF0
	.equiv "JPEGWriteScanlines", _text + 0xA680C8
	.equiv "JPEGInitCompressMaster", _text + 0xA68200
	.equiv "process_data_simple_main..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmainct.", _text + 0xA682F0
	.equiv "JPEGInitComMainController", _text + 0xA68460
	.equiv "emit_byte..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA6855C
	.equiv "emit_marker..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA685DC
	.equiv "emit_2bytes..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA68624
	.equiv "emit_dqt..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA6866C
	.equiv "emit_dht..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA687E4
	.equiv "emit_dac..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA688F8
	.equiv "emit_dri..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA68A60
	.equiv "emit_sof..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA68AA8
	.equiv "emit_sos..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA68BC0
	.equiv "emit_pseudo_sos..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA68CD8
	.equiv "emit_jfif_app0..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA68D4C
	.equiv "emit_adobe_app14..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA68E18
	.equiv "write_frame_header..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmarker.", _text + 0xA68FD8
	.equiv "JPEGInitMarkerWriter", _text + 0xA6936C
	.equiv "JPEGCalcJpegDimensions", _text + 0xA6940C
	.equiv "jpeg_calc_trans_dimensions..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmaster.", _text + 0xA6942C
	.equiv "initial_setup..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmaster.", _text + 0xA69490
	.equiv "select_scan_parameters..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmaster.", _text + 0xA698B4
	.equiv "per_scan_setup..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcmaster.", _text + 0xA69968
	.equiv "JPEGInitComMasterControl", _text + 0xA69F7C
	.equiv "JPEGAbort", _text + 0xA6A0E0
	.equiv "FUN_0EBEA160:JPEGDestroy", _text + 0xA6A160
	.equiv "JPEGAllocQuantTable", _text + 0xA6A1B0
	.equiv "JPEGAllocHuffTable", _text + 0xA6A1EC
	.equiv "JPEGAddQuantTable", _text + 0xA6A228
	.equiv "JPEGSetLinearQuality", _text + 0xA6A35C
	.equiv "JPEGQualityScaling", _text + 0xA6A3D0
	.equiv "JPEGSetQuality", _text + 0xA6A410
	.equiv "add_huff_table..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcparam.", _text + 0xA6A444
	.equiv "std_huff_tables..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcparam.", _text + 0xA6A500
	.equiv "JPEGSetColorspace", _text + 0xA6A594
	.equiv "JPEGDefaultColorspace", _text + 0xA6A950
	.equiv "JPEGSetDefaults", _text + 0xA6A9BC
	.equiv "expand_bottom_edge..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcprepct.", _text + 0xA6AB68
	.equiv "pre_process_data..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcprepct.", _text + 0xA6ABD0
	.equiv "pre_process_context..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcprepct.", _text + 0xA6ADC0
	.equiv "create_context_buffer..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcprepct.", _text + 0xA6AFF4
	.equiv "JPEGInitComPrepController", _text + 0xA6B120
	.equiv "expand_right_edge..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcsample.", _text + 0xA6B250
	.equiv "sep_downsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcsample.", _text + 0xA6B294
	.equiv "int_downsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcsample.", _text + 0xA6B334
	.equiv "h2v2_downsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcsample.", _text + 0xA6B588
	.equiv "h2v2_smooth_downsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcsample.", _text + 0xA6B668
	.equiv "fullsize_smooth_downsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcsample.", _text + 0xA6B8C8
	.equiv "JPEGInitDownsampler", _text + 0xA6BA38
	.equiv "JPEGCreateDecompress", _text + 0xA6BCB4
	.equiv "FUN_0EBEBDDC:JPEGDestroy", _text + 0xA6BDDC
	.equiv "default_decompress_parms..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdapimin.", _text + 0xA6BDE0
	.equiv "JPEGConsumeInput", _text + 0xA6C1BC
	.equiv "JPEGReadHeader", _text + 0xA6C2F8
	.equiv "JPEGFinishDecompress", _text + 0xA6C3AC
	.equiv "output_pass_setup..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdapistd.", _text + 0xA6C4FC
	.equiv "JPEGStartDecompress", _text + 0xA6C654
	.equiv "JPEGReadScanlines", _text + 0xA6C7C4
	.equiv "JPEGMemDest", _text + 0xA6C948
	.equiv "JPEGMemSrc", _text + 0xA6CB6C
	.equiv "JPEGCoreOutputDimensions", _text + 0xA6CC44
	.equiv "initial_setup..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdinput.", _text + 0xA6CCE8
	.equiv "per_scan_setup..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdinput.", _text + 0xA6D458
	.equiv "latch_quant_tables..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdinput.", _text + 0xA6D660
	.equiv "start_input_pass..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdinput.", _text + 0xA6D750
	.equiv "JPEGInitInputController", _text + 0xA6D9BC
	.equiv "get_soi..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6DA44
	.equiv "get_sof..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6DB18
	.equiv "get_sos..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6DF64
	.equiv "get_dac..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6E320
	.equiv "get_dht..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6E518
	.equiv "get_dqt..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6E89C
	.equiv "get_dri..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6ED34
	.equiv "examine_app0..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6EEB0
	.equiv "examine_app14..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6F194
	.equiv "get_interesting_appn..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6F294
	.equiv "skip_variable..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6F464
	.equiv "next_marker..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6F578
	.equiv "first_marker..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6F6F0
	.equiv "reset_marker_reader..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmarker.", _text + 0xA6FEAC
	.equiv "JPEGInitMarkerReader", _text + 0xA6FED4
	.equiv "use_merged_upsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmaster.", _text + 0xA6FF9C
	.equiv "JPEGCalcOutputDimensions", _text + 0xA70090
	.equiv "prepare_range_limit_table..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmaster.", _text + 0xA702E4
	.equiv "master_selection..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmaster.", _text + 0xA70390
	.equiv "JPEGInitMasterDecompress", _text + 0xA7098C
	.equiv "build_ycc_rgb_table..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmerge.", _text + 0xA709F8
	.equiv "h2v1_merged_upsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmerge.", _text + 0xA70D14
	.equiv "h2v2_merged_upsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmerge.", _text + 0xA70E68
	.equiv "JPEGInitMergedUpsampler", _text + 0xA71054
	.equiv "post_process_prepass..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdpostct.", _text + 0xA711FC
	.equiv "post_process_2pass..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdpostct.", _text + 0xA71304
	.equiv "JPEGInitDecPostController", _text + 0xA71558
	.equiv "sep_upsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdsample.", _text + 0xA71680
	.equiv "int_upsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdsample.", _text + 0xA717DC
	.equiv "h2v2_upsample..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdsample.", _text + 0xA71914
	.equiv "JPEGInitUpsampler", _text + 0xA719C4
	.equiv "JPEGStdError", _text + 0xA71E08
	.equiv "out_of_memory..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjmemmgr.", _text + 0xA71E78
	.equiv "JPEGMemAllocSmall", _text + 0xA71E94
	.equiv "JPEGMemAllocLarge", _text + 0xA72040
	.equiv "JPEGMemAllocSArray", _text + 0xA7211C
	.equiv "JPEGMemAllocBArray", _text + 0xA721FC
	.equiv "JPEGRequestVirtSArray", _text + 0xA722E8
	.equiv "JPEGRequestVirtBArray", _text + 0xA72388
	.equiv "JPEGRealizeVirtArrays", _text + 0xA72428
	.equiv "do_sarray_io..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjmemmgr.", _text + 0xA726B0
	.equiv "do_barray_io..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjmemmgr.", _text + 0xA727B0
	.equiv "JPEGMemAccessVirtSArray", _text + 0xA728B4
	.equiv "JPEGMemAccessVirtBArray", _text + 0xA72AD8
	.equiv "JPEGFreeMemPool", _text + 0xA72D00
	.equiv "JPEGInitMemoryMgr", _text + 0xA72EE8
	.equiv "JPEGOpenBackingStore", _text + 0xA73068
	.equiv "select_ncolors..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA7308C
	.equiv "output_value..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA731CC
	.equiv "largest_input_value..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA731E4
	.equiv "create_colormap..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA731FC
	.equiv "create_colorindex..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA73398
	.equiv "make_odither_array..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA7351C
	.equiv "create_odither_tables..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA735E8
	.equiv "color_quantize..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA736A4
	.equiv "color_quantize3..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA73754
	.equiv "quantize_ord_dither..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA737F8
	.equiv "quantize3_ord_dither..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA738F0
	.equiv "quantize_fs_dither..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA739D0
	.equiv "alloc_fs_workspace..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant1.", _text + 0xA73B6C
	.equiv "JPEGInit1passQuantizer", _text + 0xA73DB0
	.equiv "prescan_quantize..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA73EA8
	.equiv "find_biggest_color_pop..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA73F44
	.equiv "find_biggest_volume..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA73F90
	.equiv "update_box..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA73FD0
	.equiv "median_cut..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA74448
	.equiv "compute_color..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA745D4
	.equiv "select_colors..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA746F8
	.equiv "find_nearby_colors..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA747EC
	.equiv "find_best_colors..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA74AB0
	.equiv "fill_inverse_cmap..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA74BCC
	.equiv "pass2_no_dither..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA74CCC
	.equiv "pass2_fs_dither..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA74D98
	.equiv "init_error_limit..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA75074
	.equiv "start_pass_2_quant..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjquant2.", _text + 0xA75188
	.equiv "JPEGInit2passQuantizer", _text + 0xA7532C
	.equiv "emit_byte..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA75548
	.equiv "finish_pass..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA755C8
	.equiv "arith_encode..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA75824
	.equiv "emit_restart..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA75AE4
	.equiv "encode_mcu_DC_first..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA75BEC
	.equiv "encode_mcu_AC_first..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA75E30
	.equiv "encode_mcu_DC_refine..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA760D8
	.equiv "encode_mcu_AC_refine..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA76194
	.equiv "encode_mcu..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA76400
	.equiv "start_pass..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcarith.", _text + 0xA76848
	.equiv "JPEGInitArithEncoder", _text + 0xA76A90
	.equiv "start_iMCU_row..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjccoefct.", _text + 0xA76B18
	.equiv "compress_data..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjccoefct.", _text + 0xA76B88
	.equiv "compress_output..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjccoefct.", _text + 0xA76E1C
	.equiv "compress_first_pass..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjccoefct.", _text + 0xA76FF0
	.equiv "JPEGInitComCoefController", _text + 0xA77314
	.equiv "rgb_ycc_convert..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjccolor.", _text + 0xA774EC
	.equiv "rgb_gray_convert..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjccolor.", _text + 0xA775D8
	.equiv "cmyk_ycck_convert..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjccolor.", _text + 0xA77688
	.equiv "null_convert..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjccolor.", _text + 0xA777E8
	.equiv "JPEGInitColorConverter", _text + 0xA77870
	.equiv "forward_DCT..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcdctmgr.", _text + 0xA77BF4
	.equiv "start_pass_fdctmgr..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjcdctmgr.", _text + 0xA77D3C
	.equiv "JPEGInitForwardDct", _text + 0xA77F98
	.equiv "jpeg_make_c_derived_tbl..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA78008
	.equiv "dump_buffer_s..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA78250
	.equiv "dump_buffer_e..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA782C8
	.equiv "flush_bits_s..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA78340
	.equiv "flush_bits_e..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA78430
	.equiv "emit_buffered_bits..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA78500
	.equiv "emit_eobrun..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA785FC
	.equiv "emit_restart_s..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA78864
	.equiv "emit_restart_e..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA78964
	.equiv "encode_mcu_DC_first..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA78A50
	.equiv "encode_mcu_AC_first..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA78D80
	.equiv "encode_mcu_DC_refine..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA79248
	.equiv "encode_mcu_AC_refine..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA793D8
	.equiv "encode_one_block..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA7990C
	.equiv "encode_mcu_huff..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA79F84
	.equiv "htest_one_block..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA7A22C
	.equiv "encode_mcu_gather..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA7A394
	.equiv "jpeg_gen_optimal_table..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA7A490
	.equiv "finish_pass_gather..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA7A770
	.equiv "start_pass_huff..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjchuff.", _text + 0xA7A8B8
	.equiv "JPEGInitHuffEncoder", _text + 0xA7ABC4
	.equiv "get_byte..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdarith.", _text + 0xA7AC54
	.equiv "arith_decode..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdarith.", _text + 0xA7ACE4
	.equiv "process_restart..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdarith.", _text + 0xA7AEA0
	.equiv "decode_mcu_DC_first..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdarith.", _text + 0xA7AFD8
	.equiv "decode_mcu_AC_first..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdarith.", _text + 0xA7B22C
	.equiv "decode_mcu_DC_refine..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdarith.", _text + 0xA7B440
	.equiv "decode_mcu_AC_refine..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdarith.", _text + 0xA7B4F8
	.equiv "decode_mcu..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdarith.", _text + 0xA7B6E4
	.equiv "start_pass..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdarith.", _text + 0xA7BA98
	.equiv "JPEGInitArithDecoder", _text + 0xA7BEA0
	.equiv "start_iMCU_row..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdcoefct.", _text + 0xA7BF8C
	.equiv "decompress_onepass..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdcoefct.", _text + 0xA7C014
	.equiv "consume_data..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdcoefct.", _text + 0xA7C29C
	.equiv "decompress_data..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdcoefct.", _text + 0xA7C4A4
	.equiv "JPEGInitDecCoefController", _text + 0xA7C658
	.equiv "build_ycc_rgb_table..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdcolor.", _text + 0xA7C7C4
	.equiv "ycc_rgb_convert..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdcolor.", _text + 0xA7C8F8
	.equiv "null_convert..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdcolor.", _text + 0xA7C9CC
	.equiv "ycck_cmyk_convert..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdcolor.", _text + 0xA7CAC8
	.equiv "JPEGInitColorDeconverter", _text + 0xA7CBBC
	.equiv "start_pass..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjddctmgr.", _text + 0xA7CE58
	.equiv "JPEGInitInverseDct", _text + 0xA7D720
	.equiv "jpeg_make_d_derived_tbl..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7D7F0
	.equiv "jpeg_fill_bit_buffer..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7DAFC
	.equiv "jpeg_huff_decode..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7DC94
	.equiv "process_restart..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7DE04
	.equiv "decode_mcu_DC_first..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7DEE0
	.equiv "decode_mcu_AC_first..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7E13C
	.equiv "decode_mcu_DC_refine..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7E40C
	.equiv "decode_mcu_AC_refine..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7E53C
	.equiv "decode_mcu_sub..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7E9B4
	.equiv "decode_mcu..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7EEE0
	.equiv "start_pass_huff_decoder..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdhuff.", _text + 0xA7F40C
	.equiv "JPEGInitHuffDecoder", _text + 0xA7FAE8
	.equiv "alloc_funny_pointers..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmainct.", _text + 0xA7FC0C
	.equiv "make_funny_pointers..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmainct.", _text + 0xA7FCEC
	.equiv "set_wraparound_pointers..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmainct.", _text + 0xA7FE18
	.equiv "set_bottom_pointers..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmainct.", _text + 0xA7FEFC
	.equiv "process_data_context_main..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmainct.", _text + 0xA7FFC0
	.equiv "process_data_simple_main..obj.5Cghs.5Ccafe.5Clib.5Cjpeg.5CNDEBUG.5Cjdmainct.", _text + 0xA80170
	.equiv "JPEGInitDecMainController", _text + 0xA80320
	.equiv "JPEGFdctIntFast", _text + 0xA8046C
	.equiv "JPEGFdctIntSlow", _text + 0xA8066C
	.equiv "JPEGIdctIntFast", _text + 0xA808E8
	.equiv "JPEGIdctIntSlow", _text + 0xA80CA4
	.equiv "JPEGIdct7x7", _text + 0xA810C8
	.equiv "JPEGIdct6x6", _text + 0xA81378
	.equiv "JPEGIdct5x5", _text + 0xA81578
	.equiv "JPEGIdct4x4", _text + 0xA81730
	.equiv "JPEGIdct3x3", _text + 0xA81888
	.equiv "JPEGIdct2x2", _text + 0xA819B0
	.equiv "JPEGIdct9x9", _text + 0xA81A98
	.equiv "JPEGIdct10x10", _text + 0xA81D90
	.equiv "JPEGIdct11x11", _text + 0xA820E0
	.equiv "JPEGIdct12x12", _text + 0xA824F0
	.equiv "JPEGIdct13x13", _text + 0xA828B4
	.equiv "JPEGIdct14x14", _text + 0xA82D58
	.equiv "JPEGIdct15x15", _text + 0xA831C4
	.equiv "JPEGIdct16x16", _text + 0xA83654
	.equiv "JPEGIdct16x8", _text + 0xA83BB0
	.equiv "JPEGIdct14x7", _text + 0xA84080
	.equiv "JPEGIdct12x6", _text + 0xA84414
	.equiv "JPEGIdct10x5", _text + 0xA846F8
	.equiv "JPEGIdct8x4", _text + 0xA8497C
	.equiv "JPEGIdct6x3", _text + 0xA84B9C
	.equiv "JPEGIdct4x2", _text + 0xA84D20
	.equiv "JPEGIdct8x16", _text + 0xA84E88
	.equiv "JPEGIdct7x14", _text + 0xA852B8
	.equiv "JPEGIdct6x12", _text + 0xA85638
	.equiv "JPEGIdct5x10", _text + 0xA85918
	.equiv "JPEGIdct4x8", _text + 0xA85B9C
	.equiv "JPEGIdct3x6", _text + 0xA85E64
	.equiv "JPEGIdct2x4", _text + 0xA85FF0
	.equiv "std::_Debug_message()", _text + 0xA86160
	.equiv "_Inside", _text + 0xA86200
	.equiv "erase", _text + 0xA86350
	.equiv "_Copy", _text + 0xA86414
	.equiv "_Grow", _text + 0xA864EC
	.equiv "FUN_0EC065E0:assign", _text + 0xA865E0
	.equiv "FUN_0EC066D8:assign", _text + 0xA866D8
	.equiv "_array_pointer_not_from_vec_new", _text + 0xA868B8
	.equiv "array_new_general", _text + 0xA868C0
	.equiv "__array_new", _text + 0xA869F0
	.equiv "__placement_array_new", _text + 0xA86A44
	.equiv "__vec_new", _text + 0xA86A88
	.equiv "__vec_delete", _text + 0xA86BC0
	.equiv "__array_delete", _text + 0xA86C0C
	.equiv "__record_needed_destruction", _text + 0xA86D18
	.equiv "__vec_cctor", _text + 0xA86D40
	.equiv "error_text..trg.2Fppc.2Fobjs.2Flibs.2Flibsedgnoe.2Ferror.", _text + 0xA86D98
	.equiv "wcstoul", _text + 0xA86E20
	.equiv "unsout..trg.2Fppc.2Fobjs.2Flibs.2Flibansi.2Fccvswprnt.", _text + 0xA872C4
	.equiv "__gh_vswprintf", _text + 0xA87314
	.equiv "wcsstr", _text + 0xA87848
	.equiv "wcsncpy", _text + 0xA878B0
	.equiv "FUN_0EC078FC:wcsncmp", _text + 0xA878FC
	.equiv "FUN_0EC0794C:wcslen", _text + 0xA8794C
	.equiv "wcscpy", _text + 0xA87968
	.equiv "wcscat", _text + 0xA879BC
	.equiv "vswprintf", _text + 0xA87A14
	.equiv "swprintf", _text + 0xA87A80
	.equiv "mbrtowc", _text + 0xA87B00
	.equiv "mbrlen", _text + 0xA87B48
	.equiv "FUN_0EC07B5C:strnlen", _text + 0xA87B5C
	.equiv "__ghs_strlen", _text + 0xA87BCC
	.equiv "strcspn", _text + 0xA87BE4
	.equiv "__ghs_strcpy", _text + 0xA87C24
	.equiv "__ghs_strcmp", _text + 0xA87C40
	.equiv "xxdecout..trg.2Fppc.2Fobjs.2Flibs.2Flibansi.2Fccllout.", _text + 0xA87C68
	.equiv "xdecout..trg.2Fppc.2Fobjs.2Flibs.2Flibansi.2Fccllout.", _text + 0xA87C98
	.equiv "FUN_0EC07DB8:__gh_long_long_printf", _text + 0xA87DB8
	.equiv "__gh_uns_long_long_printf", _text + 0xA87DE0
	.equiv "__gh_float_printf", _text + 0xA881DC
	.equiv "__gh_outspaces", _text + 0xA885FC
	.equiv "unsout..trg.2Fppc.2Fobjs.2Flibs.2Flibansi.2Fccvsprnt.", _text + 0xA888F8
	.equiv "__gh_hexout", _text + 0xA88948
	.equiv "__gh_octhexout", _text + 0xA88998
	.equiv "__gh_vsprintf", _text + 0xA889FC
	.equiv "vsnprintf", _text + 0xA88F88
	.equiv "snprintf", _text + 0xA88FE8
	.equiv "vsprintf", _text + 0xA89068
	.equiv "sprintf", _text + 0xA890AC
	.equiv "__docvt", _text + 0xA89144
	.equiv "fputs", _text + 0xA894BC
	.equiv "_flsbuf", _text + 0xA895E4
	.equiv "flockfile", _text + 0xA896DC
	.equiv "funlockfile", _text + 0xA89704
	.equiv "fflush", _text + 0xA8972C
	.equiv "_free..trg.2Fppc.2Fobjs.2Flibs.2Flibansi.2Fccmalloc.", _text + 0xA89824
	.equiv "malloc_get_heap..trg.2Fppc.2Fobjs.2Flibs.2Flibansi.2Fccmalloc.", _text + 0xA89948
	.equiv "_malloc..trg.2Fppc.2Fobjs.2Flibs.2Flibansi.2Fccmalloc.", _text + 0xA89B3C
	.equiv "abort", _text + 0xA89D00
	.equiv "wcstombs", _text + 0xA89D18
	.equiv "strtoul", _text + 0xA89DC4
	.equiv "strtol", _text + 0xA89F6C
	.equiv "setjmp", _text + 0xA8A138
	.equiv "rand_r2", _text + 0xA8A380
	.equiv "rand", _text + 0xA8A450
	.equiv "__gh_sort_swap", _text + 0xA8A4B8
	.equiv "pick_middle..trg.2Fppc.2Fobjs.2Flibs.2Flibansi.2Fccqsort.", _text + 0xA8A518
	.equiv "qsort", _text + 0xA8A5A8
	.equiv "sqrt", _text + 0xA8A948
	.equiv "log10", _text + 0xA8AD60
	.equiv "log", _text + 0xA8ADBC
	.equiv "floor", _text + 0xA8AEF4
	.equiv "exp2", _text + 0xA8AFD4
	.equiv "exp", _text + 0xA8B1B8
	.equiv "floorf", _text + 0xA8B434
	.equiv "ceilf", _text + 0xA8B4D0
	.equiv "tanf", _text + 0xA8B55C
	.equiv "sqrtf", _text + 0xA8B6A4
	.equiv "sinf", _text + 0xA8B718
	.equiv "scalblnf", _text + 0xA8BA20
	.equiv "log10f", _text + 0xA8BADC
	.equiv "logf", _text + 0xA8BB28
	.equiv "exp2f", _text + 0xA8BC20
	.equiv "expf", _text + 0xA8BD90
	.equiv "cosf", _text + 0xA8BF4C
	.equiv "atan2f", _text + 0xA8C094
	.equiv "atanf", _text + 0xA8C130
	.equiv "asinf", _text + 0xA8C28C
	.equiv "acosf", _text + 0xA8C318
	.equiv "wctomb", _text + 0xA8C3AC
	.equiv "mbtowc", _text + 0xA8C40C
	.equiv "_f_ulltof", _text + 0xA8C508
	.equiv "_f_lltof", _text + 0xA8C510
	.equiv "write", _text + 0xA8C65C
	.equiv "__gh_signal_init..obj.5Cghs.5Ccafe.5Clib.5Clibsys.5CNDEBUG.5Cind_sgnl.", _text + 0xA8C6DC
	.equiv "__ghs_default_signal_handler", _text + 0xA8C74C
	.equiv "raise", _text + 0xA8C798
	.equiv "sbrk", _text + 0xA8C84C
	.equiv "__ghs_syscall", _text + 0xA8C8A4
	.equiv "FUN_0EC0C8D4:__gh_memclr32", _text + 0xA8C8D4
	.equiv "FUN_0EC0C93C:__gh_urem64", _text + 0xA8C93C
	.equiv "FUN_0EC0C9DC:__gh_udiv64", _text + 0xA8C9DC
	.equiv "__gh_rem64", _text + 0xA8CB4C
	.equiv "__gh_div64", _text + 0xA8CC3C
	.equiv "FUN_0EC0CD38:__va_arg", _text + 0xA8CD38
	.equiv "FUN_0EC0CE48:_savesmall_32", _text + 0xA8CE48
	.equiv "FUN_0EC0CE70:_savesmall_24", _text + 0xA8CE70
	.equiv "FUN_0EC0CE98:_savesmall_16", _text + 0xA8CE98
	.equiv "__idcvt", _text + 0xA8CEDC
	.equiv "__ifcvt", _text + 0xA8CF20
	.equiv "_savefpr_25_l_ps", _text + 0xA8D09C
	.equiv "_savefpr_31_l_ps", _text + 0xA8D0E4
	.equiv "_savegpr_23", _text + 0xA8D1C4
	.equiv "_restgpr_23", _text + 0xA8D218
	.equiv "nndbgBreak", _text + 0xA8D2F4
	.equiv "nn::dbg::Break()", _text + 0xA8D314
	.equiv "ClampCircle..obj.5Cghs.5Ccafe.5Ccos.5Cpads.5Cpad.5CNDEBUG.5CPadclamp.", _text + 0xA8D354
	.equiv "GFDGetPixelShaderHeaderSize", _text + 0xA8E868
	.equiv "GFDGetGeometryShaderHeaderSize", _text + 0xA8E878
	.equiv "GFDGetVertexShaderProgramSize", _text + 0xA8E888
	.equiv "GFDGetPixelShaderProgramSize", _text + 0xA8E898
	.equiv "GFDGetGeometryShaderProgramSize", _text + 0xA8E8A8
	.equiv "GFDGetGeometryShaderCopyProgramSize", _text + 0xA8E8B8
	.equiv "ASM_MTX44MultVec", _text + 0xA8EF04
	.equiv "C_MTXLookAt", _text + 0xA8EF7C
	.equiv "ASM_MTXRotRad", _text + 0xA8F0B4
	.equiv "C_MTXPerspective", _text + 0xA8F13C
	.equiv "C_MTXOrtho", _text + 0xA8F264
	.equiv "nw::ut::FrameHeap::AllocFromHead()", _text + 0xA8F478
	.equiv "nw::ut::FrameHeap::AllocFromTail()", _text + 0xA8F50C
	.equiv "nw::ut::FrameHeap::Alloc()", _text + 0xA8F590
	.equiv "nw::ut::HeapBase::GetFillValue()", _text + 0xA8F7E4
	.equiv "nw::ut::HeapBase::FillAllocMemory()", _text + 0xA8F994
	.equiv "nw::ut::internal::LinkListImpl::insert()", _text + 0xA8FA1C
	.equiv "FUN_0EC0FA48:nw::ut::internal::LinkListImpl::erase()", _text + 0xA8FA48
	.equiv "FUN_0EC0FA78:nw::ut::internal::LinkListImpl::erase()", _text + 0xA8FA78
	.equiv "FUN_0EC0FAC4:nw::ut::internal::LinkListImpl::erase()", _text + 0xA8FAC4
	.equiv "nw::ut::strncat()", _text + 0xA8FAFC
	.equiv "nw::ut::Event::Event()", _text + 0xA8FD28
	.equiv "nw::ut::Event::TryWait()", _text + 0xA8FDB0
	.equiv "nw::ut::Thread::Thread()", _text + 0xA8FDE0
	.equiv "nw::ut::Thread::Create()", _text + 0xA8FEBC
	.equiv "nw::ut::MessageQueue::MessageQueue()", _text + 0xA8FF84
	.equiv "nw::ut::MessageQueue::Send()", _text + 0xA8FFC8
	.equiv "nw::ut::MessageQueue::Recv()", _text + 0xA8FFF8
	.equiv "nw::math::internal::AtanIdx_()", _text + 0xA9003C
	.equiv "nw::font::RectDrawer::GetWorkBufferSize()", _text + 0xA900F0
	.equiv "nw::font::RectDrawer::RectDrawer()", _text + 0xA9023C
	.equiv "nw::font::RectDrawer::Shader::ReadVertexShader()", _text + 0xA902B4
	.equiv "nw::font::RectDrawer::Shader::ReadPixelShader()", _text + 0xA9039C
	.equiv "nw::font::RectDrawer::Shader::Initialize()", _text + 0xA90484
	.equiv "nw::font::RectDrawer::CreateIndices()", _text + 0xA90CF0
	.equiv "nw::font::RectDrawer::Initialize()", _text + 0xA90D38
	.equiv "nw::font::RectDrawer::BuildTextureUseInfos()", _text + 0xA90E90
	.equiv "nw::font::RectDrawer::BuildVertexElements()", _text + 0xA910C4
	.equiv "nw::snd::FsSoundArchive::FsSoundArchive()", _text + 0xA91C90
	.equiv "nw::snd::FsSoundArchive::LoadFileHeader()", _text + 0xA91E78
	.equiv "nw::snd::FsSoundArchive::Open()", _text + 0xA91F08
	.equiv "nw::snd::FsSoundArchive::LoadHeader()", _text + 0xA922A4
	.equiv "nw::snd::FsSoundArchive::LoadLabelStringData()", _text + 0xA92390
	.equiv "nw::snd::Sound3DListener::Sound3DListener()", _text + 0xA92DB4
	.equiv "nw::snd::Sound3DListener::CalcPositionFromMatrix()", _text + 0xA92ED0
	.equiv "nw::snd::Sound3DListener::SetMatrix()", _text + 0xA92F58
	.equiv "FUN_0EC13004:nw::snd::Sound3DListener::ResetMatrix()", _text + 0xA93004
	.equiv "nw::snd::Sound3DListener::SetVelocity()", _text + 0xA93054
	.equiv "FUN_0EC13098:FFLiGetBufferSizeCharModel()", _text + 0xA93098
	.equiv "FUN_0EC1309C:FFLiGetTempBufferSizeCharModel()", _text + 0xA9309C
	.equiv "FFLInitCharModelCPUStep", _text + 0xA930A4
	.equiv "FFLInitCharModelGPUStepWithCallback", _text + 0xA930C8
	.equiv "FFLInitCharModelGPUStep", _text + 0xA930EC
	.equiv "FUN_0EC13144:FID_conflict:FFLGetDrawParamOpaBeard", _text + 0xA93144
	.equiv "FUN_0EC13168:FID_conflict:FFLGetDrawParamOpaBeard", _text + 0xA93168
	.equiv "FUN_0EC1318C:FID_conflict:FFLGetDrawParamOpaBeard", _text + 0xA9318C
	.equiv "FUN_0EC131B0:FID_conflict:FFLGetDrawParamOpaForehead", _text + 0xA931B0
	.equiv "FUN_0EC131D4:FID_conflict:FFLGetDrawParamOpaForehead", _text + 0xA931D4
	.equiv "FFLGetDrawParamOpaCap", _text + 0xA931F8
	.equiv "FFLDrawOpaWithCallback", _text + 0xA9321C
	.equiv "FUN_0EC1336C:FID_conflict:FFLGetDrawParamXluGlass", _text + 0xA9336C
	.equiv "FUN_0EC13390:FID_conflict:FFLGetDrawParamXluGlass", _text + 0xA93390
	.equiv "FUN_0EC133B4:FID_conflict:FFLGetDrawParamXluGlass", _text + 0xA933B4
	.equiv "FFLDrawXluWithCallback", _text + 0xA933D8
	.equiv "FFLSetExpression", _text + 0xA934D4
	.equiv "FID_conflict:FFLSetViewModelType", _text + 0xA934F8
	.equiv "FFLSetViewModelType", _text + 0xA93550
	.equiv "FUN_0EC13578:FFLiSetScale()", _text + 0xA93578
	.equiv "FFLGetExpression", _text + 0xA935AC
	.equiv "FUN_0EC13664:FFLiDatabaseFileAccessor::IsExistFiles()", _text + 0xA93664
	.equiv "FUN_0EC13668:FFLiGetBufferSizeCharModel()", _text + 0xA93668
	.equiv "FUN_0EC13768:FFLiGetTempBufferSizeCharModel()", _text + 0xA93768
	.equiv "FUN_0EC1386C:FFLiSetScale()", _text + 0xA9386C
	.equiv "FFLiSetExpression()", _text + 0xA938C0
	.equiv "FFLiSetViewModelType()", _text + 0xA93914
	.equiv "<unnamed>::GetShapeTypeInfo()", _text + 0xA93950
	.equiv "FFLiGetDrawParamOpaForeheadFromCharModel()", _text + 0xA93968
	.equiv "FFLiGetDrawParamOpaHairFromCharModel()", _text + 0xA939B0
	.equiv "FFLiGetDrawParamOpaCapFromCharModel()", _text + 0xA939F8
	.equiv "FFLiGetDrawParamXluNoseLineFromCharModel()", _text + 0xA93A60
	.equiv "FFLiGetDrawParamXluGlassFromCharModel()", _text + 0xA93A78
	.equiv "FFLiCharModelCreator::FFLiCharModelCreator()", _text + 0xA93A90
	.equiv "<unnamed>::ModelFlagToModelType()", _text + 0xA93AF8
	.equiv "FFLiCharModelCreator::SetupRenderTextureBuffer()", _text + 0xA93B24
	.equiv "<unnamed>::ConvertShapePartsTypeToShapeType()", _text + 0xA93BA8
	.equiv "<unnamed>::UpdateBoundingBox()", _text + 0xA93BC4
	.equiv "<unnamed>::CalcluateBoundingBox()", _text + 0xA93CBC
	.equiv "<unnamed>::InitShape()", _text + 0xA93D40
	.equiv "<unnamed>::InitShapes()", _text + 0xA93E20
	.equiv "<unnamed>::InitTextures()", _text + 0xA941AC
	.equiv "<unnamed>::AddVec3()", _text + 0xA94290
	.equiv "<unnamed>::AdjustPartsTransform()", _text + 0xA942C4
	.equiv "_::GetShapeTypeInfo()", _text + 0xA943BC
	.equiv "<unnamed>::SetupDrawParam()", _text + 0xA943D4
	.equiv "FFLiCharModelCreator::ExecuteCPUStep()", _text + 0xA94540
	.equiv "FFLiCharModelCreator::InvalidateShapes()", _text + 0xA948EC
	.equiv "FUN_0EC1493C:<unnamed>::InvalidateTextures()", _text + 0xA9493C
	.equiv "FFLiCharModelCreator::AfterExecuteGPUStep()", _text + 0xA94994
	.equiv "FFLiCharModelCreator::ExecuteGPUStep()", _text + 0xA949D0
	.equiv "FUN_0EC14ADC:FFLiGetIconBufferSize()", _text + 0xA94ADC
	.equiv "FUN_0EC14AE0:FFLiGetIconTempBufferSize()", _text + 0xA94AE0
	.equiv "FUN_0EC14B5C:FFLiGetIconMatrix()", _text + 0xA94B5C
	.equiv "FUN_0EC14B60:FFLiFsCommand::PlacementNew()", _text + 0xA94B60
	.equiv "FUN_0EC15A40:FFLiBodyShader::BeginRendering()", _text + 0xA95A40
	.equiv "FUN_0EC15C40:FFLiGetIconBufferSize()", _text + 0xA95C40
	.equiv "FUN_0EC15C58:FFLiGetIconTempBufferSize()", _text + 0xA95C58
	.equiv "<unnamed>::IsExpressionContained()", _text + 0xA95C84
	.equiv "<unnamed>::RadianToDegree()", _text + 0xA96088
	.equiv "FUN_0EC160A4:FFLiGetIconMatrix()", _text + 0xA960A4
	.equiv "FFLiIconWithBody::ValidDesc()", _text + 0xA96310
	.equiv "<unnamed>::ValidHeader()", _text + 0xA96338
	.equiv "FUN_0EC16424:<unnamed>::GetDrawParamBufferSize()", _text + 0xA96424
	.equiv "FFLiIconWithBody::GetBufferSize()", _text + 0xA96530
	.equiv "FFLiIconWithBody::FFLiIconWithBody()", _text + 0xA965A4
	.equiv "<unnamed>::TypeToStride()", _text + 0xA96604
	.equiv "FUN_0EC16628:<unnamed>::AllocateAndCopy()", _text + 0xA96628
	.equiv "FUN_0EC166A4:<unnamed>::AllocateAndCopy()", _text + 0xA966A4
	.equiv "FFLiIconWithBody::SetupDrawParam()", _text + 0xA96720
	.equiv "<unnamed>::LookAt()", _text + 0xA967E8
	.equiv "FFLiIconWithBody::SetupUniform()", _text + 0xA96824
	.equiv "FFLiIconWithBody::SetupCPU()", _text + 0xA969D0
	.equiv "FFLiIconWithBody::SetupDrawParamGPU()", _text + 0xA96A3C
	.equiv "FFLiIconWithBody::SetupGPU()", _text + 0xA96AC0
	.equiv "FFLiIconWithBody::ValidRecipe()", _text + 0xA96BE4
	.equiv "<unnamed>::ToColorBuffer()", _text + 0xA96C60
	.equiv "FFLiIconWithBody::Make()", _text + 0xA96CE8
	.equiv "FFLiResourceLoaderBuffer::FFLiResourceLoaderBuffer()", _text + 0xA96FA8
	.equiv "FFLiResourceLoaderBuffer::~FFLiResourceLoaderBuffer()", _text + 0xA97030
	.equiv "FFLiGetResourceShapeElement()", _text + 0xA9709C
	.equiv "FFLiCanDrawShape()", _text + 0xA97184
	.equiv "<unnamed>::GetElementType()", _text + 0xA97194
	.equiv "<unnamed>::FormatToStride()", _text + 0xA971B8
	.equiv "<unnamed>::GetStride()", _text + 0xA97220
	.equiv "FFLiLoadShape()", _text + 0xA972DC
	.equiv "FUN_0EC17580:thunk_FUN_0e8a03c8", _text + 0xA97580
	.equiv "FFLiAdjustShape()", _text + 0xA97584
	.equiv "FFLiInvalidateShape()", _text + 0xA97720
	.equiv "FUN_0EC177A0:void_::AdjustAttribute()", _text + 0xA977A0
	.equiv "FUN_0EC17908:void_::AdjustAttributeWithoutScale()", _text + 0xA97908
	.equiv "FUN_0EC179A0:void_::AdjustAttributeWithoutScale()", _text + 0xA979A0
	.equiv "FUN_0EC17A30:void_::AdjustAttribute()", _text + 0xA97A30
	.equiv "FFLiBodyShader::GetBufferSize()", _text + 0xA97BE8
	.equiv "FFLiBodyShader::FFLiBodyShader()", _text + 0xA97C24
	.equiv "FFLiBodyShader::SetupCPU()", _text + 0xA97C80
	.equiv "FFLiBodyShader::SetupGPU()", _text + 0xA97EB0
	.equiv "FUN_0EC17EE8:<unnamed>::SetVertexUniform()", _text + 0xA97EE8
	.equiv "FUN_0EC17F2C:<unnamed>::SetVertexUniform()", _text + 0xA97F2C
	.equiv "<unnamed>::SetPixelUniform()", _text + 0xA97F9C
	.equiv "FFLiBodyShader::SetupUniforms()", _text + 0xA97FEC
	.equiv "FUN_0EC180A4:FFLiBodyShader::BeginRendering()", _text + 0xA980A4
	.equiv "FFLiDefaultParams::GetMaterial()", _text + 0xA98104
	.equiv "sead::HashCRC16::initialize()", _text + 0xA98130
	.equiv "sead::HashCRC16::calcHash()", _text + 0xA9818C
	.equiv "sead::GraphicsContextMRT::GraphicsContextMRT()", _text + 0xA981F8
	.equiv "sead::GraphicsContextMRT::apply()", _text + 0xA98320
	.equiv "sead::XmlDocument::XmlDocument()", _text + 0xA98534
	.equiv "<unnamed>::freeXmlElementImpl()", _text + 0xA985F8
	.equiv "sead::XmlDocument::freeXmlElementAll()", _text + 0xA98664
	.equiv "sead::XmlDocument::~XmlDocument()", _text + 0xA9869C
	.equiv "<unnamed>::skipWithEndSymbol()", _text + 0xA98764
	.equiv "<unnamed>::isReadSameString()", _text + 0xA987F8
	.equiv "<unnamed>::bufferingWithEndSymbol()", _text + 0xA988F8
	.equiv "sead::XmlDocument::replaceXmlNumericCharacterReference_()", _text + 0xA98978
	.equiv "sead::XmlDocument::replaceXmlCharacterEntityReference_()", _text + 0xA98DFC
	.equiv "sead::XmlDocument::expandEntityList()", _text + 0xA990AC
	.equiv "sead::XmlDocument::parseXmlDeclare_()", _text + 0xA998BC
	.equiv "sead::XmlDocument::resetEntity_()", _text + 0xA9A050
	.equiv "sead::XmlDocument::addEntity()", _text + 0xA9A498
	.equiv "<unnamed>::makeXmlInstanceImpl()", _text + 0xA9A91C
	.equiv "sead::XmlDocument::makeXmlInstance_()", _text + 0xA9ACAC
	.equiv "sead::XmlDocument::parseXmlInstance_()", _text + 0xA9AD20
	.equiv "sead::XmlDocument::parseXml_()", _text + 0xA9CD6C
	.equiv "sead::XmlDocument::create()", _text + 0xA9D0D0
	.equiv "<unnamed>::writeXmlInstanceAsBinary()", _text + 0xA9D1F4
	.equiv "<unnamed>::writeXmlIndent()", _text + 0xA9D584
	.equiv "<unnamed>::writeXmlAttribute()", _text + 0xA9D5D0
	.equiv "sead::XmlDocument::writeXmlContent_()", _text + 0xA9D724
	.equiv "sead::XmlDocument::writeXmlInstanceAsText_()", _text + 0xA9DB40
	.equiv "sead::XmlDocument::save()", _text + 0xA9E050
	.equiv "sead::XmlDocument::findElement()", _text + 0xA9E4E0
	.equiv "sead::XmlElement::XmlElement()", _text + 0xA9F360
	.equiv "sead::XmlElement::~XmlElement()", _text + 0xA9F53C
	.equiv "FUN_0EC1F650:sead::XmlElement::findRoot()", _text + 0xA9F650
	.equiv "sead::XmlElement::findSiblingElement_()", _text + 0xA9F670
	.equiv "sead::XmlElement::findElementByAbsolutePath_()", _text + 0xA9F89C
	.equiv "sead::XmlElement::findElementByRelativePath_()", _text + 0xA9FCD4
	.equiv "sead::XmlElement::findElement()", _text + 0xAA058C
	.equiv "sead::XmlElement::findAttributeValue()", _text + 0xAA0864
	.equiv "sead::XmlElement::expandAttributeList()", _text + 0xAA09AC
	.equiv "sead::XmlElement::getContentString()", _text + 0xAA16D8
	.equiv "sead::XmlElement::addAttribute()", _text + 0xAA177C
	.equiv "sead::XmlElement::updateAttribute()", _text + 0xAA1D1C
	.equiv "sead::XmlElement::setContent()", _text + 0xAA1FF4
	.equiv "sead::XmlElement::setContentString()", _text + 0xAA2070
	.equiv "sead::XmlUtil::createBackSiblingElement()", _text + 0xAA2258
	.equiv "sead::XmlUtil::createBackChildElement()", _text + 0xAA22C4
	.equiv "agl::vwr::me::UserDataRegister::UserDataRegister()", _text + 0xAA2330
	.equiv "agl::env::Projector::updateViewMatrix()", _text + 0xAA2A5C
	.equiv "agl::env::Projector::updateProjectionViewMatrix()", _text + 0xAA2F18
	.equiv "agl::env::CubeMapMgr::~CubeMapMgr()", _text + 0xAA3320
	.equiv "agl::env::CubeMapMgr::free()", _text + 0xAA3584
	.equiv "agl::env::CubeMapMgr::freeAll()", _text + 0xAA3644
	.equiv "agl::env::CubeMapMgr::updateValidateInfo()", _text + 0xAA36B8
	.equiv "agl::env::CubeMapMgr::allocate()", _text + 0xAA3B1C
	.equiv "agl::env::CubeMapMgr::postRead_()", _text + 0xAA3B94
	.equiv "agl::env::CubeMapMgr::ReservedUnit::preRead_()", _text + 0xAA3DEC
	.equiv "agl::env::CubeMapMgr::ReservedUnit::clearIlluminantInfo()", _text + 0xAA4750
	.equiv "FUN_0EC247E4:FID_conflict:agl::env::CubeMapMgr::searchIlluminantEntity()", _text + 0xAA47E4
	.equiv "FUN_0EC24904:FID_conflict:agl::env::CubeMapMgr::searchIlluminantEntity()", _text + 0xAA4904
	.equiv "agl::env::CubeMapMgr::ReservedUnit::postRead_()", _text + 0xAA4A24
	.equiv "agl::env::CubeMapMgr::clearIlluminant()", _text + 0xAA4BA0
	.equiv "agl::env::CubeMapMgr::CubeMapMgr()", _text + 0xAA4C08
	.equiv "agl::env::CubeMapMgr::Unit::Unit()", _text + 0xAA4F7C
	.equiv "agl::env::CubeMapMgr::ReservedUnit::ReservedUnit()", _text + 0xAA5004
	.equiv "agl::env::CubeMapMgr::initialize()", _text + 0xAA576C
	.equiv "agl::env::CubeMapMgr::UpdateAgent::setup()", _text + 0xAA5FC4
	.equiv "agl::env::CubeMapMgr::copySetting()", _text + 0xAA5FF8
	.equiv "agl::env::CubeMapMgr::reentryUpdateRequest()", _text + 0xAA602C
	.equiv "agl::env::CubeMapMgr::pushUpdateRequest()", _text + 0xAA60B0
	.equiv "agl::env::CubeMapMgr::popUpdateRequest()", _text + 0xAA613C
	.equiv "agl::env::CubeMapMgr::pushUpdateRequestAll()", _text + 0xAA6268
	.equiv "agl::env::CubeMapMgr::getNormalizeCoeff()", _text + 0xAA6464
	.equiv "agl::env::CubeMapMgr::Unit::outputFile()", _text + 0xAA6504
	.equiv "FUN_0EC27BB4:FID_conflict:agl::env::CubeMapMgr::addIlluminantEntity()", _text + 0xAA7BB4
	.equiv "FUN_0EC27BE8:FID_conflict:agl::env::CubeMapMgr::addIlluminantEntity()", _text + 0xAA7BE8
	.equiv "agl::env::CubeMapMgr::ReservedUnit::drawIlluminant()", _text + 0xAA7C1C
	.equiv "agl::env::CubeMapMgr::drawIlluminant()", _text + 0xAA81FC
	.equiv "agl::env::CubeMapMgr::UpdateAgent::UpdateAgent()", _text + 0xAA8370
	.equiv "agl::env::CubeMapMgr::UpdateAgent::~UpdateAgent()", _text + 0xAA84B4
	.equiv "agl::env::CubeMapMgr::UpdateAgent::update()", _text + 0xAA8520
	.equiv "agl::env::CubeMapMgr::UpdateAgent::getRenderBufferPtr()", _text + 0xAA8790
	.equiv "agl::env::CubeMapMgr::UpdateAgent::begin()", _text + 0xAA87A0
	.equiv "<unnamed>::InitializeTarget()", _text + 0xAA899C
	.equiv "<unnamed>::BindRenderBuffer()", _text + 0xAA89D8
	.equiv "agl::env::CubeMapMgr::CreatorUnit::extractHeadElement()", _text + 0xAA8B38
	.equiv "agl::env::CubeMapMgr::CreatorUnit::convolveHeadElement()", _text + 0xAA8F94
	.equiv "agl::env::CubeMapMgr::CreatorUnit::encodeHDR()", _text + 0xAA96C4
	.equiv "agl::env::CubeMapMgr::UpdateAgent::end()", _text + 0xAAA1E0
	.equiv "agl::env::CubeMapMgr::UpdateAgent::terminate()", _text + 0xAAA7C8
	.equiv "agl::env::CubeMapMgr::Unit::initialize()", _text + 0xAAA86C
	.equiv "FUN_0EC2B060:sead::RamStreamSrc::~RamStreamSrc()", _text + 0xAAB060
	.equiv "agl::g3d::ReplaceDirectoryDelimiter()", _text + 0xAAB7C4
	.equiv "agl::g3d::CreateAbsolutePath()", _text + 0xAABB88
	.equiv "<unnamed>::ConvertPathWinToFSA()", _text + 0xAACDA0
	.equiv "<unnamed>::FormatPathForFSA()", _text + 0xAACE24
	.equiv "agl::g3d::NormalizePath()", _text + 0xAAD650
	.equiv "FUN_0EC2DF00:agl::g3d::WriteXML()", _text + 0xAADF00
	.equiv "<unnamed>::DeleteNodeRecursive_()", _text + 0xAAE154
	.equiv "agl::g3d::DeleteXmlNodeRecursive()", _text + 0xAAE1DC
	.equiv "agl::g3d::CheckXMLBinaryPartOffset()", _text + 0xAAE230
	.equiv "FUN_0EC2E29C:agl::g3d::WriteXML()", _text + 0xAAE29C
	.equiv "agl::g3d::ModelEx::ModelEx()", _text + 0xAAE470
	.equiv "agl::g3d::TextureUtilG3D::convertToResTexture()", _text + 0xAAE5F8
	.equiv "agl::g3d::ModelShaderAttribute::clear()", _text + 0xAAE6E4
	.equiv "agl::g3d::ModelShaderAttribute::ModelShaderAttribute()", _text + 0xAAE714
	.equiv "agl::g3d::ModelShaderAttribute::~ModelShaderAttribute()", _text + 0xAAE774
	.equiv "agl::g3d::ModelShaderAttribute::setFetchShaderBuffer()", _text + 0xAAE788
	.equiv "agl::g3d::ModelShaderAttribute::bind_()", _text + 0xAAE790
	.equiv "agl::g3d::ModelShaderAttribute::bind()", _text + 0xAAEA28
	.equiv "agl::g3d::ModelShaderAttribute::activateVertexBuffer()", _text + 0xAAEC18
	.equiv "agl::g3d::ModelShaderAttribute::isSameVertexAttribute()", _text + 0xAAEC84
	.equiv "agl::g3d::ModelShaderAttribute::isSameVertexBuffer()", _text + 0xAAEDF0
	.equiv "agl::g3d::ModelShaderSampler::ModelShaderSampler()", _text + 0xAAEE40
	.equiv "agl::g3d::ModelShaderSampler::~ModelShaderSampler()", _text + 0xAAEEF0
	.equiv "agl::g3d::ModelShaderSampler::clear()", _text + 0xAAEF58
	.equiv "agl::g3d::ModelShaderSampler::pushBackSampler()", _text + 0xAAEF68
	.equiv "agl::g3d::ModelShaderSampler::bind()", _text + 0xAAF05C
	.equiv "agl::g3d::ModelShaderSampler::activateTexture()", _text + 0xAAF1BC
	.equiv "agl::g3d::ModelShaderSampler::activateSampler()", _text + 0xAAF274
	.equiv "agl::g3d::ModelShaderSampler::isEqual()", _text + 0xAAF308
	.equiv "FUN_0EC2F5B0:agl::g3d::ShaderUtilG3D::search()", _text + 0xAAF5B0
	.equiv "FUN_0EC2F6E8:agl::g3d::ShaderUtilG3D::search()", _text + 0xAAF6E8
	.equiv "agl::g3d::ShaderUtilG3D::print()", _text + 0xAAF824
	.equiv "agl::pfx::AutoExposureVtxStream::create()", _text + 0xAB01EC
	.equiv "agl::pfx::AutoExposureVtxStream::initialize()", _text + 0xAB03C8
	.equiv "agl::pfx::AutoExposure::AutoExposure()", _text + 0xAB04C8
	.equiv "agl::pfx::AutoExposure::ResultBuffer::Create()", _text + 0xAB068C
	.equiv "agl::pfx::AutoExposure::initialize()", _text + 0xAB08F0
	.equiv "agl::pfx::AutoExposure::calc()", _text + 0xAB0AFC
	.equiv "agl::pfx::AutoExposure::setCommonShaderParam()", _text + 0xAB0B10
	.equiv "agl::pfx::AutoExposure::drawHistogramDebugVertex()", _text + 0xAB0D00
	.equiv "agl::pfx::AutoExposure::ResultBuffer::Bind()", _text + 0xAB1094
	.equiv "agl::pfx::AutoExposure::ResultBuffer::Clear()", _text + 0xAB1218
	.equiv "agl::pfx::AutoExposure::drawHistogram()", _text + 0xAB1238
	.equiv "agl::pfx::AutoExposure::drawHistogramCalc()", _text + 0xAB1624
	.equiv "agl::pfx::AutoExposure::drawSimple()", _text + 0xAB1A98
	.equiv "agl::pfx::AutoExposure::drawHistogramDebug()", _text + 0xAB1EE4
	.equiv "agl::pfx::AutoExposure::draw()", _text + 0xAB2280
	.equiv "agl::pfx::GlareFilter::Tex::release()", _text + 0xAB2444
	.equiv "agl::pfx::GlareFilterParameter::GlareFilterParameter()", _text + 0xAB25F8
	.equiv "agl::pfx::GlareFilter::initializeContext()", _text + 0xAB2860
	.equiv "agl::pfx::GlareFilterParameter::initialize()", _text + 0xAB2920
	.equiv "agl::pfx::GlareFilter::GlareFilter()", _text + 0xAB2D08
	.equiv "agl::pfx::GlareFilter::initialize()", _text + 0xAB2E84
	.equiv "agl::pfx::GlareFilter::calcView()", _text + 0xAB32FC
	.equiv "agl::pfx::GlareFilter::updateSeedUBO_()", _text + 0xAB34C0
	.equiv "agl::pfx::GlareFilter::calcViewGPU()", _text + 0xAB3A20
	.equiv "agl::pfx::GlareFilter::Tex::refer()", _text + 0xAB3AE0
	.equiv "agl::pfx::GlareFilter::Tex::alloc()", _text + 0xAB3E98
	.equiv "agl::pfx::GlareFilter::drawDepth_()", _text + 0xAB3F64
	.equiv "agl::pfx::GlareFilter::drawClear_()", _text + 0xAB40CC
	.equiv "agl::pfx::GlareFilter::drawBlur_()", _text + 0xAB4230
	.equiv "agl::pfx::GlareFilter::drawSeed_()", _text + 0xAB4644
	.equiv "agl::pfx::GlareFilter::drawAnamorphic_()", _text + 0xAB4A90
	.equiv "agl::pfx::GlareFilter::drawToGlareBuffer()", _text + 0xAB518C
	.equiv "agl::pfx::GlareFilter::releaseGlareBuffer()", _text + 0xAB56A0
	.equiv "agl::pfx::GlareFilter::draw()", _text + 0xAB56C0
	.equiv "FUN_0EC35ADC:agl::utl::ContextParameterBuffer::~ContextParameterBuffer()", _text + 0xAB5ADC
	.equiv "FUN_0EC35D00:agl::utl::ContextParameterBuffer::ContextParameterBuffer()", _text + 0xAB5D00
	.equiv "FUN_0EC35D84:void_agl::utl::ContextParameterBuffer::initializeContextParameterBuffer()", _text + 0xAB5D84
	.equiv "agl::pfx::Bloom::~Bloom()", _text + 0xAB6200
	.equiv "agl::pfx::BloomParameter::updateBalance_()", _text + 0xAB62A0
	.equiv "agl::pfx::BloomParameter::BloomParameter()", _text + 0xAB65D0
	.equiv "agl::pfx::Bloom::initializeContext()", _text + 0xAB6838
	.equiv "agl::pfx::BloomParameter::initialize()", _text + 0xAB68FC
	.equiv "agl::pfx::BloomParameter::Unit::getUniformThreshold()", _text + 0xAB71C0
	.equiv "agl::pfx::Bloom::Bloom()", _text + 0xAB724C
	.equiv "agl::pfx::Bloom::initialize()", _text + 0xAB7368
	.equiv "agl::pfx::Bloom::drawTexture_()", _text + 0xAB746C
	.equiv "agl::pfx::Bloom::drawDetect_()", _text + 0xAB74CC
	.equiv "agl::pfx::Bloom::drawGaussian_()", _text + 0xAB7E10
	.equiv "agl::pfx::Bloom::drawGather_()", _text + 0xAB87E4
	.equiv "agl::pfx::Bloom::drawShaft_()", _text + 0xAB89EC
	.equiv "agl::pfx::Bloom::drawDepthDepth_()", _text + 0xAB95D4
	.equiv "agl::pfx::Bloom::releaseBloomBuffer()", _text + 0xAB96DC
	.equiv "agl::pfx::Bloom::setNearFar()", _text + 0xABAC2C
	.equiv "FUN_0EC3B3E4:agl::utl::ContextParameterBuffer::~ContextParameterBuffer()", _text + 0xABB3E4
	.equiv "FUN_0EC3B680:agl::utl::ContextParameterBuffer::ContextParameterBuffer()", _text + 0xABB680
	.equiv "FUN_0EC3B6EC:void_agl::utl::ContextParameterBuffer::initializeContextParameterBuffer()", _text + 0xABB6EC
	.equiv "agl::pfx::FilterAA::FilterAA()", _text + 0xABBA0C
	.equiv "agl::pfx::FilterAA::~FilterAA()", _text + 0xABC2A4
	.equiv "agl::pfx::FilterAA::initialize()", _text + 0xABC450
	.equiv "agl::pfx::FilterAA::FXAA()", _text + 0xABCBFC
	.equiv "agl::pfx::FilterAA::ReduceAA()", _text + 0xABE0FC
	.equiv "agl::pfx::FilterAA::draw()", _text + 0xABE7D4
	.equiv "void_sead::Matrix44CalcCommon::setBase()", _text + 0xABEB2C
	.equiv "void_sead::Matrix44CalcCommon::setTranslation()", _text + 0xABEB58
	.equiv "agl::pfx::Dither::Dither()", _text + 0xABEBA4
	.equiv "agl::pfx::SkyCloud::SkyCloud()", _text + 0xABEC18
	.equiv "agl::pfx::SkyCloud::createCloudTexture_()", _text + 0xABF668
	.equiv "agl::pfx::SkyCloud::calcCloudTexture_()", _text + 0xABF7DC
	.equiv "agl::pfx::SkyCloud::calcSkyDomeVertex_()", _text + 0xABF9D8
	.equiv "agl::pfx::SkyCloud::initialize()", _text + 0xAC041C
	.equiv "agl::pfx::SkyCloud::calc()", _text + 0xAC062C
	.equiv "agl::pfx::SkyCloud::calcGPU()", _text + 0xAC0848
	.equiv "agl::pfx::SkyCloud::draw()", _text + 0xAC0CFC
	.equiv "agl::pfx::SkyLightScatter::FogParam::updateParam()", _text + 0xAC1390
	.equiv "agl::pfx::SkyLightScatter::SkyLightScatter()", _text + 0xAC13E0
	.equiv "agl::pfx::SkyLightScatter::ScreenCubeMeshData::ScreenCubeMeshData()", _text + 0xAC1D80
	.equiv "agl::pfx::SkyLightScatter::ViewData::ViewData()", _text + 0xAC1DFC
	.equiv "agl::pfx::SkyLightScatter::ViewData::initialize()", _text + 0xAC1EC4
	.equiv "agl::pfx::SkyLightScatter::calcSunDomeVertex_()", _text + 0xAC1F88
	.equiv "agl::pfx::SkyLightScatter::setUpVertexAttribute_()", _text + 0xAC2594
	.equiv "agl::pfx::SkyLightScatter::createSunDomeVertex_()", _text + 0xAC25F4
	.equiv "agl::pfx::SkyLightScatter::calcOpticalDepth_()", _text + 0xAC26BC
	.equiv "agl::pfx::SkyLightScatter::getOpticalDepthByTable_()", _text + 0xAC2B5C
	.equiv "agl::pfx::SkyLightScatter::calcSunDomeColor_()", _text + 0xAC2EB4
	.equiv "agl::pfx::SkyLightScatter::calcHorizonGroundColor_()", _text + 0xAC3484
	.equiv "agl::pfx::SkyLightScatter::calcAllColorTable_()", _text + 0xAC3BB8
	.equiv "agl::pfx::SkyLightScatter::initialize()", _text + 0xAC4F18
	.equiv "agl::pfx::SkyLightScatter::ViewData::calc()", _text + 0xAC51EC
	.equiv "agl::pfx::SkyLightScatter::calc()", _text + 0xAC5204
	.equiv "agl::pfx::SkyLightScatter::ViewData::calcGPU()", _text + 0xAC5694
	.equiv "agl::pfx::SkyLightScatter::calcGPU()", _text + 0xAC5C90
	.equiv "FUN_0EC45D28:agl::pfx::SkyLightScatter::setFog()", _text + 0xAC5D28
	.equiv "FUN_0EC45D58:agl::pfx::SkyLightScatter::setFog()", _text + 0xAC5D58
	.equiv "agl::pfx::SkyLightScatter::drawSunLightDome_()", _text + 0xAC5DE8
	.equiv "agl::pfx::SkyLightScatter::drawSkyDomeTexture()", _text + 0xAC656C
	.equiv "FUN_0EC465F8:agl::pfx::SkyLightScatter::drawQuadSunLightDome_()", _text + 0xAC65F8
	.equiv "FUN_0EC46700:agl::pfx::SkyLightScatter::drawQuadSunLightDome_()", _text + 0xAC6700
	.equiv "agl::pfx::SkyLightScatter::setViewToSunDir()", _text + 0xAC6DC0
	.equiv "agl::fctr::GPUStressChecker::GPUStressChecker()", _text + 0xAC6FAC
	.equiv "agl::fctr::GPUStressChecker::createInstance()", _text + 0xAC7090
	.equiv "agl::fctr::GPUStressChecker::StampObj::initialize()", _text + 0xAC7130
	.equiv "agl::fctr::GPUStressChecker::start()", _text + 0xAC791C
	.equiv "agl::fctr::GPUStressChecker::end()", _text + 0xAC7984
	.equiv "agl::fctr::FrameRateControlBuffer::FrameRateControlBuffer()", _text + 0xAC7B20
	.equiv "agl::fctr::FrameRateControlBuffer::~FrameRateControlBuffer()", _text + 0xAC7BD0
	.equiv "agl::fctr::FrameRateControlBuffer::initialize()", _text + 0xAC7D18
	.equiv "agl::fctr::FrameRateControlBuffer::update()", _text + 0xAC7F20
	.equiv "agl::fctr::FrameRateControlBuffer::draw()", _text + 0xAC8030
	.equiv "agl::cull::OcclusionQueryDrawer::OcclusionQueryDrawer()", _text + 0xAC85E4
	.equiv "agl::cull::OcclusionQueryDrawer::~OcclusionQueryDrawer()", _text + 0xAC873C
	.equiv "agl::cull::OcclusionQueryDrawer::initialize()", _text + 0xAC882C
	.equiv "FUN_0EC48B94:agl::cull::OcclusionQueryDrawer::calc()", _text + 0xAC8B94
	.equiv "FUN_0EC48C44:agl::cull::OcclusionQueryDrawer::calc()", _text + 0xAC8C44
	.equiv "agl::cull::OcclusionQueryDrawer::draw_()", _text + 0xAC8DEC
	.equiv "agl::cull::OcclusionQuery::OcclusionQuery()", _text + 0xAC9418
	.equiv "agl::cull::OcclusionQuery::~OcclusionQuery()", _text + 0xAC9490
	.equiv "agl::fx::DecalDrawer::DecalDrawer()", _text + 0xAC95E4
	.equiv "agl::fx::DecalDrawer::initialize()", _text + 0xAC981C
	.equiv "agl::fx::DecalDrawer::release()", _text + 0xAC997C
	.equiv "agl::fx::DecalDrawer::clearDecalBuffer()", _text + 0xAC99F0
	.equiv "agl::fx::DecalDrawer::createDecalBuffer_()", _text + 0xAC9AA4
	.equiv "agl::fx::DecalDrawer::preDrawAo()", _text + 0xAC9D50
	.equiv "agl::fx::DecalDrawer::getBufferState()", _text + 0xACA04C
	.equiv "agl::fx::DecalDrawer::preDraw()", _text + 0xACA084
	.equiv "agl::fx::DecalDrawer::draw()", _text + 0xACA400
	.equiv "agl::fx::DecalAoObject::DecalAoObject()", _text + 0xACA6B8
	.equiv "agl::fx::DecalAoObject::initialize()", _text + 0xACA864
	.equiv "agl::fx::DecalAoObject::setParam()", _text + 0xACA9D0
	.equiv "FUN_0EC4AB74:void_sead::Matrix34CalcCommon::calcRPY()", _text + 0xACAB74
	.equiv "agl::fx::NormalDrawer::NormalDrawer()", _text + 0xACAC74
	.equiv "agl::fx::NormalDrawer::initialize()", _text + 0xACAEBC
	.equiv "agl::fx::NormalDrawer::release()", _text + 0xACB10C
	.equiv "agl::fx::NormalDrawer::clearNormalBuffer()", _text + 0xACB1A0
	.equiv "agl::fx::NormalDrawer::createNormalBuffer_()", _text + 0xACB254
	.equiv "agl::fx::NormalDrawer::calcGPU()", _text + 0xACB630
	.equiv "agl::fx::NormalDrawer::getBufferState()", _text + 0xACB7E8
	.equiv "agl::fx::NormalDrawer::preDraw()", _text + 0xACB820
	.equiv "agl::fx::NormalDrawer::drawHeight2Normal()", _text + 0xACBBC4
	.equiv "agl::fx::NormalDrawer::postDraw()", _text + 0xACBDD8
	.equiv "agl::fx::DecalAoMgr::DecalAoMgr()", _text + 0xACC0E0
	.equiv "agl::fx::DecalAoMgr::initialize()", _text + 0xACC278
	.equiv "agl::fx::DecalAoMgr::initializeTextureAry()", _text + 0xACC324
	.equiv "agl::fx::DecalAoMgr::calcGPU()", _text + 0xACC5E4
	.equiv "agl::fx::DecalAoMgr::updateDecal_draw()", _text + 0xACC5F8
	.equiv "agl::fx::DecalSimple::DecalSimple()", _text + 0xACCBC8
	.equiv "agl::fx::DecalSimple::initialize()", _text + 0xACCDB0
	.equiv "agl::fx::DecalSimple::calcGPU()", _text + 0xACD2BC
	.equiv "agl::fx::DecalSimple::drawPrim()", _text + 0xACD628
	.equiv "agl::fx::DecalSimple::addPrim()", _text + 0xACD95C
	.equiv "agl::fx::DecalTextureDrawer::drawTextureAry()", _text + 0xACDCEC
	.equiv "FUN_0EC4EA20:agl::sdw::LightMatrix::update()", _text + 0xACEA20
	.equiv "FUN_0EC4EC48:agl::sdw::LightMatrix::update()", _text + 0xACEC48
	.equiv "FUN_0EC4EC9C:agl::sdw::LightMatrix::calcLightSpace()", _text + 0xACEC9C
	.equiv "FUN_0EC4EED0:agl::sdw::LightMatrix::calcLightSpace()", _text + 0xACEED0
	.equiv "agl::sdw::LightMatrix::LightMatrix()", _text + 0xACF084
	.equiv "agl::sdw::ShadowPrePass::ShadowPrePass()", _text + 0xACF13C
	.equiv "agl::sdw::ShadowPrePass::initialize()", _text + 0xAD012C
	.equiv "agl::sdw::ShadowPrePass::getBufferState()", _text + 0xAD083C
	.equiv "agl::sdw::ShadowPrePass::release()", _text + 0xAD08E4
	.equiv "agl::sdw::ShadowPrePass::getPassType()", _text + 0xAD09AC
	.equiv "agl::sdw::ShadowPrePass::clearShadowBuffer()", _text + 0xAD0A28
	.equiv "agl::sdw::ShadowPrePass::createShadowBuffer_core()", _text + 0xAD0AB4
	.equiv "agl::sdw::ShadowPrePass::getRenderTarget()", _text + 0xAD162C
	.equiv "agl::sdw::ShadowPrePass::createShadowBuffer()", _text + 0xAD1718
	.equiv "agl::sdw::ShadowPrePass::calc()", _text + 0xAD191C
	.equiv "agl::sdw::ShadowPrePass::calcGPU()", _text + 0xAD199C
	.equiv "agl::sdw::ShadowPrePass::calcGPU_StaticDepthShadow()", _text + 0xAD20BC
	.equiv "agl::sdw::ShadowPrePass::bindBuffer()", _text + 0xAD21A8
	.equiv "agl::sdw::ShadowPrePass::getPcfShaderNo()", _text + 0xAD21F4
	.equiv "agl::sdw::ShadowPrePass::getShaderIndex()", _text + 0xAD2240
	.equiv "agl::sdw::ShadowPrePass::drawShadowPrePass()", _text + 0xAD2280
	.equiv "agl::sdw::ShadowPrePass::drawBlurQuad()", _text + 0xAD2710
	.equiv "agl::sdw::ShadowPrePass::getPrevSampler()", _text + 0xAD2958
	.equiv "agl::sdw::ShadowPrePass::drawPost()", _text + 0xAD2A44
	.equiv "agl::sdw::ShadowPrePass::drawMipLevelBlur()", _text + 0xAD2CEC
	.equiv "nw::snd::internal::driver::Bank::Bank()", _text + 0xAD39B4
	.equiv "agl::sdw::ShadowMask::ShadowMask()", _text + 0xAD3D4C
	.equiv "agl::sdw::ShadowMask::initialize()", _text + 0xAD3E94
	.equiv "agl::sdw::ShadowMask::addSphere()", _text + 0xAD4814
	.equiv "agl::sdw::ShadowMask::addCylinder()", _text + 0xAD48FC
	.equiv "agl::sdw::ShadowMask::calc()", _text + 0xAD4A00
	.equiv "agl::sdw::ShadowMask::calcGPUSphere()", _text + 0xAD4BEC
	.equiv "agl::sdw::ShadowMask::calcGPUCylinder()", _text + 0xAD4FC4
	.equiv "agl::sdw::ShadowMask::setupOffscrBuffer()", _text + 0xAD54F8
	.equiv "agl::sdw::ShadowMask::getShaderVariationIndex()", _text + 0xAD57F4
	.equiv "agl::sdw::ShadowMask::drawPrimSphere()", _text + 0xAD5808
	.equiv "agl::sdw::ShadowMask::drawPrimCylinder()", _text + 0xAD5AA0
	.equiv "agl::sdw::ShadowMask::drawFullScrQuad()", _text + 0xAD5D38
	.equiv "agl::sdw::ShadowMask::draw()", _text + 0xAD6020
	.equiv "agl::sdw::ShadowUtil::calcViewDir()", _text + 0xAD6380
	.equiv "agl::sdw::ShadowUtil::calcViewPos()", _text + 0xAD6400
	.equiv "agl::sdw::ShadowUtil::calcViewMatrix()", _text + 0xAD6470
	.equiv "agl::sdw::ShadowUtil::calcNearFar()", _text + 0xAD65E0
	.equiv "agl::sdw::ShadowUtil::drawFrustum()", _text + 0xAD6678
	.equiv "agl::sdw::StaticDepthShadow::CreateArg::CreateArg()", _text + 0xAD6C04
	.equiv "agl::sdw::StaticDepthShadow::StaticDepthShadow()", _text + 0xAD6C50
	.equiv "agl::sdw::StaticDepthShadow::finalize()", _text + 0xAD6FD8
	.equiv "agl::sdw::StaticDepthShadow::~StaticDepthShadow()", _text + 0xAD7018
	.equiv "agl::sdw::StaticDepthShadow::initialize()", _text + 0xAD70F8
	.equiv "agl::sdw::StaticDepthShadow::updateShadowMatrix()", _text + 0xAD72F8
	.equiv "agl::sdw::StaticDepthShadow::begin()", _text + 0xAD78C0
	.equiv "agl::sdw::StaticDepthShadow::drawVarianceShadowMap_()", _text + 0xAD7CA8
	.equiv "agl::sdw::StaticDepthShadow::drawBlur_()", _text + 0xAD8014
	.equiv "agl::sdw::StaticDepthShadow::end()", _text + 0xAD8314
	.equiv "agl::sdw::ProjectionShadow::~ProjectionShadow()", _text + 0xAD88D0
	.equiv "agl::sdw::ProjectionShadow::calcBiasMatrix_()", _text + 0xAD8930
	.equiv "agl::sdw::ProjectionShadow::resetAnimation()", _text + 0xAD8A50
	.equiv "agl::sdw::ProjectionShadow::ProjectionShadow()", _text + 0xAD8B1C
	.equiv "agl::sdw::ProjectionShadow::resetBiasMatrix()", _text + 0xAD90F8
	.equiv "agl::sdw::ProjectionShadow::updateBiasMatrix()", _text + 0xAD9144
	.equiv "agl::sdw::SSAO::SSAO()", _text + 0xAD94A4
	.equiv "agl::sdw::SSAO::Context::~Context()", _text + 0xAD9BB8
	.equiv "agl::sdw::SSAO::~SSAO()", _text + 0xAD9C68
	.equiv "agl::sdw::SSAO::Context::Context()", _text + 0xAD9E00
	.equiv "agl::sdw::SSAO::initRotateTexture_()", _text + 0xAD9ECC
	.equiv "agl::sdw::SSAO::initSphereVolume_()", _text + 0xADA378
	.equiv "agl::sdw::SSAO::initialize()", _text + 0xADA8F4
	.equiv "agl::sdw::SSAO::Context::allocTexture()", _text + 0xADAAD4
	.equiv "agl::sdw::SSAO::drawReduceDepth_()", _text + 0xADAD1C
	.equiv "agl::sdw::SSAO::drawAO_()", _text + 0xADB554
	.equiv "agl::sdw::SSAO::drawBlur_()", _text + 0xADBE14
	.equiv "agl::sdw::SSAO::drawToAOBuffer_()", _text + 0xADC678
	.equiv "agl::sdw::SSAO::drawToAOBuffer()", _text + 0xADCA7C
	.equiv "agl::sdw::DepthShadow::DepthShadow()", _text + 0xADD110
	.equiv "agl::sdw::DepthShadow::~DepthShadow()", _text + 0xADD620
	.equiv "agl::sdw::DepthShadow::initialize()", _text + 0xADD748
	.equiv "agl::sdw::DepthShadow::updateSceneMatrix()", _text + 0xADDA18
	.equiv "agl::sdw::DepthShadow::clipByPlane()", _text + 0xADDBD4
	.equiv "agl::sdw::DepthShadow::updatePlaneClipInfo()", _text + 0xADDC5C
	.equiv "agl::sdw::DepthShadow::updateShadowMatrix()", _text + 0xADDCD4
	.equiv "agl::sdw::DepthShadow::allocShadowMap()", _text + 0xADDDC8
	.equiv "agl::sdw::DepthShadow::drawShadowMap()", _text + 0xADDDF0
	.equiv "agl::sdw::DepthShadow::drawDebug()", _text + 0xADDF4C
	.equiv "FUN_0EC5E068:agl::sdw::DepthShadow::checkAndUpdateWorld_()", _text + 0xADE068
	.equiv "FUN_0EC5E198:agl::sdw::DepthShadow::checkAndUpdateWorld_()", _text + 0xADE198
	.equiv "FUN_0EC5E678:FID_conflict:sead::BitFlag_agl::sdw::DepthShadow::checkAndUpdateLightSpaceDirectional_()", _text + 0xADE678
	.equiv "FUN_0EC5E848:FID_conflict:sead::BitFlag_agl::sdw::DepthShadow::checkAndUpdateLightSpaceDirectional_()", _text + 0xADE848
	.equiv "FUN_0EC5EA18:FID_conflict:sead::BitFlag_agl::sdw::DepthShadow::checkAndUpdateLightSpaceDirectional_()", _text + 0xADEA18
	.equiv "FUN_0EC5EBE8:FID_conflict:sead::BitFlag_agl::sdw::DepthShadow::checkAndUpdateLightSpaceDirectional_()", _text + 0xADEBE8
	.equiv "FUN_0EC5EDB8:sead::BitFlag_agl::sdw::DepthShadow::checkOnly_()", _text + 0xADEDB8
	.equiv "FUN_0EC5EE44:sead::BitFlag_agl::sdw::DepthShadow::checkOnly_()", _text + 0xADEE44
	.equiv "agl::utl::DebugPrimitiveMgr::createInstance()", _text + 0xADEF38
	.equiv "agl::perf::GPUTimeStamp::get()", _text + 0xADF0B4
	.equiv "agl::lght::SHUtil::getSH2RgbVec4Array()", _text + 0xADF0FC
	.equiv "agl::lght::SHUtil::getSHVec4Array()", _text + 0xADF394
	.equiv "agl::lght::SHUtil::getLerp()", _text + 0xADF3D8
	.equiv "agl::lght::SH::fillZero()", _text + 0xADF470
	.equiv "agl::lght::SH::SH()", _text + 0xADF4A4
	.equiv "agl::lght::SH::setFloatArray()", _text + 0xADF4EC
	.equiv "agl::lght::LocalLightMapObj::LocalLightMapObj()", _text + 0xADF520
	.equiv "agl::lght::LocalLightMapObj::destroyBuffer()", _text + 0xADF758
	.equiv "agl::lght::LocalLightMapObj::initializeTexture_()", _text + 0xADF8D4
	.equiv "agl::lght::LocalLightMapObj::initialize()", _text + 0xADFBC0
	.equiv "agl::lght::LocalLightMapObj::setLightMapInfo()", _text + 0xADFD80
	.equiv "agl::lght::LocalLightMapObj::setSHInfo()", _text + 0xADFEC8
	.equiv "agl::lght::LocalLightMapObj::setSHFloatArray()", _text + 0xADFF20
	.equiv "agl::lght::LocalLightMapObj::updateGPU()", _text + 0xADFF98
	.equiv "agl::lght::LocalLightMapObj::getUsedSHNum()", _text + 0xAE0250
	.equiv "agl::lght::LocalLightMapObj::getUsedLightMapNum()", _text + 0xAE0280
	.equiv "agl::lght::LocalLightMapObj::isLightMapCubeArray()", _text + 0xAE0318
	.equiv "agl::lght::LocalLightMapObj::getShaderProgram_()", _text + 0xAE0394
	.equiv "agl::lght::LocalLightMapObj::draw()", _text + 0xAE0470
	.equiv "agl::lght::LocalLightMapObj::updateSHDataId()", _text + 0xAE0C6C
	.equiv "agl::lght::LocalLightMapObj::CreateArg::CreateArg()", _text + 0xAE0C8C
	.equiv "agl::lght::SSII::TexBuf::free()", _text + 0xAE0D74
	.equiv "agl::lght::SSII::applyQualitySetting_()", _text + 0xAE0DEC
	.equiv "agl::lght::SSII::calcView()", _text + 0xAE1004
	.equiv "FUN_0EC610F4:agl::lght::SSII::TexBuf::init()", _text + 0xAE10F4
	.equiv "FUN_0EC6138C:agl::lght::SSII::TexBuf::init()", _text + 0xAE138C
	.equiv "agl::lght::SSII::allocReprojectionBuffer_()", _text + 0xAE1510
	.equiv "agl::lght::SSII::drawReduce_()", _text + 0xAE1628
	.equiv "agl::lght::SSII::drawReduceWithPreRender_()", _text + 0xAE1CA8
	.equiv "agl::lght::SSII::drawSSII_()", _text + 0xAE1EF8
	.equiv "agl::lght::SSII::drawRef_()", _text + 0xAE26B4
	.equiv "agl::lght::SSII::drawAntiHowling_()", _text + 0xAE2EF8
	.equiv "agl::lght::SSII::drawExpand_()", _text + 0xAE30B8
	.equiv "agl::lght::SSII::ReduceBuffer::free()", _text + 0xAE37DC
	.equiv "agl::lght::SSII::draw_()", _text + 0xAE3834
	.equiv "FUN_0EC65C3C:agl::lght::SSII::draw()", _text + 0xAE5C3C
	.equiv "FUN_0EC65C7C:agl::lght::SSII::draw()", _text + 0xAE5C7C
	.equiv "FUN_0EC65CD0:agl::lght::SSII::draw()", _text + 0xAE5CD0
	.equiv "FUN_0EC65D08:agl::lght::SSII::draw()", _text + 0xAE5D08
	.equiv "agl::lght::SSII::setReprojectionBuffer()", _text + 0xAE5D4C
	.equiv "agl::lght::SSSSS::SSSSS()", _text + 0xAE6550
	.equiv "agl::lght::SSSSS::initialize()", _text + 0xAE67FC
	.equiv "agl::lght::SSSSS::calcView()", _text + 0xAE7028
	.equiv "FUN_0EC670B0:agl::lght::SSSSS::TexBuf::init()", _text + 0xAE70B0
	.equiv "FUN_0EC67374:agl::lght::SSSSS::TexBuf::init()", _text + 0xAE7374
	.equiv "agl::lght::SSSSS::drawReduce_()", _text + 0xAE7440
	.equiv "agl::lght::SSSSS::TexBuf::free()", _text + 0xAE7ADC
	.equiv "agl::lght::SSSSS::drawExpandSSS_()", _text + 0xAE7B54
	.equiv "agl::lght::SSSSS::drawWeightMerge_()", _text + 0xAE7D3C
	.equiv "agl::lght::SSSSS::drawBlur_()", _text + 0xAE7F18
	.equiv "agl::lght::SSSSS::drawMerge_()", _text + 0xAE8410
	.equiv "agl::lght::SSSSS::draw()", _text + 0xAE883C
	.equiv "agl::lght::SSSSS::release()", _text + 0xAE9C50
	.equiv "agl::lght::SSSSS::getSSSBufferSampler()", _text + 0xAE9CDC
	.equiv "agl::lght::PlanarReflection::PlanarReflection()", _text + 0xAEA008
	.equiv "agl::lght::PlanarReflection::~PlanarReflection()", _text + 0xAEA634
	.equiv "agl::lght::PlanarReflection::initialize()", _text + 0xAEA75C
	.equiv "agl::lght::PlanarReflection::calcView()", _text + 0xAEAAFC
	.equiv "agl::lght::PlanarReflection::draw()", _text + 0xAEAFC8
	.equiv "agl::lght::PlanarReflection::release()", _text + 0xAEBD44
	.equiv "agl::lght::LocalReflection::LocalReflectionParameter::LocalReflectionParameter()", _text + 0xAEBF0C
	.equiv "agl::lght::LocalReflection::LocalReflection()", _text + 0xAECF84
	.equiv "agl::lght::LocalReflection::ColorBufferMip::finalize()", _text + 0xAED060
	.equiv "agl::lght::LocalReflection::ColorBufferMip::~ColorBufferMip()", _text + 0xAED108
	.equiv "agl::lght::LocalReflection::finalize()", _text + 0xAED164
	.equiv "agl::lght::LocalReflection::ColorBufferMip::ColorBufferMip()", _text + 0xAED3DC
	.equiv "agl::lght::LocalReflection::Context::Context()", _text + 0xAED434
	.equiv "agl::lght::LocalReflection::initialize()", _text + 0xAED53C
	.equiv "agl::lght::LocalReflection::calcView()", _text + 0xAED9E8
	.equiv "agl::lght::LocalReflection::ColorBufferMip::initialize()", _text + 0xAEDE58
	.equiv "agl::lght::LocalReflection::getDepthFilterShader_()", _text + 0xAEDEC8
	.equiv "agl::lght::LocalReflection::doDepthToNormalFilter_()", _text + 0xAEDF2C
	.equiv "agl::lght::LocalReflection::doDepthMinMaxFilter_()", _text + 0xAEE5A8
	.equiv "agl::lght::LocalReflection::getReflectionMaskShader_()", _text + 0xAEEE30
	.equiv "agl::lght::LocalReflection::doReflectionMask_()", _text + 0xAEEEB4
	.equiv "agl::lght::LocalReflection::getReflectionShader_()", _text + 0xAEFA44
	.equiv "agl::lght::LocalReflection::doReflection_()", _text + 0xAEFAEC
	.equiv "agl::lght::LocalReflection::getBlurShader_()", _text + 0xAF062C
	.equiv "agl::lght::LocalReflection::drawTexture_()", _text + 0xAF0694
	.equiv "agl::lght::LocalReflection::drawGaussian_()", _text + 0xAF0714
	.equiv "agl::lght::LocalReflection::doReflectionBufferBlur_()", _text + 0xAF1268
	.equiv "agl::lght::LocalReflection::draw()", _text + 0xAF1548
	.equiv "agl::lght::LocalReflection::ColorBufferMip::initializeWithoutContext()", _text + 0xAF1A38
	.equiv "agl::lght::LocalReflection::copyColorBuffer()", _text + 0xAF1AAC
	.equiv "agl::lght::LocalReflection::releaseReflectionBuffer()", _text + 0xAF1FE0
	.equiv "agl::InitArg::InitArg()", _text + 0xAF27E0
	.equiv "agl::Initialize()", _text + 0xAF2998
	.equiv "agl::AppendRootNodeToOR()", _text + 0xAF2D04
	.equiv "agl::LoadResource()", _text + 0xAF2D14
	.equiv "agl::TextureDataImageAccessor::TextureDataImageAccessor()", _text + 0xAF2F78
	.equiv "agl::TextureDataImageAccessor::finalizeImageBuffer()", _text + 0xAF2FD8
	.equiv "agl::TextureDataImageAccessor::~TextureDataImageAccessor()", _text + 0xAF301C
	.equiv "FUN_0EC73078:agl::TextureDataImageAccessor::peek()", _text + 0xAF3078
	.equiv "FUN_0EC73230:agl::TextureDataImageAccessor::peek()", _text + 0xAF3230
	.equiv "agl::TextureDataImageAccessor::initializeImageBuffer()", _text + 0xAF3D38
	.equiv "agl::TextureDataImageAccessor::updateImageBuffer()", _text + 0xAF3ED4
	.equiv "<unnamed>::CreateGradiationTable()", _text + 0xAF4118
	.equiv "agl::proc::PerlinNoise::random()", _text + 0xAF4350
	.equiv "agl::proc::PerlinNoise::initParameters_()", _text + 0xAF4380
	.equiv "agl::proc::PerlinNoise::init_()", _text + 0xAF43E8
	.equiv "agl::proc::PerlinNoise::setRandomSeed()", _text + 0xAF454C
	.equiv "agl::proc::PerlinNoise::setParameters()", _text + 0xAF45D4
	.equiv "agl::proc::PerlinNoise::noise()", _text + 0xAF45F4
	.equiv "agl::proc::PerlinNoise::turbulence()", _text + 0xAF4860
	.equiv "agl::proc::PerlinNoise::getValueRaw_()", _text + 0xAF496C
	.equiv "agl::proc::PerlinNoise::getTextureValue()", _text + 0xAF4A18
	.equiv "agl::proc::PerlinNoise::beginCreateTexture_()", _text + 0xAF4E2C
	.equiv "agl::proc::PerlinNoise::endCreateTexture_()", _text + 0xAF4F68
	.equiv "agl::proc::PerlinNoise::createTexture()", _text + 0xAF5114
	.equiv "agl::env::CubeMap::CubeMap()", _text + 0xAF52BC
	.equiv "agl::env::CubeMap::destroyBuffer()", _text + 0xAF5384
	.equiv "agl::env::CubeMap::~CubeMap()", _text + 0xAF5400
	.equiv "agl::env::CubeMap::initialize_()", _text + 0xAF5468
	.equiv "FUN_0EC7558C:agl::env::CubeMap::initialize()", _text + 0xAF558C
	.equiv "FUN_0EC75664:agl::env::CubeMap::initialize()", _text + 0xAF5664
	.equiv "agl::env::CubeMap::begin()", _text + 0xAF582C
	.equiv "agl::env::CubeMap::end()", _text + 0xAF5940
	.equiv "agl::env::CubeMap::bindRenderBuffer()", _text + 0xAF59C4
	.equiv "agl::env::CubeMap::postDraw()", _text + 0xAF5CD8
	.equiv "agl::env::CubeMap::renderToMipMapUnit()", _text + 0xAF5F80
	.equiv "agl::env::CubeMap::renderToMipMapImpl()", _text + 0xAF60FC
	.equiv "agl::env::CubeMap::generateMipMapImpl()", _text + 0xAF662C
	.equiv "agl::env::CubeMap::renderIrradiance()", _text + 0xAF6828
	.equiv "agl::fx::DecalAo::DecalAo()", _text + 0xAF6AF0
	.equiv "agl::sdw::DepthShadowUnit::DepthShadowUnit()", _text + 0xAF6BE4
	.equiv "agl::sdw::DepthShadowUnit::calcLightSpacePerspectiveMatrix_()", _text + 0xAF70CC
	.equiv "agl::sdw::DepthShadowUnit::adjustTexelStable()", _text + 0xAF8174
	.equiv "agl::sdw::DepthShadowUnit::updateShadowViewProjection_()", _text + 0xAF81FC
	.equiv "agl::sdw::DepthShadowUnit::addCasterClipPlane_()", _text + 0xAF8678
	.equiv "agl::sdw::DepthShadowUnit::addCasterClipPlanesSweepDir_()", _text + 0xAF87CC
	.equiv "agl::sdw::DepthShadowUnit::addCasterClipPlanes_()", _text + 0xAF8B8C
	.equiv "agl::sdw::DepthShadowUnit::updateDirectionalBoundingIndex_()", _text + 0xAF93F8
	.equiv "agl::sdw::DepthShadowUnit::updateSceneMatrix()", _text + 0xAF96DC
	.equiv "agl::sdw::DepthShadowUnit::clipByPlane()", _text + 0xAF9AD0
	.equiv "agl::sdw::DepthShadowUnit::updatePlaneClipInfo()", _text + 0xAF9B58
	.equiv "FUN_0EC79C74:agl::sdw::DepthShadowUnit::checkInside()", _text + 0xAF9C74
	.equiv "FUN_0EC79DA4:agl::sdw::DepthShadowUnit::checkInside()", _text + 0xAF9DA4
	.equiv "agl::sdw::DepthShadowUnit::convBoundingSphereToBox()", _text + 0xAF9E38
	.equiv "agl::sdw::DepthShadowUnit::updateShadowMatrix()", _text + 0xAF9EE4
	.equiv "agl::sdw::DepthShadowUnit::drawDebug()", _text + 0xAFA5C4
	.equiv "agl::sdw::DepthShadowUnit::convBoundingToLightSpaceDirectional_()", _text + 0xAFAB8C
	.equiv "agl::sdw::DepthShadowUnit::convBoundingToLightSpaceNotDirectional_()", _text + 0xAFB048
	.equiv "void_sead::Matrix44CalcCommon::transposeTo()", _text + 0xAFB7DC
	.equiv "agl::utl::PrimitiveVertex::PrimitiveVertex()", _text + 0xAFB860
	.equiv "agl::utl::PrimitiveVertex::createInstance()", _text + 0xAFB8C4
	.equiv "agl::utl::PrimitiveVertex::~PrimitiveVertex()", _text + 0xAFB9D8
	.equiv "agl::utl::PrimitiveVertex::initialize()", _text + 0xAFBA78
	.equiv "agl::sdw::ShadowFrustum::Polytope::initialize()", _text + 0xAFBDD0
	.equiv "agl::sdw::ShadowFrustum::Polytope::Polytope()", _text + 0xAFBF8C
	.equiv "agl::sdw::ShadowFrustum::ShadowFrustum()", _text + 0xAFBFFC
	.equiv "agl::sdw::ShadowFrustum::Polytope::birthBack()", _text + 0xAFC094
	.equiv "agl::sdw::ShadowFrustum::resetPolytope()", _text + 0xAFC130
	.equiv "agl::sdw::ShadowFrustum::updateByViewFrustum()", _text + 0xAFC7D4
	.equiv "agl::sdw::ShadowFrustum::clipPointByPlane_()", _text + 0xAFCF58
	.equiv "agl::sdw::ShadowFrustum::findSamePointFromPolygon()", _text + 0xAFD3E8
	.equiv "agl::sdw::ShadowFrustum::Polytope::swap()", _text + 0xAFD4AC
	.equiv "agl::sdw::ShadowFrustum::findSamePointAndSwapFromInter()", _text + 0xAFD52C
	.equiv "agl::sdw::ShadowFrustum::appendIntersectionPoint()", _text + 0xAFD5F4
	.equiv "agl::sdw::ShadowFrustum::clipByPlane()", _text + 0xAFD85C
	.equiv "agl::sdw::ShadowFrustum::clipByBoundBox_()", _text + 0xAFDA10
	.equiv "FUN_0EC7DF50:agl::sdw::ShadowFrustum::clipByBoundBox()", _text + 0xAFDF50
	.equiv "FUN_0EC7E094:agl::sdw::ShadowFrustum::clipByBoundBox()", _text + 0xAFE094
	.equiv "agl::sdw::ShadowFrustum::clipByFrustum()", _text + 0xAFE384
	.equiv "agl::sdw::ShadowFrustum::expandBoundBox()", _text + 0xAFE438
	.equiv "agl::sdw::ShadowFrustum::drawFrustum()", _text + 0xAFE6A0
	.equiv "agl::sdw::ShadowFrustum::findCameraNearPoint()", _text + 0xAFE90C
	.equiv "agl::sdw::ShadowFrustum::Polytope::~Polytope()", _text + 0xAFEBA4